{"version":3,"file":"app/main.3a27378a743dd4ad9f70.js","mappings":"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aACxB,EAAAoB,sBAAwB,GACxB,EAAAC,qBAAuB,IAAI5jK,IAAyB,CAClE,CAAC,aAAc,IAAIiyE,IAAI,CAAC,yBAqhB5ByuF,EAAMnjK,M,gDCvjBC,MAAMsmK,EAAkB,CAC7B,SACA,UACA,YACA,QACA,UACA,UACA,SACA,OACA,WACA,WACA,WACA,UACA,UACA,SACA,WACA,UACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,SACA,SACA,UACA,YACA,YACA,UACA,WACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,WACA,UACA,OACA,UACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,WACA,WACA,UACA,OACA,UACA,YACA,WACA,WACA,UACA,YACA,OACA,SACA,WACA,YACA,YACA,YACA,YACA,SACA,QACA,YACA,WACA,SACA,UACA,SACA,SACA,WACA,QACA,SACA,YACA,YACA,YACA,YACA,YACA,OACA,UACA,SACA,SACA,QACA,YACA,SACA,QACA,UACA,QACA,WACA,UACA,YACA,QACA,YACA,YACA,SACA,WACA,YACA,UACA,QACA,OACA,OACA,OACA,MACA,OACA,YACA,QACA,YACA,QACA,UACA,UACA,YACA,QACA,QACA,YACA,WACA,SACA,QACA,QACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,QACA,QACA,YACA,QACA,WACA,UACA,WACA,WACA,OACA,WACA,SACA,SACA,WACA,QACA,YACA,QACA,WACA,YACA,YACA,WACA,YACA,YACA,SACA,YACA,YACA,SACA,UACA,UACA,WACA,OACA,QACA,QACA,QACA,UACA,WACA,UACA,WACA,QACA,SACA,WACA,QACA,YACA,UACA,QACA,QACA,SACA,WACA,SACA,YACA,SACA,UACA,WACA,YACA,UACA,YACA,UACA,SACA,UACA,UACA,UACA,SACA,SACA,WACA,OACA,YACA,UACA,QACA,SACA,SACA,SACA,UACA,UACA,YACA,YACA,UACA,SACA,UACA,YACA,YACA,WACA,QACA,YACA,QACA,QACA,WACA,YACA,WACA,WACA,UACA,WACA,UACA,YACA,UACA,YACA,WACA,WACA,WACA,SACA,UACA,YACA,WACA,SACA,WACA,WACA,YACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,SACA,UACA,QACA,QACA,UACA,SACA,UACA,SACA,WACA,WACA,UACA,SACA,WACA,QACA,SACA,UACA,YACA,SACA,UACA,YACA,YACA,WACA,WACA,YACA,UACA,WACA,QACA,YACA,YACA,UACA,QACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,QACA,QACA,WACA,QACA,OACA,WACA,YACA,YACA,WACA,OACA,QACA,WACA,WACA,QACA,QACA,YACA,UACA,WACA,QACA,SACA,UACA,SACA,UACA,UACA,UACA,SACA,UACA,OACA,QACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,SACA,YACA,WACA,QACA,MACA,SACA,YACA,SACA,YACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,YACA,SACA,WACA,SACA,UACA,WACA,UACA,UACA,YACA,YACA,YACA,SACA,WACA,QACA,OACA,WACA,OACA,SACA,YACA,UACA,SACA,SACA,UACA,YACA,WACA,YACA,YACA,SACA,QACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,WACA,UACA,UACA,WACA,QACA,WACA,YACA,SACA,YACA,SACA,SACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,SACA,SACA,WACA,SACA,UACA,WACA,QACA,WACA,UACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,UACA,SACA,QACA,OACA,OACA,SACA,WACA,SACA,SACA,WACA,YACA,YACA,WACA,SACA,SACA,YACA,WACA,WACA,UACA,YACA,WACA,WACA,YACA,UACA,UACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,YACA,SACA,WACA,WACA,YACA,WACA,QACA,WACA,YACA,SACA,QACA,UACA,QACA,UACA,SACA,WACA,QACA,SACA,UACA,SACA,SACA,YACA,UACA,QACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,YACA,UACA,QACA,WACA,SACA,SACA,SACA,WACA,QACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,SACA,YACA,UACA,SACA,WACA,SACA,UACA,SACA,UACA,QACA,WACA,UACA,WACA,SACA,UACA,SACA,OACA,YACA,UACA,YACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,OACA,YACA,SACA,QACA,QACA,QACA,SACA,SACA,QACA,OACA,QACA,OACA,YACA,WACA,YACA,UACA,UACA,SACA,SACA,UACA,UACA,UACA,QACA,OACA,QACA,UACA,YACA,YACA,QACA,YACA,YACA,QACA,WACA,YACA,SACA,UACA,SACA,QACA,QACA,UACA,QACA,QACA,WACA,QACA,QACA,UACA,UACA,WACA,SACA,OACA,WACA,QACA,WACA,UACA,WACA,OACA,OACA,WACA,WACA,UACA,OACA,SACA,UACA,QACA,SACA,YACA,QACA,QACA,UACA,SACA,QACA,QACA,WACA,UACA,WACA,WACA,OACA,SACA,UACA,SACA,SACA,UACA,UACA,YACA,OACA,SACA,SACA,QACA,OACA,MACA,UACA,OACA,UACA,SACA,UACA,WACA,QACA,WACA,WACA,WACA,QACA,UACA,SACA,SACA,QACA,OACA,YACA,YACA,OACA,YACA,SACA,QACA,SACA,UACA,WACA,UACA,QACA,QACA,QACA,SACA,UACA,WACA,YACA,OACA,YACA,WACA,SACA,QACA,OACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,YACA,YACA,SACA,SACA,QACA,SACA,UACA,OACA,SACA,SACA,WACA,YACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,QACA,QACA,QACA,QACA,UACA,UACA,SACA,YACA,OACA,QACA,QACA,UACA,UACA,YACA,UACA,UACA,YACA,YACA,UACA,UACA,YACA,YACA,YACA,UACA,WACA,SACA,SACA,YACA,SACA,SACA,WACA,QACA,QACA,UACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,QACA,QACA,WACA,QACA,YACA,SACA,WACA,SACA,YACA,SACA,SACA,SACA,WACA,WACA,YACA,YACA,WACA,WACA,UACA,QACA,SACA,UACA,SACA,SACA,UACA,UACA,QACA,OACA,QACA,YACA,SACA,OACA,UACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,QACA,QACA,SACA,SACA,SACA,UACA,YACA,WACA,QACA,OACA,SACA,OACA,SACA,UACA,OACA,WACA,OACA,SACA,UACA,SACA,YACA,QACA,UACA,QACA,SACA,QACA,SACA,SACA,QACA,QACA,WACA,UACA,OACA,UACA,OACA,WACA,WACA,UACA,YACA,WACA,UACA,YACA,OACA,UACA,UACA,UACA,YACA,QACA,SACA,WACA,SACA,WACA,UACA,WACA,SACA,QACA,SACA,SACA,UACA,SACA,QACA,OACA,SACA,WACA,WACA,SACA,UACA,SACA,SACA,SACA,QACA,YACA,SACA,UACA,SACA,UACA,UACA,WACA,OACA,YACA,UACA,UACA,SACA,YACA,UACA,UACA,UACA,YACA,UACA,YACA,UACA,UACA,QACA,UACA,SACA,YACA,SACA,UACA,WACA,WACA,YACA,YACA,YACA,WACA,SACA,YACA,QACA,SACA,UACA,UACA,WACA,UACA,YACA,WACA,YACA,QACA,YACA,YACA,UACA,UACA,UACA,SACA,YACA,QACA,SACA,WACA,SACA,UACA,YACA,YACA,QACA,UACA,UACA,UACA,OACA,OACA,SACA,SACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,WACA,SACA,UACA,WACA,WACA,UACA,YACA,WACA,UACA,SACA,SACA,SACA,UACA,YACA,SACA,QACA,UACA,YACA,SACA,SACA,YACA,QACA,UACA,YACA,UACA,WACA,WACA,UACA,SACA,SACA,QACA,SACA,YACA,WACA,WACA,SACA,SACA,SACA,WACA,WACA,YACA,YACA,YACA,UACA,WACA,WACA,QACA,WACA,QACA,QACA,UACA,YACA,UACA,YACA,WACA,SACA,SACA,UACA,QACA,QACA,YACA,WACA,UACA,QACA,UACA,YACA,YACA,WACA,UACA,WACA,UACA,UACA,QACA,UACA,UACA,WACA,QACA,UACA,SACA,WACA,WACA,WACA,UACA,WACA,SACA,WACA,UACA,QACA,QACA,SACA,SACA,OACA,YACA,UACA,QACA,YACA,SACA,QACA,QACA,UACA,QACA,WACA,SACA,UACA,QACA,QACA,YACA,YACA,YACA,WACA,YACA,YACA,QACA,QACA,QACA,OACA,WACA,SACA,WACA,WACA,QACA,WACA,WACA,SACA,YACA,UACA,QACA,UACA,WACA,SACA,OACA,SACA,UACA,WACA,SACA,SACA,QACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,WACA,QACA,SACA,WACA,SACA,WACA,WACA,YACA,SACA,UACA,UACA,WACA,UACA,SACA,SACA,OACA,QACA,QACA,OACA,QACA,WACA,SACA,SACA,QACA,YACA,QACA,WACA,UACA,UACA,WACA,UACA,WACA,UACA,QACA,QACA,QACA,UACA,SACA,WACA,OACA,OACA,QACA,QACA,QACA,UACA,QACA,SACA,YACA,WACA,QACA,SACA,UACA,SACA,UACA,WACA,QACA,SACA,WACA,OACA,SACA,QACA,UACA,QACA,QACA,UACA,WACA,UACA,UACA,WACA,QACA,SACA,UACA,WACA,YACA,QACA,WACA,SACA,SACA,YACA,SACA,UACA,QACA,YACA,UACA,UACA,WACA,YACA,YACA,OACA,WACA,SACA,UACA,SACA,QACA,UACA,MACA,WACA,SACA,UACA,SACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,OACA,OACA,OACA,OACA,WACA,WACA,UACA,WACA,SACA,YACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,SACA,WACA,OACA,OACA,OACA,UACA,QACA,QACA,SACA,QACA,WACA,UACA,UACA,WACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,SACA,UACA,SACA,YACA,WACA,WACA,YACA,UACA,YACA,WACA,WACA,YACA,WACA,YACA,UACA,UACA,UACA,WACA,UACA,YACA,UACA,QACA,YACA,UACA,WACA,WACA,SACA,WACA,YACA,YACA,UACA,YACA,YACA,UACA,OACA,UACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,UACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,YACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,UACA,YACA,YACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,YACA,UACA,UACA,YACA,OACA,SACA,SACA,UACA,SACA,UACA,SACA,OACA,QACA,OACA,WACA,YACA,UACA,SACA,SACA,SACA,YACA,YACA,WACA,WACA,YACA,QACA,WACA,UACA,WACA,YACA,SACA,UACA,WACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,YACA,SACA,SACA,YACA,OACA,UACA,SACA,QACA,QACA,QACA,YACA,YACA,WACA,YACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,UACA,SACA,WACA,OACA,WACA,YACA,WACA,WACA,SACA,WACA,UACA,WACA,YACA,YACA,SACA,QACA,YACA,QACA,UACA,UACA,QACA,QACA,QACA,UACA,WACA,WACA,WACA,WACA,SACA,SACA,UACA,YACA,QACA,UACA,UACA,YACA,SACA,WACA,YACA,SACA,WACA,WACA,WACA,WACA,WACA,SACA,QACA,QACA,SACA,QACA,QACA,WACA,UACA,WACA,YACA,UACA,WACA,UACA,WACA,OACA,UACA,QACA,QACA,QACA,UACA,SACA,WACA,UACA,UACA,UACA,WACA,UACA,YACA,SACA,WACA,UACA,QACA,QACA,QACA,QACA,OACA,QACA,SACA,UACA,UACA,QACA,QACA,UACA,UACA,YACA,UACA,YACA,UACA,QACA,YACA,SACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,UACA,UACA,WACA,QACA,OACA,SACA,UACA,UACA,YACA,OACA,UACA,UACA,WACA,SACA,SACA,WACA,WACA,YACA,WACA,UACA,YACA,WACA,UACA,YACA,UACA,QACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,SACA,SACA,SACA,YACA,UACA,QACA,QACA,QACA,UACA,SACA,UACA,SACA,SACA,YACA,QACA,QACA,QACA,OACA,SACA,UACA,YACA,UACA,YACA,WACA,YACA,UACA,MACA,QACA,SACA,UACA,UACA,WACA,SACA,YACA,YACA,MACA,MACA,WACA,SACA,QACA,WACA,SACA,QACA,QACA,WACA,QACA,UACA,YACA,SACA,WACA,QACA,SACA,SACA,WACA,YACA,QACA,WACA,WACA,YACA,UACA,WACA,WACA,UACA,OACA,OACA,YACA,OACA,YACA,OACA,WACA,SACA,WACA,WACA,UACA,OACA,SACA,WACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,SACA,YACA,WACA,SACA,UACA,YACA,QACA,OACA,YACA,SACA,WACA,QACA,UACA,WACA,SACA,QACA,SACA,SACA,QACA,QACA,YACA,QACA,WACA,SACA,WACA,YACA,WACA,UACA,SACA,YACA,YACA,UACA,YACA,UACA,YACA,WACA,OACA,WACA,UACA,SACA,YACA,YACA,YACA,QACA,WACA,SACA,WACA,YACA,SACA,SACA,OACA,OACA,SACA,SACA,WACA,SACA,WACA,SACA,UACA,SACA,YACA,YACA,YACA,WACA,UACA,YACA,WACA,WACA,WACA,UACA,SACA,WACA,SACA,WACA,UACA,YACA,WACA,YACA,YACA,QACA,WACA,UACA,UACA,SACA,SACA,OACA,WACA,YACA,WACA,SACA,YACA,QACA,WACA,QACA,WACA,YACA,SACA,WACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,UACA,QACA,SACA,WACA,SACA,YACA,YACA,WACA,SACA,YACA,WACA,SACA,WACA,YACA,YACA,WACA,SACA,QACA,SACA,QACA,UACA,SACA,UACA,UACA,OACA,YACA,YACA,WACA,YACA,SACA,UACA,YACA,WACA,SACA,SACA,SACA,WACA,YACA,YACA,UACA,UACA,QACA,WACA,SACA,SACA,WACA,QACA,UACA,YACA,UACA,YACA,YACA,WACA,WACA,YACA,YACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,YACA,WACA,WACA,SACA,YACA,YACA,WACA,YACA,YACA,SACA,WACA,YACA,WACA,UACA,QACA,UACA,WACA,UACA,UACA,YACA,WACA,SACA,UACA,YACA,UACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,YACA,YACA,UACA,OACA,WACA,SACA,YACA,QACA,OACA,SACA,UACA,YACA,WACA,YACA,WACA,WACA,YACA,YACA,MACA,WACA,YACA,WACA,OACA,SACA,OACA,WACA,QACA,SACA,SACA,UACA,SACA,QACA,UACA,SACA,YACA,QACA,QACA,SACA,SACA,UACA,UACA,UACA,SACA,SACA,UACA,WACA,YACA,YACA,WACA,YACA,WACA,YACA,WACA,WACA,WACA,SACA,WACA,WACA,UACA,YACA,WACA,UACA,UACA,YACA,WACA,WACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,WACA,OACA,YACA,UACA,OACA,UACA,YACA,YACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,WACA,SACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,YACA,WACA,UACA,WACA,UACA,YACA,UACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,WACA,WACA,WACA,QACA,QACA,QACA,YACA,UACA,WACA,WACA,WACA,WACA,SACA,WACA,YACA,YACA,WACA,WACA,WACA,YACA,QACA,SACA,SACA,OACA,WACA,WACA,QACA,QACA,QACA,QACA,OACA,SACA,YACA,SACA,QACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,QACA,QACA,SACA,WACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,UACA,QACA,OACA,YACA,SACA,SACA,OACA,SACA,WACA,SACA,OACA,OACA,QACA,OACA,OACA,WACA,YACA,YACA,WACA,YACA,WACA,UACA,UACA,YACA,WACA,YACA,QACA,UACA,UACA,OACA,UACA,WACA,YACA,YACA,WACA,YACA,YACA,YACA,SACA,SACA,WACA,SACA,SACA,QACA,OACA,UACA,QACA,QACA,QACA,UACA,WACA,YACA,WACA,WACA,SACA,WACA,SACA,SACA,WACA,UACA,UACA,UACA,QACA,QACA,QACA,YACA,UACA,WACA,UACA,UACA,UACA,QACA,QACA,WACA,SACA,OACA,MACA,SACA,YACA,UACA,WACA,UACA,WACA,WACA,QACA,OACA,OACA,SACA,SACA,MACA,OACA,SACA,WACA,OACA,UACA,WACA,WACA,MACA,OACA,SACA,YACA,YACA,UACA,UACA,WACA,SACA,SACA,OACA,OACA,UACA,OACA,QACA,QACA,QACA,UACA,UACA,WACA,UACA,YACA,UACA,WACA,UACA,WACA,WACA,OACA,QACA,UACA,UACA,UACA,SACA,UACA,QACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,SACA,UACA,QACA,UACA,SACA,WACA,SACA,YACA,YACA,SACA,WACA,UACA,QACA,SACA,SACA,OACA,OACA,QACA,QACA,QACA,YACA,OACA,SACA,UACA,YACA,UACA,WACA,YACA,UACA,YACA,YACA,OACA,WACA,SACA,OACA,UACA,SACA,WACA,YACA,WACA,MACA,YACA,UACA,YACA,SACA,YACA,SACA,SACA,WACA,WACA,YACA,UACA,YACA,SACA,QACA,YACA,UACA,SACA,QACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,SACA,MACA,WACA,WACA,YACA,QACA,UACA,SACA,MACA,UACA,WACA,MACA,YACA,QACA,YACA,WACA,YACA,QACA,UACA,QACA,QACA,UACA,SACA,UACA,YACA,YACA,QACA,WACA,UACA,SACA,SACA,WACA,SACA,YACA,QACA,UACA,YACA,WACA,OACA,QACA,WACA,UACA,WACA,UACA,UACA,WACA,WACA,YACA,WACA,YACA,WACA,WACA,WACA,WACA,UACA,UACA,YACA,QACA,MACA,SACA,YACA,SACA,YACA,YACA,WACA,UACA,YACA,SACA,SACA,YACA,YACA,WACA,UACA,UACA,WACA,WACA,YACA,QACA,SACA,UACA,UACA,YACA,YACA,UACA,YACA,WACA,YACA,YACA,WACA,YACA,WACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,WACA,WACA,YACA,UACA,SACA,UACA,YACA,YACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,SACA,SACA,SACA,UACA,UACA,SACA,SACA,YACA,WACA,YACA,WACA,SACA,UACA,SACA,SACA,YACA,SACA,SACA,WACA,UACA,WACA,UACA,YACA,WACA,WACA,WACA,UACA,WACA,QACA,OACA,SACA,OACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,WACA,UACA,QACA,SACA,WACA,UACA,UACA,YACA,SACA,YACA,YACA,WACA,SACA,SACA,UACA,YACA,SACA,SACA,UACA,QACA,QACA,WACA,YACA,YACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,UACA,QACA,UACA,YACA,YACA,SACA,WACA,WACA,YACA,YACA,WACA,UACA,UACA,WACA,UACA,QACA,YACA,SACA,YACA,WACA,UACA,QACA,WACA,YACA,YACA,UACA,UACA,OACA,YACA,YACA,YACA,WACA,WACA,QACA,WACA,UACA,OACA,QACA,YACA,SACA,QACA,UACA,UACA,WACA,YACA,YACA,YACA,SACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,SACA,YACA,YACA,YACA,YACA,QACA,OACA,YACA,SACA,UACA,SACA,QACA,WACA,OACA,SACA,YACA,WACA,WACA,SACA,UACA,YACA,YACA,YACA,YACA,YACA,QACA,SACA,WACA,YACA,SACA,SACA,WACA,UACA,YACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,YACA,SACA,WACA,UACA,YACA,YACA,WACA,YACA,SACA,YACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,UACA,SACA,WACA,SACA,YACA,UACA,UACA,SACA,YACA,UACA,UACA,OACA,SACA,UACA,SACA,OACA,QACA,UACA,OACA,WACA,SACA,SACA,WACA,UACA,UACA,YACA,QACA,UACA,OACA,UACA,YACA,YACA,UACA,UACA,WACA,SACA,UACA,WACA,SACA,YACA,YACA,UACA,WACA,WACA,MACA,QACA,UACA,SACA,SACA,OACA,OACA,SACA,SACA,WACA,WACA,WACA,WACA,WACA,QACA,QACA,UACA,SACA,UACA,WACA,YACA,WACA,SACA,SACA,QACA,SACA,SACA,WACA,UACA,YACA,QACA,QACA,QACA,QACA,UACA,SACA,WACA,WACA,YACA,UACA,UACA,QACA,WACA,QACA,UACA,SACA,WACA,SACA,SACA,SACA,UACA,OACA,SACA,QACA,WACA,SACA,WACA,WACA,UACA,UACA,YACA,QACA,WACA,QACA,UACA,WACA,WACA,YACA,SACA,UACA,UACA,WACA,MACA,OACA,UACA,UACA,WACA,WACA,YACA,YACA,QACA,UACA,QACA,QACA,YACA,UACA,WACA,WACA,OACA,UACA,YACA,YACA,YACA,WACA,WACA,SACA,QACA,UACA,WACA,SACA,WACA,UACA,YACA,YACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,OACA,UACA,SACA,QACA,QACA,SACA,SACA,QACA,QACA,OACA,QACA,QACA,QACA,WACA,OACA,SACA,UACA,QACA,WACA,UACA,UACA,QACA,SACA,UACA,WACA,OACA,MACA,MACA,OACA,QACA,OACA,WACA,SACA,WACA,SACA,WACA,SACA,OACA,OACA,OACA,UACA,WACA,WACA,YACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,UACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,SACA,SACA,UACA,WACA,WACA,MACA,QACA,WACA,WACA,UACA,YACA,WACA,YACA,WACA,QACA,QACA,UACA,UACA,YACA,SACA,UACA,QACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,UACA,WACA,SACA,YACA,WACA,YACA,WACA,UACA,WACA,YACA,WACA,UACA,SACA,WACA,SACA,YACA,WACA,QACA,UACA,UACA,WACA,SACA,SACA,QACA,SACA,WACA,YACA,YACA,WACA,QACA,SACA,UACA,QACA,UACA,YACA,SACA,OACA,QACA,YACA,UACA,WACA,WACA,YACA,SACA,QACA,QACA,SACA,WACA,YACA,WACA,QACA,YACA,SACA,MACA,QACA,MACA,YACA,UACA,QACA,OACA,YACA,WACA,UACA,SACA,SACA,UACA,YACA,SACA,YACA,WACA,OACA,SACA,QACA,SACA,SACA,WACA,UACA,MACA,SACA,UACA,SACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,MACA,WACA,YACA,SACA,UACA,WACA,QACA,OACA,OACA,SACA,OACA,QACA,OACA,SACA,MACA,SACA,UACA,WACA,WACA,QACA,UACA,YACA,SACA,QACA,YACA,WACA,YACA,UACA,YACA,WACA,WACA,SACA,YACA,YACA,YACA,WACA,YACA,UACA,YACA,UACA,UACA,UACA,QACA,QACA,YACA,SACA,UACA,YACA,QACA,OACA,WACA,YACA,WACA,SACA,WACA,SACA,SACA,SACA,QACA,UACA,SACA,WACA,QACA,QACA,SACA,QACA,UACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,SACA,WACA,YACA,QACA,UACA,QACA,WACA,UACA,WACA,UACA,SACA,UACA,UACA,UACA,UACA,SACA,UACA,SACA,UACA,WACA,WACA,SACA,YACA,YACA,UACA,WACA,QACA,QACA,QACA,UACA,WACA,UACA,OACA,SACA,YACA,UACA,SACA,OACA,OACA,WACA,OACA,UACA,QACA,WACA,WACA,YACA,OACA,UACA,QACA,UACA,OACA,OACA,OACA,QACA,WACA,YACA,QACA,SACA,OACA,SACA,OACA,SACA,WACA,OACA,UACA,SACA,SACA,SACA,OACA,OACA,OACA,WACA,YACA,WACA,YACA,SACA,SACA,WACA,UACA,YACA,WACA,WACA,UACA,WACA,QACA,WACA,WACA,UACA,UACA,UACA,WACA,UACA,SACA,UACA,QACA,WACA,QACA,QACA,UACA,YACA,QACA,QACA,YACA,UACA,UACA,YACA,WACA,SACA,YACA,SACA,YACA,YACA,UACA,QACA,OACA,UACA,WACA,WACA,YACA,SACA,QACA,UACA,WACA,OACA,YACA,OACA,QACA,YACA,WACA,WACA,QACA,UACA,YACA,QACA,YACA,QACA,SACA,WACA,OACA,UACA,OACA,WACA,SACA,QACA,QACA,SACA,WACA,SACA,QACA,SACA,UACA,QACA,QACA,SACA,UACA,QACA,OACA,SACA,WACA,WACA,UACA,UACA,YACA,UACA,WACA,SACA,QACA,YACA,WACA,WACA,QACA,UACA,YACA,QACA,OACA,WACA,QACA,OACA,UACA,UACA,YACA,UACA,QACA,SACA,WACA,OACA,OACA,QACA,QACA,UACA,OACA,SACA,MACA,UACA,WACA,YACA,WACA,UACA,WACA,SACA,SACA,UACA,UACA,MACA,UACA,QACA,OACA,UACA,OACA,SACA,SACA,YACA,SACA,UACA,SACA,UACA,YACA,UACA,WACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,SACA,UACA,WACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,SACA,YACA,SACA,QACA,YACA,YACA,UACA,WACA,UACA,YACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,WACA,YACA,UACA,WACA,YACA,SACA,WACA,WACA,WACA,YACA,WACA,QACA,UACA,WACA,YACA,YACA,YACA,UACA,UACA,UACA,QACA,UACA,OACA,SACA,QACA,UACA,YACA,QACA,SACA,YACA,WACA,UACA,WACA,YACA,OACA,UACA,SACA,QACA,QACA,SACA,WACA,SACA,WACA,SACA,OACA,WACA,WACA,YACA,YACA,YACA,SACA,SACA,YACA,WACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,UACA,WACA,YACA,YACA,UACA,WACA,OACA,OACA,QACA,UACA,YACA,UACA,QACA,UACA,YACA,QACA,SACA,SACA,SACA,UACA,UACA,WACA,WACA,UACA,YACA,QACA,WACA,QACA,SACA,SACA,YACA,QACA,WACA,SACA,UACA,UACA,UACA,UACA,QACA,YACA,WACA,WACA,UACA,WACA,SACA,SACA,WACA,OACA,MACA,OACA,OACA,OACA,QACA,SACA,WACA,SACA,QACA,YACA,WACA,UACA,SACA,YACA,WACA,YACA,WACA,WACA,SACA,SACA,YACA,YACA,SACA,WACA,SACA,OACA,SACA,UACA,WACA,WACA,SACA,SACA,SACA,UACA,SACA,YACA,UACA,QACA,OACA,UACA,OACA,SACA,YACA,MACA,SACA,UACA,WACA,YACA,WACA,YACA,YACA,YACA,SACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,MACA,UACA,QACA,OACA,OACA,MACA,WACA,WACA,WACA,UACA,YACA,YACA,WACA,WACA,WACA,SACA,QACA,OACA,QACA,WACA,SACA,SACA,YACA,WACA,WACA,QACA,YACA,WACA,UACA,WACA,UACA,YACA,WACA,UACA,YACA,WACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,SACA,SACA,YACA,UACA,WACA,YACA,YACA,WACA,SACA,UACA,YACA,YACA,WACA,UACA,YACA,YACA,QACA,WACA,YACA,WACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,UACA,WACA,YACA,WACA,UACA,YACA,YACA,YACA,UACA,YACA,SACA,WACA,SACA,SACA,MACA,OACA,SACA,OACA,QACA,MACA,OACA,YACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,WACA,YACA,YACA,UACA,QACA,UACA,YACA,UACA,OACA,YACA,SACA,QACA,MACA,MACA,SACA,SACA,YACA,UACA,WACA,YACA,SACA,YACA,WACA,MACA,UACA,UACA,SACA,UACA,UACA,WACA,QACA,OACA,QACA,UACA,UACA,OACA,UACA,YACA,OACA,OACA,YACA,UACA,QACA,SACA,SACA,MACA,QACA,SACA,QACA,SACA,WACA,OACA,UACA,UACA,MACA,SACA,YACA,SACA,UACA,OACA,UACA,WACA,WACA,YACA,QACA,OACA,MACA,SACA,WACA,YACA,SACA,UACA,WACA,YACA,WACA,QACA,YACA,WACA,YACA,OACA,SACA,WACA,UACA,QACA,YACA,QACA,UACA,UACA,OACA,SACA,QACA,OACA,WACA,WACA,OACA,SACA,UACA,SACA,UACA,WACA,SACA,QACA,OACA,UACA,YACA,UACA,SACA,WACA,WACA,QACA,WACA,UACA,SACA,QACA,QACA,SACA,WACA,OACA,MACA,OACA,SACA,OACA,WACA,WACA,SACA,OACA,OACA,WACA,WACA,YACA,WACA,OACA,SACA,SACA,WACA,SACA,WACA,UACA,UACA,UACA,OACA,UACA,UACA,YACA,WACA,SACA,UACA,UACA,OACA,SACA,QACA,OACA,UACA,WACA,OACA,QACA,WACA,QACA,QACA,QACA,SACA,UACA,QACA,OACA,UACA,UACA,WACA,YACA,WACA,SACA,SACA,QACA,UACA,WACA,SACA,UACA,SACA,OACA,OACA,QACA,SACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,YACA,WACA,YACA,WACA,YACA,QACA,UACA,SACA,QACA,SACA,UACA,SACA,OACA,QACA,OACA,OACA,QACA,OACA,QACA,OACA,SACA,WACA,UACA,SACA,WACA,SACA,UACA,UACA,SACA,WACA,SACA,WACA,SACA,WACA,OACA,WACA,OACA,SACA,QACA,SACA,SACA,WACA,UACA,UACA,YACA,OACA,UACA,SACA,YACA,UACA,QACA,OACA,SACA,OACA,OACA,UACA,SACA,UACA,YACA,WACA,SACA,UACA,QACA,WACA,SACA,WACA,YACA,YACA,SACA,UACA,YACA,UACA,UACA,WACA,MACA,OACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,SACA,QACA,QACA,OACA,OACA,UACA,YACA,QACA,QACA,UACA,WACA,OACA,QACA,WACA,WACA,SACA,SACA,WACA,UACA,OACA,OACA,MACA,UACA,UACA,SACA,OACA,OACA,WACA,YACA,SACA,SACA,SACA,UACA,QACA,SACA,QACA,YACA,UACA,SACA,SACA,YACA,YACA,QACA,UACA,YACA,WACA,YACA,YACA,SACA,WACA,UACA,SACA,YACA,WACA,YACA,UACA,UACA,SACA,QACA,WACA,WACA,YACA,YACA,OACA,QACA,OACA,YACA,OACA,SACA,WACA,SACA,YACA,UACA,YACA,WACA,QACA,YACA,SACA,QACA,YACA,WACA,WACA,SACA,WACA,WACA,QACA,OACA,UACA,YACA,WACA,UACA,SACA,UACA,WACA,QACA,YACA,WACA,YACA,YACA,YACA,UACA,YACA,WACA,WACA,SACA,WACA,UACA,YACA,WACA,WACA,QACA,YACA,SACA,YACA,OACA,OACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,WACA,SACA,SACA,QACA,QACA,YACA,UACA,UACA,UACA,YACA,WACA,YACA,SACA,UACA,UACA,YACA,QACA,UACA,SACA,UACA,QACA,WACA,SACA,SACA,SACA,OACA,MACA,WACA,YACA,UACA,UACA,WACA,QACA,QACA,YACA,YACA,SACA,WACA,SACA,SACA,UACA,WACA,SACA,YACA,SACA,UACA,SACA,QACA,YACA,SACA,YACA,YACA,UACA,SACA,YACA,SACA,UACA,WACA,SACA,UACA,UACA,UACA,YACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,OACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,WACA,WACA,WACA,QACA,WACA,WACA,UACA,QACA,SACA,YACA,SACA,UACA,SACA,WACA,WACA,UACA,QACA,SACA,SACA,WACA,SACA,UACA,YACA,SACA,UACA,YACA,WACA,QACA,WACA,OACA,YACA,WACA,WACA,UACA,MACA,YACA,SACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,YACA,UACA,WACA,UACA,YACA,QACA,SACA,WACA,SACA,YACA,WACA,UACA,WACA,YACA,YACA,YACA,WACA,MACA,SACA,WACA,UACA,YACA,WACA,WACA,WACA,QACA,YACA,WACA,YACA,YACA,UACA,WACA,SACA,QACA,OACA,WACA,YACA,SACA,WACA,YACA,SACA,YACA,QACA,QACA,YACA,WACA,UACA,WACA,UACA,WACA,QACA,YACA,YACA,QACA,QACA,UACA,OACA,QACA,SACA,QACA,SACA,OACA,OACA,MACA,MACA,WACA,QACA,OACA,SACA,UACA,WACA,WACA,YACA,YACA,SACA,WACA,QACA,YACA,UACA,QACA,QACA,WACA,UACA,YACA,SACA,QACA,YACA,QACA,YACA,WACA,SACA,UACA,YACA,WACA,QACA,QACA,SACA,YACA,QACA,UACA,UACA,SACA,YACA,QACA,UACA,SACA,WACA,OACA,YACA,YACA,SACA,OACA,SACA,SACA,SACA,UACA,YACA,UACA,OACA,QACA,MACA,OACA,OACA,SACA,QACA,YACA,OACA,SACA,SACA,UACA,QACA,SACA,UACA,YACA,WACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,YACA,OACA,SACA,UACA,SACA,WACA,SACA,WACA,SACA,YACA,SACA,SACA,WACA,WACA,YACA,WACA,YACA,YACA,UACA,UACA,OACA,SACA,OACA,UACA,QACA,OACA,MACA,YACA,SACA,WACA,WACA,SACA,UACA,QACA,OACA,SACA,WACA,WACA,QACA,QACA,SACA,SACA,WACA,YACA,QACA,WACA,QACA,UACA,SACA,UACA,SACA,UACA,SACA,UACA,SACA,WACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,SACA,WACA,WACA,YACA,QACA,SACA,QACA,MACA,MACA,QACA,MACA,YACA,WACA,WACA,SACA,WACA,UACA,WACA,YACA,SACA,YACA,OACA,UACA,YACA,YACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,SACA,YACA,SACA,UACA,YACA,YACA,WACA,WACA,SACA,QACA,SACA,UACA,SACA,UACA,UACA,OACA,MACA,OACA,WACA,OACA,MACA,QACA,WACA,QACA,OACA,UACA,WACA,OACA,WACA,UACA,WACA,UACA,QACA,SACA,WACA,OACA,WACA,QACA,UACA,YACA,UACA,OACA,SACA,OACA,OACA,OACA,OACA,UACA,OACA,OACA,WACA,UACA,YACA,YACA,YACA,WACA,QACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,MACA,YACA,UACA,QACA,QACA,OACA,QACA,QACA,SACA,UACA,SACA,WACA,WACA,WACA,WACA,UACA,WACA,UACA,WACA,WACA,QACA,WACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,UACA,YACA,YACA,UACA,UACA,SACA,UACA,UACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,YACA,WACA,YACA,YACA,WACA,WACA,UACA,WACA,SACA,OACA,QACA,OACA,UACA,UACA,WACA,UACA,WACA,WACA,YACA,YACA,WACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,UACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,YACA,WACA,YACA,WACA,UACA,UACA,WACA,WACA,WACA,YACA,YACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,WACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,UACA,WACA,WACA,WACA,UACA,YACA,WACA,YACA,MACA,SACA,UACA,YACA,UACA,YACA,SACA,WACA,SACA,QACA,QACA,YACA,UACA,WACA,WACA,WACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,QACA,SACA,UACA,SACA,YACA,OACA,WACA,YACA,SACA,WACA,WACA,UACA,WACA,SACA,UACA,WACA,QACA,WACA,OACA,YACA,QACA,UACA,WACA,YACA,UACA,YACA,SACA,QACA,YACA,YACA,SACA,QACA,UACA,UACA,WACA,YACA,SACA,UACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,WACA,WACA,YACA,SACA,UACA,YACA,SACA,SACA,QACA,UACA,UACA,SACA,WACA,SACA,SACA,UACA,UACA,UACA,SACA,UACA,YACA,SACA,UACA,YACA,QACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,UACA,UACA,YACA,WACA,WACA,WACA,QACA,SACA,SACA,UACA,SACA,WACA,UACA,QACA,YACA,SACA,WACA,YACA,OACA,WACA,UACA,QACA,YACA,UACA,SACA,YACA,YACA,SACA,WACA,QACA,YACA,WACA,SACA,SACA,UACA,UACA,WACA,SACA,QACA,QACA,SACA,UACA,WACA,UACA,SACA,SACA,QACA,SACA,WACA,WACA,YACA,WACA,WACA,YACA,WACA,UACA,SACA,OACA,SACA,WACA,UACA,SACA,UACA,UACA,YACA,WACA,UACA,YACA,QACA,SACA,UACA,WACA,YACA,MACA,WACA,UACA,QACA,YACA,YACA,YACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,QACA,OACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,QACA,OACA,YACA,YACA,SACA,YACA,QACA,SACA,WACA,QACA,YACA,SACA,YACA,YACA,QACA,UACA,UACA,SACA,UACA,YACA,SACA,UACA,YACA,QACA,YACA,QACA,SACA,WACA,UACA,UACA,WACA,QACA,UACA,QACA,SACA,UACA,UACA,SACA,WACA,UACA,WACA,WACA,UACA,WACA,YACA,YACA,WACA,WACA,SACA,UACA,YACA,YACA,UACA,WACA,YACA,WACA,UACA,UACA,WACA,UACA,YACA,WACA,QACA,WACA,QACA,SACA,YACA,SACA,WACA,YACA,UACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,UACA,WACA,SACA,OACA,YACA,UACA,QACA,MACA,OACA,OACA,OACA,UACA,UACA,WACA,YACA,SACA,QACA,SACA,QACA,SACA,QACA,SACA,SACA,QACA,SACA,WACA,QACA,OACA,YACA,UACA,YACA,UACA,SACA,OACA,OACA,UACA,OACA,SACA,SACA,QACA,WACA,WACA,UACA,WACA,YACA,OACA,SACA,WACA,WACA,SACA,YACA,WACA,UACA,SACA,WACA,QACA,OACA,SACA,WACA,WACA,SACA,UACA,SACA,UACA,WACA,SACA,SACA,UACA,YACA,UACA,UACA,QACA,SACA,WACA,QACA,UACA,OACA,WACA,YACA,UACA,QACA,SACA,MACA,WACA,SACA,WACA,UACA,WACA,YACA,SACA,UACA,WACA,YACA,UACA,WACA,WACA,UACA,YACA,UACA,SACA,WACA,YACA,UACA,UACA,SACA,YACA,YACA,UACA,YACA,WACA,YACA,YACA,SACA,UACA,WACA,WACA,UACA,WACA,YACA,WACA,UACA,SACA,UACA,SACA,YACA,YACA,YACA,SACA,UACA,YACA,UACA,QACA,UACA,YACA,UACA,YACA,YACA,WACA,UACA,SACA,UACA,UACA,YACA,UACA,UACA,WACA,SACA,YACA,WACA,QACA,SACA,YACA,UACA,UACA,SACA,QACA,WACA,QACA,QACA,QACA,SACA,SACA,WACA,UACA,UACA,YACA,QACA,YACA,WACA,WACA,YACA,QACA,UACA,YACA,UACA,YACA,UACA,WACA,YACA,WACA,WACA,UACA,UACA,UACA,UACA,YACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,UACA,WACA,YACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,QACA,QACA,YACA,SACA,WACA,YACA,SACA,YACA,WACA,WACA,YACA,WACA,UACA,QACA,UACA,YACA,WACA,SACA,YACA,YACA,WACA,WACA,QACA,WACA,SACA,SACA,WACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,QACA,SACA,QACA,YACA,QACA,UACA,MACA,UACA,SACA,YACA,SACA,SACA,MACA,OACA,YACA,OACA,UACA,QACA,YACA,OACA,SACA,SACA,QACA,WACA,YACA,YACA,UACA,WACA,OACA,QACA,SACA,QACA,WACA,YACA,WACA,SACA,WACA,YACA,QACA,UACA,WACA,SACA,SACA,UACA,SACA,SACA,WACA,YACA,OACA,QACA,YACA,WACA,UACA,WACA,WACA,YACA,SACA,YACA,UACA,WACA,UACA,SACA,QACA,UACA,OACA,SACA,WACA,UACA,YACA,SACA,QACA,WACA,QACA,WACA,QACA,UACA,YACA,YACA,UACA,UACA,QACA,UACA,UACA,SACA,YACA,YACA,WACA,UACA,SACA,QACA,UACA,UACA,YACA,YACA,YACA,QACA,QACA,QACA,UACA,YACA,QACA,OACA,SACA,YACA,WACA,YACA,QACA,QACA,OACA,SACA,SACA,OACA,SACA,QACA,SACA,WACA,YACA,WACA,YACA,WACA,QACA,SACA,SACA,OACA,OACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,UACA,SACA,OACA,SACA,QACA,SACA,WACA,OACA,SACA,QACA,YACA,SACA,SACA,SACA,UACA,SACA,UACA,UACA,UACA,QACA,OACA,SACA,SACA,OACA,UACA,SACA,QACA,SACA,SACA,UACA,YACA,WACA,QACA,YACA,WACA,WACA,UACA,WACA,OACA,YACA,WACA,UACA,YACA,YACA,YACA,WACA,SACA,WACA,WACA,WACA,UACA,YACA,SACA,QACA,UACA,SACA,SACA,UACA,SACA,UACA,UACA,WACA,WACA,SACA,SACA,YACA,SACA,SACA,SACA,SACA,YACA,YACA,UACA,SACA,WACA,UACA,WACA,YACA,UACA,YACA,YACA,SACA,YACA,UACA,YACA,YACA,YACA,SACA,SACA,UACA,SACA,WACA,WACA,SACA,YACA,YACA,UACA,WACA,WACA,YACA,WACA,UACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,YACA,UACA,WACA,WACA,WACA,YACA,YACA,SACA,SACA,UACA,SACA,WACA,WACA,WACA,WACA,YACA,UACA,UACA,WACA,UACA,UACA,YACA,SACA,YACA,YACA,UACA,SACA,WACA,YACA,SACA,SACA,UACA,UACA,SACA,SACA,SACA,WACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,YACA,QACA,SACA,SACA,YACA,YACA,UACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,YACA,UACA,WACA,WACA,QACA,QACA,UACA,UACA,YACA,WACA,WACA,WACA,UACA,QACA,UACA,YACA,UACA,SACA,SACA,SACA,WACA,SACA,YACA,OACA,SACA,SACA,UACA,UACA,WACA,SACA,WACA,WACA,YACA,YACA,QACA,UACA,YACA,SACA,UACA,SACA,YACA,UACA,UACA,UACA,WACA,SACA,WACA,YACA,YACA,WACA,YACA,YACA,UACA,UACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,WACA,UACA,SACA,UACA,YACA,YACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,WACA,SACA,WACA,UACA,SACA,UACA,QACA,WACA,SACA,YACA,SACA,YACA,YACA,UACA,UACA,WACA,YACA,YACA,YACA,OACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,YACA,UACA,QACA,SACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,SACA,SACA,QACA,UACA,UACA,YACA,YACA,YACA,WACA,WACA,UACA,WACA,YACA,YACA,YACA,SACA,WACA,WACA,WACA,WACA,SACA,WACA,UACA,WACA,SACA,SACA,WACA,YACA,YACA,SACA,WACA,YACA,SACA,YACA,YACA,UACA,UACA,UACA,UACA,WACA,SACA,SACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YACA,YACA,QACA,SACA,UACA,SACA,UACA,UACA,WACA,QACA,SACA,UACA,UACA,UACA,SACA,UACA,YACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,SACA,WACA,UACA,YACA,UACA,UACA,WACA,YACA,SACA,SACA,WACA,YACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,QACA,SACA,UACA,OACA,SACA,SACA,WACA,UACA,UACA,WACA,SACA,OACA,SACA,UACA,OACA,UACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,UACA,OACA,UACA,WACA,WACA,UACA,SACA,WACA,UACA,OACA,SACA,OACA,UACA,UACA,QACA,QACA,YACA,WACA,YACA,YACA,UACA,WACA,SACA,UACA,QACA,UACA,OACA,QACA,WACA,SACA,WACA,SACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,QACA,QACA,QACA,OACA,OACA,SACA,SACA,OACA,SACA,UACA,UACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,UACA,QACA,SACA,QACA,SACA,SACA,UACA,SACA,UACA,OACA,SACA,SACA,MACA,SACA,OACA,SACA,WACA,UACA,QACA,YACA,UACA,SACA,UACA,QACA,OACA,SACA,UACA,QACA,OACA,OACA,OACA,MACA,UACA,WACA,YACA,SACA,YACA,SACA,YACA,UACA,WACA,QACA,UACA,SACA,YACA,YACA,SACA,WACA,UACA,OACA,OACA,UACA,QACA,OACA,QACA,OACA,QACA,SACA,WACA,SACA,SACA,QACA,SACA,QACA,OACA,WACA,SACA,UACA,YACA,YACA,OACA,SACA,WACA,WACA,WACA,YACA,SACA,UACA,WACA,UACA,YACA,UACA,SACA,WACA,UACA,UACA,YACA,UACA,YACA,YACA,WACA,QACA,WACA,YACA,OACA,QACA,UACA,YACA,QACA,UACA,YACA,UACA,OACA,YACA,QACA,UACA,WACA,QACA,YACA,YACA,UACA,WACA,WACA,YACA,QACA,QACA,SACA,UACA,QACA,UACA,SACA,QACA,YACA,MACA,UACA,SACA,UACA,WACA,QACA,UACA,WACA,UACA,WACA,OACA,UACA,UACA,WACA,QACA,YACA,SACA,WACA,YACA,SACA,QACA,UACA,YACA,WACA,QACA,YACA,SACA,WACA,YACA,SACA,WACA,YACA,WACA,UACA,UACA,YACA,QACA,QACA,WACA,QACA,QACA,UACA,QACA,SACA,YACA,YACA,SACA,YACA,SACA,UACA,QACA,WACA,SACA,YACA,UACA,WACA,WACA,SACA,WACA,WACA,WACA,YACA,YACA,QACA,UACA,UACA,SACA,WACA,SACA,WACA,YACA,SACA,SACA,UACA,YACA,WACA,WACA,UACA,UACA,WACA,QACA,QACA,WACA,YACA,SACA,UACA,WACA,YACA,YACA,SACA,UACA,SACA,YACA,SACA,UACA,WACA,WACA,QACA,SACA,WACA,WACA,WACA,SACA,WACA,UACA,UACA,UACA,SACA,WACA,YACA,YACA,WACA,OACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,SACA,UACA,OACA,SACA,WACA,YACA,YACA,YACA,YACA,WACA,QACA,YACA,SACA,SACA,SACA,WACA,YACA,SACA,SACA,YACA,UACA,WACA,QACA,UACA,UACA,SACA,WACA,UACA,UACA,SACA,WACA,QACA,YACA,YACA,UACA,UACA,WACA,SACA,QACA,SACA,UACA,YACA,UACA,SACA,QACA,QACA,WACA,UACA,YACA,UACA,QACA,QACA,UACA,UACA,QACA,UACA,WACA,QACA,SACA,QACA,UACA,QACA,YACA,UACA,UACA,UACA,YACA,QACA,SACA,OACA,QACA,QACA,QACA,QACA,UACA,SACA,WACA,SACA,SACA,UACA,WACA,YACA,SACA,UACA,SACA,UACA,QACA,UACA,YACA,UACA,QACA,OACA,QACA,YACA,QACA,QACA,WACA,UACA,WACA,WACA,QACA,WACA,YACA,WACA,UACA,UACA,YACA,YACA,UACA,YACA,SACA,YACA,SACA,QACA,QACA,UACA,WACA,WACA,SACA,WACA,UACA,UACA,QACA,UACA,YACA,YACA,WACA,QACA,SACA,WACA,WACA,YACA,WACA,SACA,SACA,SACA,SACA,SACA,UACA,WACA,YACA,SACA,QACA,SACA,WACA,UACA,UACA,YACA,OACA,QACA,OACA,MACA,UACA,WACA,UACA,SACA,SACA,SACA,OACA,UACA,WACA,WACA,SACA,SACA,UACA,OACA,YACA,QACA,OACA,OACA,SACA,YACA,SACA,YACA,SACA,WACA,SACA,UACA,YACA,SACA,UACA,SACA,WACA,WACA,UACA,SACA,UACA,MACA,QACA,SACA,SACA,SACA,UACA,WACA,YACA,UACA,UACA,QACA,UACA,WACA,YACA,UACA,UACA,OACA,SACA,SACA,WACA,SACA,UACA,YACA,WACA,WACA,UACA,SACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,UACA,UACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,SACA,YACA,UACA,WACA,WACA,QACA,UACA,WACA,WACA,UACA,QACA,YACA,UACA,OACA,UACA,UACA,WACA,YACA,SACA,QACA,OACA,UACA,QACA,WACA,YACA,UACA,WACA,QACA,UACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,YACA,SACA,SACA,UACA,QACA,SACA,YACA,UACA,WACA,YACA,WACA,WACA,QACA,WACA,YACA,SACA,OACA,OACA,SACA,WACA,SACA,SACA,UACA,WACA,SACA,OACA,YACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,QACA,UACA,YACA,UACA,WACA,UACA,QACA,WACA,QACA,YACA,QACA,QACA,QACA,UACA,QACA,OACA,SACA,YACA,YACA,UACA,QACA,UACA,SACA,UACA,SACA,SACA,WACA,YACA,SACA,WACA,QACA,UACA,UACA,OACA,QACA,QACA,SACA,QACA,QACA,SACA,WACA,QACA,QACA,UACA,WACA,SACA,UACA,SACA,QACA,UACA,UACA,QACA,QACA,WACA,YACA,YACA,UACA,YACA,WACA,WACA,YACA,YACA,YACA,WACA,UACA,WACA,WACA,YACA,WACA,QACA,OACA,QACA,UACA,SACA,WACA,QACA,YACA,YACA,WACA,YACA,UACA,WACA,UACA,WACA,SACA,YACA,YACA,WACA,YACA,SACA,QACA,YACA,UACA,WACA,YACA,UACA,WACA,QACA,OACA,SACA,YACA,SACA,SACA,QACA,SACA,QACA,QACA,UACA,SACA,UACA,UACA,WACA,UACA,WACA,QACA,SACA,WACA,YACA,UACA,YACA,WACA,YACA,UACA,WACA,SACA,WACA,WACA,SACA,WACA,WACA,WACA,UACA,WACA,UACA,UACA,WACA,SACA,SACA,YACA,SACA,SACA,UACA,QACA,WACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,YACA,UACA,UACA,WACA,SACA,UACA,SACA,QACA,SACA,SACA,SACA,QACA,QACA,QACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,OACA,UACA,WACA,WACA,QACA,SACA,WACA,SACA,WACA,WACA,YACA,SACA,WACA,YACA,YACA,WACA,UACA,YACA,QACA,WACA,WACA,SACA,SACA,SACA,YACA,UACA,YACA,YACA,SACA,QACA,UACA,QACA,QACA,UACA,WACA,WACA,YACA,UACA,WACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,QACA,QACA,QACA,SACA,WACA,YACA,SACA,UACA,WACA,WACA,YACA,UACA,QACA,WACA,UACA,YACA,UACA,WACA,SACA,WACA,UACA,WACA,UACA,YACA,UACA,UACA,WACA,QACA,QACA,SACA,YACA,SACA,UACA,SACA,UACA,YACA,UACA,QACA,YACA,WACA,WACA,YACA,QACA,QACA,QACA,YACA,WACA,YACA,YACA,UACA,OACA,SACA,UACA,OACA,SACA,UACA,YACA,YACA,WACA,YACA,UACA,OACA,QACA,UACA,UACA,YACA,SACA,WACA,YACA,QACA,YACA,YACA,UACA,WACA,UACA,WACA,WACA,WACA,SACA,WACA,SACA,UACA,YACA,OACA,SACA,QACA,QACA,QACA,QACA,QACA,YACA,YACA,YACA,UACA,QACA,QACA,SACA,QACA,QACA,YACA,YACA,WACA,UACA,UACA,WACA,YACA,WACA,UACA,YACA,YACA,QACA,QACA,QACA,WACA,UACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,UACA,QACA,QACA,SACA,SACA,SACA,WACA,YACA,QACA,SACA,UACA,SACA,WACA,SACA,SACA,SACA,SACA,WACA,SACA,WACA,SACA,SACA,WACA,YACA,WACA,YACA,SACA,YACA,UACA,WACA,QACA,SACA,QACA,UACA,UACA,UACA,WACA,SACA,QACA,UACA,UACA,SACA,QACA,UACA,WACA,SACA,UACA,YACA,QACA,QACA,UACA,UACA,WACA,QACA,SACA,WACA,SACA,UACA,YACA,UACA,WACA,SACA,QACA,YACA,YACA,YACA,UACA,WACA,WACA,WACA,YACA,UACA,WACA,SACA,WACA,UACA,YACA,WACA,YACA,YACA,WACA,SACA,UACA,WACA,YACA,YACA,YACA,UACA,YACA,YACA,UACA,UACA,WACA,YACA,YACA,UACA,WACA,SACA,WACA,WACA,UACA,SACA,SACA,YACA,UACA,YACA,OACA,UACA,SACA,SACA,OACA,WACA,YACA,UACA,SACA,YACA,WACA,QACA,UACA,QACA,WACA,WACA,WACA,SACA,UACA,UACA,UACA,SACA,OACA,SACA,WACA,YACA,SACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,SACA,WACA,SACA,UACA,YACA,UACA,YACA,SACA,WACA,UACA,YACA,YACA,SACA,UACA,WACA,UACA,UACA,UACA,UACA,WACA,UACA,YACA,YACA,WACA,SACA,WACA,UACA,YACA,WACA,QACA,UACA,UACA,WACA,YACA,YACA,OACA,YACA,UACA,YACA,OACA,WACA,QACA,OACA,QACA,QACA,QACA,QACA,QACA,SACA,UACA,UACA,YACA,YACA,UACA,WACA,WACA,WACA,UACA,WACA,QACA,QACA,SACA,SACA,UACA,UACA,QACA,SACA,QACA,QACA,QACA,WACA,WACA,YACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,YACA,YACA,QACA,SACA,UACA,UACA,QACA,WACA,SACA,SACA,YACA,UACA,YACA,UACA,SACA,WACA,QACA,OACA,UACA,WACA,UACA,UACA,WACA,UACA,YACA,MACA,UACA,OACA,SACA,SACA,WACA,OACA,QACA,SACA,WACA,QACA,SACA,OACA,SACA,UACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,UACA,OACA,YACA,SACA,SACA,UACA,QACA,SACA,SACA,WACA,OACA,SACA,QACA,YACA,UACA,QACA,WACA,SACA,WACA,SACA,QACA,SACA,QACA,OACA,OACA,UACA,YACA,OACA,QACA,QACA,WACA,WACA,UACA,UACA,YACA,QACA,SACA,WACA,UACA,UACA,YACA,WACA,WACA,QACA,UACA,QACA,QACA,SACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,SACA,QACA,QACA,QACA,WACA,SACA,SACA,WACA,YACA,SACA,SACA,SACA,WACA,SACA,YACA,SACA,WACA,YACA,YACA,UACA,WACA,OACA,QACA,WACA,WACA,OACA,YACA,UACA,QACA,QACA,QACA,SACA,WACA,UACA,OACA,QACA,UACA,UACA,YACA,YACA,WACA,UACA,OACA,SACA,OACA,OACA,QACA,SACA,UACA,YACA,UACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,OACA,UACA,OACA,SACA,SACA,SACA,UACA,YACA,SACA,SACA,SACA,QACA,UACA,QACA,WACA,UACA,QACA,UACA,YACA,UACA,UACA,WACA,YACA,QACA,UACA,SACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,QACA,QACA,SACA,WACA,WACA,OACA,YACA,WACA,YACA,UACA,QACA,SACA,OACA,UACA,UACA,YACA,SACA,SACA,QACA,WACA,SACA,QACA,WACA,YACA,WACA,UACA,YACA,UACA,UACA,WACA,WACA,WACA,UACA,YACA,SACA,WACA,WACA,UACA,QACA,SACA,YACA,WACA,UACA,YACA,UACA,WACA,WACA,UACA,OACA,SACA,WACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,UACA,UACA,YACA,SACA,WACA,QACA,SACA,QACA,QACA,UACA,QACA,SACA,YACA,UACA,WACA,WACA,YACA,QACA,MACA,QACA,WACA,UACA,UACA,UACA,MACA,UACA,QACA,SACA,WACA,QACA,SACA,UACA,WACA,WACA,YACA,OACA,SACA,UACA,SACA,SACA,OACA,QACA,OACA,MACA,QACA,QACA,QACA,WACA,SACA,YACA,SACA,QACA,QACA,UACA,YACA,OACA,WACA,QACA,QACA,QACA,YACA,UACA,UACA,WACA,SACA,SACA,UACA,SACA,QACA,OACA,QACA,WACA,YACA,QACA,YACA,WACA,SACA,YACA,SACA,YACA,YACA,WACA,UACA,YACA,YACA,YACA,YACA,YACA,UACA,UACA,UACA,YACA,WACA,SACA,SACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,UACA,WACA,WACA,YACA,UACA,YACA,YACA,UACA,UACA,SACA,YACA,YACA,UACA,QACA,SACA,UACA,SACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,SACA,YACA,YACA,WACA,UACA,UACA,UACA,UACA,YACA,UACA,YACA,WACA,QACA,YACA,UACA,YACA,SACA,YACA,YACA,WACA,WACA,YACA,YACA,WACA,WACA,YACA,WACA,YACA,YACA,UACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,YACA,YACA,YACA,YACA,WACA,WACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,UACA,SACA,YACA,UACA,YACA,WACA,UACA,WACA,UACA,SACA,WACA,SACA,YACA,UACA,WACA,YACA,WACA,YACA,WACA,UACA,YACA,SACA,YACA,YACA,YACA,SACA,WACA,UACA,YACA,UACA,WACA,WACA,YACA,YACA,UACA,WACA,YACA,SACA,YACA,WACA,WACA,YACA,WACA,WACA,WACA,WACA,SACA,UACA,WACA,YACA,YACA,WACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,YACA,WACA,UACA,YACA,SACA,SACA,UACA,WACA,UACA,UACA,YACA,YACA,QACA,YACA,YACA,YACA,YACA,YACA,QACA,WACA,YACA,SACA,WACA,OACA,YACA,WACA,WACA,UACA,SACA,YACA,YACA,UACA,UACA,UACA,WACA,WACA,YACA,UACA,SACA,YACA,YACA,YACA,YACA,UACA,WACA,WACA,QACA,YACA,WACA,WACA,WACA,YACA,YACA,UACA,WACA,WACA,YACA,UACA,SACA,YACA,WACA,WACA,WACA,WACA,YACA,YACA,YACA,YACA,UACA,WACA,UACA,YACA,UACA,WACA,YACA,UACA,YACA,WACA,UACA,YACA,YACA,WACA,YACA,SACA,WACA,SACA,YACA,WACA,UACA,WACA,WACA,YACA,WACA,YACA,YACA,YACA,YACA,WACA,SACA,YACA,WACA,UACA,WACA,UACA,YACA,YACA,SACA,SACA,YACA,YACA,YACA,WACA,SACA,YACA,YACA,WACA,SACA,YACA,YACA,UACA,SACA,YACA,SACA,WACA,WACA,SACA,SACA,WACA,UACA,WACA,YACA,YACA,UACA,WACA,WACA,YACA,WACA,WACA,SACA,WACA,YACA,SACA,YACA,YACA,WACA,WACA,WACA,YACA,YACA,YACA,WACA,YACA,WACA,WACA,SACA,WACA,WACA,SACA,WACA,WACA,YACA,WACA,WACA,YACA,YACA,WACA,YACA,YACA,WACA,YACA,UACA,YACA,YACA,WACA,WACA,WACA,SACA,UACA,WACA,YACA,UACA,UACA,YACA,WACA,UACA,WACA,WACA,SACA,QACA,QACA,UACA,WACA,WACA,YACA,SACA,YACA,YACA,YACA,YACA,UACA,YACA,SACA,UACA,WACA,UACA,UACA,WACA,SACA,UACA,WACA,WACA,YACA,WACA,YACA,WACA,WACA,YACA,UACA,WACA,YACA,SACA,WACA,YACA,UACA,QACA,YACA,SACA,WACA,YACA,SACA,UACA,YACA,YACA,YACA,SACA,YACA,WACA,UACA,UACA,YACA,YACA,QACA,SACA,UACA,WACA,YACA,SACA,UACA,UACA,WACA,SACA,SACA,SACA,WACA,YACA,SACA,OACA,QACA,UACA,WACA,UACA,SACA,SACA,UACA,SACA,UACA,WACA,UACA,UACA,WACA,WACA,UACA,SACA,UACA,SACA,WACA,SACA,SACA,UACA,QACA,SACA,WACA,UACA,SACA,SACA,YACA,UACA,SACA,QACA,UACA,OACA,YACA,OACA,QACA,QACA,UACA,UACA,UACA,SACA,SACA,QACA,UACA,SACA,SACA,WACA,WACA,WACA,YACA,UACA,YACA,UACA,QACA,SACA,SACA,YACA,QACA,UACA,SACA,SACA,WACA,UACA,YACA,WACA,WACA,SACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,SACA,WACA,OACA,QACA,SACA,YACA,SACA,WACA,SACA,WACA,UACA,SACA,YACA,WACA,WACA,YACA,UACA,QACA,QACA,YACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,YACA,WACA,UACA,OACA,SACA,OACA,UACA,OACA,WACA,YACA,SACA,QACA,OACA,WACA,UACA,QACA,WACA,SACA,UACA,WACA,YACA,WACA,UACA,UACA,YACA,WACA,UACA,UACA,YACA,WACA,SACA,SACA,QACA,QACA,UACA,WACA,QACA,OACA,YACA,UACA,WACA,UACA,UACA,SACA,WACA,UACA,QACA,QACA,WACA,WACA,UACA,WACA,YACA,UACA,YACA,QACA,WACA,WACA,UACA,WACA,QACA,UACA,OACA,WACA,SACA,UACA,UACA,QACA,SACA,UACA,QACA,QACA,SACA,YACA,MACA,QACA,SACA,QACA,QACA,QACA,SACA,QACA,OACA,SACA,OACA,UACA,SACA,SACA,QACA,OACA,UACA,SACA,UACA,SACA,WACA,YACA,YACA,WACA,YACA,UACA,SACA,SACA,YACA,UACA,UACA,WACA,YACA,UACA,OACA,UACA,QACA,QACA,WACA,SACA,OACA,WACA,SACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,WACA,UACA,QACA,WACA,UACA,WACA,SACA,MACA,OACA,SACA,QACA,SACA,QACA,QACA,YACA,UACA,OACA,OACA,YACA,WACA,UACA,SACA,WACA,WACA,WACA,WACA,SACA,WACA,SACA,YACA,UACA,SACA,YACA,OACA,OACA,QACA,UACA,OACA,OACA,UACA,SACA,WACA,SACA,OACA,QACA,WACA,SACA,OACA,SACA,OACA,OACA,WACA,QACA,UACA,SACA,SACA,WACA,SACA,MACA,OACA,YACA,YACA,YACA,YACA,YACA,UACA,OACA,OACA,SACA,OACA,QACA,OACA,OACA,UACA,UACA,YACA,QACA,YACA,YACA,QACA,QACA,QACA,MACA,UACA,QACA,SACA,WACA,UACA,WACA,SACA,UACA,UACA,UACA,UACA,QACA,UACA,UACA,YACA,UACA,WACA,UACA,YACA,UACA,OACA,QACA,QACA,MACA,UACA,UACA,OACA,OACA,OACA,WACA,WACA,SACA,WACA,QACA,UACA,OACA,MACA,YACA,UACA,QACA,MACA,SACA,QACA,QACA,OACA,SACA,SACA,OACA,QACA,MACA,UACA,QACA,MACA,WACA,OACA,YACA,QACA,YACA,UACA,UACA,QACA,OACA,MACA,SACA,SACA,OACA,SACA,YACA,YACA,UACA,O,+DC/lPK,MAAMC,UAAgB,IAQ3B9vK,YAAYwJ,EAAY,MACtBrE,MAAMqE,GACM,MAARA,IAGJhJ,KAAKm1D,eAAiBn1D,KAAKqK,oBAAoB,kBAC/CrK,KAAKo1D,MAAQp1D,KAAKqK,oBAAoB,SACtCrK,KAAKoe,OAASpe,KAAKqK,oBAAoB,UACvCrK,KAAKq1D,SAAWr1D,KAAKqK,oBAAoB,YACzCrK,KAAKs1D,QAAUt1D,KAAKqK,oBAAoB,WACxCrK,KAAK8P,KAAO9P,KAAKqK,oBAAoB,QACvC,E,+DCjBK,MAAMklK,UAAiB,IAM5B/vK,YAAYwJ,EAAY,MACtBrE,MAAMqE,GACM,MAARA,IAGJhJ,KAAKkB,KAAOlB,KAAKqK,oBAAoB,QACrCrK,KAAKgE,KAAOhE,KAAKqK,oBAAoB,QACrCrK,KAAKG,MAAQH,KAAKqK,oBAAoB,SACtCrK,KAAKitD,SAAWjtD,KAAKqK,oBAAoB,YAC3C,E,+DCjBK,MAAMmlK,UAAoB,IAoB/BhwK,YAAYwJ,EAAY,MACtBrE,MAAMqE,GACM,MAAR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ACA,uBACA,iBACA,6BACA,yBAGIT,EAA2C,CAC/CoG,SAAU,CACR,oBACA,oBACA,wBACA,gCACA,gCACA,6CACA,yBACA,uCACA,sCACG3F,GAEL4F,KAAM,CACJ,oBACA,gBACA,wBACA,gCACA,4BACA,yCACA,yBACA,uCACA,sCACG5F,GAEL6F,MAAO,CACL,oBACA,iBACA,wBACA,gCACA,8BACA,2CACA,yBACA,uCACA,sCACG7F,GAELR,QAAS,CACP,oBACA,oBACA,wBACA,0BACA,8BACA,2CACA,yBACA,uCACA,sCACGQ,GAELP,UAAW,CACT,oBACA,iBACA,uBACA,0BACA,yBACA,2CACA,yBACA,sCACA,mCACA,gCACA,yCACGO,GAELN,OAAQ,CACN,oBACA,kBACA,uBACA,0BACA,yBACA,2CACA,yBACA,sCACA,mCACA,iCACA,yCACGM,GAEL8F,MAAO,CACL,oBACA,gBACA,wBACA,gCACA,4BACA,yCACA,uCACA,sCACG9F,GAELE,SAAU,IAKN6F,EAA0C,CAC9C1sE,QAAS,CAAC,YAAa,aACvBskE,MAAO,CAAC,kBAAmB,eAAgB,WAQtC,MAAMqI,EALb,cAUW,KAAAl8J,KAAuB,UA0BvB,KAAAqqE,SAAU,EACV,KAAA3xE,UAAW,C,CAzBMu0C,gB,MACxB,MAAO,CACL,mBACA,YACA,kBACA,aACA,gBACA,wBACA,yBAECvuB,OAAO+2I,EAAsB,QAAf,EAAAjkL,KAAKmpI,kBAAU,QAAI,SACjCj8F,OAAOu9I,EAAMzqL,KAAKwuB,MACvB,CAEIm8J,gBACF,MAAO,CAAC3qL,KAAKyzF,KAAM,UACrB,CAGIuxF,mBAEF,UADkC,MAAjBhlL,KAAKknB,WAAsC,IAAlBlnB,KAAKknB,YAC5BlnB,KAAK64F,UAAiB,IAC3C,CAKAosF,cAAc9kL,GACZH,KAAKmpI,WAAahpI,CACpB,E,iCApCWuqL,EAAsB,E,mBAAtBA,EAAsB,gH,uLAFtB,CAAC,CAAEtpL,QAAS,IAAuBE,YAAaopL,MAAyB,M,qBAAA,iSC7HtF,kBACE,kCACE,iCACF,wBACA,kCAIE,iCAKF,yBACF,uBACA,gB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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/create fake namespace object","webpack://@bitwarden/web-vault/webpack/runtime/load script","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/components/user-verification.component.ts","webpack://@bitwarden/web-vault/./src/app/components/user-verification.component.html","webpack://@bitwarden/web-vault/./src/app/components/user-verification.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/injection-tokens.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/encrypt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-domain/org-domain.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/storage.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/abstractions/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/prelogin.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/identity-token/token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/identity-token/password-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/domain/environment-urls.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/server-config.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/account.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/domain/auth-result.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/identity-token/device.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/identity-captcha.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/identity-token.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/identity-two-factor.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/login-strategies/login.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/login-strategies/password-login.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/login-strategies/passwordless-login.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/identity-token/sso-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/login-strategies/sso-login.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/identity-token/user-api-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/login-strategies/user-api-login.strategy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/passwordless-auth.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/key-connector-user-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/set-key-connector-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/services/login.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/services/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/verify-otp.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/accountFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/globalStateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/factories/stateFactory.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/stateVersion.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/window-state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/global-state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-avatar.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/notificationType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/notification.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/anonymousHub.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/api-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/auth-request.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/device-verification.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/key-connector-user-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/prelogin.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/register.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/sso-pre-validate.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/two-factor-authenticator.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/two-factor-duo.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/two-factor-email.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/two-factor-provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/two-factor-recover.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/two-factor-web-authn.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/two-factor-yubi-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing-history.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/billing-payment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/breach-account.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/collection.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/global-domain.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/domains.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/event.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-connection.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-export.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-sponsorship-sync-status.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-provider-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile-provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/profile.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/payment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/plan.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user-bulk-public-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user-bulk-public-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user-bulk.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider-user.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/provider/provider.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-access.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-file-download-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/send-file-upload-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/subscription.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/tax-info.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/tax-rate.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/user-key.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/response/attachment-upload-data.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/response/folder.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/response/sync.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/htmlStorageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/throttle.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/server-config.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/server-config.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/sequentialize.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encrypted-organization-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encrypted-object.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/get-class-initializer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/multithread-encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/event.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/event.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/event.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fileUploadType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/azureFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/bitwardenFileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-domain/responses/organization-domain-sso-details.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-domain/responses/organization-domain.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization-domain/requests/organization-domain-sso-details.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/responses/organization-user-bulk.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization-user/requests/organization-user-bulk.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/enums/sso.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/api/sso-config.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/organization-sso.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-api-key-information.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-auto-enroll-status.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/keys.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-keys.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/organization-subscription.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/reset-password-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/providerUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/provider.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send-file.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send-text.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/send.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/storageLocation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/provider.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/state.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/folder.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/stateMigration.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/decrypt-parameters.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/abstractions/sync/sync-notifier.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/sorted-ciphers-cache.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/request/cipher-bulk-move.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/request/cipher-bulk-restore.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/request/cipher-bulk-share.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/request/cipher-partial.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/request/cipher-share.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/services/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/organization.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/services/sync/sync.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/services/password-reprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/themeBuilder.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/jslib-services.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/services/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/services/folder/folder.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/services/folder/folder-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/services/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/services/account.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/account/avatar-update.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/fileUpload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event/event-upload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/event/event-collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/policy/policy-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/services/key-connector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/services/user-verification/user-verification.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization-user/organization-user.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/services/user-verification/user-verification-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization/organization-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/services/sync/sync-notifier.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/config/config.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/config/config-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization-domain/org-domain.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/organization-domain/org-domain-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/memoryStorage.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/components/password-reprompt.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/components/password-reprompt.component.html","webpack://@bitwarden/web-vault/./src/app/vault/core/password-reprompt.service.ts","webpack://@bitwarden/web-vault/./src/app/core/broadcaster-messaging.service.ts","webpack://@bitwarden/web-vault/./src/app/core/event.service.ts","webpack://@bitwarden/web-vault/./src/app/core/html-storage.service.ts","webpack://@bitwarden/web-vault/./src/translation-constants.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/./src/app/core/init.service.ts","webpack://@bitwarden/web-vault/./src/app/core/modal.service.ts","webpack://@bitwarden/web-vault/./src/app/core/policy-list.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state/account.ts","webpack://@bitwarden/web-vault/./src/app/core/state/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownloadBuilder.ts","webpack://@bitwarden/web-vault/./src/app/core/web-file-download.service.ts","webpack://@bitwarden/web-vault/./src/app/core/core.module.ts","webpack://@bitwarden/web-vault/./src/app/core/state/global-state.ts","webpack://@bitwarden/web-vault/./src/app/core/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/translation.service.ts","webpack://@bitwarden/web-vault/./src/app/core/state-migration.service.ts","webpack://@bitwarden/web-vault/./src/app/core/router.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/clientType.ts","webpack://@bitwarden/web-vault/./src/app/core/web-platform-utils.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/core-organization.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-invite.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/views/organization-user-admin-view.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/user-admin.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/collection-admin.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/group/requests/group.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/group/requests/organization-group-bulk.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/group/group.service.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/services/group/responses/group.response.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/views/collection-access-selection.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/view.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/views/collection-admin.view.ts","webpack://@bitwarden/web-vault/./src/app/organizations/core/views/group.view.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-create.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/create/organization-information.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-permissions.guard.ts","webpack://@bitwarden/web-vault/./src/app/organizations/guards/org-redirect.guard.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-events.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/policy.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/base-policy.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/disable-send.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/master-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/password-generator.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/personal-ownership.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/require-sso.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/reset-password.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/send-options.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/single-org.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/two-factor-authentication.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policy-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policy-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/policies/policies.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-update.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/delete-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/settings.component.ts","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-settings-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/settings/organization-settings.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/utils/form-selection-list.ts","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/user-type.pipe.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/access-selector.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/access-selector.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/access-selector.models.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/access-selector/access-selector.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/select/option.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/select/select.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/select/select.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/collection-dialog/collection-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/collection-dialog/collection-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/bit-validators/forbidden-characters.validator.ts","webpack://@bitwarden/web-vault/../../libs/components/src/select/select.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/components/collection-dialog/collection-dialog.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/shared/shared-organization.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/guards/has-premium.guard.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/breach-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-breach.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-exposed-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-inactive-two-factor.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-reused-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-unsecured-websites.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/icons/report-weak-passwords.icon.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/reports-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reports-home.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.html","webpack://@bitwarden/web-vault/./src/app/reports/reports-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/reports.module.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/cipher-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/exposed-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/inactive-two-factor-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/reused-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/unsecured-websites-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.html","webpack://@bitwarden/web-vault/./src/app/reports/pages/weak-passwords-report.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/models/report-variant.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-card/report-card.component.html","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-card/report-card.component.ts","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-list/report-list.component.html","webpack://@bitwarden/web-vault/./src/app/reports/shared/report-list/report-list.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/storage.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.html","webpack://@bitwarden/web-vault/./src/app/settings/adjust-storage.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.html","webpack://@bitwarden/web-vault/./src/app/settings/api-key.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/transactionType.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-history.component.html","webpack://@bitwarden/web-vault/./src/app/settings/billing-history.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-create.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-upgrade.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/provider/provider-organization-create.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.html","webpack://@bitwarden/web-vault/./src/app/settings/organization-plans.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-bank.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/bit-pay-invoice.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.html","webpack://@bitwarden/web-vault/./src/app/settings/add-credit.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/payment.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/adjust-payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment-method.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.html","webpack://@bitwarden/web-vault/./src/app/settings/payment.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/purge-vault.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.html","webpack://@bitwarden/web-vault/./src/app/settings/tax-info.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.html","webpack://@bitwarden/web-vault/./src/app/settings/update-license.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf/change-kdf.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/loose-components.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/toastr.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/credit-card-number.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/jslib.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/async-actions.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/avatar/avatar.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge-list/badge-list.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/color-password/color-password.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tabs.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/toggle-group/toggle-group.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/typography/typography.module.ts","webpack://@bitwarden/web-vault/./src/app/shared/locales.ts","webpack://@bitwarden/web-vault/./src/app/shared/shared.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/not-premium.directive.ts","webpack://@bitwarden/web-vault/./src/app/vault/components/premium-badge.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/components/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/true-false-value.directive.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/add-edit-custom-fields.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/add-edit-custom-fields.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/components/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/auth/register-form/register-form.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/two-factor-provider.request.ts","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-base.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/update-two-factor-duo.request.ts","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-duo.component.html","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-duo.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/update-two-factor-authenticator.request.ts","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-authenticator.component.html","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-authenticator.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/update-two-factor-email.request.ts","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-email.component.html","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-email.component.ts","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-recovery.component.html","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-recovery.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/update-two-factor-web-authn-delete.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/update-two-factor-web-authn.request.ts","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-webauthn.component.html","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-webauthn.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/update-two-factor-yubio-otp.request.ts","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-yubikey.component.html","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-yubikey.component.ts","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-setup.component.ts","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-verify.component.ts","webpack://@bitwarden/web-vault/./src/auth/settings/two-factor-verify.component.html","webpack://@bitwarden/web-vault/./src/app/app.component.ts","webpack://@bitwarden/web-vault/./src/app/app.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/emergency-access-accept.request.ts","webpack://@bitwarden/web-vault/./src/app/common/base.accept.component.ts","webpack://@bitwarden/web-vault/./src/auth/accept-emergency.component.html","webpack://@bitwarden/web-vault/./src/auth/accept-emergency.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-accept.request.ts","webpack://@bitwarden/web-vault/./src/auth/accept-organization.component.html","webpack://@bitwarden/web-vault/./src/auth/accept-organization.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/password-hint.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/components/hint.component.ts","webpack://@bitwarden/web-vault/./src/auth/hint.component.ts","webpack://@bitwarden/web-vault/./src/auth/hint.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/components/lock.component.ts","webpack://@bitwarden/web-vault/./src/auth/lock.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/enums/auth-request-type.ts","webpack://@bitwarden/web-vault/./src/auth/lock.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/domain/log-in-credentials.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/passwordless-create-auth.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/captcha-iframe.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/iframe_component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/components/captcha-protected.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/components/login-with-device.component.ts","webpack://@bitwarden/web-vault/./src/auth/login/login-with-device.component.html","webpack://@bitwarden/web-vault/./src/auth/login/login-with-device.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/components/login.component.ts","webpack://@bitwarden/web-vault/./src/auth/login/login.component.html","webpack://@bitwarden/web-vault/./src/auth/login/login.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/delete-recover.request.ts","webpack://@bitwarden/web-vault/./src/auth/recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/auth/recover-delete.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/two-factor-recovery.request.ts","webpack://@bitwarden/web-vault/./src/auth/recover-two-factor.component.ts","webpack://@bitwarden/web-vault/./src/auth/recover-two-factor.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/components/remove-password.component.ts","webpack://@bitwarden/web-vault/./src/auth/remove-password.component.html","webpack://@bitwarden/web-vault/./src/auth/remove-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-reset-password-enrollment.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/set-password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/components/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/set-password.component.ts","webpack://@bitwarden/web-vault/./src/auth/set-password.component.html","webpack://@bitwarden/web-vault/./src/auth/set-password.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/components/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/attachments.component.html","webpack://@bitwarden/web-vault/./src/auth/settings/emergency-access/emergency-access-attachments.component.ts","webpack://@bitwarden/web-vault/./src/auth/settings/emergency-access/emergency-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/auth/settings/emergency-access/emergency-access-view.component.html","webpack://@bitwarden/web-vault/./src/auth/settings/emergency-access/emergency-access-view.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/enums/emergency-access-status-type.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/enums/emergency-access-type.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/emergency-access-confirm.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/emergency-access-invite.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/emergency-access-update.request.ts","webpack://@bitwarden/web-vault/./src/auth/settings/emergency-access/emergency-access-add-edit.component.html","webpack://@bitwarden/web-vault/./src/auth/settings/emergency-access/emergency-access-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/auth/settings/emergency-access/emergency-access-confirm.component.html","webpack://@bitwarden/web-vault/./src/auth/settings/emergency-access/emergency-access-confirm.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/emergency-access-password.request.ts","webpack://@bitwarden/web-vault/./src/auth/settings/emergency-access/emergency-access-takeover.component.html","webpack://@bitwarden/web-vault/./src/auth/settings/emergency-access/emergency-access-takeover.component.ts","webpack://@bitwarden/web-vault/./src/auth/settings/emergency-access/emergency-access.component.html","webpack://@bitwarden/web-vault/./src/auth/settings/emergency-access/emergency-access.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/http-status-code.enum.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/components/sso.component.ts","webpack://@bitwarden/web-vault/./src/auth/sso.component.html","webpack://@bitwarden/web-vault/./src/auth/sso.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/webauthn-iframe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/components/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/components/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/auth/two-factor-options.component.html","webpack://@bitwarden/web-vault/./src/auth/two-factor-options.component.ts","webpack://@bitwarden/web-vault/./src/auth/two-factor.component.html","webpack://@bitwarden/web-vault/./src/auth/two-factor.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/components/update-password.component.ts","webpack://@bitwarden/web-vault/./src/auth/update-password.component.html","webpack://@bitwarden/web-vault/./src/auth/update-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/update-temp-password.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/components/update-temp-password.component.ts","webpack://@bitwarden/web-vault/./src/auth/update-temp-password.component.html","webpack://@bitwarden/web-vault/./src/auth/update-temp-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-email.request.ts","webpack://@bitwarden/web-vault/./src/auth/verify-email-token.component.ts","webpack://@bitwarden/web-vault/./src/auth/verify-email-token.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/verify-delete-recover.request.ts","webpack://@bitwarden/web-vault/./src/auth/verify-recover-delete.component.ts","webpack://@bitwarden/web-vault/./src/auth/verify-recover-delete.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/reference-event.request.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-step-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/register.request.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/inputsFieldMatch.validator.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/register.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error-summary.component.ts","webpack://@bitwarden/web-vault/./src/auth/register-form/register-form.component.html","webpack://@bitwarden/web-vault/./src/auth/register-form/register-form.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-forbes.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-us-news.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/confirmation-details.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/billing.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/default-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/enterprise2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams1-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/teams2-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/logo-cnet.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-individual-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/cnet-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-enterprise-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/content/abm-teams-content.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.html","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.component.ts","webpack://@bitwarden/web-vault/./src/app/guards/home.guard.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/frontend-layout.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/footer.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher-content.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher-content.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/product-switcher/product-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/components/dynamic-avatar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.html","webpack://@bitwarden/web-vault/./src/app/layouts/navbar.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/layouts/user-layout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/breadcrumbs/breadcrumbs.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/organization-badge/organization-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/pipes/pipes.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/collection-badge/collection-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/group-badge/group-badge.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/services/abstractions/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/shared/vault-filter-shared.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/services/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/vault-filter/vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/collections.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/vault/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/shared/models/vault-filter.model.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/shared/models/routed-vault-filter.model.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/shared/models/routed-vault-filter-bridge.model.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/services/routed-vault-filter.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/services/routed-vault-filter-bridge.service.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/attachments.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/enroll-master-password-reset.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/shared/components/vault-filter-section.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/shared/components/vault-filter-section.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/components/link-sso.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/components/link-sso.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/components/organization-options.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/components/organization-options.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/components/vault-filter.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/components/vault-filter.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/vault-filter/vault-filter.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/collection-bulk-delete.request.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/bulk-action-dialogs/bulk-delete-dialog/bulk-delete-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/bulk-action-dialogs/bulk-delete-dialog/bulk-delete-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/components/vault-items.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icons/search.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/bulk-action-dialogs/bulk-move-dialog/bulk-move-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/bulk-action-dialogs/bulk-move-dialog/bulk-move-dialog.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/bulk-action-dialogs/bulk-restore-dialog/bulk-restore-dialog.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/types/checkable.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/bulk-action-dialogs/bulk-restore-dialog/bulk-restore-dialog.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/bulk-action-dialogs/bulk-share-dialog/bulk-share-dialog.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/bulk-action-dialogs/bulk-share-dialog/bulk-share-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/ellipsis.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/organization-badge/organization-name-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/organization-badge/organization-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/group-badge/group-name-badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/group-badge/group-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/pipes/get-collection-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/collection-badge/collection-name-badge.component.html","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/collection-badge/collection-name.badge.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/pipes/get-organization-name.pipe.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-items.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-items.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/vault-items.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/breadcrumbs/breadcrumb.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/breadcrumbs/breadcrumb.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/breadcrumbs/breadcrumbs.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/breadcrumbs/breadcrumbs.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/vault-header/vault-header.component.html","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/vault-header/vault-header.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/org-vault/vault.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-link.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-link.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-nav-bar.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-nav-bar/tab-nav-bar.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.html","webpack://@bitwarden/web-vault/./src/app/components/organization-switcher.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/layouts/organization-layout.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/entity-users.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/collections.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/group-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/groups.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/manage/manage.component.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/organization.module.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planSponsorshipType.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/accept-family-sponsorship.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization/organization-sponsorship-redeem.request.ts","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.html","webpack://@bitwarden/web-vault/./src/app/organizations/sponsorships/families-for-enterprise-setup.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-access.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-access.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send-access.request.ts","webpack://@bitwarden/web-vault/./src/app/send/access.component.html","webpack://@bitwarden/web-vault/./src/app/send/access.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/send.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.html","webpack://@bitwarden/web-vault/./src/app/send/efflux-dates.component.ts","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/send/add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/send/send.component.html","webpack://@bitwarden/web-vault/./src/app/send/send.component.ts","webpack://@bitwarden/web-vault/./src/auth/settings/deauthorize-sessions.component.ts","webpack://@bitwarden/web-vault/./src/auth/settings/deauthorize-sessions.component.html","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/delete-account.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/email-token.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/email.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-email.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/update-profile.request.ts","webpack://@bitwarden/web-vault/./src/app/components/selectable-avatar.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-avatar.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-avatar.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.html","webpack://@bitwarden/web-vault/./src/app/settings/profile.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/account.component.html","webpack://@bitwarden/web-vault/./src/app/settings/account.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/create-organization.component.html","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-domains.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.html","webpack://@bitwarden/web-vault/./src/app/settings/domain-rules.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.html","webpack://@bitwarden/web-vault/./src/app/settings/vault-timeout-input.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.html","webpack://@bitwarden/web-vault/./src/app/settings/preferences.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/update-key.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/request/folder-with-id.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-password.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/kdf.request.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf/change-kdf-confirmation.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf/change-kdf-confirmation.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf/change-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/settings/change-kdf/change-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security-keys.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security.component.html","webpack://@bitwarden/web-vault/./src/app/settings/security.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/security-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.html","webpack://@bitwarden/web-vault/./src/app/settings/settings.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/validators/notAllowedValueAsync.validator.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsoring-org-row.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.html","webpack://@bitwarden/web-vault/./src/app/settings/sponsored-families.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/billing-history-view.component.html","webpack://@bitwarden/web-vault/./src/app/settings/billing-history-view.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.html","webpack://@bitwarden/web-vault/./src/app/settings/premium.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.html","webpack://@bitwarden/web-vault/./src/app/settings/user-subscription.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/subscription-routing.module.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/tools/generator/components/generator.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/tools/generator/components/password-generator-history.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/select-copy.directive.ts","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.html","webpack://@bitwarden/web-vault/./src/app/tools/password-generator-history.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.html","webpack://@bitwarden/web-vault/./src/app/tools/generator.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.ts","webpack://@bitwarden/web-vault/./src/app/tools/tools.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/bulk-action-dialogs/bulk-dialogs.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-filter/vault-filter.module.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.ts","webpack://@bitwarden/web-vault/./src/app/settings/update-key.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/components/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/folder-add-edit.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/folder-add-edit.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/share.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/share.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/share.component.ts","webpack://@bitwarden/web-vault/./src/auth/settings/verify-email.component.ts","webpack://@bitwarden/web-vault/./src/auth/settings/verify-email.component.html","webpack://@bitwarden/web-vault/./src/app/settings/low-kdf.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-header/vault-header.component.html","webpack://@bitwarden/web-vault/./src/app/settings/low-kdf.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-header/vault-header.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault.component.html","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault.component.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/vault/individual-vault/vault.module.ts","webpack://@bitwarden/web-vault/./src/app/oss-routing.module.ts","webpack://@bitwarden/web-vault/./src/auth/login/login.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/vertical-stepper/vertical-stepper.module.ts","webpack://@bitwarden/web-vault/./src/app/accounts/trial-initiation/trial-initiation.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/manage/organization-manage.module.ts","webpack://@bitwarden/web-vault/./src/app/organizations/users/organization-user.module.ts","webpack://@bitwarden/web-vault/./src/app/oss.module.ts","webpack://@bitwarden/web-vault/./src/app/wildcard-routing.module.ts","webpack://@bitwarden/web-vault/./src/app/app.module.ts","webpack://@bitwarden/web-vault/./src/main.ts","webpack://@bitwarden/web-vault/./src/utils/flags.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/guards/auth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/guards/lock.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/auth/guards/unauth.guard.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/components/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal.ref.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/a11y-title.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/api-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/autofocus.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/input-verbatim.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-click.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/stop-prop.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/search.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-name.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/pipes/user-type.pipe.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/dynamic-modal.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/components/modal/modal-injector.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/modal.service.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/services/theming/theming.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/shared/components/password-strength/password-strength.component.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/directives/fallback-src.directive.ts","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/components/icon.component.html","webpack://@bitwarden/web-vault/../../libs/angular/src/vault/components/icon.component.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/account/avatar-update.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/anonymousHub.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/appId.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/audit.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/broadcaster.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/crypto.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/cryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/environment.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event/event-collection.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/event/event-upload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/export.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/fileDownload/fileDownload.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/formValidationErrors.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/i18n.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/translation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/log.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/messaging.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/notifications.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-domain/org-domain-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/organization-user.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization-user/requests/organization-user-reset-password.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/organization/organization.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/platformUtils.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/policy/policy.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/provider.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/search.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/send.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/settings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/state.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/totp.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/userVerification/userVerification.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/validation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeout.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/abstractions/vaultTimeout/vaultTimeoutSettings.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/abstractions/account-api.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/abstractions/auth.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/abstractions/key-connector.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/abstractions/login.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/abstractions/token.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/abstractions/two-factor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/enums/authentication-status.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/enums/authentication-type.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/enums/two-factor-provider-type.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/enums/verification-type.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/domain/kdf-config.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/identity-token/token-two-factor.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/secret-verification.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/request/two-factor-email.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/models/response/emergency-access.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/auth/services/two-factor.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/deviceType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/eventType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/fieldType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/hashPurpose.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/kdfType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/keySuffixOptions.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserStatusType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/organizationUserType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/paymentMethodType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/planType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/policyType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/productType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/secureNoteType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/sendType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/themeType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/flags.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/serviceUtils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/wordlist.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/card.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/field.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/identity.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/login-uri.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/login.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/permissions.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/secure-note.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/send-file.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/api/send-text.api.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/collection.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/data/policy.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/collection.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/domain-base.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/enc-array-buffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/enc-string.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/master-password-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/organization.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/policy.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-file.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/send-text.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/symmetric-crypto-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/tree-node.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/card.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/field.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/identity.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/login-uri.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/login.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/secure-note.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipher.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/cipher-with-ids.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collection.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/collection-with-id.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folder.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/export/folder-with-id.export.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/collection.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/keys.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-keys.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/organization-tax-info-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/selection-read-only.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/send.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/request/tax-info-update.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/base.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/error.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/list.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/policy.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/response/selection-read-only.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/collection.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-file.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send-text.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/view/send.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/initializer-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/tools/generator/password/password-generation.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/password-generator-policy-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/tools/generator/password/generated-password-history.ts","webpack://@bitwarden/web-vault/../../libs/common/src/tools/generator/password/password-generation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/tools/generator/username/username-generation.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/tools/generator/username/email-forwarders/anon-addy-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/tools/generator/username/email-forwarders/duck-duck-go-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/tools/generator/username/email-forwarders/fastmail-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/tools/generator/username/email-forwarders/firefox-relay-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/tools/generator/username/email-forwarders/forwarder-options.ts","webpack://@bitwarden/web-vault/../../libs/common/src/tools/generator/username/email-forwarders/simple-login-forwarder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/tools/generator/username/username-generation.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/abstractions/cipher.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/abstractions/folder/folder-api.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/abstractions/folder/folder.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/abstractions/password-reprompt.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/abstractions/sync/sync.service.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/enums/cipher-reprompt-type.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/enums/cipher-type.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/attachment.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/card.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/cipher.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/field.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/identity.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/login-uri.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/login.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/password-history.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/secure-note.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/folder.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/login-uri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/secure-note.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/request/cipher-bulk-delete.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/request/cipher-collections.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/request/cipher-create.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/request/cipher-with-id.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/request/attachment.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/request/cipher.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/request/folder.request.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/response/attachment.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/response/password-history.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/response/cipher.response.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/attachment.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/card.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/cipher.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/field.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/folder.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/identity.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/item.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/login-uri.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/login.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/password-history.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/secure-note.view.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/bit-action.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/bit-submit.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/async-actions/form-button.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/avatar/avatar.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge-list/badge-list.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/badge-list/badge-list.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/badge/badge.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/button/button.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/callout/callout.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/checkbox/checkbox.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/checkbox/checkbox.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/color-password/color-password.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/animations.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-configurable-dialog/simple-configurable-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-configurable-dialog/simple-configurable-dialog.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog.service.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog/dialog.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/dialog/dialog.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/directives/dialog-close.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/directives/dialog-title-container.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-configurable-dialog/models/simple-dialog-close-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-configurable-dialog/models/simple-dialog-type.enum.ts","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-dialog/simple-dialog.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/dialog/simple-dialog/simple-dialog.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/form-control.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/form-control.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/form-control.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/form-control.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/hint.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-control/label.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field-control.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/error.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/form-field.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/password-input-toggle.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/prefix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/form-field/suffix.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/icon-button/icon-button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/icon/icon.ts","webpack://@bitwarden/web-vault/../../libs/components/src/input/input.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/link/link.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/link/link.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-divider.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu-trigger-for.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/menu/menu.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/multi-select/multi-select.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/radio-button/radio-button.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/button-like.abstraction.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/i18n.pipe.ts","webpack://@bitwarden/web-vault/../../libs/components/src/shared/shared.module.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/cell.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/row.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/table/table.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-header.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-list-container.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/shared/tab-list-item.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-body.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-group.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-body.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-group.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab-label.directive.ts","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab.component.html","webpack://@bitwarden/web-vault/../../libs/components/src/tabs/tab-group/tab.component.ts","webpack://@bitwarden/web-vault/../../libs/components/src/utils/function-to-observable.ts","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/compat get default export","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/jsonp chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var inProgress = {};\nvar dataWebpackPrefix = \"@bitwarden/web-vault:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","import { Directive, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl } from \"@angular/forms\";\n\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { KeyConnectorService } from \"@bitwarden/common/auth/abstractions/key-connector.service\";\nimport { VerificationType } from \"@bitwarden/common/auth/enums/verification-type\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Collects the user's master password, or if they are using Key Connector, prompts for an OTP via email.\n * This is exposed to the parent component via the ControlValueAccessor interface (e.g. bind it to a FormControl).\n * Use UserVerificationService to verify the user's input.\n */\n@Directive({\n  selector: \"app-user-verification\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class UserVerificationComponent implements ControlValueAccessor, OnInit {\n  usesKeyConnector = false;\n  disableRequestOTP = false;\n  sentCode = false;\n\n  secret = new FormControl(\"\");\n\n  private onChange: (value: Verification) => void;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async ngOnInit() {\n    this.usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.processChanges(this.secret.value);\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.secret.valueChanges.subscribe((secret: string) => this.processChanges(secret));\n  }\n\n  async requestOTP() {\n    if (this.usesKeyConnector) {\n      this.disableRequestOTP = true;\n      try {\n        await this.userVerificationService.requestOTP();\n        this.sentCode = true;\n      } finally {\n        this.disableRequestOTP = false;\n      }\n    }\n  }\n\n  writeValue(obj: any): void {\n    this.secret.setValue(obj);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // Not implemented\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disableRequestOTP = isDisabled;\n    if (isDisabled) {\n      this.secret.disable();\n    } else {\n      this.secret.enable();\n    }\n  }\n\n  private processChanges(secret: string) {\n    if (this.onChange == null) {\n      return;\n    }\n\n    this.onChange({\n      type: this.usesKeyConnector ? VerificationType.OTP : VerificationType.MasterPassword,\n      secret: Utils.isNullOrWhitespace(secret) ? null : secret,\n    });\n  }\n}\n","<ng-container *ngIf=\"!usesKeyConnector\">\n  <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n  <input\n    id=\"masterPassword\"\n    type=\"password\"\n    name=\"MasterPasswordHash\"\n    class=\"form-control\"\n    [formControl]=\"secret\"\n    required\n    appAutofocus\n    appInputVerbatim\n  />\n  <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n</ng-container>\n<ng-container *ngIf=\"usesKeyConnector\">\n  <div class=\"form-group\">\n    <label class=\"d-block\">{{ \"sendVerificationCode\" | i18n }}</label>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-secondary\"\n      (click)=\"requestOTP()\"\n      [disabled]=\"disableRequestOTP\"\n    >\n      {{ \"sendCode\" | i18n }}\n    </button>\n    <span class=\"ml-2 text-success\" role=\"alert\" @sent *ngIf=\"sentCode\">\n      <i class=\"bwi bwi-check-circle\" aria-hidden=\"true\"></i>\n      {{ \"codeSent\" | i18n }}\n    </span>\n  </div>\n\n  <div class=\"form-group\">\n    <label for=\"verificationCode\">{{ \"verificationCode\" | i18n }}</label>\n    <input\n      id=\"verificationCode\"\n      type=\"input\"\n      name=\"verificationCode\"\n      class=\"form-control\"\n      [formControl]=\"secret\"\n      required\n      appAutofocus\n      appInputVerbatim\n    />\n    <small class=\"form-text text-muted\">{{ \"confirmIdentity\" | i18n }}</small>\n  </div>\n</ng-container>\n","import { animate, style, transition, trigger } from \"@angular/animations\";\nimport { Component } from \"@angular/core\";\nimport { NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { UserVerificationComponent as BaseComponent } from \"@bitwarden/angular/auth/components/user-verification.component\";\n\n@Component({\n  selector: \"app-user-verification\",\n  templateUrl: \"user-verification.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: UserVerificationComponent,\n    },\n  ],\n  animations: [\n    trigger(\"sent\", [\n      transition(\":enter\", [style({ opacity: 0 }), animate(\"100ms\", style({ opacity: 1 }))]),\n    ]),\n  ],\n})\nexport class UserVerificationComponent extends BaseComponent {}\n","import { InjectionToken } from \"@angular/core\";\n\nimport {\n  AbstractMemoryStorageService,\n  AbstractStorageService,\n} from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\n\nexport const WINDOW = new InjectionToken<Window>(\"WINDOW\");\nexport const MEMORY_STORAGE = new InjectionToken<AbstractMemoryStorageService>(\"MEMORY_STORAGE\");\nexport const SECURE_STORAGE = new InjectionToken<AbstractStorageService>(\"SECURE_STORAGE\");\nexport const STATE_FACTORY = new InjectionToken<StateFactory>(\"STATE_FACTORY\");\nexport const STATE_SERVICE_USE_CACHE = new InjectionToken<boolean>(\"STATE_SERVICE_USE_CACHE\");\nexport const LOGOUT_CALLBACK = new InjectionToken<(expired: boolean, userId?: string) => void>(\n  \"LOGOUT_CALLBACK\"\n);\nexport const LOCKED_CALLBACK = new InjectionToken<() => void>(\"LOCKED_CALLBACK\");\nexport const CLIENT_TYPE = new InjectionToken<boolean>(\"CLIENT_TYPE\");\nexport const LOCALES_DIRECTORY = new InjectionToken<string>(\"LOCALES_DIRECTORY\");\nexport const SYSTEM_LANGUAGE = new InjectionToken<string>(\"SYSTEM_LANGUAGE\");\nexport const LOG_MAC_FAILURES = new InjectionToken<string>(\"LOG_MAC_FAILURES\");\n","import { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport abstract class ConfigApiServiceAbstraction {\n  get: () => Promise<ServerConfigResponse>;\n}\n","import { IEncrypted } from \"../interfaces/IEncrypted\";\nimport { Decryptable } from \"../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../interfaces/initializer-metadata.interface\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class EncryptService {\n  abstract encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString>;\n  abstract encryptToBytes: (\n    plainValue: ArrayBuffer,\n    key?: SymmetricCryptoKey\n  ) => Promise<EncArrayBuffer>;\n  abstract decryptToUtf8: (encString: EncString, key: SymmetricCryptoKey) => Promise<string>;\n  abstract decryptToBytes: (encThing: IEncrypted, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  abstract resolveLegacyKey: (key: SymmetricCryptoKey, encThing: IEncrypted) => SymmetricCryptoKey;\n  abstract decryptItems: <T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ) => Promise<T[]>;\n}\n","import { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { AttachmentUploadDataResponse } from \"../vault/models/response/attachment-upload-data.response\";\n\nexport abstract class FileUploadService {\n  uploadSendFile: (\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n  uploadCipherAttachment: (\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { OrganizationDomainResponse } from \"./responses/organization-domain.response\";\n\nexport abstract class OrgDomainServiceAbstraction {\n  orgDomains$: Observable<OrganizationDomainResponse[]>;\n\n  get: (orgDomainId: string) => OrganizationDomainResponse;\n\n  copyDnsTxt: (dnsTxt: string) => void;\n}\n\n// Note: this separate class is designed to hold methods that are not\n// meant to be used in components (e.g., data write methods)\nexport abstract class OrgDomainInternalServiceAbstraction extends OrgDomainServiceAbstraction {\n  upsert: (orgDomains: OrganizationDomainResponse[]) => void;\n  replace: (orgDomains: OrganizationDomainResponse[]) => void;\n  clearCache: () => void;\n  delete: (orgDomainIds: string[]) => void;\n}\n","export abstract class StateMigrationService {\n  needsMigration: () => Promise<boolean>;\n  migrate: () => Promise<void>;\n}\n","import { MemoryStorageOptions, StorageOptions } from \"../models/domain/storage-options\";\n\nexport abstract class AbstractStorageService {\n  abstract get<T>(key: string, options?: StorageOptions): Promise<T>;\n  abstract has(key: string, options?: StorageOptions): Promise<boolean>;\n  abstract save<T>(key: string, obj: T, options?: StorageOptions): Promise<void>;\n  abstract remove(key: string, options?: StorageOptions): Promise<void>;\n}\n\nexport abstract class AbstractMemoryStorageService extends AbstractStorageService {\n  // Used to identify the service in the session sync decorator framework\n  static readonly TYPE = \"MemoryStorageService\";\n  readonly type = AbstractMemoryStorageService.TYPE;\n\n  abstract get<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n  abstract getBypassCache<T>(key: string, options?: MemoryStorageOptions<T>): Promise<T>;\n}\n","import { VerifyOTPRequest } from \"../../auth/models/request/verify-otp.request\";\n\nexport abstract class UserVerificationApiServiceAbstraction {\n  postAccountVerifyOTP: (request: VerifyOTPRequest) => Promise<void>;\n  postAccountRequestOTP: () => Promise<void>;\n}\n","export abstract class AccountService {}\n\nexport abstract class InternalAccountService extends AccountService {\n  abstract delete(): void;\n}\n","export class PreloginRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { DeviceRequest } from \"./device.request\";\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\n\nexport abstract class TokenRequest {\n  protected device?: DeviceRequest;\n  protected passwordlessAuthRequest: string;\n\n  constructor(protected twoFactor: TokenTwoFactorRequest, device?: DeviceRequest) {\n    this.device = device != null ? device : null;\n  }\n\n  // eslint-disable-next-line\n  alterIdentityTokenHeaders(headers: Headers) {\n    // Implemented in subclass if required\n  }\n\n  setTwoFactor(twoFactor: TokenTwoFactorRequest) {\n    this.twoFactor = twoFactor;\n  }\n\n  setPasswordlessAccessCode(accessCode: string) {\n    this.passwordlessAuthRequest = accessCode;\n  }\n\n  protected toIdentityToken(clientId: string) {\n    const obj: any = {\n      scope: \"api offline_access\",\n      client_id: clientId,\n    };\n\n    if (this.device) {\n      obj.deviceType = this.device.type;\n      obj.deviceIdentifier = this.device.identifier;\n      obj.deviceName = this.device.name;\n      // no push tokens for browser apps yet\n      // obj.devicePushToken = this.device.pushToken;\n    }\n\n    //passswordless login\n    if (this.passwordlessAuthRequest) {\n      obj.authRequest = this.passwordlessAuthRequest;\n    }\n\n    if (this.twoFactor) {\n      if (this.twoFactor.token && this.twoFactor.provider != null) {\n        obj.twoFactorToken = this.twoFactor.token;\n        obj.twoFactorProvider = this.twoFactor.provider;\n        obj.twoFactorRemember = this.twoFactor.remember ? \"1\" : \"0\";\n      }\n    }\n\n    return obj;\n  }\n}\n","import { ClientType } from \"../../../../enums/clientType\";\nimport { Utils } from \"../../../../misc/utils\";\nimport { CaptchaProtectedRequest } from \"../captcha-protected.request\";\n\nimport { DeviceRequest } from \"./device.request\";\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class PasswordTokenRequest extends TokenRequest implements CaptchaProtectedRequest {\n  constructor(\n    public email: string,\n    public masterPasswordHash: string,\n    public captchaResponse: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: ClientType) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"password\";\n    obj.username = this.email;\n    obj.password = this.masterPasswordHash;\n\n    if (this.captchaResponse != null) {\n      obj.captchaResponse = this.captchaResponse;\n    }\n\n    return obj;\n  }\n\n  alterIdentityTokenHeaders(headers: Headers) {\n    headers.set(\"Auth-Email\", Utils.fromUtf8ToUrlB64(this.email));\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nexport class EnvironmentUrls {\n  base: string = null;\n  api: string = null;\n  identity: string = null;\n  icons: string = null;\n  notifications: string = null;\n  events: string = null;\n  webVault: string = null;\n  keyConnector: string = null;\n\n  static fromJSON(obj: Jsonify<EnvironmentUrls>): EnvironmentUrls {\n    return Object.assign(new EnvironmentUrls(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  ServerConfigResponse,\n  ThirdPartyServerConfigResponse,\n  EnvironmentServerConfigResponse,\n} from \"../response/server-config.response\";\n\nexport class ServerConfigData {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: string;\n\n  constructor(serverConfigResponse: Partial<ServerConfigResponse>) {\n    this.version = serverConfigResponse?.version;\n    this.gitHash = serverConfigResponse?.gitHash;\n    this.server = serverConfigResponse?.server\n      ? new ThirdPartyServerConfigData(serverConfigResponse.server)\n      : null;\n    this.utcDate = new Date().toISOString();\n    this.environment = serverConfigResponse?.environment\n      ? new EnvironmentServerConfigData(serverConfigResponse.environment)\n      : null;\n  }\n\n  static fromJSON(obj: Jsonify<ServerConfigData>): ServerConfigData {\n    return Object.assign(new ServerConfigData({}), obj, {\n      server: obj?.server ? ThirdPartyServerConfigData.fromJSON(obj.server) : null,\n      environment: obj?.environment ? EnvironmentServerConfigData.fromJSON(obj.environment) : null,\n    });\n  }\n}\n\nexport class ThirdPartyServerConfigData {\n  name: string;\n  url: string;\n\n  constructor(response: Partial<ThirdPartyServerConfigResponse>) {\n    this.name = response.name;\n    this.url = response.url;\n  }\n\n  static fromJSON(obj: Jsonify<ThirdPartyServerConfigData>): ThirdPartyServerConfigData {\n    return Object.assign(new ThirdPartyServerConfigData({}), obj);\n  }\n}\n\nexport class EnvironmentServerConfigData {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(response: Partial<EnvironmentServerConfigResponse>) {\n    this.vault = response.vault;\n    this.api = response.api;\n    this.identity = response.identity;\n    this.notifications = response.notifications;\n    this.sso = response.sso;\n  }\n\n  static fromJSON(obj: Jsonify<EnvironmentServerConfigData>): EnvironmentServerConfigData {\n    return Object.assign(new EnvironmentServerConfigData({}), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { AuthenticationStatus } from \"../../auth/enums/authentication-status\";\nimport { EnvironmentUrls } from \"../../auth/models/domain/environment-urls\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { Utils } from \"../../misc/utils\";\nimport { GeneratedPasswordHistory } from \"../../tools/generator/password\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { CipherData } from \"../../vault/models/data/cipher.data\";\nimport { FolderData } from \"../../vault/models/data/folder.data\";\nimport { CipherView } from \"../../vault/models/view/cipher.view\";\nimport { CollectionData } from \"../data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\nimport { EventData } from \"../data/event.data\";\nimport { OrganizationData } from \"../data/organization.data\";\nimport { PolicyData } from \"../data/policy.data\";\nimport { ProviderData } from \"../data/provider.data\";\nimport { SendData } from \"../data/send.data\";\nimport { ServerConfigData } from \"../data/server-config.data\";\nimport { CollectionView } from \"../view/collection.view\";\nimport { SendView } from \"../view/send.view\";\n\nimport { EncString } from \"./enc-string\";\nimport { Policy } from \"./policy\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: TEncrypted;\n  decrypted?: TDecrypted;\n\n  toJSON() {\n    return {\n      encrypted: this.encrypted,\n      decrypted:\n        this.decrypted instanceof ArrayBuffer\n          ? Utils.fromBufferToByteString(this.decrypted)\n          : this.decrypted,\n    };\n  }\n\n  static fromJSON<TEncrypted, TDecrypted>(\n    obj: { encrypted?: Jsonify<TEncrypted>; decrypted?: string | Jsonify<TDecrypted> },\n    decryptedFromJson?: (decObj: Jsonify<TDecrypted> | string) => TDecrypted,\n    encryptedFromJson?: (encObj: Jsonify<TEncrypted>) => TEncrypted\n  ) {\n    if (obj == null) {\n      return null;\n    }\n\n    const pair = new EncryptionPair<TEncrypted, TDecrypted>();\n    if (obj?.encrypted != null) {\n      pair.encrypted = encryptedFromJson\n        ? encryptedFromJson(obj.encrypted)\n        : (obj.encrypted as TEncrypted);\n    }\n    if (obj?.decrypted != null) {\n      pair.decrypted = decryptedFromJson\n        ? decryptedFromJson(obj.decrypted)\n        : (obj.decrypted as TDecrypted);\n    }\n    return pair;\n  }\n}\n\nexport class DataEncryptionPair<TEncrypted, TDecrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n  decrypted?: TDecrypted[];\n}\n\n// This is a temporary structure to handle migrated `DataEncryptionPair` to\n//  avoid needing a data migration at this stage. It should be replaced with\n//  proper data migrations when `DataEncryptionPair` is deprecated.\nexport class TemporaryDataEncryption<TEncrypted> {\n  encrypted?: { [id: string]: TEncrypted };\n}\n\nexport class AccountData {\n  ciphers?: DataEncryptionPair<CipherData, CipherView> = new DataEncryptionPair<\n    CipherData,\n    CipherView\n  >();\n  folders? = new TemporaryDataEncryption<FolderData>();\n  localData?: any;\n  sends?: DataEncryptionPair<SendData, SendView> = new DataEncryptionPair<SendData, SendView>();\n  collections?: DataEncryptionPair<CollectionData, CollectionView> = new DataEncryptionPair<\n    CollectionData,\n    CollectionView\n  >();\n  policies?: DataEncryptionPair<PolicyData, Policy> = new DataEncryptionPair<PolicyData, Policy>();\n  passwordGenerationHistory?: EncryptionPair<\n    GeneratedPasswordHistory[],\n    GeneratedPasswordHistory[]\n  > = new EncryptionPair<GeneratedPasswordHistory[], GeneratedPasswordHistory[]>();\n  addEditCipherInfo?: any;\n  eventCollection?: EventData[];\n  organizations?: { [id: string]: OrganizationData };\n  providers?: { [id: string]: ProviderData };\n}\n\nexport class AccountKeys {\n  cryptoMasterKey?: SymmetricCryptoKey;\n  cryptoMasterKeyAuto?: string;\n  cryptoMasterKeyB64?: string;\n  cryptoMasterKeyBiometric?: string;\n  cryptoSymmetricKey?: EncryptionPair<string, SymmetricCryptoKey> = new EncryptionPair<\n    string,\n    SymmetricCryptoKey\n  >();\n  organizationKeys?: EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  > = new EncryptionPair<\n    { [orgId: string]: EncryptedOrganizationKeyData },\n    Record<string, SymmetricCryptoKey>\n  >();\n  providerKeys?: EncryptionPair<any, Record<string, SymmetricCryptoKey>> = new EncryptionPair<\n    any,\n    Record<string, SymmetricCryptoKey>\n  >();\n  privateKey?: EncryptionPair<string, ArrayBuffer> = new EncryptionPair<string, ArrayBuffer>();\n  publicKey?: ArrayBuffer;\n  apiKeyClientSecret?: string;\n\n  toJSON() {\n    return Utils.merge(this, {\n      publicKey: Utils.fromBufferToByteString(this.publicKey),\n    });\n  }\n\n  static fromJSON(obj: DeepJsonify<AccountKeys>): AccountKeys {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(\n      new AccountKeys(),\n      { cryptoMasterKey: SymmetricCryptoKey.fromJSON(obj?.cryptoMasterKey) },\n      {\n        cryptoSymmetricKey: EncryptionPair.fromJSON(\n          obj?.cryptoSymmetricKey,\n          SymmetricCryptoKey.fromJSON\n        ),\n      },\n      { organizationKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.organizationKeys) },\n      { providerKeys: AccountKeys.initRecordEncryptionPairsFromJSON(obj?.providerKeys) },\n      {\n        privateKey: EncryptionPair.fromJSON<string, ArrayBuffer>(\n          obj?.privateKey,\n          (decObj: string) => Utils.fromByteStringToArray(decObj).buffer\n        ),\n      },\n      {\n        publicKey: Utils.fromByteStringToArray(obj?.publicKey)?.buffer,\n      }\n    );\n  }\n\n  static initRecordEncryptionPairsFromJSON(obj: any) {\n    return EncryptionPair.fromJSON(obj, (decObj: any) => {\n      if (obj == null) {\n        return null;\n      }\n\n      const record: Record<string, SymmetricCryptoKey> = {};\n      for (const id in decObj) {\n        record[id] = SymmetricCryptoKey.fromJSON(decObj[id]);\n      }\n      return record;\n    });\n  }\n}\n\nexport class AccountProfile {\n  apiKeyClientId?: string;\n  authenticationStatus?: AuthenticationStatus;\n  convertAccountToKeyConnector?: boolean;\n  name?: string;\n  email?: string;\n  emailVerified?: boolean;\n  entityId?: string;\n  entityType?: string;\n  everBeenUnlocked?: boolean;\n  forcePasswordReset?: boolean;\n  hasPremiumPersonally?: boolean;\n  hasPremiumFromOrganization?: boolean;\n  lastSync?: string;\n  userId?: string;\n  usesKeyConnector?: boolean;\n  keyHash?: string;\n  kdfIterations?: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n  kdfType?: KdfType;\n\n  static fromJSON(obj: Jsonify<AccountProfile>): AccountProfile {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountProfile(), obj);\n  }\n}\n\nexport class AccountSettings {\n  autoConfirmFingerPrints?: boolean;\n  autoFillOnPageLoadDefault?: boolean;\n  biometricUnlock?: boolean;\n  clearClipboard?: number;\n  collapsedGroupings?: string[];\n  defaultUriMatch?: UriMatchType;\n  disableAddLoginNotification?: boolean;\n  disableAutoBiometricsPrompt?: boolean;\n  disableAutoTotpCopy?: boolean;\n  disableBadgeCounter?: boolean;\n  disableChangedPasswordNotification?: boolean;\n  disableContextMenuItem?: boolean;\n  disableGa?: boolean;\n  dismissedAutoFillOnPageLoadCallout?: boolean;\n  dontShowCardsCurrentTab?: boolean;\n  dontShowIdentitiesCurrentTab?: boolean;\n  enableAlwaysOnTop?: boolean;\n  enableAutoFillOnPageLoad?: boolean;\n  enableBiometric?: boolean;\n  enableFullWidth?: boolean;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  equivalentDomains?: any;\n  minimizeOnCopyToClipboard?: boolean;\n  neverDomains?: { [id: string]: any };\n  passwordGenerationOptions?: any;\n  usernameGenerationOptions?: any;\n  generatorOptions?: any;\n  pinProtected?: EncryptionPair<string, EncString> = new EncryptionPair<string, EncString>();\n  protectedPin?: string;\n  settings?: AccountSettingsSettings; // TODO: Merge whatever is going on here into the AccountSettings model properly\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string = \"lock\";\n  serverConfig?: ServerConfigData;\n  approveLoginRequests?: boolean;\n  avatarColor?: string;\n  activateAutoFillOnPageLoadFromPolicy?: boolean;\n  smOnboardingTasks?: Record<string, Record<string, boolean>>;\n\n  static fromJSON(obj: Jsonify<AccountSettings>): AccountSettings {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountSettings(), obj, {\n      environmentUrls: EnvironmentUrls.fromJSON(obj?.environmentUrls),\n      pinProtected: EncryptionPair.fromJSON<string, EncString>(\n        obj?.pinProtected,\n        EncString.fromJSON\n      ),\n      serverConfig: ServerConfigData.fromJSON(obj?.serverConfig),\n    });\n  }\n}\n\nexport type AccountSettingsSettings = {\n  equivalentDomains?: string[][];\n};\n\nexport class AccountTokens {\n  accessToken?: string;\n  refreshToken?: string;\n  securityStamp?: string;\n\n  static fromJSON(obj: Jsonify<AccountTokens>): AccountTokens {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new AccountTokens(), obj);\n  }\n}\n\nexport class Account {\n  data?: AccountData = new AccountData();\n  keys?: AccountKeys = new AccountKeys();\n  profile?: AccountProfile = new AccountProfile();\n  settings?: AccountSettings = new AccountSettings();\n  tokens?: AccountTokens = new AccountTokens();\n\n  constructor(init: Partial<Account>) {\n    Object.assign(this, {\n      data: {\n        ...new AccountData(),\n        ...init?.data,\n      },\n      keys: {\n        ...new AccountKeys(),\n        ...init?.keys,\n      },\n      profile: {\n        ...new AccountProfile(),\n        ...init?.profile,\n      },\n      settings: {\n        ...new AccountSettings(),\n        ...init?.settings,\n      },\n      tokens: {\n        ...new AccountTokens(),\n        ...init?.tokens,\n      },\n    });\n  }\n\n  static fromJSON(json: Jsonify<Account>): Account {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Account({}), json, {\n      keys: AccountKeys.fromJSON(json?.keys),\n      profile: AccountProfile.fromJSON(json?.profile),\n      settings: AccountSettings.fromJSON(json?.settings),\n      tokens: AccountTokens.fromJSON(json?.tokens),\n    });\n  }\n}\n","import { Utils } from \"../../../misc/utils\";\nimport { TwoFactorProviderType } from \"../../enums/two-factor-provider-type\";\n\nexport class AuthResult {\n  captchaSiteKey = \"\";\n  resetMasterPassword = false;\n  forcePasswordReset = false;\n  twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string }> = null;\n\n  get requiresCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  get requiresTwoFactor() {\n    return this.twoFactorProviders != null;\n  }\n}\n","import { PlatformUtilsService } from \"../../../../abstractions/platformUtils.service\";\nimport { DeviceType } from \"../../../../enums/deviceType\";\n\nexport class DeviceRequest {\n  type: DeviceType;\n  name: string;\n  identifier: string;\n  pushToken?: string;\n\n  constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n    this.type = platformUtilsService.getDevice();\n    this.name = platformUtilsService.getDeviceString();\n    this.identifier = appId;\n    this.pushToken = null;\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class IdentityCaptchaResponse extends BaseResponse {\n  siteKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.siteKey = this.getResponseProperty(\"HCaptcha_SiteKey\");\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class IdentityTokenResponse extends BaseResponse {\n  accessToken: string;\n  expiresIn: number;\n  refreshToken: string;\n  tokenType: string;\n\n  resetMasterPassword: boolean;\n  privateKey: string;\n  key: string;\n  twoFactorToken: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n  forcePasswordReset: boolean;\n  apiUseKeyConnector: boolean;\n  keyConnectorUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.accessToken = response.access_token;\n    this.expiresIn = response.expires_in;\n    this.refreshToken = response.refresh_token;\n    this.tokenType = response.token_type;\n\n    this.resetMasterPassword = this.getResponseProperty(\"ResetMasterPassword\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.twoFactorToken = this.getResponseProperty(\"TwoFactorToken\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.kdfMemory = this.getResponseProperty(\"KdfMemory\");\n    this.kdfParallelism = this.getResponseProperty(\"KdfParallelism\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\");\n    this.apiUseKeyConnector = this.getResponseProperty(\"ApiUseKeyConnector\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\nimport { TwoFactorProviderType } from \"../../enums/two-factor-provider-type\";\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n  twoFactorProviders: TwoFactorProviderType[];\n  twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string }>();\n  captchaToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaToken = this.getResponseProperty(\"CaptchaBypassToken\");\n    this.twoFactorProviders = this.getResponseProperty(\"TwoFactorProviders\");\n    const twoFactorProviders2 = this.getResponseProperty(\"TwoFactorProviders2\");\n    if (twoFactorProviders2 != null) {\n      for (const prop in twoFactorProviders2) {\n        // eslint-disable-next-line\n        if (twoFactorProviders2.hasOwnProperty(prop)) {\n          this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n        }\n      }\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { Account, AccountProfile, AccountTokens } from \"../../models/domain/account\";\nimport { KeysRequest } from \"../../models/request/keys.request\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/two-factor.service\";\nimport { TwoFactorProviderType } from \"../enums/two-factor-provider-type\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { DeviceRequest } from \"../models/request/identity-token/device.request\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { UserApiTokenRequest } from \"../models/request/identity-token/user-api-token.request\";\nimport { IdentityCaptchaResponse } from \"../models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport abstract class LogInStrategy {\n  protected abstract tokenRequest: UserApiTokenRequest | PasswordTokenRequest | SsoTokenRequest;\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService\n  ) {}\n\n  abstract logIn(\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult>;\n\n  // The user key comes from different sources depending on the login strategy\n  protected abstract setUserKey(response: IdentityTokenResponse): Promise<void>;\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string = null\n  ): Promise<AuthResult> {\n    this.tokenRequest.setTwoFactor(twoFactor);\n    return this.startLogIn();\n  }\n\n  protected async startLogIn(): Promise<AuthResult> {\n    this.twoFactorService.clearSelectedProvider();\n\n    const response = await this.apiService.postIdentityToken(this.tokenRequest);\n\n    if (response instanceof IdentityTwoFactorResponse) {\n      return this.processTwoFactorResponse(response);\n    } else if (response instanceof IdentityCaptchaResponse) {\n      return this.processCaptchaResponse(response);\n    } else if (response instanceof IdentityTokenResponse) {\n      return this.processTokenResponse(response);\n    }\n\n    throw new Error(\"Invalid response object.\");\n  }\n\n  protected async buildDeviceRequest() {\n    const appId = await this.appIdService.getAppId();\n    return new DeviceRequest(appId, this.platformUtilsService);\n  }\n\n  protected async buildTwoFactor(userProvidedTwoFactor?: TokenTwoFactorRequest) {\n    if (userProvidedTwoFactor != null) {\n      return userProvidedTwoFactor;\n    }\n\n    const storedTwoFactorToken = await this.tokenService.getTwoFactorToken();\n    if (storedTwoFactorToken != null) {\n      return new TokenTwoFactorRequest(TwoFactorProviderType.Remember, storedTwoFactorToken, false);\n    }\n\n    return new TokenTwoFactorRequest();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    const accountInformation = await this.tokenService.decodeToken(tokenResponse.accessToken);\n    await this.stateService.addAccount(\n      new Account({\n        profile: {\n          ...new AccountProfile(),\n          ...{\n            userId: accountInformation.sub,\n            name: accountInformation.name,\n            email: accountInformation.email,\n            hasPremiumPersonally: accountInformation.premium,\n            kdfIterations: tokenResponse.kdfIterations,\n            kdfMemory: tokenResponse.kdfMemory,\n            kdfParallelism: tokenResponse.kdfParallelism,\n            kdfType: tokenResponse.kdf,\n          },\n        },\n        tokens: {\n          ...new AccountTokens(),\n          ...{\n            accessToken: tokenResponse.accessToken,\n            refreshToken: tokenResponse.refreshToken,\n          },\n        },\n      })\n    );\n  }\n\n  protected async processTokenResponse(response: IdentityTokenResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.resetMasterPassword = response.resetMasterPassword;\n    result.forcePasswordReset = response.forcePasswordReset;\n\n    await this.saveAccountInformation(response);\n\n    if (response.twoFactorToken != null) {\n      await this.tokenService.setTwoFactorToken(response);\n    }\n\n    await this.setUserKey(response);\n\n    // Must come after the user Key is set, otherwise createKeyPairForOldAccount will fail\n    const newSsoUser = response.key == null;\n    if (!newSsoUser) {\n      await this.cryptoService.setEncKey(response.key);\n      await this.cryptoService.setEncPrivateKey(\n        response.privateKey ?? (await this.createKeyPairForOldAccount())\n      );\n    }\n\n    this.messagingService.send(\"loggedIn\");\n\n    return result;\n  }\n\n  private async processTwoFactorResponse(response: IdentityTwoFactorResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.twoFactorProviders = response.twoFactorProviders2;\n    this.twoFactorService.setProviders(response);\n    this.captchaBypassToken = response.captchaToken ?? null;\n    return result;\n  }\n\n  private async processCaptchaResponse(response: IdentityCaptchaResponse): Promise<AuthResult> {\n    const result = new AuthResult();\n    result.captchaSiteKey = response.siteKey;\n    return result;\n  }\n\n  private async createKeyPairForOldAccount() {\n    try {\n      const [publicKey, privateKey] = await this.cryptoService.makeKeyPair();\n      await this.apiService.postAccountKeys(new KeysRequest(publicKey, privateKey.encryptedString));\n      return privateKey.encryptedString;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { HashPurpose } from \"../../enums/hashPurpose\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/two-factor.service\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"../models/domain/log-in-credentials\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./login.strategy\";\n\nexport class PasswordLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get masterPasswordHash() {\n    return this.tokenRequest.masterPasswordHash;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n\n  private localHashedPassword: string;\n  private key: SymmetricCryptoKey;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey() {\n    await this.cryptoService.setKey(this.key);\n    await this.cryptoService.setKeyHash(this.localHashedPassword);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordLogInCredentials) {\n    const { email, masterPassword, captchaToken, twoFactor } = credentials;\n\n    this.key = await this.authService.makePreloginKey(masterPassword, email);\n\n    // Hash the password early (before authentication) so we don't persist it in memory in plaintext\n    this.localHashedPassword = await this.cryptoService.hashPassword(\n      masterPassword,\n      this.key,\n      HashPurpose.LocalAuthorization\n    );\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, this.key);\n\n    this.tokenRequest = new PasswordTokenRequest(\n      email,\n      hashedPassword,\n      captchaToken,\n      await this.buildTwoFactor(twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { AuthService } from \"../abstractions/auth.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/two-factor.service\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport { PasswordlessLogInCredentials } from \"../models/domain/log-in-credentials\";\nimport { PasswordTokenRequest } from \"../models/request/identity-token/password-token.request\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\n\nimport { LogInStrategy } from \"./login.strategy\";\n\nexport class PasswordlessLogInStrategy extends LogInStrategy {\n  get email() {\n    return this.tokenRequest.email;\n  }\n\n  get accessCode() {\n    return this.passwordlessCredentials.accessCode;\n  }\n\n  get authRequestId() {\n    return this.passwordlessCredentials.authRequestId;\n  }\n\n  tokenRequest: PasswordTokenRequest;\n  private passwordlessCredentials: PasswordlessLogInCredentials;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private authService: AuthService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey() {\n    await this.cryptoService.setKey(this.passwordlessCredentials.decKey);\n    await this.cryptoService.setKeyHash(this.passwordlessCredentials.localPasswordHash);\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    this.tokenRequest.captchaResponse = captchaResponse ?? this.captchaBypassToken;\n    return super.logInTwoFactor(twoFactor);\n  }\n\n  async logIn(credentials: PasswordlessLogInCredentials) {\n    this.passwordlessCredentials = credentials;\n\n    this.tokenRequest = new PasswordTokenRequest(\n      credentials.email,\n      credentials.accessCode,\n      null,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    this.tokenRequest.setPasswordlessAccessCode(credentials.authRequestId);\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"./device.request\";\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class SsoTokenRequest extends TokenRequest {\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUri: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken(clientId: string) {\n    const obj = super.toIdentityToken(clientId);\n\n    obj.grant_type = \"authorization_code\";\n    obj.code = this.code;\n    obj.code_verifier = this.codeVerifier;\n    obj.redirect_uri = this.redirectUri;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { KeyConnectorService } from \"../abstractions/key-connector.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/two-factor.service\";\nimport { SsoLogInCredentials } from \"../models/domain/log-in-credentials\";\nimport { SsoTokenRequest } from \"../models/request/identity-token/sso-token.request\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./login.strategy\";\n\nexport class SsoLogInStrategy extends LogInStrategy {\n  tokenRequest: SsoTokenRequest;\n  orgId: string;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey(tokenResponse: IdentityTokenResponse) {\n    const newSsoUser = tokenResponse.key == null;\n\n    if (tokenResponse.keyConnectorUrl != null) {\n      if (!newSsoUser) {\n        await this.keyConnectorService.getAndSetKey(tokenResponse.keyConnectorUrl);\n      } else {\n        await this.keyConnectorService.convertNewSsoUserToKeyConnector(tokenResponse, this.orgId);\n      }\n    }\n  }\n\n  async logIn(credentials: SsoLogInCredentials) {\n    this.orgId = credentials.orgId;\n    this.tokenRequest = new SsoTokenRequest(\n      credentials.code,\n      credentials.codeVerifier,\n      credentials.redirectUrl,\n      await this.buildTwoFactor(credentials.twoFactor),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n}\n","import { DeviceRequest } from \"./device.request\";\nimport { TokenTwoFactorRequest } from \"./token-two-factor.request\";\nimport { TokenRequest } from \"./token.request\";\n\nexport class UserApiTokenRequest extends TokenRequest {\n  constructor(\n    public clientId: string,\n    public clientSecret: string,\n    protected twoFactor: TokenTwoFactorRequest,\n    device?: DeviceRequest\n  ) {\n    super(twoFactor, device);\n  }\n\n  toIdentityToken() {\n    const obj = super.toIdentityToken(this.clientId);\n\n    obj.scope = this.clientId.startsWith(\"organization\") ? \"api.organization\" : \"api\";\n    obj.grant_type = \"client_credentials\";\n    obj.client_secret = this.clientSecret;\n\n    return obj;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { TokenService } from \"../../auth/abstractions/token.service\";\nimport { TwoFactorService } from \"../../auth/abstractions/two-factor.service\";\nimport { KeyConnectorService } from \"../abstractions/key-connector.service\";\nimport { UserApiLogInCredentials } from \"../models/domain/log-in-credentials\";\nimport { UserApiTokenRequest } from \"../models/request/identity-token/user-api-token.request\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nimport { LogInStrategy } from \"./login.strategy\";\n\nexport class UserApiLogInStrategy extends LogInStrategy {\n  tokenRequest: UserApiTokenRequest;\n\n  constructor(\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    tokenService: TokenService,\n    appIdService: AppIdService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    logService: LogService,\n    stateService: StateService,\n    twoFactorService: TwoFactorService,\n    private environmentService: EnvironmentService,\n    private keyConnectorService: KeyConnectorService\n  ) {\n    super(\n      cryptoService,\n      apiService,\n      tokenService,\n      appIdService,\n      platformUtilsService,\n      messagingService,\n      logService,\n      stateService,\n      twoFactorService\n    );\n  }\n\n  async setUserKey(tokenResponse: IdentityTokenResponse) {\n    if (tokenResponse.apiUseKeyConnector) {\n      const keyConnectorUrl = this.environmentService.getKeyConnectorUrl();\n      await this.keyConnectorService.getAndSetKey(keyConnectorUrl);\n    }\n  }\n\n  async logIn(credentials: UserApiLogInCredentials) {\n    this.tokenRequest = new UserApiTokenRequest(\n      credentials.clientId,\n      credentials.clientSecret,\n      await this.buildTwoFactor(),\n      await this.buildDeviceRequest()\n    );\n\n    return this.startLogIn();\n  }\n\n  protected async saveAccountInformation(tokenResponse: IdentityTokenResponse) {\n    await super.saveAccountInformation(tokenResponse);\n    await this.stateService.setApiKeyClientId(this.tokenRequest.clientId);\n    await this.stateService.setApiKeyClientSecret(this.tokenRequest.clientSecret);\n  }\n}\n","export class PasswordlessAuthRequest {\n  constructor(\n    readonly key: string,\n    readonly masterPasswordHash: string,\n    readonly deviceIdentifier: string,\n    readonly requestApproved: boolean\n  ) {}\n}\n","export class KeyConnectorUserKeyRequest {\n  key: string;\n\n  constructor(key: string) {\n    this.key = key;\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../../../models/request/keys.request\";\nimport { KdfConfig } from \"../domain/kdf-config\";\n\nexport class SetKeyConnectorKeyRequest {\n  key: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n  orgIdentifier: string;\n\n  constructor(\n    key: string,\n    kdf: KdfType,\n    kdfConfig: KdfConfig,\n    orgIdentifier: string,\n    keys: KeysRequest\n  ) {\n    this.key = key;\n    this.kdf = kdf;\n    this.kdfIterations = kdfConfig.iterations;\n    this.kdfMemory = kdfConfig.memory;\n    this.kdfParallelism = kdfConfig.parallelism;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { StateService } from \"../../abstractions/state.service\";\nimport { LoginService as LoginServiceAbstraction } from \"../abstractions/login.service\";\n\nexport class LoginService implements LoginServiceAbstraction {\n  private _email: string;\n  private _rememberEmail: boolean;\n\n  constructor(private stateService: StateService) {}\n\n  getEmail() {\n    return this._email;\n  }\n\n  getRememberEmail() {\n    return this._rememberEmail;\n  }\n\n  setEmail(value: string) {\n    this._email = value;\n  }\n\n  setRememberEmail(value: boolean) {\n    this._rememberEmail = value;\n  }\n\n  clearValues() {\n    this._email = null;\n    this._rememberEmail = null;\n  }\n\n  async saveEmailSettings() {\n    await this.stateService.setRememberedEmail(this._rememberEmail ? this._email : null);\n    this.clearValues();\n  }\n}\n","import { StateService } from \"../../abstractions/state.service\";\nimport { Utils } from \"../../misc/utils\";\nimport { TokenService as TokenServiceAbstraction } from \"../abstractions/token.service\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class TokenService implements TokenServiceAbstraction {\n  static decodeToken(token: string): Promise<any> {\n    if (token == null) {\n      throw new Error(\"Token not provided.\");\n    }\n\n    const parts = token.split(\".\");\n    if (parts.length !== 3) {\n      throw new Error(\"JWT must have 3 parts\");\n    }\n\n    const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n    if (decoded == null) {\n      throw new Error(\"Cannot decode the token\");\n    }\n\n    const decodedToken = JSON.parse(decoded);\n    return decodedToken;\n  }\n\n  constructor(private stateService: StateService) {}\n\n  async setTokens(\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ): Promise<any> {\n    await this.setToken(accessToken);\n    await this.setRefreshToken(refreshToken);\n    if (clientIdClientSecret != null) {\n      await this.setClientId(clientIdClientSecret[0]);\n      await this.setClientSecret(clientIdClientSecret[1]);\n    }\n  }\n\n  async setClientId(clientId: string): Promise<any> {\n    return await this.stateService.setApiKeyClientId(clientId);\n  }\n\n  async getClientId(): Promise<string> {\n    return await this.stateService.getApiKeyClientId();\n  }\n\n  async setClientSecret(clientSecret: string): Promise<any> {\n    return await this.stateService.setApiKeyClientSecret(clientSecret);\n  }\n\n  async getClientSecret(): Promise<string> {\n    return await this.stateService.getApiKeyClientSecret();\n  }\n\n  async setToken(token: string): Promise<void> {\n    await this.stateService.setAccessToken(token);\n  }\n\n  async getToken(): Promise<string> {\n    return await this.stateService.getAccessToken();\n  }\n\n  async setRefreshToken(refreshToken: string): Promise<any> {\n    return await this.stateService.setRefreshToken(refreshToken);\n  }\n\n  async getRefreshToken(): Promise<string> {\n    return await this.stateService.getRefreshToken();\n  }\n\n  async setTwoFactorToken(tokenResponse: IdentityTokenResponse): Promise<any> {\n    return await this.stateService.setTwoFactorToken(tokenResponse.twoFactorToken);\n  }\n\n  async getTwoFactorToken(): Promise<string> {\n    return await this.stateService.getTwoFactorToken();\n  }\n\n  async clearTwoFactorToken(): Promise<any> {\n    return await this.stateService.setTwoFactorToken(null);\n  }\n\n  async clearToken(userId?: string): Promise<any> {\n    await this.stateService.setAccessToken(null, { userId: userId });\n    await this.stateService.setRefreshToken(null, { userId: userId });\n    await this.stateService.setApiKeyClientId(null, { userId: userId });\n    await this.stateService.setApiKeyClientSecret(null, { userId: userId });\n  }\n\n  // jwthelper methods\n  // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n  async decodeToken(token?: string): Promise<any> {\n    token = token ?? (await this.stateService.getAccessToken());\n\n    if (token == null) {\n      throw new Error(\"Token not found.\");\n    }\n\n    return TokenService.decodeToken(token);\n  }\n\n  async getTokenExpirationDate(): Promise<Date> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.exp === \"undefined\") {\n      return null;\n    }\n\n    const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n    d.setUTCSeconds(decoded.exp);\n    return d;\n  }\n\n  async tokenSecondsRemaining(offsetSeconds = 0): Promise<number> {\n    const d = await this.getTokenExpirationDate();\n    if (d == null) {\n      return 0;\n    }\n\n    const msRemaining = d.valueOf() - (new Date().valueOf() + offsetSeconds * 1000);\n    return Math.round(msRemaining / 1000);\n  }\n\n  async tokenNeedsRefresh(minutes = 5): Promise<boolean> {\n    const sRemaining = await this.tokenSecondsRemaining();\n    return sRemaining < 60 * minutes;\n  }\n\n  async getUserId(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.sub === \"undefined\") {\n      throw new Error(\"No user id found\");\n    }\n\n    return decoded.sub as string;\n  }\n\n  async getEmail(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email === \"undefined\") {\n      throw new Error(\"No email found\");\n    }\n\n    return decoded.email as string;\n  }\n\n  async getEmailVerified(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.email_verified === \"undefined\") {\n      throw new Error(\"No email verification found\");\n    }\n\n    return decoded.email_verified as boolean;\n  }\n\n  async getName(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.name === \"undefined\") {\n      return null;\n    }\n\n    return decoded.name as string;\n  }\n\n  async getIssuer(): Promise<string> {\n    const decoded = await this.decodeToken();\n    if (typeof decoded.iss === \"undefined\") {\n      throw new Error(\"No issuer found\");\n    }\n\n    return decoded.iss as string;\n  }\n\n  async getIsExternal(): Promise<boolean> {\n    const decoded = await this.decodeToken();\n\n    return Array.isArray(decoded.amr) && decoded.amr.includes(\"external\");\n  }\n}\n","export class VerifyOTPRequest {\n  OTP: string;\n\n  constructor(OTP: string) {\n    this.OTP = OTP;\n  }\n}\n","import { Account } from \"../models/domain/account\";\n\nexport class AccountFactory<T extends Account = Account> {\n  private accountConstructor: new (init: Partial<T>) => T;\n\n  constructor(accountConstructor: new (init: Partial<T>) => T) {\n    this.accountConstructor = accountConstructor;\n  }\n\n  create(args: Partial<T>) {\n    return new this.accountConstructor(args);\n  }\n}\n","import { GlobalState } from \"../models/domain/global-state\";\n\nexport class GlobalStateFactory<T extends GlobalState = GlobalState> {\n  private globalStateConstructor: new (init: Partial<T>) => T;\n\n  constructor(globalStateConstructor: new (init: Partial<T>) => T) {\n    this.globalStateConstructor = globalStateConstructor;\n  }\n\n  create(args?: Partial<T>) {\n    return new this.globalStateConstructor(args);\n  }\n}\n","import { Account } from \"../models/domain/account\";\nimport { GlobalState } from \"../models/domain/global-state\";\n\nimport { AccountFactory } from \"./accountFactory\";\nimport { GlobalStateFactory } from \"./globalStateFactory\";\n\nexport class StateFactory<\n  TGlobal extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  private globalStateFactory: GlobalStateFactory<TGlobal>;\n  private accountFactory: AccountFactory<TAccount>;\n\n  constructor(\n    globalStateConstructor: new (init: Partial<TGlobal>) => TGlobal,\n    accountConstructor: new (init: Partial<TAccount>) => TAccount\n  ) {\n    this.globalStateFactory = new GlobalStateFactory(globalStateConstructor);\n    this.accountFactory = new AccountFactory(accountConstructor);\n  }\n\n  createGlobal(args: Partial<TGlobal>): TGlobal {\n    return this.globalStateFactory.create(args);\n  }\n\n  createAccount(args: Partial<TAccount>): TAccount {\n    return this.accountFactory.create(args);\n  }\n}\n","export enum StateVersion {\n  One = 1, // Original flat key/value pair store\n  Two = 2, // Move to a typed State object\n  Three = 3, // Fix migration of users' premium status\n  Four = 4, // Fix 'Never Lock' option by removing stale data\n  Five = 5, // Migrate to new storage of encrypted organization keys\n  Six = 6, // Delete account.keys.legacyEtmKey property\n  Latest = Six,\n}\n","export class WindowState {\n  width?: number;\n  height?: number;\n  isMaximized?: boolean;\n  // TODO: displayBounds is an Electron.Rectangle.\n  // We need to establish some kind of client-specific global state, similiar to the way we already extend a base Account.\n  displayBounds: any;\n  x?: number;\n  y?: number;\n  zoomFactor?: number;\n}\n","import { EnvironmentUrls } from \"../../auth/models/domain/environment-urls\";\nimport { StateVersion } from \"../../enums/stateVersion\";\nimport { ThemeType } from \"../../enums/themeType\";\n\nimport { WindowState } from \"./window-state\";\n\nexport class GlobalState {\n  enableAlwaysOnTop?: boolean;\n  installedVersion?: string;\n  locale?: string;\n  organizationInvitation?: any;\n  ssoCodeVerifier?: string;\n  ssoOrganizationIdentifier?: string;\n  ssoState?: string;\n  rememberedEmail?: string;\n  theme?: ThemeType = ThemeType.System;\n  window?: WindowState = new WindowState();\n  twoFactorToken?: string;\n  disableFavicon?: boolean;\n  biometricAwaitingAcceptance?: boolean;\n  biometricFingerprintValidated?: boolean;\n  vaultTimeout?: number;\n  vaultTimeoutAction?: string;\n  loginRedirect?: any;\n  mainWindowSize?: number;\n  enableBiometrics?: boolean;\n  biometricText?: string;\n  noAutoPromptBiometrics?: boolean;\n  noAutoPromptBiometricsText?: string;\n  stateVersion: StateVersion = StateVersion.One;\n  environmentUrls: EnvironmentUrls = new EnvironmentUrls();\n  enableTray?: boolean;\n  enableMinimizeToTray?: boolean;\n  enableCloseToTray?: boolean;\n  enableStartToTray?: boolean;\n  openAtLogin?: boolean;\n  alwaysShowDock?: boolean;\n  enableBrowserIntegration?: boolean;\n  enableBrowserIntegrationFingerprint?: boolean;\n  enableDuckDuckGoBrowserIntegration?: boolean;\n}\n","export class UpdateAvatarRequest {\n  avatarColor: string;\n\n  constructor(avatarColor: string) {\n    this.avatarColor = avatarColor;\n  }\n}\n","export enum NotificationType {\n  SyncCipherUpdate = 0,\n  SyncCipherCreate = 1,\n  SyncLoginDelete = 2,\n  SyncFolderDelete = 3,\n  SyncCiphers = 4,\n\n  SyncVault = 5,\n  SyncOrgKeys = 6,\n  SyncFolderCreate = 7,\n  SyncFolderUpdate = 8,\n  SyncCipherDelete = 9,\n  SyncSettings = 10,\n\n  LogOut = 11,\n\n  SyncSendCreate = 12,\n  SyncSendUpdate = 13,\n  SyncSendDelete = 14,\n\n  AuthRequest = 15,\n  AuthRequestResponse = 16,\n}\n","import { NotificationType } from \"../../enums/notificationType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class NotificationResponse extends BaseResponse {\n  contextId: string;\n  type: NotificationType;\n  payload: any;\n\n  constructor(response: any) {\n    super(response);\n    this.contextId = this.getResponseProperty(\"ContextId\");\n    this.type = this.getResponseProperty(\"Type\");\n\n    const payload = this.getResponseProperty(\"Payload\");\n    switch (this.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncCipherUpdate:\n      case NotificationType.SyncLoginDelete:\n        this.payload = new SyncCipherNotification(payload);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderDelete:\n      case NotificationType.SyncFolderUpdate:\n        this.payload = new SyncFolderNotification(payload);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncOrgKeys:\n      case NotificationType.SyncSettings:\n      case NotificationType.LogOut:\n        this.payload = new UserNotification(payload);\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n      case NotificationType.SyncSendDelete:\n        this.payload = new SyncSendNotification(payload);\n        break;\n      case NotificationType.AuthRequest:\n      case NotificationType.AuthRequestResponse:\n        this.payload = new AuthRequestPushNotification(payload);\n        break;\n      default:\n        break;\n    }\n  }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  organizationId: string;\n  collectionIds: string[];\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class UserNotification extends BaseResponse {\n  userId: string;\n  date: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.date = new Date(this.getResponseProperty(\"Date\"));\n  }\n}\n\nexport class SyncSendNotification extends BaseResponse {\n  id: string;\n  userId: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n\nexport class AuthRequestPushNotification extends BaseResponse {\n  id: string;\n  userId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  HttpTransportType,\n  HubConnection,\n  HubConnectionBuilder,\n  IHubProtocol,\n} from \"@microsoft/signalr\";\nimport { MessagePackHubProtocol } from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"../abstractions/anonymousHub.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { AuthService } from \"../auth/abstractions/auth.service\";\n\nimport {\n  AuthRequestPushNotification,\n  NotificationResponse,\n} from \"./../models/response/notification.response\";\n\n@Injectable()\nexport class AnonymousHubService implements AnonymousHubServiceAbstraction {\n  private anonHubConnection: HubConnection;\n  private url: string;\n\n  constructor(\n    private environmentService: EnvironmentService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async createHubConnection(token: string) {\n    this.url = this.environmentService.getNotificationsUrl();\n\n    this.anonHubConnection = new HubConnectionBuilder()\n      .withUrl(this.url + \"/anonymous-hub?Token=\" + token, {\n        skipNegotiation: true,\n        transport: HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new MessagePackHubProtocol() as IHubProtocol)\n      .build();\n\n    this.anonHubConnection.start().catch((error) => this.logService.error(error));\n\n    this.anonHubConnection.on(\"AuthRequestResponseRecieved\", (data: any) => {\n      this.ProcessNotification(new NotificationResponse(data));\n    });\n  }\n\n  stopHubConnection() {\n    if (this.anonHubConnection) {\n      this.anonHubConnection.stop();\n    }\n  }\n\n  private async ProcessNotification(notification: NotificationResponse) {\n    await this.authService.authResponsePushNotifiction(\n      notification.payload as AuthRequestPushNotification\n    );\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class ApiKeyResponse extends BaseResponse {\n  apiKey: string;\n  revisionDate: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.apiKey = this.getResponseProperty(\"ApiKey\");\n    this.revisionDate = new Date(this.getResponseProperty(\"RevisionDate\"));\n  }\n}\n","import { DeviceType } from \"../../../enums/deviceType\";\nimport { BaseResponse } from \"../../../models/response/base.response\";\n\nconst RequestTimeOut = 60000 * 15; //15 Minutes\n\nexport class AuthRequestResponse extends BaseResponse {\n  id: string;\n  publicKey: string;\n  requestDeviceType: DeviceType;\n  requestIpAddress: string;\n  key: string;\n  masterPasswordHash: string;\n  creationDate: string;\n  requestApproved?: boolean;\n  responseDate?: string;\n  isAnswered: boolean;\n  isExpired: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n    this.requestDeviceType = this.getResponseProperty(\"RequestDeviceType\");\n    this.requestIpAddress = this.getResponseProperty(\"RequestIpAddress\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.masterPasswordHash = this.getResponseProperty(\"MasterPasswordHash\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.requestApproved = this.getResponseProperty(\"RequestApproved\");\n    this.responseDate = this.getResponseProperty(\"ResponseDate\");\n\n    const requestDate = new Date(this.creationDate);\n    const requestDateUTC = Date.UTC(\n      requestDate.getUTCFullYear(),\n      requestDate.getUTCMonth(),\n      requestDate.getDate(),\n      requestDate.getUTCHours(),\n      requestDate.getUTCMinutes(),\n      requestDate.getUTCSeconds(),\n      requestDate.getUTCMilliseconds()\n    );\n\n    const dateNow = new Date(Date.now());\n    const dateNowUTC = Date.UTC(\n      dateNow.getUTCFullYear(),\n      dateNow.getUTCMonth(),\n      dateNow.getDate(),\n      dateNow.getUTCHours(),\n      dateNow.getUTCMinutes(),\n      dateNow.getUTCSeconds(),\n      dateNow.getUTCMilliseconds()\n    );\n\n    this.isExpired = dateNowUTC - requestDateUTC >= RequestTimeOut;\n    this.isAnswered = this.requestApproved != null && this.responseDate != null;\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class DeviceVerificationResponse extends BaseResponse {\n  isDeviceVerificationSectionEnabled: boolean;\n  unknownDeviceVerificationEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.isDeviceVerificationSectionEnabled = this.getResponseProperty(\n      \"IsDeviceVerificationSectionEnabled\"\n    );\n    this.unknownDeviceVerificationEnabled = this.getResponseProperty(\n      \"UnknownDeviceVerificationEnabled\"\n    );\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class KeyConnectorUserKeyResponse extends BaseResponse {\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class PreloginResponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.kdfMemory = this.getResponseProperty(\"KdfMemory\");\n    this.kdfParallelism = this.getResponseProperty(\"KdfParallelism\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nimport { ICaptchaProtectedResponse } from \"./captcha-protected.response\";\n\nexport class RegisterResponse extends BaseResponse implements ICaptchaProtectedResponse {\n  captchaBypassToken: string;\n\n  constructor(response: any) {\n    super(response);\n    this.captchaBypassToken = this.getResponseProperty(\"CaptchaBypassToken\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class SsoPreValidateResponse extends BaseResponse {\n  token: string;\n\n  constructor(response: any) {\n    super(response);\n    this.token = this.getResponseProperty(\"Token\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n  enabled: boolean;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n  enabled: boolean;\n  host: string;\n  secretKey: string;\n  integrationKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.host = this.getResponseProperty(\"Host\");\n    this.secretKey = this.getResponseProperty(\"SecretKey\");\n    this.integrationKey = this.getResponseProperty(\"IntegrationKey\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n  enabled: boolean;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\nimport { TwoFactorProviderType } from \"../../enums/two-factor-provider-type\";\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n  enabled: boolean;\n  type: TwoFactorProviderType;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n  code: string;\n\n  constructor(response: any) {\n    super(response);\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { Utils } from \"../../../misc/utils\";\nimport { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class TwoFactorWebAuthnResponse extends BaseResponse {\n  enabled: boolean;\n  keys: KeyResponse[];\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const keys = this.getResponseProperty(\"Keys\");\n    this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n  }\n}\n\nexport class KeyResponse extends BaseResponse {\n  name: string;\n  id: number;\n  migrated: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.id = this.getResponseProperty(\"Id\");\n    this.migrated = this.getResponseProperty(\"Migrated\");\n  }\n}\n\nexport class ChallengeResponse extends BaseResponse implements PublicKeyCredentialCreationOptions {\n  attestation?: AttestationConveyancePreference;\n  authenticatorSelection?: AuthenticatorSelectionCriteria;\n  challenge: BufferSource;\n  excludeCredentials?: PublicKeyCredentialDescriptor[];\n  extensions?: AuthenticationExtensionsClientInputs;\n  pubKeyCredParams: PublicKeyCredentialParameters[];\n  rp: PublicKeyCredentialRpEntity;\n  timeout?: number;\n  user: PublicKeyCredentialUserEntity;\n\n  constructor(response: any) {\n    super(response);\n    this.attestation = this.getResponseProperty(\"attestation\");\n    this.authenticatorSelection = this.getResponseProperty(\"authenticatorSelection\");\n    this.challenge = Utils.fromUrlB64ToArray(this.getResponseProperty(\"challenge\"));\n    this.excludeCredentials = this.getResponseProperty(\"excludeCredentials\").map((c: any) => {\n      c.id = Utils.fromUrlB64ToArray(c.id).buffer;\n      return c;\n    });\n    this.extensions = this.getResponseProperty(\"extensions\");\n    this.pubKeyCredParams = this.getResponseProperty(\"pubKeyCredParams\");\n    this.rp = this.getResponseProperty(\"rp\");\n    this.timeout = this.getResponseProperty(\"timeout\");\n\n    const user = this.getResponseProperty(\"user\");\n    user.id = Utils.fromUrlB64ToArray(user.id);\n\n    this.user = user;\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n  enabled: boolean;\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.key1 = this.getResponseProperty(\"Key1\");\n    this.key2 = this.getResponseProperty(\"Key2\");\n    this.key3 = this.getResponseProperty(\"Key3\");\n    this.key4 = this.getResponseProperty(\"Key4\");\n    this.key5 = this.getResponseProperty(\"Key5\");\n    this.nfc = this.getResponseProperty(\"Nfc\");\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { TransactionType } from \"../../enums/transactionType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class BillingResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n  type: PaymentMethodType;\n  cardBrand: string;\n  description: string;\n  needsVerification: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.cardBrand = this.getResponseProperty(\"CardBrand\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.needsVerification = this.getResponseProperty(\"NeedsVerification\");\n  }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n  url: string;\n  pdfUrl: string;\n  number: string;\n  paid: boolean;\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.url = this.getResponseProperty(\"Url\");\n    this.pdfUrl = this.getResponseProperty(\"PdfUrl\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.paid = this.getResponseProperty(\"Paid\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n  createdDate: string;\n  amount: number;\n  refunded: boolean;\n  partiallyRefunded: boolean;\n  refundedAmount: number;\n  type: TransactionType;\n  paymentMethodType: PaymentMethodType;\n  details: string;\n\n  constructor(response: any) {\n    super(response);\n    this.createdDate = this.getResponseProperty(\"CreatedDate\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.refunded = this.getResponseProperty(\"Refunded\");\n    this.partiallyRefunded = this.getResponseProperty(\"PartiallyRefunded\");\n    this.refundedAmount = this.getResponseProperty(\"RefundedAmount\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.paymentMethodType = this.getResponseProperty(\"PaymentMethodType\");\n    this.details = this.getResponseProperty(\"Details\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingInvoiceResponse, BillingTransactionResponse } from \"./billing.response\";\n\nexport class BillingHistoryResponse extends BaseResponse {\n  invoices: BillingInvoiceResponse[] = [];\n  transactions: BillingTransactionResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const transactions = this.getResponseProperty(\"Transactions\");\n    const invoices = this.getResponseProperty(\"Invoices\");\n    if (transactions != null) {\n      this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n    }\n    if (invoices != null) {\n      this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n    }\n  }\n\n  get hasNoHistory() {\n    return this.invoices.length == 0 && this.transactions.length == 0;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { BillingSourceResponse } from \"./billing.response\";\n\nexport class BillingPaymentResponse extends BaseResponse {\n  balance: number;\n  paymentSource: BillingSourceResponse;\n\n  constructor(response: any) {\n    super(response);\n    this.balance = this.getResponseProperty(\"Balance\");\n    const paymentSource = this.getResponseProperty(\"PaymentSource\");\n    this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class BreachAccountResponse extends BaseResponse {\n  addedDate: string;\n  breachDate: string;\n  dataClasses: string[];\n  description: string;\n  domain: string;\n  isActive: boolean;\n  isVerified: boolean;\n  logoPath: string;\n  modifiedDate: string;\n  name: string;\n  pwnCount: number;\n  title: string;\n\n  constructor(response: any) {\n    super(response);\n    this.addedDate = this.getResponseProperty(\"AddedDate\");\n    this.breachDate = this.getResponseProperty(\"BreachDate\");\n    this.dataClasses = this.getResponseProperty(\"DataClasses\");\n    this.description = this.getResponseProperty(\"Description\");\n    this.domain = this.getResponseProperty(\"Domain\");\n    this.isActive = this.getResponseProperty(\"IsActive\");\n    this.isVerified = this.getResponseProperty(\"IsVerified\");\n    this.logoPath = this.getResponseProperty(\"LogoPath\");\n    this.modifiedDate = this.getResponseProperty(\"ModifiedDate\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.pwnCount = this.getResponseProperty(\"PwnCount\");\n    this.title = this.getResponseProperty(\"Title\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { SelectionReadOnlyResponse } from \"./selection-read-only.response\";\n\nexport class CollectionResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n  readOnly: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.readOnly = this.getResponseProperty(\"ReadOnly\") || false;\n  }\n}\n\nexport class CollectionAccessDetailsResponse extends CollectionResponse {\n  groups: SelectionReadOnlyResponse[] = [];\n  users: SelectionReadOnlyResponse[] = [];\n\n  /**\n   * Flag indicating the user has been explicitly assigned to this Collection\n   */\n  assigned: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.assigned = this.getResponseProperty(\"Assigned\") || false;\n\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n\n    const users = this.getResponseProperty(\"Users\");\n    if (users != null) {\n      this.users = users.map((g: any) => new SelectionReadOnlyResponse(g));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class GlobalDomainResponse extends BaseResponse {\n  type: number;\n  domains: string[];\n  excluded: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.domains = this.getResponseProperty(\"Domains\");\n    this.excluded = this.getResponseProperty(\"Excluded\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { GlobalDomainResponse } from \"./global-domain.response\";\n\nexport class DomainsResponse extends BaseResponse {\n  equivalentDomains: string[][];\n  globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.equivalentDomains = this.getResponseProperty(\"EquivalentDomains\");\n    const globalEquivalentDomains = this.getResponseProperty(\"GlobalEquivalentDomains\");\n    if (globalEquivalentDomains != null) {\n      this.globalEquivalentDomains = globalEquivalentDomains.map(\n        (d: any) => new GlobalDomainResponse(d)\n      );\n    } else {\n      this.globalEquivalentDomains = [];\n    }\n  }\n}\n","import { DeviceType } from \"../../enums/deviceType\";\nimport { EventSystemUser } from \"../../enums/event-system-user\";\nimport { EventType } from \"../../enums/eventType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class EventResponse extends BaseResponse {\n  type: EventType;\n  userId: string;\n  organizationId: string;\n  providerId: string;\n  cipherId: string;\n  collectionId: string;\n  groupId: string;\n  policyId: string;\n  organizationUserId: string;\n  providerUserId: string;\n  providerOrganizationId: string;\n  actingUserId: string;\n  date: string;\n  deviceType: DeviceType;\n  ipAddress: string;\n  installationId: string;\n  systemUser: EventSystemUser;\n  domainName: string;\n  secretId: string;\n  serviceAccountId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.cipherId = this.getResponseProperty(\"CipherId\");\n    this.collectionId = this.getResponseProperty(\"CollectionId\");\n    this.groupId = this.getResponseProperty(\"GroupId\");\n    this.policyId = this.getResponseProperty(\"PolicyId\");\n    this.organizationUserId = this.getResponseProperty(\"OrganizationUserId\");\n    this.providerUserId = this.getResponseProperty(\"ProviderUserId\");\n    this.providerOrganizationId = this.getResponseProperty(\"ProviderOrganizationId\");\n    this.actingUserId = this.getResponseProperty(\"ActingUserId\");\n    this.date = this.getResponseProperty(\"Date\");\n    this.deviceType = this.getResponseProperty(\"DeviceType\");\n    this.ipAddress = this.getResponseProperty(\"IpAddress\");\n    this.installationId = this.getResponseProperty(\"InstallationId\");\n    this.systemUser = this.getResponseProperty(\"SystemUser\");\n    this.domainName = this.getResponseProperty(\"DomainName\");\n    this.secretId = this.getResponseProperty(\"SecretId\");\n    this.serviceAccountId = this.getResponseProperty(\"ServiceAccountId\");\n  }\n}\n","import { OrganizationConnectionType } from \"../../enums/organizationConnectionType\";\nimport { BillingSyncConfigApi } from \"../api/billing-sync-config.api\";\nimport { ScimConfigApi } from \"../api/scim-config.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\n/**API response config types for OrganizationConnectionResponse */\nexport type OrganizationConnectionConfigApis = BillingSyncConfigApi | ScimConfigApi;\n\nexport class OrganizationConnectionResponse<\n  TConfig extends OrganizationConnectionConfigApis\n> extends BaseResponse {\n  id: string;\n  type: OrganizationConnectionType;\n  organizationId: string;\n  enabled: boolean;\n  config: TConfig;\n\n  constructor(response: any, configType: { new (response: any): TConfig }) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    const rawConfig = this.getResponseProperty(\"Config\");\n    this.config = rawConfig == null ? null : new configType(rawConfig);\n  }\n}\n","import { CipherResponse } from \"../../vault/models/response/cipher.response\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { CollectionResponse } from \"./collection.response\";\n\nexport class OrganizationExportResponse extends BaseResponse {\n  collections: CollectionResponse[];\n  ciphers: CipherResponse[];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionResponse(c));\n    }\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationSponsorshipSyncStatusResponse extends BaseResponse {\n  lastSyncDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    const lastSyncDate = this.getResponseProperty(\"LastSyncDate\");\n    if (lastSyncDate) {\n      this.lastSyncDate = new Date(lastSyncDate);\n    }\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  useActivateAutofillPolicy: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  key: string;\n  hasPublicAndPrivateKeys: boolean;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  providerId: string;\n  providerName: string;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n  accessSecretsManager: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.usePolicies = this.getResponseProperty(\"UsePolicies\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useSso = this.getResponseProperty(\"UseSso\");\n    this.useKeyConnector = this.getResponseProperty(\"UseKeyConnector\") ?? false;\n    this.useScim = this.getResponseProperty(\"UseScim\") ?? false;\n    this.useCustomPermissions = this.getResponseProperty(\"UseCustomPermissions\") ?? false;\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.useSecretsManager = this.getResponseProperty(\"UseSecretsManager\");\n    this.useActivateAutofillPolicy = this.getResponseProperty(\"UseActivateAutofillPolicy\");\n    this.selfHost = this.getResponseProperty(\"SelfHost\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.ssoBound = this.getResponseProperty(\"SsoBound\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.providerName = this.getResponseProperty(\"ProviderName\");\n    this.familySponsorshipFriendlyName = this.getResponseProperty(\"FamilySponsorshipFriendlyName\");\n    this.familySponsorshipAvailable = this.getResponseProperty(\"FamilySponsorshipAvailable\");\n    this.planProductType = this.getResponseProperty(\"PlanProductType\");\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\") ?? false;\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n    const familySponsorshipLastSyncDateString = this.getResponseProperty(\n      \"FamilySponsorshipLastSyncDate\"\n    );\n    if (familySponsorshipLastSyncDateString) {\n      this.familySponsorshipLastSyncDate = new Date(familySponsorshipLastSyncDateString);\n    }\n    const familySponsorshipValidUntilString = this.getResponseProperty(\n      \"FamilySponsorshipValidUntil\"\n    );\n    if (familySponsorshipValidUntilString) {\n      this.familySponsorshipValidUntil = new Date(familySponsorshipValidUntilString);\n    }\n    this.familySponsorshipToDelete = this.getResponseProperty(\"FamilySponsorshipToDelete\");\n    this.accessSecretsManager = this.getResponseProperty(\"AccessSecretsManager\");\n  }\n}\n","import { ProfileOrganizationResponse } from \"./profile-organization.response\";\n\nexport class ProfileProviderOrganizationResponse extends ProfileOrganizationResponse {\n  constructor(response: any) {\n    super(response);\n    this.keyConnectorEnabled = false;\n  }\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ProfileProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  key: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  permissions: PermissionsApi;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"permissions\"));\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileOrganizationResponse } from \"./profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"./profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"./profile-provider.response\";\n\nexport class ProfileResponse extends BaseResponse {\n  id: string;\n  name: string;\n  email: string;\n  emailVerified: boolean;\n  masterPasswordHint: string;\n  premiumPersonally: boolean;\n  premiumFromOrganization: boolean;\n  culture: string;\n  twoFactorEnabled: boolean;\n  key: string;\n  avatarColor: string;\n  privateKey: string;\n  securityStamp: string;\n  forcePasswordReset: boolean;\n  usesKeyConnector: boolean;\n  organizations: ProfileOrganizationResponse[] = [];\n  providers: ProfileProviderResponse[] = [];\n  providerOrganizations: ProfileProviderOrganizationResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.emailVerified = this.getResponseProperty(\"EmailVerified\");\n    this.masterPasswordHint = this.getResponseProperty(\"MasterPasswordHint\");\n    this.premiumPersonally = this.getResponseProperty(\"Premium\");\n    this.premiumFromOrganization = this.getResponseProperty(\"PremiumFromOrganization\");\n    this.culture = this.getResponseProperty(\"Culture\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.avatarColor = this.getResponseProperty(\"AvatarColor\");\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.securityStamp = this.getResponseProperty(\"SecurityStamp\");\n    this.forcePasswordReset = this.getResponseProperty(\"ForcePasswordReset\") ?? false;\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n\n    const organizations = this.getResponseProperty(\"Organizations\");\n    if (organizations != null) {\n      this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n    }\n    const providers = this.getResponseProperty(\"Providers\");\n    if (providers != null) {\n      this.providers = providers.map((o: any) => new ProfileProviderResponse(o));\n    }\n    const providerOrganizations = this.getResponseProperty(\"ProviderOrganizations\");\n    if (providerOrganizations != null) {\n      this.providerOrganizations = providerOrganizations.map(\n        (o: any) => new ProfileProviderOrganizationResponse(o)\n      );\n    }\n  }\n}\n","import { BaseResponse } from \"./base.response\";\nimport { ProfileResponse } from \"./profile.response\";\n\nexport class PaymentResponse extends BaseResponse {\n  userProfile: ProfileResponse;\n  paymentIntentClientSecret: string;\n  success: boolean;\n\n  constructor(response: any) {\n    super(response);\n    const userProfile = this.getResponseProperty(\"UserProfile\");\n    if (userProfile != null) {\n      this.userProfile = new ProfileResponse(userProfile);\n    }\n    this.paymentIntentClientSecret = this.getResponseProperty(\"PaymentIntentClientSecret\");\n    this.success = this.getResponseProperty(\"Success\");\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\nimport { ProductType } from \"../../enums/productType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PlanResponse extends BaseResponse {\n  type: PlanType;\n  product: ProductType;\n  name: string;\n  isAnnual: boolean;\n  nameLocalizationKey: string;\n  descriptionLocalizationKey: string;\n  canBeUsedByBusiness: boolean;\n  baseSeats: number;\n  baseStorageGb: number;\n  maxCollections: number;\n  maxUsers: number;\n\n  hasAdditionalSeatsOption: boolean;\n  maxAdditionalSeats: number;\n  hasAdditionalStorageOption: boolean;\n  maxAdditionalStorage: number;\n  hasPremiumAccessOption: boolean;\n  trialPeriodDays: number;\n\n  hasSelfHost: boolean;\n  hasPolicies: boolean;\n  hasGroups: boolean;\n  hasDirectory: boolean;\n  hasEvents: boolean;\n  hasTotp: boolean;\n  has2fa: boolean;\n  hasApi: boolean;\n  hasSso: boolean;\n  hasResetPassword: boolean;\n  usersGetPremium: boolean;\n\n  upgradeSortOrder: number;\n  displaySortOrder: number;\n  legacyYear: number;\n  disabled: boolean;\n\n  stripePlanId: string;\n  stripeSeatPlanId: string;\n  stripeStoragePlanId: string;\n  stripePremiumAccessPlanId: string;\n  basePrice: number;\n  seatPrice: number;\n  additionalStoragePricePerGb: number;\n  premiumAccessOptionPrice: number;\n\n  constructor(response: any) {\n    super(response);\n    this.type = this.getResponseProperty(\"Type\");\n    this.product = this.getResponseProperty(\"Product\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.isAnnual = this.getResponseProperty(\"IsAnnual\");\n    this.nameLocalizationKey = this.getResponseProperty(\"NameLocalizationKey\");\n    this.descriptionLocalizationKey = this.getResponseProperty(\"DescriptionLocalizationKey\");\n    this.canBeUsedByBusiness = this.getResponseProperty(\"CanBeUsedByBusiness\");\n    this.baseSeats = this.getResponseProperty(\"BaseSeats\");\n    this.baseStorageGb = this.getResponseProperty(\"BaseStorageGb\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxUsers = this.getResponseProperty(\"MaxUsers\");\n    this.hasAdditionalSeatsOption = this.getResponseProperty(\"HasAdditionalSeatsOption\");\n    this.maxAdditionalSeats = this.getResponseProperty(\"MaxAdditionalSeats\");\n    this.hasAdditionalStorageOption = this.getResponseProperty(\"HasAdditionalStorageOption\");\n    this.maxAdditionalStorage = this.getResponseProperty(\"MaxAdditionalStorage\");\n    this.hasPremiumAccessOption = this.getResponseProperty(\"HasPremiumAccessOption\");\n    this.trialPeriodDays = this.getResponseProperty(\"TrialPeriodDays\");\n    this.hasSelfHost = this.getResponseProperty(\"HasSelfHost\");\n    this.hasPolicies = this.getResponseProperty(\"HasPolicies\");\n    this.hasGroups = this.getResponseProperty(\"HasGroups\");\n    this.hasDirectory = this.getResponseProperty(\"HasDirectory\");\n    this.hasEvents = this.getResponseProperty(\"HasEvents\");\n    this.hasTotp = this.getResponseProperty(\"HasTotp\");\n    this.has2fa = this.getResponseProperty(\"Has2fa\");\n    this.hasApi = this.getResponseProperty(\"HasApi\");\n    this.hasSso = this.getResponseProperty(\"HasSso\");\n    this.hasResetPassword = this.getResponseProperty(\"HasResetPassword\");\n    this.usersGetPremium = this.getResponseProperty(\"UsersGetPremium\");\n    this.upgradeSortOrder = this.getResponseProperty(\"UpgradeSortOrder\");\n    this.displaySortOrder = this.getResponseProperty(\"SortOrder\");\n    this.legacyYear = this.getResponseProperty(\"LegacyYear\");\n    this.disabled = this.getResponseProperty(\"Disabled\");\n    this.stripePlanId = this.getResponseProperty(\"StripePlanId\");\n    this.stripeSeatPlanId = this.getResponseProperty(\"StripeSeatPlanId\");\n    this.stripeStoragePlanId = this.getResponseProperty(\"StripeStoragePlanId\");\n    this.stripePremiumAccessPlanId = this.getResponseProperty(\"StripePremiumAccessPlanId\");\n    this.basePrice = this.getResponseProperty(\"BasePrice\");\n    this.seatPrice = this.getResponseProperty(\"SeatPrice\");\n    this.additionalStoragePricePerGb = this.getResponseProperty(\"AdditionalStoragePricePerGb\");\n    this.premiumAccessOptionPrice = this.getResponseProperty(\"PremiumAccessOptionPrice\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderOrganizationResponse extends BaseResponse {\n  id: string;\n  providerId: string;\n  organizationId: string;\n  key: string;\n  settings: string;\n  creationDate: string;\n  revisionDate: string;\n  userCount: number;\n  seats?: number;\n  plan?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.providerId = this.getResponseProperty(\"ProviderId\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.settings = this.getResponseProperty(\"Settings\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.userCount = this.getResponseProperty(\"UserCount\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.plan = this.getResponseProperty(\"Plan\");\n  }\n}\n\nexport class ProviderOrganizationOrganizationDetailsResponse extends ProviderOrganizationResponse {\n  organizationName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.organizationName = this.getResponseProperty(\"OrganizationName\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class OrganizationUserBulkPublicKeyResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  key: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.key = this.getResponseProperty(\"Key\");\n  }\n}\n","import { OrganizationUserBulkPublicKeyResponse } from \"../../../abstractions/organization-user/responses\";\n\nexport class ProviderUserBulkPublicKeyResponse extends OrganizationUserBulkPublicKeyResponse {}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","import { ProviderUserStatusType } from \"../../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../../enums/providerUserType\";\nimport { PermissionsApi } from \"../../api/permissions.api\";\nimport { BaseResponse } from \"../base.response\";\n\nexport class ProviderUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: ProviderUserType;\n  status: ProviderUserStatusType;\n  permissions: PermissionsApi;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n  }\n}\n\nexport class ProviderUserUserDetailsResponse extends ProviderUserResponse {\n  name: string;\n  email: string;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n  }\n}\n","import { BaseResponse } from \"../base.response\";\n\nexport class ProviderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  billingEmail: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendAccessResponse extends BaseResponse {\n  id: string;\n  type: SendType;\n  name: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.creatorIdentifier = this.getResponseProperty(\"CreatorIdentifier\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SendFileDownloadDataResponse extends BaseResponse {\n  id: string = null;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class SendResponse extends BaseResponse {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileApi;\n  text: SendTextApi;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disable: boolean;\n  hideEmail: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.accessId = this.getResponseProperty(\"AccessId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.maxAccessCount = this.getResponseProperty(\"MaxAccessCount\");\n    this.accessCount = this.getResponseProperty(\"AccessCount\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.expirationDate = this.getResponseProperty(\"ExpirationDate\");\n    this.deletionDate = this.getResponseProperty(\"DeletionDate\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.disable = this.getResponseProperty(\"Disabled\") || false;\n    this.hideEmail = this.getResponseProperty(\"HideEmail\") || false;\n\n    const text = this.getResponseProperty(\"Text\");\n    if (text != null) {\n      this.text = new SendTextApi(text);\n    }\n\n    const file = this.getResponseProperty(\"File\");\n    if (file != null) {\n      this.file = new SendFileApi(file);\n    }\n  }\n}\n","import { FileUploadType } from \"../../enums/fileUploadType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { SendResponse } from \"./send.response\";\n\nexport class SendFileUploadDataResponse extends BaseResponse {\n  fileUploadType: FileUploadType;\n  sendResponse: SendResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const sendResponse = this.getResponseProperty(\"SendResponse\");\n    this.sendResponse = sendResponse == null ? null : new SendResponse(sendResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SubscriptionResponse extends BaseResponse {\n  storageName: string;\n  storageGb: number;\n  maxStorageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  license: any;\n  expiration: string;\n  usingInAppPurchase: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.license = this.getResponseProperty(\"License\");\n    this.expiration = this.getResponseProperty(\"Expiration\");\n    this.usingInAppPurchase = this.getResponseProperty(\"UsingInAppPurchase\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n  }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n  trialStartDate: string;\n  trialEndDate: string;\n  periodStartDate: string;\n  periodEndDate: string;\n  cancelledDate: string;\n  cancelAtEndDate: boolean;\n  status: string;\n  cancelled: boolean;\n  items: BillingSubscriptionItemResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.trialEndDate = this.getResponseProperty(\"TrialStartDate\");\n    this.trialEndDate = this.getResponseProperty(\"TrialEndDate\");\n    this.periodStartDate = this.getResponseProperty(\"PeriodStartDate\");\n    this.periodEndDate = this.getResponseProperty(\"PeriodEndDate\");\n    this.cancelledDate = this.getResponseProperty(\"CancelledDate\");\n    this.cancelAtEndDate = this.getResponseProperty(\"CancelAtEndDate\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.cancelled = this.getResponseProperty(\"Cancelled\");\n    const items = this.getResponseProperty(\"Items\");\n    if (items != null) {\n      this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n    }\n  }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n  name: string;\n  amount: number;\n  quantity: number;\n  interval: string;\n  sponsoredSubscriptionItem: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.amount = this.getResponseProperty(\"Amount\");\n    this.quantity = this.getResponseProperty(\"Quantity\");\n    this.interval = this.getResponseProperty(\"Interval\");\n    this.sponsoredSubscriptionItem = this.getResponseProperty(\"SponsoredSubscriptionItem\");\n  }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n  date: string;\n  amount: number;\n\n  constructor(response: any) {\n    super(response);\n    this.date = this.getResponseProperty(\"Date\");\n    this.amount = this.getResponseProperty(\"Amount\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxInfoResponse extends BaseResponse {\n  taxId: string;\n  taxIdType: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n  country: string;\n  postalCode: string;\n\n  constructor(response: any) {\n    super(response);\n    this.taxId = this.getResponseProperty(\"TaxIdNumber\");\n    this.taxIdType = this.getResponseProperty(\"TaxIdType\");\n    this.line1 = this.getResponseProperty(\"Line1\");\n    this.line2 = this.getResponseProperty(\"Line2\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class TaxRateResponse extends BaseResponse {\n  id: string;\n  country: string;\n  state: string;\n  postalCode: string;\n  rate: number;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.rate = this.getResponseProperty(\"Rate\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class UserKeyResponse extends BaseResponse {\n  userId: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { FileUploadType } from \"../../../enums/fileUploadType\";\nimport { BaseResponse } from \"../../../models/response/base.response\";\n\nimport { CipherResponse } from \"./cipher.response\";\n\nexport class AttachmentUploadDataResponse extends BaseResponse {\n  attachmentId: string;\n  fileUploadType: FileUploadType;\n  cipherResponse: CipherResponse;\n  cipherMiniResponse: CipherResponse;\n  url: string = null;\n  constructor(response: any) {\n    super(response);\n    this.attachmentId = this.getResponseProperty(\"AttachmentId\");\n    this.fileUploadType = this.getResponseProperty(\"FileUploadType\");\n    const cipherResponse = this.getResponseProperty(\"CipherResponse\");\n    const cipherMiniResponse = this.getResponseProperty(\"CipherMiniResponse\");\n    this.cipherResponse = cipherResponse == null ? null : new CipherResponse(cipherResponse);\n    this.cipherMiniResponse =\n      cipherMiniResponse == null ? null : new CipherResponse(cipherMiniResponse);\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class FolderResponse extends BaseResponse {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\nimport { CollectionDetailsResponse } from \"../../../models/response/collection.response\";\nimport { DomainsResponse } from \"../../../models/response/domains.response\";\nimport { PolicyResponse } from \"../../../models/response/policy.response\";\nimport { ProfileResponse } from \"../../../models/response/profile.response\";\nimport { SendResponse } from \"../../../models/response/send.response\";\n\nimport { CipherResponse } from \"./cipher.response\";\nimport { FolderResponse } from \"./folder.response\";\n\nexport class SyncResponse extends BaseResponse {\n  profile?: ProfileResponse;\n  folders: FolderResponse[] = [];\n  collections: CollectionDetailsResponse[] = [];\n  ciphers: CipherResponse[] = [];\n  domains?: DomainsResponse;\n  policies?: PolicyResponse[] = [];\n  sends: SendResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    const profile = this.getResponseProperty(\"Profile\");\n    if (profile != null) {\n      this.profile = new ProfileResponse(profile);\n    }\n\n    const folders = this.getResponseProperty(\"Folders\");\n    if (folders != null) {\n      this.folders = folders.map((f: any) => new FolderResponse(f));\n    }\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n    }\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n\n    const domains = this.getResponseProperty(\"Domains\");\n    if (domains != null) {\n      this.domains = new DomainsResponse(domains);\n    }\n\n    const policies = this.getResponseProperty(\"Policies\");\n    if (policies != null) {\n      this.policies = policies.map((p: any) => new PolicyResponse(p));\n    }\n\n    const sends = this.getResponseProperty(\"Sends\");\n    if (sends != null) {\n      this.sends = sends.map((s: any) => new SendResponse(s));\n    }\n  }\n}\n","export enum HtmlStorageLocation {\n  Local = \"local\",\n  Memory = \"memory\",\n  Session = \"session\",\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { AuditService as AuditServiceAbstraction } from \"../abstractions/audit.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { throttle } from \"../misc/throttle\";\nimport { Utils } from \"../misc/utils\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nconst PwnedPasswordsApi = \"https://api.pwnedpasswords.com/range/\";\n\nexport class AuditService implements AuditServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService\n  ) {}\n\n  @throttle(100, () => \"passwordLeaked\")\n  async passwordLeaked(password: string): Promise<number> {\n    const hashBytes = await this.cryptoFunctionService.hash(password, \"sha1\");\n    const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n    const hashStart = hash.substr(0, 5);\n    const hashEnding = hash.substr(5);\n\n    const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n    const leakedHashes = await response.text();\n    const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n      return v.split(\":\")[0] === hashEnding;\n    });\n\n    return match != null ? parseInt(match.split(\":\")[1], 10) : 0;\n  }\n\n  async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n    try {\n      return await this.apiService.getHibpBreach(username);\n    } catch (e) {\n      const error = e as ErrorResponse;\n      if (error.statusCode === 404) {\n        return [];\n      }\n      throw new Error();\n    }\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n  return <T>(\n    target: any,\n    propertyKey: string | symbol,\n    descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>\n  ) => {\n    const originalMethod: () => Promise<T> = descriptor.value;\n    const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n    const getThrottles = (obj: any) => {\n      let throttles = allThrottles.get(obj);\n      if (throttles != null) {\n        return throttles;\n      }\n      throttles = new Map<string, (() => void)[]>();\n      allThrottles.set(obj, throttles);\n      return throttles;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const throttles = getThrottles(this);\n        const argsThrottleKey = throttleKey(args);\n        let queue = throttles.get(argsThrottleKey);\n        if (queue == null) {\n          queue = [];\n          throttles.set(argsThrottleKey, queue);\n        }\n\n        return new Promise<T>((resolve, reject) => {\n          const exec = () => {\n            const onFinally = () => {\n              queue.splice(queue.indexOf(exec), 1);\n              if (queue.length >= limit) {\n                queue[limit - 1]();\n              } else if (queue.length === 0) {\n                throttles.delete(argsThrottleKey);\n                if (throttles.size === 0) {\n                  allThrottles.delete(this);\n                }\n              }\n            };\n            originalMethod\n              .apply(this, args)\n              .then((val: any) => {\n                onFinally();\n                return val;\n              })\n              .catch((err: any) => {\n                onFinally();\n                throw err;\n              })\n              .then(resolve, reject);\n          };\n          queue.push(exec);\n          if (queue.length <= limit) {\n            exec();\n          }\n        });\n      },\n    };\n  };\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ServerConfigResponse extends BaseResponse {\n  version: string;\n  gitHash: string;\n  server: ThirdPartyServerConfigResponse;\n  environment: EnvironmentServerConfigResponse;\n\n  constructor(response: any) {\n    super(response);\n\n    if (response == null) {\n      return;\n    }\n\n    this.version = this.getResponseProperty(\"Version\");\n    this.gitHash = this.getResponseProperty(\"GitHash\");\n    this.server = new ThirdPartyServerConfigResponse(this.getResponseProperty(\"Server\"));\n    this.environment = new EnvironmentServerConfigResponse(this.getResponseProperty(\"Environment\"));\n  }\n}\n\nexport class EnvironmentServerConfigResponse extends BaseResponse {\n  vault: string;\n  api: string;\n  identity: string;\n  notifications: string;\n  sso: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.vault = this.getResponseProperty(\"Vault\");\n    this.api = this.getResponseProperty(\"Api\");\n    this.identity = this.getResponseProperty(\"Identity\");\n    this.notifications = this.getResponseProperty(\"Notifications\");\n    this.sso = this.getResponseProperty(\"Sso\");\n  }\n}\n\nexport class ThirdPartyServerConfigResponse extends BaseResponse {\n  name: string;\n  url: string;\n\n  constructor(data: any = null) {\n    super(data);\n\n    if (data == null) {\n      return;\n    }\n\n    this.name = this.getResponseProperty(\"Name\");\n    this.url = this.getResponseProperty(\"Url\");\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport {\n  ServerConfigData,\n  ThirdPartyServerConfigData,\n  EnvironmentServerConfigData,\n} from \"../../models/data/server-config.data\";\n\nconst dayInMilliseconds = 24 * 3600 * 1000;\nconst eighteenHoursInMilliseconds = 18 * 3600 * 1000;\n\nexport class ServerConfig {\n  version: string;\n  gitHash: string;\n  server?: ThirdPartyServerConfigData;\n  environment?: EnvironmentServerConfigData;\n  utcDate: Date;\n\n  constructor(serverConfigData: ServerConfigData) {\n    this.version = serverConfigData.version;\n    this.gitHash = serverConfigData.gitHash;\n    this.server = serverConfigData.server;\n    this.utcDate = new Date(serverConfigData.utcDate);\n    this.environment = serverConfigData.environment;\n\n    if (this.server?.name == null && this.server?.url == null) {\n      this.server = null;\n    }\n  }\n\n  private getAgeInMilliseconds(): number {\n    return new Date().getTime() - this.utcDate?.getTime();\n  }\n\n  isValid(): boolean {\n    return this.getAgeInMilliseconds() <= dayInMilliseconds;\n  }\n\n  expiresSoon(): boolean {\n    return this.getAgeInMilliseconds() >= eighteenHoursInMilliseconds;\n  }\n\n  static fromJSON(obj: Jsonify<ServerConfig>): ServerConfig {\n    if (obj == null) {\n      return null;\n    }\n\n    return new ServerConfig(obj);\n  }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod: () => Promise<any> = descriptor.value;\n    const caches = new Map<any, Map<string, Promise<any>>>();\n\n    const getCache = (obj: any) => {\n      let cache = caches.get(obj);\n      if (cache != null) {\n        return cache;\n      }\n      cache = new Map<string, Promise<any>>();\n      caches.set(obj, cache);\n      return cache;\n    };\n\n    return {\n      value: function (...args: any[]) {\n        const cache = getCache(this);\n        const argsCacheKey = cacheKey(args);\n        let response = cache.get(argsCacheKey);\n        if (response != null) {\n          return response;\n        }\n\n        const onFinally = () => {\n          cache.delete(argsCacheKey);\n          if (cache.size === 0) {\n            caches.delete(this);\n          }\n        };\n        response = originalMethod\n          .apply(this, args)\n          .then((val: any) => {\n            onFinally();\n            return val;\n          })\n          .catch((err: any) => {\n            onFinally();\n            throw err;\n          });\n\n        cache.set(argsCacheKey, response);\n        return response;\n      },\n    };\n  };\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptedOrganizationKeyData } from \"../data/encrypted-organization-key.data\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport abstract class BaseEncryptedOrganizationKey {\n  decrypt: (cryptoService: CryptoService) => Promise<SymmetricCryptoKey>;\n\n  static fromData(data: EncryptedOrganizationKeyData) {\n    switch (data.type) {\n      case \"organization\":\n        return new EncryptedOrganizationKey(data.key);\n\n      case \"provider\":\n        return new ProviderEncryptedOrganizationKey(data.key, data.providerId);\n\n      default:\n        return null;\n    }\n  }\n}\n\nexport class EncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const decValue = await cryptoService.rsaDecrypt(this.key);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"organization\",\n      key: this.key,\n    };\n  }\n}\n\nexport class ProviderEncryptedOrganizationKey implements BaseEncryptedOrganizationKey {\n  constructor(private key: string, private providerId: string) {}\n\n  async decrypt(cryptoService: CryptoService) {\n    const providerKey = await cryptoService.getProviderKey(this.providerId);\n    const decValue = await cryptoService.decryptToBytes(new EncString(this.key), providerKey);\n    return new SymmetricCryptoKey(decValue);\n  }\n\n  toData(): EncryptedOrganizationKeyData {\n    return {\n      type: \"provider\",\n      key: this.key,\n      providerId: this.providerId,\n    };\n  }\n}\n","import * as bigInt from \"big-integer\";\n\nimport { CryptoService as CryptoServiceAbstraction } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { KdfConfig } from \"../auth/models/domain/kdf-config\";\nimport { EncryptionType } from \"../enums/encryptionType\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport {\n  DEFAULT_ARGON2_ITERATIONS,\n  DEFAULT_ARGON2_MEMORY,\n  DEFAULT_ARGON2_PARALLELISM,\n  KdfType,\n} from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { sequentialize } from \"../misc/sequentialize\";\nimport { Utils } from \"../misc/utils\";\nimport { EFFLongWordList } from \"../misc/wordlist\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { BaseEncryptedOrganizationKey } from \"../models/domain/encrypted-organization-key\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport class CryptoService implements CryptoServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private encryptService: EncryptService,\n    protected platformUtilService: PlatformUtilsService,\n    protected logService: LogService,\n    protected stateService: StateService\n  ) {}\n\n  async setKey(key: SymmetricCryptoKey, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(key, { userId: userId });\n    await this.storeKey(key, userId);\n  }\n\n  async setKeyHash(keyHash: string): Promise<void> {\n    await this.stateService.setKeyHash(keyHash);\n  }\n\n  async setEncKey(encKey: string): Promise<void> {\n    if (encKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedCryptoSymmetricKey(null);\n    await this.stateService.setEncryptedCryptoSymmetricKey(encKey);\n  }\n\n  async setEncPrivateKey(encPrivateKey: string): Promise<void> {\n    if (encPrivateKey == null) {\n      return;\n    }\n\n    await this.stateService.setDecryptedPrivateKey(null);\n    await this.stateService.setEncryptedPrivateKey(encPrivateKey);\n  }\n\n  async setOrgKeys(\n    orgs: ProfileOrganizationResponse[] = [],\n    providerOrgs: ProfileProviderOrganizationResponse[] = []\n  ): Promise<void> {\n    const encOrgKeyData: { [orgId: string]: EncryptedOrganizationKeyData } = {};\n\n    orgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"organization\",\n        key: org.key,\n      };\n    });\n\n    providerOrgs.forEach((org) => {\n      encOrgKeyData[org.id] = {\n        type: \"provider\",\n        providerId: org.providerId,\n        key: org.key,\n      };\n    });\n\n    await this.stateService.setDecryptedOrganizationKeys(null);\n    return await this.stateService.setEncryptedOrganizationKeys(encOrgKeyData);\n  }\n\n  async setProviderKeys(providers: ProfileProviderResponse[]): Promise<void> {\n    const providerKeys: any = {};\n    providers.forEach((provider) => {\n      providerKeys[provider.id] = provider.key;\n    });\n\n    await this.stateService.setDecryptedProviderKeys(null);\n    return await this.stateService.setEncryptedProviderKeys(providerKeys);\n  }\n\n  async getKey(keySuffix?: KeySuffixOptions, userId?: string): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getCryptoMasterKey({ userId: userId });\n\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    keySuffix ||= KeySuffixOptions.Auto;\n    const symmetricKey = await this.getKeyFromStorage(keySuffix, userId);\n\n    if (symmetricKey != null) {\n      // TODO: Refactor here so get key doesn't also set key\n      this.setKey(symmetricKey, userId);\n    }\n\n    return symmetricKey;\n  }\n\n  async getKeyFromStorage(\n    keySuffix: KeySuffixOptions,\n    userId?: string\n  ): Promise<SymmetricCryptoKey> {\n    const key = await this.retrieveKeyFromStorage(keySuffix, userId);\n    if (key != null) {\n      const symmetricKey = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n\n      if (!(await this.validateKey(symmetricKey))) {\n        this.logService.warning(\"Wrong key, throwing away stored key\");\n        await this.clearSecretKeyStore(userId);\n        return null;\n      }\n\n      return symmetricKey;\n    }\n    return null;\n  }\n\n  async getKeyHash(): Promise<string> {\n    return await this.stateService.getKeyHash();\n  }\n\n  async compareAndUpdateKeyHash(masterPassword: string, key: SymmetricCryptoKey): Promise<boolean> {\n    const storedKeyHash = await this.getKeyHash();\n    if (masterPassword != null && storedKeyHash != null) {\n      const localKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.LocalAuthorization\n      );\n      if (localKeyHash != null && storedKeyHash === localKeyHash) {\n        return true;\n      }\n\n      // TODO: remove serverKeyHash check in 1-2 releases after everyone's keyHash has been updated\n      const serverKeyHash = await this.hashPassword(\n        masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      if (serverKeyHash != null && storedKeyHash === serverKeyHash) {\n        await this.setKeyHash(localKeyHash);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  @sequentialize(() => \"getEncKey\")\n  getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    return this.getEncKeyHelper(key);\n  }\n\n  async getPublicKey(): Promise<ArrayBuffer> {\n    const inMemoryPublicKey = await this.stateService.getPublicKey();\n    if (inMemoryPublicKey != null) {\n      return inMemoryPublicKey;\n    }\n\n    const privateKey = await this.getPrivateKey();\n    if (privateKey == null) {\n      return null;\n    }\n\n    const publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    await this.stateService.setPublicKey(publicKey);\n    return publicKey;\n  }\n\n  async getPrivateKey(): Promise<ArrayBuffer> {\n    const decryptedPrivateKey = await this.stateService.getDecryptedPrivateKey();\n    if (decryptedPrivateKey != null) {\n      return decryptedPrivateKey;\n    }\n\n    const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n    if (encPrivateKey == null) {\n      return null;\n    }\n\n    const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), null);\n    await this.stateService.setDecryptedPrivateKey(privateKey);\n    return privateKey;\n  }\n\n  async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey === null) {\n      throw new Error(\"No public key available.\");\n    }\n    const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, \"sha256\");\n    const userFingerprint = await this.cryptoFunctionService.hkdfExpand(\n      keyFingerprint,\n      userId,\n      32,\n      \"sha256\"\n    );\n    return this.hashPhrase(userFingerprint);\n  }\n\n  @sequentialize(() => \"getOrgKeys\")\n  async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const result: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedOrganizationKeys = await this.stateService.getDecryptedOrganizationKeys();\n    if (decryptedOrganizationKeys != null && decryptedOrganizationKeys.size > 0) {\n      return decryptedOrganizationKeys;\n    }\n\n    const encOrgKeyData = await this.stateService.getEncryptedOrganizationKeys();\n    if (encOrgKeyData == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId of Object.keys(encOrgKeyData)) {\n      if (result.has(orgId)) {\n        continue;\n      }\n\n      const encOrgKey = BaseEncryptedOrganizationKey.fromData(encOrgKeyData[orgId]);\n      const decOrgKey = await encOrgKey.decrypt(this);\n      result.set(orgId, decOrgKey);\n\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedOrganizationKeys(result);\n    }\n\n    return result;\n  }\n\n  async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n    if (orgId == null) {\n      return null;\n    }\n\n    const orgKeys = await this.getOrgKeys();\n    if (orgKeys == null || !orgKeys.has(orgId)) {\n      return null;\n    }\n\n    return orgKeys.get(orgId);\n  }\n\n  @sequentialize(() => \"getProviderKeys\")\n  async getProviderKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n    const providerKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n    const decryptedProviderKeys = await this.stateService.getDecryptedProviderKeys();\n    if (decryptedProviderKeys != null && decryptedProviderKeys.size > 0) {\n      return decryptedProviderKeys;\n    }\n\n    const encProviderKeys = await this.stateService.getEncryptedProviderKeys();\n    if (encProviderKeys == null) {\n      return null;\n    }\n\n    let setKey = false;\n\n    for (const orgId in encProviderKeys) {\n      // eslint-disable-next-line\n      if (!encProviderKeys.hasOwnProperty(orgId)) {\n        continue;\n      }\n\n      const decValue = await this.rsaDecrypt(encProviderKeys[orgId]);\n      providerKeys.set(orgId, new SymmetricCryptoKey(decValue));\n      setKey = true;\n    }\n\n    if (setKey) {\n      await this.stateService.setDecryptedProviderKeys(providerKeys);\n    }\n\n    return providerKeys;\n  }\n\n  async getProviderKey(providerId: string): Promise<SymmetricCryptoKey> {\n    if (providerId == null) {\n      return null;\n    }\n\n    const providerKeys = await this.getProviderKeys();\n    if (providerKeys == null || !providerKeys.has(providerId)) {\n      return null;\n    }\n\n    return providerKeys.get(providerId);\n  }\n\n  async hasKey(): Promise<boolean> {\n    return (\n      (await this.hasKeyInMemory()) ||\n      (await this.hasKeyStored(KeySuffixOptions.Auto)) ||\n      (await this.hasKeyStored(KeySuffixOptions.Biometric))\n    );\n  }\n\n  async hasKeyInMemory(userId?: string): Promise<boolean> {\n    return (await this.stateService.getCryptoMasterKey({ userId: userId })) != null;\n  }\n\n  async hasKeyStored(keySuffix: KeySuffixOptions, userId?: string): Promise<boolean> {\n    switch (keySuffix) {\n      case KeySuffixOptions.Auto:\n        return (await this.stateService.getCryptoMasterKeyAuto({ userId: userId })) != null;\n      case KeySuffixOptions.Biometric:\n        return (await this.stateService.hasCryptoMasterKeyBiometric({ userId: userId })) === true;\n      default:\n        return false;\n    }\n  }\n\n  async hasEncKey(): Promise<boolean> {\n    return (await this.stateService.getEncryptedCryptoSymmetricKey()) != null;\n  }\n\n  async clearKey(clearSecretStorage = true, userId?: string): Promise<any> {\n    await this.stateService.setCryptoMasterKey(null, { userId: userId });\n    if (clearSecretStorage) {\n      await this.clearSecretKeyStore(userId);\n    }\n  }\n\n  async clearStoredKey(keySuffix: KeySuffixOptions) {\n    keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.setCryptoMasterKeyAuto(null)\n      : await this.stateService.setCryptoMasterKeyBiometric(null);\n  }\n\n  async clearKeyHash(userId?: string): Promise<any> {\n    return await this.stateService.setKeyHash(null, { userId: userId });\n  }\n\n  async clearEncKey(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCryptoSymmetricKey(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedCryptoSymmetricKey(null, { userId: userId });\n    }\n  }\n\n  async clearKeyPair(memoryOnly?: boolean, userId?: string): Promise<any> {\n    const keysToClear: Promise<void>[] = [\n      this.stateService.setDecryptedPrivateKey(null, { userId: userId }),\n      this.stateService.setPublicKey(null, { userId: userId }),\n    ];\n    if (!memoryOnly) {\n      keysToClear.push(this.stateService.setEncryptedPrivateKey(null, { userId: userId }));\n    }\n    return Promise.all(keysToClear);\n  }\n\n  async clearOrgKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedOrganizationKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedOrganizationKeys(null, { userId: userId });\n    }\n  }\n\n  async clearProviderKeys(memoryOnly?: boolean, userId?: string): Promise<void> {\n    await this.stateService.setDecryptedProviderKeys(null, { userId: userId });\n    if (!memoryOnly) {\n      await this.stateService.setEncryptedProviderKeys(null, { userId: userId });\n    }\n  }\n\n  async clearPinProtectedKey(userId?: string): Promise<any> {\n    return await this.stateService.setEncryptedPinProtected(null, { userId: userId });\n  }\n\n  async clearKeys(userId?: string): Promise<any> {\n    await this.clearKey(true, userId);\n    await this.clearKeyHash(userId);\n    await this.clearOrgKeys(false, userId);\n    await this.clearProviderKeys(false, userId);\n    await this.clearEncKey(false, userId);\n    await this.clearKeyPair(false, userId);\n    await this.clearPinProtectedKey(userId);\n  }\n\n  async toggleKey(): Promise<any> {\n    const key = await this.getKey();\n\n    await this.setKey(key);\n  }\n\n  async makeKey(\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfConfig: KdfConfig\n  ): Promise<SymmetricCryptoKey> {\n    let key: ArrayBuffer = null;\n    if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n      if (kdfConfig.iterations == null) {\n        kdfConfig.iterations = 5000;\n      } else if (kdfConfig.iterations < 5000) {\n        throw new Error(\"PBKDF2 iteration minimum is 5000.\");\n      }\n      key = await this.cryptoFunctionService.pbkdf2(password, salt, \"sha256\", kdfConfig.iterations);\n    } else if (kdf == KdfType.Argon2id) {\n      if (kdfConfig.iterations == null) {\n        kdfConfig.iterations = DEFAULT_ARGON2_ITERATIONS;\n      } else if (kdfConfig.iterations < 2) {\n        throw new Error(\"Argon2 iteration minimum is 2.\");\n      }\n\n      if (kdfConfig.memory == null) {\n        kdfConfig.memory = DEFAULT_ARGON2_MEMORY;\n      } else if (kdfConfig.memory < 16) {\n        throw new Error(\"Argon2 memory minimum is 16 MB\");\n      } else if (kdfConfig.memory > 1024) {\n        throw new Error(\"Argon2 memory maximum is 1024 MB\");\n      }\n\n      if (kdfConfig.parallelism == null) {\n        kdfConfig.parallelism = DEFAULT_ARGON2_PARALLELISM;\n      } else if (kdfConfig.parallelism < 1) {\n        throw new Error(\"Argon2 parallelism minimum is 1.\");\n      }\n\n      const saltHash = await this.cryptoFunctionService.hash(salt, \"sha256\");\n      key = await this.cryptoFunctionService.argon2(\n        password,\n        saltHash,\n        kdfConfig.iterations,\n        kdfConfig.memory * 1024, // convert to KiB from MiB\n        kdfConfig.parallelism\n      );\n    } else {\n      throw new Error(\"Unknown Kdf.\");\n    }\n    return new SymmetricCryptoKey(key);\n  }\n\n  async makeKeyFromPin(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfConfig: KdfConfig,\n    protectedKeyCs: EncString = null\n  ): Promise<SymmetricCryptoKey> {\n    if (protectedKeyCs == null) {\n      const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n      if (pinProtectedKey == null) {\n        throw new Error(\"No PIN protected key found.\");\n      }\n      protectedKeyCs = new EncString(pinProtectedKey);\n    }\n    const pinKey = await this.makePinKey(pin, salt, kdf, kdfConfig);\n    const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n    return new SymmetricCryptoKey(decKey);\n  }\n\n  async makeShareKey(): Promise<[EncString, SymmetricCryptoKey]> {\n    const shareKey = await this.cryptoFunctionService.randomBytes(64);\n    const publicKey = await this.getPublicKey();\n    const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n    return [encShareKey, new SymmetricCryptoKey(shareKey)];\n  }\n\n  async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, EncString]> {\n    const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n    const privateEnc = await this.encrypt(keyPair[1], key);\n    return [publicB64, privateEnc];\n  }\n\n  async makePinKey(\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfConfig: KdfConfig\n  ): Promise<SymmetricCryptoKey> {\n    const pinKey = await this.makeKey(pin, salt, kdf, kdfConfig);\n    return await this.stretchKey(pinKey);\n  }\n\n  async makeSendKey(keyMaterial: ArrayBuffer): Promise<SymmetricCryptoKey> {\n    const sendKey = await this.cryptoFunctionService.hkdf(\n      keyMaterial,\n      \"bitwarden-send\",\n      \"send\",\n      64,\n      \"sha256\"\n    );\n    return new SymmetricCryptoKey(sendKey);\n  }\n\n  async hashPassword(\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ): Promise<string> {\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (password == null || key == null) {\n      throw new Error(\"Invalid parameters.\");\n    }\n\n    const iterations = hashPurpose === HashPurpose.LocalAuthorization ? 2 : 1;\n    const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, \"sha256\", iterations);\n    return Utils.fromBufferToB64(hash);\n  }\n\n  async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, EncString]> {\n    const theKey = await this.getKeyForUserEncryption(key);\n    const encKey = await this.cryptoFunctionService.randomBytes(64);\n    return this.buildEncKey(theKey, encKey);\n  }\n\n  async remakeEncKey(\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    if (encKey == null) {\n      encKey = await this.getEncKey();\n    }\n    return this.buildEncKey(key, encKey.key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encrypt\n   */\n  async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncString> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.encrypt(plainValue, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.encryptToBytes\n   */\n  async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    key = await this.getKeyForUserEncryption(key);\n    return this.encryptService.encryptToBytes(plainValue, key);\n  }\n\n  async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<EncString> {\n    if (publicKey == null) {\n      publicKey = await this.getPublicKey();\n    }\n    if (publicKey == null) {\n      throw new Error(\"Public key unavailable.\");\n    }\n\n    const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, \"sha1\");\n    return new EncString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n  }\n\n  async rsaDecrypt(encValue: string, privateKeyValue?: ArrayBuffer): Promise<ArrayBuffer> {\n    const headerPieces = encValue.split(\".\");\n    let encType: EncryptionType = null;\n    let encPieces: string[];\n\n    if (headerPieces.length === 1) {\n      encType = EncryptionType.Rsa2048_OaepSha256_B64;\n      encPieces = [headerPieces[0]];\n    } else if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64: // HmacSha256 types are deprecated\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    if (encPieces == null || encPieces.length <= 0) {\n      throw new Error(\"encPieces unavailable.\");\n    }\n\n    const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n    const privateKey = privateKeyValue ?? (await this.getPrivateKey());\n    if (privateKey == null) {\n      throw new Error(\"No private key.\");\n    }\n\n    let alg: \"sha1\" | \"sha256\" = \"sha1\";\n    switch (encType) {\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n        alg = \"sha256\";\n        break;\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n      case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n        break;\n      default:\n        throw new Error(\"encType unavailable.\");\n    }\n\n    return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptToBytes(encString: EncString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    const keyForEnc = await this.getKeyForUserEncryption(key);\n    return this.encryptService.decryptToBytes(encString, keyForEnc);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToUtf8\n   */\n  async decryptToUtf8(encString: EncString, key?: SymmetricCryptoKey): Promise<string> {\n    key = await this.getKeyForUserEncryption(key);\n    return await this.encryptService.decryptToUtf8(encString, key);\n  }\n\n  /**\n   * @deprecated July 25 2022: Get the key you need from CryptoService (getKeyForUserEncryption or getOrgKey)\n   * and then call encryptService.decryptToBytes\n   */\n  async decryptFromBytes(encBuffer: EncArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (encBuffer == null) {\n      throw new Error(\"No buffer provided for decryption.\");\n    }\n\n    key = await this.getKeyForUserEncryption(key);\n\n    return this.encryptService.decryptToBytes(encBuffer, key);\n  }\n\n  // EFForg/OpenWireless\n  // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n  async randomNumber(min: number, max: number): Promise<number> {\n    let rval = 0;\n    const range = max - min + 1;\n    const bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n      throw new Error(\"We cannot generate numbers larger than 53 bits.\");\n    }\n\n    const bytesNeeded = Math.ceil(bitsNeeded / 8);\n    const mask = Math.pow(2, bitsNeeded) - 1;\n    // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n    // Fill a byte array with N random numbers\n    const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n    let p = (bytesNeeded - 1) * 8;\n    for (let i = 0; i < bytesNeeded; i++) {\n      rval += byteArray[i] * Math.pow(2, p);\n      p -= 8;\n    }\n\n    // Use & to apply the mask and reduce the number of recursive lookups\n    rval = rval & mask;\n\n    if (rval >= range) {\n      // Integer out of acceptable range\n      return this.randomNumber(min, max);\n    }\n\n    // Return an integer that falls within the range\n    return min + rval;\n  }\n\n  async validateKey(key: SymmetricCryptoKey) {\n    try {\n      const encPrivateKey = await this.stateService.getEncryptedPrivateKey();\n      const encKey = await this.getEncKeyHelper(key);\n      if (encPrivateKey == null || encKey == null) {\n        return false;\n      }\n\n      const privateKey = await this.decryptToBytes(new EncString(encPrivateKey), encKey);\n      await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  // ---HELPERS---\n\n  protected async storeKey(key: SymmetricCryptoKey, userId?: string) {\n    if (await this.shouldStoreKey(KeySuffixOptions.Auto, userId)) {\n      await this.stateService.setCryptoMasterKeyAuto(key.keyB64, { userId: userId });\n    } else if (await this.shouldStoreKey(KeySuffixOptions.Biometric, userId)) {\n      await this.stateService.setCryptoMasterKeyBiometric(key.keyB64, { userId: userId });\n    } else {\n      await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n      await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n    }\n  }\n\n  protected async shouldStoreKey(keySuffix: KeySuffixOptions, userId?: string) {\n    let shouldStoreKey = false;\n    if (keySuffix === KeySuffixOptions.Auto) {\n      const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n      shouldStoreKey = vaultTimeout == null;\n    } else if (keySuffix === KeySuffixOptions.Biometric) {\n      const biometricUnlock = await this.stateService.getBiometricUnlock({ userId: userId });\n      shouldStoreKey = biometricUnlock && this.platformUtilService.supportsSecureStorage();\n    }\n    return shouldStoreKey;\n  }\n\n  protected async retrieveKeyFromStorage(keySuffix: KeySuffixOptions, userId?: string) {\n    return keySuffix === KeySuffixOptions.Auto\n      ? await this.stateService.getCryptoMasterKeyAuto({ userId: userId })\n      : await this.stateService.getCryptoMasterKeyBiometric({ userId: userId });\n  }\n\n  async getKeyForUserEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    if (key != null) {\n      return key;\n    }\n\n    const encKey = await this.getEncKey();\n    if (encKey != null) {\n      return encKey;\n    }\n\n    // Legacy support: encryption used to be done with the user key (derived from master password).\n    // Users who have not migrated will have a null encKey and must use the user key instead.\n    return await this.getKey();\n  }\n\n  private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n    const newKey = new Uint8Array(64);\n    const encKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"enc\", 32, \"sha256\");\n    const macKey = await this.cryptoFunctionService.hkdfExpand(key.key, \"mac\", 32, \"sha256\");\n    newKey.set(new Uint8Array(encKey));\n    newKey.set(new Uint8Array(macKey), 32);\n    return new SymmetricCryptoKey(newKey.buffer);\n  }\n\n  private async hashPhrase(hash: ArrayBuffer, minimumEntropy = 64) {\n    const entropyPerWord = Math.log(EFFLongWordList.length) / Math.log(2);\n    let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n    const hashArr = Array.from(new Uint8Array(hash));\n    const entropyAvailable = hashArr.length * 4;\n    if (numWords * entropyPerWord > entropyAvailable) {\n      throw new Error(\"Output entropy of hash function is too small\");\n    }\n\n    const phrase: string[] = [];\n    let hashNumber = bigInt.fromArray(hashArr, 256);\n    while (numWords--) {\n      const remainder = hashNumber.mod(EFFLongWordList.length);\n      hashNumber = hashNumber.divide(EFFLongWordList.length);\n      phrase.push(EFFLongWordList[remainder as any]);\n    }\n    return phrase;\n  }\n\n  private async buildEncKey(\n    key: SymmetricCryptoKey,\n    encKey: ArrayBuffer\n  ): Promise<[SymmetricCryptoKey, EncString]> {\n    let encKeyEnc: EncString = null;\n    if (key.key.byteLength === 32) {\n      const newKey = await this.stretchKey(key);\n      encKeyEnc = await this.encrypt(encKey, newKey);\n    } else if (key.key.byteLength === 64) {\n      encKeyEnc = await this.encrypt(encKey, key);\n    } else {\n      throw new Error(\"Invalid key size.\");\n    }\n    return [new SymmetricCryptoKey(encKey), encKeyEnc];\n  }\n\n  private async clearSecretKeyStore(userId?: string): Promise<void> {\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.stateService.setCryptoMasterKeyBiometric(null, { userId: userId });\n  }\n\n  private async getEncKeyHelper(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n    const inMemoryKey = await this.stateService.getDecryptedCryptoSymmetricKey();\n    if (inMemoryKey != null) {\n      return inMemoryKey;\n    }\n\n    const encKey = await this.stateService.getEncryptedCryptoSymmetricKey();\n    if (encKey == null) {\n      return null;\n    }\n\n    if (key == null) {\n      key = await this.getKey();\n    }\n    if (key == null) {\n      return null;\n    }\n\n    let decEncKey: ArrayBuffer;\n    const encKeyCipher = new EncString(encKey);\n    if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n      decEncKey = await this.decryptToBytes(encKeyCipher, key);\n    } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n      const newKey = await this.stretchKey(key);\n      decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n    } else {\n      throw new Error(\"Unsupported encKey type.\");\n    }\n    if (decEncKey == null) {\n      return null;\n    }\n    const symmetricCryptoKey = new SymmetricCryptoKey(decEncKey);\n    await this.stateService.setDecryptedCryptoSymmetricKey(symmetricCryptoKey);\n    return symmetricCryptoKey;\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { CryptoFunctionService } from \"../../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../../abstractions/encrypt.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { EncArrayBuffer } from \"../../models/domain/enc-array-buffer\";\nimport { EncString } from \"../../models/domain/enc-string\";\nimport { EncryptedObject } from \"../../models/domain/encrypted-object\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nexport class EncryptServiceImplementation implements EncryptService {\n  constructor(\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    return await Promise.all(items.map((item) => item.decrypt(key)));\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Cipher } from \"../../vault/models/domain/cipher\";\nimport { CipherView } from \"../../vault/models/view/cipher.view\";\n\nimport { InitializerKey } from \"./initializer-key\";\n\n/**\n * Internal reference of classes so we can reconstruct objects properly.\n * Each entry should be keyed using the Decryptable.initializerKey property\n */\nconst classInitializers: Record<InitializerKey, (obj: any) => any> = {\n  [InitializerKey.Cipher]: Cipher.fromJSON,\n  [InitializerKey.CipherView]: CipherView.fromJSON,\n};\n\nexport function getClassInitializer<T extends InitializerMetadata>(\n  className: InitializerKey\n): (obj: Jsonify<T>) => T {\n  return classInitializers[className];\n}\n","import { defaultIfEmpty, filter, firstValueFrom, fromEvent, map, Subject, takeUntil } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nimport { EncryptServiceImplementation } from \"./encrypt.service.implementation\";\nimport { getClassInitializer } from \"./get-class-initializer\";\n\n// TTL (time to live) is not strictly required but avoids tying up memory resources if inactive\nconst workerTTL = 3 * 60000; // 3 minutes\n\nexport class MultithreadEncryptServiceImplementation extends EncryptServiceImplementation {\n  private worker: Worker;\n  private timeout: any;\n\n  private clear$ = new Subject<void>();\n\n  /**\n   * Sends items to a web worker to decrypt them.\n   * This utilises multithreading to decrypt items faster without interrupting other operations (e.g. updating UI).\n   */\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    this.logService.info(\"Starting decryption using multithreading\");\n\n    this.worker ??= new Worker(\n      new URL(\n        /* webpackChunkName: 'encrypt-worker' */\n        \"@bitwarden/common/services/cryptography/encrypt.worker.ts\",\n        import.meta.url\n      )\n    );\n\n    this.restartTimeout();\n\n    const request = {\n      id: Utils.newGuid(),\n      items: items,\n      key: key,\n    };\n\n    this.worker.postMessage(JSON.stringify(request));\n\n    return await firstValueFrom(\n      fromEvent(this.worker, \"message\").pipe(\n        filter((response: MessageEvent) => response.data?.id === request.id),\n        map((response) => JSON.parse(response.data.items)),\n        map((items) =>\n          items.map((jsonItem: Jsonify<T>) => {\n            const initializer = getClassInitializer<T>(jsonItem.initializerKey);\n            return initializer(jsonItem);\n          })\n        ),\n        takeUntil(this.clear$),\n        defaultIfEmpty([])\n      )\n    );\n  }\n\n  private clear() {\n    this.clear$.next();\n    this.worker?.terminate();\n    this.worker = null;\n    this.clearTimeout();\n  }\n\n  private restartTimeout() {\n    this.clearTimeout();\n    this.timeout = setTimeout(() => this.clear(), workerTTL);\n  }\n\n  private clearTimeout() {\n    if (this.timeout != null) {\n      clearTimeout(this.timeout);\n    }\n  }\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventData {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport class EventRequest {\n  type: EventType;\n  cipherId: string;\n  date: string;\n  organizationId: string;\n}\n","import { EventType } from \"../../enums/eventType\";\nimport { EventView } from \"../view/event.view\";\n\nexport class EventExport {\n  message: string;\n  appIcon: string;\n  appName: string;\n  userId: string;\n  userName: string;\n  userEmail: string;\n  date: string;\n  ip: string;\n  type: string;\n  installationId: string;\n\n  constructor(event: EventView) {\n    this.message = event.humanReadableMessage;\n    this.appIcon = event.appIcon;\n    this.appName = event.appName;\n    this.userId = event.userId;\n    this.userName = event.userName;\n    this.userEmail = event.userEmail;\n    this.date = event.date;\n    this.ip = event.ip;\n    this.type = EventType[event.type];\n    this.installationId = event.installationId;\n  }\n}\n","export enum FileUploadType {\n  Direct = 0,\n  Azure = 1,\n}\n","import { LogService } from \"../abstractions/log.service\";\nimport { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nconst MAX_SINGLE_BLOB_UPLOAD_SIZE = 256 * 1024 * 1024; // 256 MiB\nconst MAX_BLOCKS_PER_BLOB = 50000;\n\nexport class AzureFileUploadService {\n  constructor(private logService: LogService) {}\n\n  async upload(url: string, data: EncArrayBuffer, renewalCallback: () => Promise<string>) {\n    if (data.buffer.byteLength <= MAX_SINGLE_BLOB_UPLOAD_SIZE) {\n      return await this.azureUploadBlob(url, data);\n    } else {\n      return await this.azureUploadBlocks(url, data, renewalCallback);\n    }\n  }\n  private async azureUploadBlob(url: string, data: EncArrayBuffer) {\n    const urlObject = Utils.getUrl(url);\n    const headers = new Headers({\n      \"x-ms-date\": new Date().toUTCString(),\n      \"x-ms-version\": urlObject.searchParams.get(\"sv\"),\n      \"Content-Length\": data.buffer.byteLength.toString(),\n      \"x-ms-blob-type\": \"BlockBlob\",\n    });\n\n    const request = new Request(url, {\n      body: data.buffer,\n      cache: \"no-store\",\n      method: \"PUT\",\n      headers: headers,\n    });\n\n    const blobResponse = await fetch(request);\n\n    if (blobResponse.status !== 201) {\n      throw new Error(`Failed to create Azure blob: ${blobResponse.status}`);\n    }\n  }\n  private async azureUploadBlocks(\n    url: string,\n    data: EncArrayBuffer,\n    renewalCallback: () => Promise<string>\n  ) {\n    const baseUrl = Utils.getUrl(url);\n    const blockSize = this.getMaxBlockSize(baseUrl.searchParams.get(\"sv\"));\n    let blockIndex = 0;\n    const numBlocks = Math.ceil(data.buffer.byteLength / blockSize);\n    const blocksStaged: string[] = [];\n\n    if (numBlocks > MAX_BLOCKS_PER_BLOB) {\n      throw new Error(\n        `Cannot upload file, exceeds maximum size of ${blockSize * MAX_BLOCKS_PER_BLOB}`\n      );\n    }\n\n    // eslint-disable-next-line\n    try {\n      while (blockIndex < numBlocks) {\n        url = await this.renewUrlIfNecessary(url, renewalCallback);\n        const blockUrl = Utils.getUrl(url);\n        const blockId = this.encodedBlockId(blockIndex);\n        blockUrl.searchParams.append(\"comp\", \"block\");\n        blockUrl.searchParams.append(\"blockid\", blockId);\n        const start = blockIndex * blockSize;\n        const blockData = data.buffer.slice(start, start + blockSize);\n        const blockHeaders = new Headers({\n          \"x-ms-date\": new Date().toUTCString(),\n          \"x-ms-version\": blockUrl.searchParams.get(\"sv\"),\n          \"Content-Length\": blockData.byteLength.toString(),\n        });\n\n        const blockRequest = new Request(blockUrl.toString(), {\n          body: blockData,\n          cache: \"no-store\",\n          method: \"PUT\",\n          headers: blockHeaders,\n        });\n\n        const blockResponse = await fetch(blockRequest);\n\n        if (blockResponse.status !== 201) {\n          const message = `Unsuccessful block PUT. Received status ${blockResponse.status}`;\n          this.logService.error(message + \"\\n\" + (await blockResponse.json()));\n          throw new Error(message);\n        }\n\n        blocksStaged.push(blockId);\n        blockIndex++;\n      }\n\n      url = await this.renewUrlIfNecessary(url, renewalCallback);\n      const blockListUrl = Utils.getUrl(url);\n      const blockListXml = this.blockListXml(blocksStaged);\n      blockListUrl.searchParams.append(\"comp\", \"blocklist\");\n      const headers = new Headers({\n        \"x-ms-date\": new Date().toUTCString(),\n        \"x-ms-version\": blockListUrl.searchParams.get(\"sv\"),\n        \"Content-Length\": blockListXml.length.toString(),\n      });\n\n      const request = new Request(blockListUrl.toString(), {\n        body: blockListXml,\n        cache: \"no-store\",\n        method: \"PUT\",\n        headers: headers,\n      });\n\n      const response = await fetch(request);\n\n      if (response.status !== 201) {\n        const message = `Unsuccessful block list PUT. Received status ${response.status}`;\n        this.logService.error(message + \"\\n\" + (await response.json()));\n        throw new Error(message);\n      }\n    } catch (e) {\n      throw e;\n    }\n  }\n\n  private async renewUrlIfNecessary(\n    url: string,\n    renewalCallback: () => Promise<string>\n  ): Promise<string> {\n    const urlObject = Utils.getUrl(url);\n    const expiry = new Date(urlObject.searchParams.get(\"se\") ?? \"\");\n\n    if (isNaN(expiry.getTime())) {\n      expiry.setTime(Date.now() + 3600000);\n    }\n\n    if (expiry.getTime() < Date.now() + 1000) {\n      return await renewalCallback();\n    }\n    return url;\n  }\n\n  private encodedBlockId(blockIndex: number) {\n    // Encoded blockId max size is 64, so pre-encoding max size is 48\n    const utfBlockId = (\n      \"000000000000000000000000000000000000000000000000\" + blockIndex.toString()\n    ).slice(-48);\n    return Utils.fromUtf8ToB64(utfBlockId);\n  }\n\n  private blockListXml(blockIdList: string[]) {\n    let xml = '<?xml version=\"1.0\" encoding=\"utf-8\"?><BlockList>';\n    blockIdList.forEach((blockId) => {\n      xml += `<Latest>${blockId}</Latest>`;\n    });\n    xml += \"</BlockList>\";\n    return xml;\n  }\n\n  private getMaxBlockSize(version: string) {\n    if (Version.compare(version, \"2019-12-12\") >= 0) {\n      return 4000 * 1024 * 1024; // 4000 MiB\n    } else if (Version.compare(version, \"2016-05-31\") >= 0) {\n      return 100 * 1024 * 1024; // 100 MiB\n    } else {\n      return 4 * 1024 * 1024; // 4 MiB\n    }\n  }\n}\n\nclass Version {\n  /**\n   * Compares two Azure Versions against each other\n   * @param a Version to compare\n   * @param b Version to compare\n   * @returns a number less than zero if b is newer than a, 0 if equal,\n   * and greater than zero if a is newer than b\n   */\n  static compare(a: Required<Version> | string, b: Required<Version> | string) {\n    if (typeof a === \"string\") {\n      a = new Version(a);\n    }\n\n    if (typeof b === \"string\") {\n      b = new Version(b);\n    }\n\n    return a.year !== b.year\n      ? a.year - b.year\n      : a.month !== b.month\n      ? a.month - b.month\n      : a.day !== b.day\n      ? a.day - b.day\n      : 0;\n  }\n  year = 0;\n  month = 0;\n  day = 0;\n\n  constructor(version: string) {\n    try {\n      const parts = version.split(\"-\").map((v) => Number.parseInt(v, 10));\n      this.year = parts[0];\n      this.month = parts[1];\n      this.day = parts[2];\n    } catch {\n      // Ignore error\n    }\n  }\n  /**\n   * Compares two Azure Versions against each other\n   * @param compareTo Version to compare against\n   * @returns a number less than zero if compareTo is newer, 0 if equal,\n   * and greater than zero if this is greater than compareTo\n   */\n  compare(compareTo: Required<Version> | string) {\n    return Version.compare(this, compareTo);\n  }\n}\n","import { Utils } from \"../misc/utils\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\n\nexport class BitwardenFileUploadService {\n  async upload(\n    encryptedFileName: string,\n    encryptedFileData: EncArrayBuffer,\n    apiCall: (fd: FormData) => Promise<any>\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encryptedFileData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"data\", blob, encryptedFileName);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\n          \"data\",\n          Buffer.from(encryptedFileData.buffer) as any,\n          {\n            filepath: encryptedFileName,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    await apiCall(fd);\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class OrganizationDomainSsoDetailsResponse extends BaseResponse {\n  id: string;\n  organizationIdentifier: string;\n  ssoAvailable: boolean;\n  domainName: string;\n  ssoRequired: boolean;\n  verifiedDate?: Date;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"id\");\n    this.organizationIdentifier = this.getResponseProperty(\"organizationIdentifier\");\n    this.ssoAvailable = this.getResponseProperty(\"ssoAvailable\");\n    this.domainName = this.getResponseProperty(\"domainName\");\n    this.ssoRequired = this.getResponseProperty(\"ssoRequired\");\n    this.verifiedDate = this.getResponseProperty(\"verifiedDate\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class OrganizationDomainResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  txt: string;\n  domainName: string;\n  creationDate: string;\n  nextRunDate: string;\n  jobRunCount: number;\n  verifiedDate?: string;\n  lastCheckedDate?: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"id\");\n    this.organizationId = this.getResponseProperty(\"organizationId\");\n    this.txt = this.getResponseProperty(\"txt\");\n    this.domainName = this.getResponseProperty(\"domainName\");\n    this.creationDate = this.getResponseProperty(\"creationDate\");\n    this.nextRunDate = this.getResponseProperty(\"nextRunDate\");\n    this.jobRunCount = this.getResponseProperty(\"jobRunCount\");\n    this.verifiedDate = this.getResponseProperty(\"verifiedDate\");\n    this.lastCheckedDate = this.getResponseProperty(\"lastCheckedDate\");\n  }\n}\n","export class OrganizationDomainSsoDetailsRequest {\n  constructor(public email: string) {}\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { OrganizationUserStatusType } from \"../../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { BaseResponse } from \"../../../models/response/base.response\";\nimport { SelectionReadOnlyResponse } from \"../../../models/response/selection-read-only.response\";\n\nexport class OrganizationUserResponse extends BaseResponse {\n  id: string;\n  userId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  externalId: string;\n  accessAll: boolean;\n  accessSecretsManager: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  collections: SelectionReadOnlyResponse[] = [];\n  groups: string[] = [];\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.userId = this.getResponseProperty(\"UserId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.permissions = new PermissionsApi(this.getResponseProperty(\"Permissions\"));\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.accessSecretsManager = this.getResponseProperty(\"AccessSecretsManager\");\n    this.resetPasswordEnrolled = this.getResponseProperty(\"ResetPasswordEnrolled\");\n\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n    const groups = this.getResponseProperty(\"Groups\");\n    if (groups != null) {\n      this.groups = groups;\n    }\n  }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n  name: string;\n  email: string;\n  avatarColor: string;\n  twoFactorEnabled: boolean;\n  usesKeyConnector: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.avatarColor = this.getResponseProperty(\"AvatarColor\");\n    this.twoFactorEnabled = this.getResponseProperty(\"TwoFactorEnabled\");\n    this.usesKeyConnector = this.getResponseProperty(\"UsesKeyConnector\") ?? false;\n  }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n\nexport class OrganizationUserResetPasswordDetailsReponse extends BaseResponse {\n  kdf: KdfType;\n  kdfIterations: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n  resetPasswordKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.kdfMemory = this.getResponseProperty(\"KdfMemory\");\n    this.kdfParallelism = this.getResponseProperty(\"KdfParallelism\");\n    this.resetPasswordKey = this.getResponseProperty(\"ResetPasswordKey\");\n    this.encryptedPrivateKey = this.getResponseProperty(\"EncryptedPrivateKey\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class OrganizationUserBulkResponse extends BaseResponse {\n  id: string;\n  error: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.error = this.getResponseProperty(\"Error\");\n  }\n}\n","export class OrganizationUserBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","export enum SsoType {\n  None = 0,\n  OpenIdConnect = 1,\n  Saml2 = 2,\n}\n\nexport enum OpenIdConnectRedirectBehavior {\n  RedirectGet = 0,\n  FormPost = 1,\n}\n\nexport enum Saml2BindingType {\n  HttpRedirect = 1,\n  HttpPost = 2,\n}\n\nexport enum Saml2NameIdFormat {\n  NotConfigured = 0,\n  Unspecified = 1,\n  EmailAddress = 2,\n  X509SubjectName = 3,\n  WindowsDomainQualifiedName = 4,\n  KerberosPrincipalName = 5,\n  EntityIdentifier = 6,\n  Persistent = 7,\n  Transient = 8,\n}\n\nexport enum Saml2SigningBehavior {\n  IfIdpWantAuthnRequestsSigned = 0,\n  Always = 1,\n  Never = 3,\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\nimport {\n  OpenIdConnectRedirectBehavior,\n  Saml2BindingType,\n  Saml2NameIdFormat,\n  Saml2SigningBehavior,\n  SsoType,\n} from \"../../enums/sso\";\nimport { SsoConfigView } from \"../view/sso-config.view\";\n\nexport class SsoConfigApi extends BaseResponse {\n  static fromView(view: SsoConfigView, api = new SsoConfigApi()) {\n    api.configType = view.configType;\n\n    api.keyConnectorEnabled = view.keyConnectorEnabled;\n    api.keyConnectorUrl = view.keyConnectorUrl;\n\n    if (api.configType === SsoType.OpenIdConnect) {\n      api.authority = view.openId.authority;\n      api.clientId = view.openId.clientId;\n      api.clientSecret = view.openId.clientSecret;\n      api.metadataAddress = view.openId.metadataAddress;\n      api.redirectBehavior = view.openId.redirectBehavior;\n      api.getClaimsFromUserInfoEndpoint = view.openId.getClaimsFromUserInfoEndpoint;\n      api.additionalScopes = view.openId.additionalScopes;\n      api.additionalUserIdClaimTypes = view.openId.additionalUserIdClaimTypes;\n      api.additionalEmailClaimTypes = view.openId.additionalEmailClaimTypes;\n      api.additionalNameClaimTypes = view.openId.additionalNameClaimTypes;\n      api.acrValues = view.openId.acrValues;\n      api.expectedReturnAcrValue = view.openId.expectedReturnAcrValue;\n    } else if (api.configType === SsoType.Saml2) {\n      api.spNameIdFormat = view.saml.spNameIdFormat;\n      api.spOutboundSigningAlgorithm = view.saml.spOutboundSigningAlgorithm;\n      api.spSigningBehavior = view.saml.spSigningBehavior;\n      api.spMinIncomingSigningAlgorithm = view.saml.spMinIncomingSigningAlgorithm;\n      api.spWantAssertionsSigned = view.saml.spWantAssertionsSigned;\n      api.spValidateCertificates = view.saml.spValidateCertificates;\n\n      api.idpEntityId = view.saml.idpEntityId;\n      api.idpBindingType = view.saml.idpBindingType;\n      api.idpSingleSignOnServiceUrl = view.saml.idpSingleSignOnServiceUrl;\n      api.idpSingleLogoutServiceUrl = view.saml.idpSingleLogoutServiceUrl;\n      api.idpX509PublicCert = view.saml.idpX509PublicCert;\n      api.idpOutboundSigningAlgorithm = view.saml.idpOutboundSigningAlgorithm;\n      api.idpAllowUnsolicitedAuthnResponse = view.saml.idpAllowUnsolicitedAuthnResponse;\n      api.idpWantAuthnRequestsSigned = view.saml.idpWantAuthnRequestsSigned;\n\n      // Value is inverted in the api model (disable instead of allow)\n      api.idpDisableOutboundLogoutRequests = !view.saml.idpAllowOutboundLogoutRequests;\n    }\n\n    return api;\n  }\n  configType: SsoType;\n\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n\n  // OpenId\n  authority: string;\n  clientId: string;\n  clientSecret: string;\n  metadataAddress: string;\n  redirectBehavior: OpenIdConnectRedirectBehavior;\n  getClaimsFromUserInfoEndpoint: boolean;\n  additionalScopes: string;\n  additionalUserIdClaimTypes: string;\n  additionalEmailClaimTypes: string;\n  additionalNameClaimTypes: string;\n  acrValues: string;\n  expectedReturnAcrValue: string;\n\n  // SAML\n  spNameIdFormat: Saml2NameIdFormat;\n  spOutboundSigningAlgorithm: string;\n  spSigningBehavior: Saml2SigningBehavior;\n  spMinIncomingSigningAlgorithm: string;\n  spWantAssertionsSigned: boolean;\n  spValidateCertificates: boolean;\n\n  idpEntityId: string;\n  idpBindingType: Saml2BindingType;\n  idpSingleSignOnServiceUrl: string;\n  idpSingleLogoutServiceUrl: string;\n  idpX509PublicCert: string;\n  idpOutboundSigningAlgorithm: string;\n  idpAllowUnsolicitedAuthnResponse: boolean;\n  idpDisableOutboundLogoutRequests: boolean;\n  idpWantAuthnRequestsSigned: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n\n    this.configType = this.getResponseProperty(\"ConfigType\");\n\n    this.keyConnectorEnabled = this.getResponseProperty(\"KeyConnectorEnabled\");\n    this.keyConnectorUrl = this.getResponseProperty(\"KeyConnectorUrl\");\n\n    this.authority = this.getResponseProperty(\"Authority\");\n    this.clientId = this.getResponseProperty(\"ClientId\");\n    this.clientSecret = this.getResponseProperty(\"ClientSecret\");\n    this.metadataAddress = this.getResponseProperty(\"MetadataAddress\");\n    this.redirectBehavior = this.getResponseProperty(\"RedirectBehavior\");\n    this.getClaimsFromUserInfoEndpoint = this.getResponseProperty(\"GetClaimsFromUserInfoEndpoint\");\n    this.additionalScopes = this.getResponseProperty(\"AdditionalScopes\");\n    this.additionalUserIdClaimTypes = this.getResponseProperty(\"AdditionalUserIdClaimTypes\");\n    this.additionalEmailClaimTypes = this.getResponseProperty(\"AdditionalEmailClaimTypes\");\n    this.additionalNameClaimTypes = this.getResponseProperty(\"AdditionalNameClaimTypes\");\n    this.acrValues = this.getResponseProperty(\"AcrValues\");\n    this.expectedReturnAcrValue = this.getResponseProperty(\"ExpectedReturnAcrValue\");\n\n    this.spNameIdFormat = this.getResponseProperty(\"SpNameIdFormat\");\n    this.spOutboundSigningAlgorithm = this.getResponseProperty(\"SpOutboundSigningAlgorithm\");\n    this.spSigningBehavior = this.getResponseProperty(\"SpSigningBehavior\");\n    this.spMinIncomingSigningAlgorithm = this.getResponseProperty(\"SpMinIncomingSigningAlgorithm\");\n    this.spWantAssertionsSigned = this.getResponseProperty(\"SpWantAssertionsSigned\");\n    this.spValidateCertificates = this.getResponseProperty(\"SpValidateCertificates\");\n\n    this.idpEntityId = this.getResponseProperty(\"IdpEntityId\");\n    this.idpBindingType = this.getResponseProperty(\"IdpBindingType\");\n    this.idpSingleSignOnServiceUrl = this.getResponseProperty(\"IdpSingleSignOnServiceUrl\");\n    this.idpSingleLogoutServiceUrl = this.getResponseProperty(\"IdpSingleLogoutServiceUrl\");\n    this.idpX509PublicCert = this.getResponseProperty(\"IdpX509PublicCert\");\n    this.idpOutboundSigningAlgorithm = this.getResponseProperty(\"IdpOutboundSigningAlgorithm\");\n    this.idpAllowUnsolicitedAuthnResponse = this.getResponseProperty(\n      \"IdpAllowUnsolicitedAuthnResponse\"\n    );\n    this.idpDisableOutboundLogoutRequests = this.getResponseProperty(\n      \"IdpDisableOutboundLogoutRequests\"\n    );\n    this.idpWantAuthnRequestsSigned = this.getResponseProperty(\"IdpWantAuthnRequestsSigned\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\nimport { SsoConfigApi } from \"../api/sso-config.api\";\n\nexport class OrganizationSsoResponse extends BaseResponse {\n  enabled: boolean;\n  identifier: string;\n  data: SsoConfigApi;\n  urls: SsoUrls;\n\n  constructor(response: any) {\n    super(response);\n    this.enabled = this.getResponseProperty(\"Enabled\");\n    this.identifier = this.getResponseProperty(\"Identifier\");\n    this.data =\n      this.getResponseProperty(\"Data\") != null\n        ? new SsoConfigApi(this.getResponseProperty(\"Data\"))\n        : null;\n    this.urls = new SsoUrls(this.getResponseProperty(\"Urls\"));\n  }\n}\n\nclass SsoUrls extends BaseResponse {\n  callbackPath: string;\n  signedOutCallbackPath: string;\n  spEntityId: string;\n  spMetadataUrl: string;\n  spAcsUrl: string;\n\n  constructor(response: any) {\n    super(response);\n    this.callbackPath = this.getResponseProperty(\"CallbackPath\");\n    this.signedOutCallbackPath = this.getResponseProperty(\"SignedOutCallbackPath\");\n    this.spEntityId = this.getResponseProperty(\"SpEntityId\");\n    this.spMetadataUrl = this.getResponseProperty(\"SpMetadataUrl\");\n    this.spAcsUrl = this.getResponseProperty(\"SpAcsUrl\");\n  }\n}\n","import { OrganizationApiKeyType } from \"../../auth/enums/organization-api-key-type\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class OrganizationApiKeyInformationResponse extends BaseResponse {\n  keyType: OrganizationApiKeyType;\n\n  constructor(response: any) {\n    super(response);\n    this.keyType = this.getResponseProperty(\"KeyType\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class OrganizationAutoEnrollStatusResponse extends BaseResponse {\n  id: string;\n  resetPasswordEnabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.resetPasswordEnabled = this.getResponseProperty(\"ResetPasswordEnabled\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class KeysResponse extends BaseResponse {\n  privateKey: string;\n  publicKey: string;\n\n  constructor(response: any) {\n    super(response);\n    this.privateKey = this.getResponseProperty(\"PrivateKey\");\n    this.publicKey = this.getResponseProperty(\"PublicKey\");\n  }\n}\n","import { KeysResponse } from \"./keys.response\";\n\nexport class OrganizationKeysResponse extends KeysResponse {\n  constructor(response: any) {\n    super(response);\n  }\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { BaseResponse } from \"./base.response\";\nimport { PlanResponse } from \"./plan.response\";\n\nexport class OrganizationResponse extends BaseResponse {\n  id: string;\n  name: string;\n  businessName: string;\n  businessAddress1: string;\n  businessAddress2: string;\n  businessAddress3: string;\n  businessCountry: string;\n  businessTaxNumber: string;\n  billingEmail: string;\n  plan: PlanResponse;\n  planType: PlanType;\n  seats: number;\n  maxAutoscaleSeats: number;\n  maxCollections: number;\n  maxStorageGb: number;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  hasPublicAndPrivateKeys: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.businessName = this.getResponseProperty(\"BusinessName\");\n    this.businessAddress1 = this.getResponseProperty(\"BusinessAddress1\");\n    this.businessAddress2 = this.getResponseProperty(\"BusinessAddress2\");\n    this.businessAddress3 = this.getResponseProperty(\"BusinessAddress3\");\n    this.businessCountry = this.getResponseProperty(\"BusinessCountry\");\n    this.businessTaxNumber = this.getResponseProperty(\"BusinessTaxNumber\");\n    this.billingEmail = this.getResponseProperty(\"BillingEmail\");\n    const plan = this.getResponseProperty(\"Plan\");\n    this.plan = plan == null ? null : new PlanResponse(plan);\n    this.planType = this.getResponseProperty(\"PlanType\");\n    this.seats = this.getResponseProperty(\"Seats\");\n    this.maxAutoscaleSeats = this.getResponseProperty(\"MaxAutoscaleSeats\");\n    this.maxCollections = this.getResponseProperty(\"MaxCollections\");\n    this.maxStorageGb = this.getResponseProperty(\"MaxStorageGb\");\n    this.useGroups = this.getResponseProperty(\"UseGroups\");\n    this.useDirectory = this.getResponseProperty(\"UseDirectory\");\n    this.useEvents = this.getResponseProperty(\"UseEvents\");\n    this.useTotp = this.getResponseProperty(\"UseTotp\");\n    this.use2fa = this.getResponseProperty(\"Use2fa\");\n    this.useApi = this.getResponseProperty(\"UseApi\");\n    this.useResetPassword = this.getResponseProperty(\"UseResetPassword\");\n    this.useSecretsManager = this.getResponseProperty(\"UseSecretsManager\");\n    this.hasPublicAndPrivateKeys = this.getResponseProperty(\"HasPublicAndPrivateKeys\");\n  }\n}\n","import { OrganizationResponse } from \"./organization.response\";\nimport {\n  BillingSubscriptionResponse,\n  BillingSubscriptionUpcomingInvoiceResponse,\n} from \"./subscription.response\";\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n  storageName: string;\n  storageGb: number;\n  subscription: BillingSubscriptionResponse;\n  upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n  expiration: string;\n\n  constructor(response: any) {\n    super(response);\n    this.storageName = this.getResponseProperty(\"StorageName\");\n    this.storageGb = this.getResponseProperty(\"StorageGb\");\n    const subscription = this.getResponseProperty(\"Subscription\");\n    this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n    const upcomingInvoice = this.getResponseProperty(\"UpcomingInvoice\");\n    this.upcomingInvoice =\n      upcomingInvoice == null\n        ? null\n        : new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    this.expiration = this.getResponseProperty(\"Expiration\");\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class ResetPasswordPolicyOptions extends Domain {\n  autoEnrollEnabled = false;\n}\n","export enum ProviderUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1, // Not used, compile-time support only\n}\n","export enum ProviderUserType {\n  ProviderAdmin = 0,\n  ServiceUser = 1,\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProviderData } from \"../data/provider.data\";\n\nexport class Provider {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(obj?: ProviderData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.userId = obj.userId;\n    this.useEvents = obj.useEvents;\n  }\n\n  get canAccess() {\n    if (this.isProviderAdmin) {\n      return true;\n    }\n    return this.enabled && this.status === ProviderUserStatusType.Confirmed;\n  }\n\n  get canCreateOrganizations() {\n    return this.enabled && this.isProviderAdmin;\n  }\n\n  get canManageUsers() {\n    return this.isProviderAdmin;\n  }\n\n  get canAccessEventLogs() {\n    return this.isProviderAdmin;\n  }\n\n  get isProviderAdmin() {\n    return this.type === ProviderUserType.ProviderAdmin;\n  }\n}\n","import * as lunr from \"lunr\";\n\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { SearchService as SearchServiceAbstraction } from \"../abstractions/search.service\";\nimport { FieldType } from \"../enums/fieldType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { SendView } from \"../models/view/send.view\";\nimport { CipherService } from \"../vault/abstractions/cipher.service\";\nimport { CipherType } from \"../vault/enums/cipher-type\";\nimport { CipherView } from \"../vault/models/view/cipher.view\";\n\nexport class SearchService implements SearchServiceAbstraction {\n  private static registeredPipeline = false;\n\n  indexedEntityId?: string = null;\n  private indexing = false;\n  private index: lunr.Index = null;\n  private readonly immediateSearchLocales: string[] = [\"zh-CN\", \"zh-TW\", \"ja\", \"ko\", \"vi\"];\n  private readonly defaultSearchableMinLength: number = 2;\n  private searchableMinLength: number = this.defaultSearchableMinLength;\n\n  constructor(\n    private cipherService: CipherService,\n    private logService: LogService,\n    private i18nService: I18nService\n  ) {\n    this.i18nService.locale$.subscribe((locale) => {\n      if (this.immediateSearchLocales.indexOf(locale) !== -1) {\n        this.searchableMinLength = 1;\n      } else {\n        this.searchableMinLength = this.defaultSearchableMinLength;\n      }\n    });\n\n    // Currently have to ensure this is only done a single time. Lunr allows you to register a function\n    // multiple times but they will add a warning message to the console. The way they do that breaks when ran on a service worker.\n    if (!SearchService.registeredPipeline) {\n      SearchService.registeredPipeline = true;\n      //register lunr pipeline function\n      lunr.Pipeline.registerFunction(this.normalizeAccentsPipelineFunction, \"normalizeAccents\");\n    }\n  }\n\n  clearIndex(): void {\n    this.indexedEntityId = null;\n    this.index = null;\n  }\n\n  isSearchable(query: string): boolean {\n    query = SearchService.normalizeSearchQuery(query);\n    const notSearchable =\n      query == null ||\n      (this.index == null && query.length < this.searchableMinLength) ||\n      (this.index != null && query.length < this.searchableMinLength && query.indexOf(\">\") !== 0);\n    return !notSearchable;\n  }\n\n  async indexCiphers(indexedEntityId?: string, ciphers?: CipherView[]): Promise<void> {\n    if (this.indexing) {\n      return;\n    }\n\n    this.indexing = true;\n    this.indexedEntityId = indexedEntityId;\n    this.index = null;\n    const builder = new lunr.Builder();\n    builder.pipeline.add(this.normalizeAccentsPipelineFunction);\n    builder.ref(\"id\");\n    builder.field(\"shortid\", { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n    builder.field(\"name\", {\n      boost: 10,\n    });\n    builder.field(\"subtitle\", {\n      boost: 5,\n      extractor: (c: CipherView) => {\n        if (c.subTitle != null && c.type === CipherType.Card) {\n          return c.subTitle.replace(/\\*/g, \"\");\n        }\n        return c.subTitle;\n      },\n    });\n    builder.field(\"notes\");\n    builder.field(\"login.username\", {\n      extractor: (c: CipherView) =>\n        c.type === CipherType.Login && c.login != null ? c.login.username : null,\n    });\n    builder.field(\"login.uris\", { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n    builder.field(\"fields\", { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n    builder.field(\"fields_joined\", { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n    builder.field(\"attachments\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, false),\n    });\n    builder.field(\"attachments_joined\", {\n      extractor: (c: CipherView) => this.attachmentExtractor(c, true),\n    });\n    builder.field(\"organizationid\", { extractor: (c: CipherView) => c.organizationId });\n    ciphers = ciphers || (await this.cipherService.getAllDecrypted());\n    ciphers.forEach((c) => builder.add(c));\n    this.index = builder.build();\n\n    this.indexing = false;\n\n    this.logService.info(\"Finished search indexing\");\n  }\n\n  async searchCiphers(\n    query: string,\n    filter: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[] = null,\n    ciphers: CipherView[] = null\n  ): Promise<CipherView[]> {\n    const results: CipherView[] = [];\n    if (query != null) {\n      query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    }\n    if (query === \"\") {\n      query = null;\n    }\n\n    if (ciphers == null) {\n      ciphers = await this.cipherService.getAllDecrypted();\n    }\n\n    if (filter != null && Array.isArray(filter) && filter.length > 0) {\n      ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n    } else if (filter != null) {\n      ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n    }\n\n    if (!this.isSearchable(query)) {\n      return ciphers;\n    }\n\n    if (this.indexing) {\n      await new Promise((r) => setTimeout(r, 250));\n      if (this.indexing) {\n        await new Promise((r) => setTimeout(r, 500));\n      }\n    }\n\n    const index = this.getIndexForSearch();\n    if (index == null) {\n      // Fall back to basic search if index is not available\n      return this.searchCiphersBasic(ciphers, query);\n    }\n\n    const ciphersMap = new Map<string, CipherView>();\n    ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n    let searchResults: lunr.Index.Result[] = null;\n    const isQueryString = query != null && query.length > 1 && query.indexOf(\">\") === 0;\n    if (isQueryString) {\n      try {\n        searchResults = index.search(query.substr(1).trim());\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n      searchResults = index.query((q) => {\n        lunr.tokenizer(query).forEach((token) => {\n          const t = token.toString();\n          q.term(t, { fields: [\"name\"], wildcard: soWild });\n          q.term(t, { fields: [\"subtitle\"], wildcard: soWild });\n          q.term(t, { fields: [\"login.uris\"], wildcard: soWild });\n          q.term(t, {});\n        });\n      });\n    }\n\n    if (searchResults != null) {\n      searchResults.forEach((r) => {\n        if (ciphersMap.has(r.ref)) {\n          results.push(ciphersMap.get(r.ref));\n        }\n      });\n    }\n    return results;\n  }\n\n  searchCiphersBasic(ciphers: CipherView[], query: string, deleted = false) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLowerCase());\n    return ciphers.filter((c) => {\n      if (deleted !== c.isDeleted) {\n        return false;\n      }\n      if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (query.length >= 8 && c.id.startsWith(query)) {\n        return true;\n      }\n      if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n        return true;\n      }\n      if (\n        c.login &&\n        c.login.hasUris &&\n        c.login.uris.some((loginUri) => loginUri?.uri?.toLowerCase().indexOf(query) > -1)\n      ) {\n        return true;\n      }\n      return false;\n    });\n  }\n\n  searchSends(sends: SendView[], query: string) {\n    query = SearchService.normalizeSearchQuery(query.trim().toLocaleLowerCase());\n    if (query === null) {\n      return sends;\n    }\n    const sendsMatched: SendView[] = [];\n    const lowPriorityMatched: SendView[] = [];\n    sends.forEach((s) => {\n      if (s.name != null && s.name.toLowerCase().indexOf(query) > -1) {\n        sendsMatched.push(s);\n      } else if (\n        query.length >= 8 &&\n        (s.id.startsWith(query) ||\n          s.accessId.toLocaleLowerCase().startsWith(query) ||\n          (s.file?.id != null && s.file.id.startsWith(query)))\n      ) {\n        lowPriorityMatched.push(s);\n      } else if (s.notes != null && s.notes.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.text?.text != null && s.text.text.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      } else if (s.file?.fileName != null && s.file.fileName.toLowerCase().indexOf(query) > -1) {\n        lowPriorityMatched.push(s);\n      }\n    });\n    return sendsMatched.concat(lowPriorityMatched);\n  }\n\n  getIndexForSearch(): lunr.Index {\n    return this.index;\n  }\n\n  private fieldExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasFields) {\n      return null;\n    }\n    let fields: string[] = [];\n    c.fields.forEach((f) => {\n      if (f.name != null) {\n        fields.push(f.name);\n      }\n      if (f.type === FieldType.Text && f.value != null) {\n        fields.push(f.value);\n      }\n    });\n    fields = fields.filter((f) => f.trim() !== \"\");\n    if (fields.length === 0) {\n      return null;\n    }\n    return joined ? fields.join(\" \") : fields;\n  }\n\n  private attachmentExtractor(c: CipherView, joined: boolean) {\n    if (!c.hasAttachments) {\n      return null;\n    }\n    let attachments: string[] = [];\n    c.attachments.forEach((a) => {\n      if (a != null && a.fileName != null) {\n        if (joined && a.fileName.indexOf(\".\") > -1) {\n          attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf(\".\")));\n        } else {\n          attachments.push(a.fileName);\n        }\n      }\n    });\n    attachments = attachments.filter((f) => f.trim() !== \"\");\n    if (attachments.length === 0) {\n      return null;\n    }\n    return joined ? attachments.join(\" \") : attachments;\n  }\n\n  private uriExtractor(c: CipherView) {\n    if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n      return null;\n    }\n    const uris: string[] = [];\n    c.login.uris.forEach((u) => {\n      if (u.uri == null || u.uri === \"\") {\n        return;\n      }\n      if (u.hostname != null) {\n        uris.push(u.hostname);\n        return;\n      }\n      let uri = u.uri;\n      if (u.match !== UriMatchType.RegularExpression) {\n        const protocolIndex = uri.indexOf(\"://\");\n        if (protocolIndex > -1) {\n          uri = uri.substr(protocolIndex + 3);\n        }\n        const queryIndex = uri.search(/\\?|&|#/);\n        if (queryIndex > -1) {\n          uri = uri.substring(0, queryIndex);\n        }\n      }\n      uris.push(uri);\n    });\n    return uris.length > 0 ? uris : null;\n  }\n\n  private normalizeAccentsPipelineFunction(token: lunr.Token): any {\n    const searchableFields = [\"name\", \"login.username\", \"subtitle\", \"notes\"];\n    const fields = (token as any).metadata[\"fields\"];\n    const checkFields = fields.every((i: any) => searchableFields.includes(i));\n\n    if (checkFields) {\n      return SearchService.normalizeSearchQuery(token.toString());\n    }\n\n    return token;\n  }\n\n  // Remove accents/diacritics characters from text. This regex is equivalent to the Diacritic unicode property escape, i.e. it will match all diacritic characters.\n  static normalizeSearchQuery(query: string): string {\n    return query?.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n}\n","import { SendFileApi } from \"../api/send-file.api\";\n\nexport class SendFileData {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data?: SendFileApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.id = data.id;\n    this.fileName = data.fileName;\n    this.size = data.size;\n    this.sizeName = data.sizeName;\n  }\n}\n","import { SendTextApi } from \"../api/send-text.api\";\n\nexport class SendTextData {\n  text: string;\n  hidden: boolean;\n\n  constructor(data?: SendTextApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.text = data.text;\n    this.hidden = data.hidden;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendResponse } from \"../response/send.response\";\n\nimport { SendFileData } from \"./send-file.data\";\nimport { SendTextData } from \"./send-text.data\";\n\nexport class SendData {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: string;\n  notes: string;\n  file: SendFileData;\n  text: SendTextData;\n  key: string;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: string;\n  expirationDate: string;\n  deletionDate: string;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(response?: SendResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.accessId = response.accessId;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.key = response.key;\n    this.maxAccessCount = response.maxAccessCount;\n    this.accessCount = response.accessCount;\n    this.revisionDate = response.revisionDate;\n    this.expirationDate = response.expirationDate;\n    this.deletionDate = response.deletionDate;\n    this.password = response.password;\n    this.disabled = response.disable;\n    this.hideEmail = response.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextData(response.text);\n        break;\n      case SendType.File:\n        this.file = new SendFileData(response.file);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SendData } from \"../data/send.data\";\nimport { SendView } from \"../view/send.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SendFile } from \"./send-file\";\nimport { SendText } from \"./send-text\";\n\nexport class Send extends Domain {\n  id: string;\n  accessId: string;\n  type: SendType;\n  name: EncString;\n  notes: EncString;\n  file: SendFile;\n  text: SendText;\n  key: EncString;\n  maxAccessCount?: number;\n  accessCount: number;\n  revisionDate: Date;\n  expirationDate: Date;\n  deletionDate: Date;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(obj?: SendData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        accessId: null,\n        name: null,\n        notes: null,\n        key: null,\n      },\n      [\"id\", \"accessId\"]\n    );\n\n    this.type = obj.type;\n    this.maxAccessCount = obj.maxAccessCount;\n    this.accessCount = obj.accessCount;\n    this.password = obj.password;\n    this.disabled = obj.disabled;\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.deletionDate = obj.deletionDate != null ? new Date(obj.deletionDate) : null;\n    this.expirationDate = obj.expirationDate != null ? new Date(obj.expirationDate) : null;\n    this.hideEmail = obj.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(): Promise<SendView> {\n    const model = new SendView(this);\n\n    const cryptoService = Utils.getContainerService().getCryptoService();\n\n    try {\n      model.key = await cryptoService.decryptToBytes(this.key, null);\n      model.cryptoKey = await cryptoService.makeSendKey(model.key);\n    } catch (e) {\n      // TODO: error?\n    }\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      null,\n      model.cryptoKey\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(model.cryptoKey);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(model.cryptoKey);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export enum StorageLocation {\n  Both = \"both\",\n  Disk = \"disk\",\n  Memory = \"memory\",\n}\n","import { ProviderUserStatusType } from \"../../enums/providerUserStatusType\";\nimport { ProviderUserType } from \"../../enums/providerUserType\";\nimport { ProfileProviderResponse } from \"../response/profile-provider.response\";\n\nexport class ProviderData {\n  id: string;\n  name: string;\n  status: ProviderUserStatusType;\n  type: ProviderUserType;\n  enabled: boolean;\n  userId: string;\n  useEvents: boolean;\n\n  constructor(response: ProfileProviderResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.userId = response.userId;\n    this.useEvents = response.useEvents;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\nexport class State<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  accounts: { [userId: string]: TAccount } = {};\n  globals: TGlobalState;\n  activeUserId: string;\n  authenticatedAccounts: string[] = [];\n  accountActivity: { [userId: string]: number } = {};\n\n  constructor(globals: TGlobalState) {\n    this.globals = globals;\n  }\n\n  // TODO, make Jsonify<State,TGlobalState,TAccount> work. It currently doesn't because Globals doesn't implement Jsonify.\n  static fromJSON<TGlobalState extends GlobalState, TAccount extends Account>(\n    obj: any,\n    accountDeserializer: (json: Jsonify<TAccount>) => TAccount\n  ): State<TGlobalState, TAccount> {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new State(null), obj, {\n      accounts: State.buildAccountMapFromJSON(obj?.accounts, accountDeserializer),\n    });\n  }\n\n  private static buildAccountMapFromJSON<TAccount extends Account>(\n    jsonAccounts: { [userId: string]: Jsonify<TAccount> },\n    accountDeserializer: (json: Jsonify<TAccount>) => TAccount\n  ) {\n    if (!jsonAccounts) {\n      return {};\n    }\n    const accounts: { [userId: string]: TAccount } = {};\n    for (const userId in jsonAccounts) {\n      accounts[userId] = accountDeserializer(jsonAccounts[userId]);\n    }\n    return accounts;\n  }\n}\n","import { FolderResponse } from \"../response/folder.response\";\n\nexport class FolderData {\n  id: string;\n  name: string;\n  revisionDate: string;\n\n  constructor(response: FolderResponse) {\n    this.name = response.name;\n    this.id = response.id;\n    this.revisionDate = response.revisionDate;\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\nimport { Jsonify } from \"type-fest\";\n\nimport { LogService } from \"../abstractions/log.service\";\nimport { StateService as StateServiceAbstraction } from \"../abstractions/state.service\";\nimport { StateMigrationService } from \"../abstractions/stateMigration.service\";\nimport {\n  AbstractMemoryStorageService,\n  AbstractStorageService,\n} from \"../abstractions/storage.service\";\nimport { EnvironmentUrls } from \"../auth/models/domain/environment-urls\";\nimport { KdfConfig } from \"../auth/models/domain/kdf-config\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StorageLocation } from \"../enums/storageLocation\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport {\n  Account,\n  AccountData,\n  AccountSettings,\n  AccountSettingsSettings,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { Policy } from \"../models/domain/policy\";\nimport { State } from \"../models/domain/state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\nimport { GeneratedPasswordHistory } from \"../tools/generator/password\";\nimport { CipherData } from \"../vault/models/data/cipher.data\";\nimport { FolderData } from \"../vault/models/data/folder.data\";\nimport { LocalData } from \"../vault/models/data/local.data\";\nimport { CipherView } from \"../vault/models/view/cipher.view\";\nimport { AddEditCipherInfo } from \"../vault/types/add-edit-cipher-info\";\n\nconst keys = {\n  state: \"state\",\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nconst DDG_SHARED_KEY = \"DuckDuckGoSharedKey\";\n\nexport class StateService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> implements StateServiceAbstraction<TAccount>\n{\n  protected accountsSubject = new BehaviorSubject<{ [userId: string]: TAccount }>({});\n  accounts$ = this.accountsSubject.asObservable();\n\n  protected activeAccountSubject = new BehaviorSubject<string | null>(null);\n  activeAccount$ = this.activeAccountSubject.asObservable();\n\n  protected activeAccountUnlockedSubject = new BehaviorSubject<boolean>(false);\n  activeAccountUnlocked$ = this.activeAccountUnlockedSubject.asObservable();\n\n  private hasBeenInited = false;\n  private isRecoveredSession = false;\n\n  protected accountDiskCache = new BehaviorSubject<Record<string, TAccount>>({});\n\n  // default account serializer, must be overridden by child class\n  protected accountDeserializer = Account.fromJSON as (json: Jsonify<TAccount>) => TAccount;\n\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected memoryStorageService: AbstractMemoryStorageService,\n    protected logService: LogService,\n    protected stateMigrationService: StateMigrationService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>,\n    protected useAccountCache: boolean = true\n  ) {\n    // If the account gets changed, verify the new account is unlocked\n    this.activeAccountSubject\n      .pipe(\n        concatMap(async (userId) => {\n          if (userId == null && this.activeAccountUnlockedSubject.getValue() == false) {\n            return;\n          } else if (userId == null) {\n            this.activeAccountUnlockedSubject.next(false);\n          }\n\n          // FIXME: This should be refactored into AuthService or a similar service,\n          //  as checking for the existance of the crypto key is a low level\n          //  implementation detail.\n          this.activeAccountUnlockedSubject.next((await this.getCryptoMasterKey()) != null);\n        })\n      )\n      .subscribe();\n  }\n\n  async init(): Promise<void> {\n    if (this.hasBeenInited) {\n      return;\n    }\n\n    if (await this.stateMigrationService.needsMigration()) {\n      await this.stateMigrationService.migrate();\n    }\n\n    await this.state().then(async (state) => {\n      if (state == null) {\n        await this.setState(new State<TGlobalState, TAccount>(this.createGlobals()));\n      } else {\n        this.isRecoveredSession = true;\n      }\n    });\n    await this.initAccountState();\n    this.hasBeenInited = true;\n  }\n\n  async initAccountState() {\n    if (this.isRecoveredSession) {\n      return;\n    }\n\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts =\n        (await this.storageService.get<string[]>(keys.authenticatedAccounts)) ?? [];\n      for (const i in state.authenticatedAccounts) {\n        if (i != null) {\n          await this.syncAccountFromDisk(state.authenticatedAccounts[i]);\n        }\n      }\n      const storedActiveUser = await this.storageService.get<string>(keys.activeUserId);\n      if (storedActiveUser != null) {\n        state.activeUserId = storedActiveUser;\n      }\n      await this.pushAccounts();\n      this.activeAccountSubject.next(state.activeUserId);\n\n      return state;\n    });\n  }\n\n  async syncAccountFromDisk(userId: string) {\n    if (userId == null) {\n      return;\n    }\n    await this.updateState(async (state) => {\n      if (state.accounts == null) {\n        state.accounts = {};\n      }\n      state.accounts[userId] = this.createAccount();\n      const diskAccount = await this.getAccountFromDisk({ userId: userId });\n      state.accounts[userId].profile = diskAccount.profile;\n      return state;\n    });\n  }\n\n  async addAccount(account: TAccount) {\n    account = await this.setAccountEnvironmentUrls(account);\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts.push(account.profile.userId);\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n      state.accounts[account.profile.userId] = account;\n      return state;\n    });\n    await this.scaffoldNewAccountStorage(account);\n    await this.setLastActive(new Date().getTime(), { userId: account.profile.userId });\n    await this.setActiveUser(account.profile.userId);\n    this.activeAccountSubject.next(account.profile.userId);\n  }\n\n  async setActiveUser(userId: string): Promise<void> {\n    this.clearDecryptedDataForActiveUser();\n    await this.updateState(async (state) => {\n      state.activeUserId = userId;\n      await this.storageService.save(keys.activeUserId, userId);\n      this.activeAccountSubject.next(state.activeUserId);\n      return state;\n    });\n\n    await this.pushAccounts();\n  }\n\n  async clean(options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    await this.deAuthenticateAccount(options.userId);\n    if (options.userId === (await this.state())?.activeUserId) {\n      await this.dynamicallySetActiveUser();\n    }\n\n    await this.removeAccountFromDisk(options?.userId);\n    this.removeAccountFromMemory(options?.userId);\n    await this.pushAccounts();\n  }\n\n  async getAccessToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.accessToken;\n  }\n\n  async setAccessToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.accessToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAddEditCipherInfo(options?: StorageOptions): Promise<AddEditCipherInfo> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.addEditCipherInfo;\n  }\n\n  async setAddEditCipherInfo(value: AddEditCipherInfo, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.addEditCipherInfo = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getAlwaysShowDock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.alwaysShowDock ?? false\n    );\n  }\n\n  async setAlwaysShowDock(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.alwaysShowDock = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getApiKeyClientId(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.profile?.apiKeyClientId;\n  }\n\n  async setApiKeyClientId(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.profile.apiKeyClientId = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getApiKeyClientSecret(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.keys?.apiKeyClientSecret;\n  }\n\n  async setApiKeyClientSecret(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.keys.apiKeyClientSecret = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getAutoConfirmFingerPrints(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoConfirmFingerPrints ?? false\n    );\n  }\n\n  async setAutoConfirmFingerprints(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoConfirmFingerPrints = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getAutoFillOnPageLoadDefault(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.autoFillOnPageLoadDefault ?? true\n    );\n  }\n\n  async setAutoFillOnPageLoadDefault(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.autoFillOnPageLoadDefault = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricAwaitingAcceptance(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricAwaitingAcceptance ?? false\n    );\n  }\n\n  async setBiometricAwaitingAcceptance(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricAwaitingAcceptance = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricFingerprintValidated(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.biometricFingerprintValidated ?? false\n    );\n  }\n\n  async setBiometricFingerprintValidated(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricFingerprintValidated = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.biometricText;\n  }\n\n  async setBiometricText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.biometricText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getBiometricUnlock(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.biometricUnlock ?? false\n    );\n  }\n\n  async setBiometricUnlock(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.biometricUnlock = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCanAccessPremium(options?: StorageOptions): Promise<boolean> {\n    if (!(await this.getIsAuthenticated(options))) {\n      return false;\n    }\n\n    return (\n      (await this.getHasPremiumPersonally(options)) ||\n      (await this.getHasPremiumFromOrganization(options))\n    );\n  }\n\n  async getHasPremiumPersonally(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.profile?.hasPremiumPersonally;\n  }\n\n  async setHasPremiumPersonally(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumPersonally = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getHasPremiumFromOrganization(options?: StorageOptions): Promise<boolean> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    if (account.profile?.hasPremiumFromOrganization) {\n      return true;\n    }\n\n    // TODO: older server versions won't send the hasPremiumFromOrganization flag, so we're keeping the old logic\n    // for backwards compatibility. It can be removed after everyone has upgraded.\n    const organizations = await this.getOrganizations(options);\n    if (organizations == null) {\n      return false;\n    }\n\n    for (const id of Object.keys(organizations)) {\n      const o = organizations[id];\n      if (o.enabled && o.usersGetPremium && !o.isProviderUser) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async setHasPremiumFromOrganization(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.hasPremiumFromOrganization = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getClearClipboard(options?: StorageOptions): Promise<number> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.clearClipboard ?? null\n    );\n  }\n\n  async setClearClipboard(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.clearClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getCollapsedGroupings(options?: StorageOptions): Promise<string[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.collapsedGroupings;\n  }\n\n  async setCollapsedGroupings(value: string[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.collapsedGroupings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getConvertAccountToKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.convertAccountToKeyConnector;\n  }\n\n  async setConvertAccountToKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.convertAccountToKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getCryptoMasterKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoMasterKey;\n  }\n\n  async setCryptoMasterKey(value: SymmetricCryptoKey, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoMasterKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n\n    if (options.userId == this.activeAccountSubject.getValue()) {\n      const nextValue = value != null;\n\n      // Avoid emitting if we are already unlocked\n      if (this.activeAccountUnlockedSubject.getValue() != nextValue) {\n        this.activeAccountUnlockedSubject.next(nextValue);\n      }\n    }\n  }\n\n  async getCryptoMasterKeyAuto(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.autoKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyAuto(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"auto\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.autoKey, value, options);\n  }\n\n  async getCryptoMasterKeyB64(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options?.userId}${partialKeys.masterKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyB64(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.masterKey, value, options);\n  }\n\n  async getCryptoMasterKeyBiometric(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async hasCryptoMasterKeyBiometric(options?: StorageOptions): Promise<boolean> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return false;\n    }\n    return await this.secureStorageService.has(\n      `${options.userId}${partialKeys.biometricKey}`,\n      options\n    );\n  }\n\n  async setCryptoMasterKeyBiometric(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(\n      this.reconcileOptions(options, { keySuffix: \"biometric\" }),\n      await this.defaultSecureStorageOptions()\n    );\n    if (options?.userId == null) {\n      return;\n    }\n    await this.saveSecureStorageKey(partialKeys.biometricKey, value, options);\n  }\n\n  @withPrototypeForArrayMembers(CipherView, CipherView.fromJSON)\n  async getDecryptedCiphers(options?: StorageOptions): Promise<CipherView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.ciphers?.decrypted;\n  }\n\n  async setDecryptedCiphers(value: CipherView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.ciphers.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(CollectionView)\n  async getDecryptedCollections(options?: StorageOptions): Promise<CollectionView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.collections?.decrypted;\n  }\n\n  async setDecryptedCollections(value: CollectionView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.collections.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedCryptoSymmetricKey(options?: StorageOptions): Promise<SymmetricCryptoKey> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return account?.keys?.cryptoSymmetricKey?.decrypted;\n  }\n\n  async setDecryptedCryptoSymmetricKey(\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.cryptoSymmetricKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return Utils.recordToMap(account?.keys?.organizationKeys?.decrypted);\n  }\n\n  async setDecryptedOrganizationKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.organizationKeys.decrypted = Utils.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getDecryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.passwordGenerationHistory?.decrypted;\n  }\n\n  async setDecryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.passwordGenerationHistory.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPinProtected(options?: StorageOptions): Promise<EncString> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.settings?.pinProtected?.decrypted;\n  }\n\n  async setDecryptedPinProtected(value: EncString, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.settings.pinProtected.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(Policy)\n  async getDecryptedPolicies(options?: StorageOptions): Promise<Policy[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.policies?.decrypted;\n  }\n\n  async setDecryptedPolicies(value: Policy[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.policies.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedPrivateKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys?.privateKey.decrypted;\n  }\n\n  async setDecryptedPrivateKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.privateKey.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDecryptedProviderKeys(\n    options?: StorageOptions\n  ): Promise<Map<string, SymmetricCryptoKey>> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    return Utils.recordToMap(account?.keys?.providerKeys?.decrypted);\n  }\n\n  async setDecryptedProviderKeys(\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.providerKeys.decrypted = Utils.mapToRecord(value);\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(SendView)\n  async getDecryptedSends(options?: StorageOptions): Promise<SendView[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.data?.sends?.decrypted;\n  }\n\n  async setDecryptedSends(value: SendView[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.data.sends.decrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getDefaultUriMatch(options?: StorageOptions): Promise<UriMatchType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.defaultUriMatch;\n  }\n\n  async setDefaultUriMatch(value: UriMatchType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.defaultUriMatch = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAddLoginNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAddLoginNotification ?? false\n    );\n  }\n\n  async setDisableAddLoginNotification(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAddLoginNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoBiometricsPrompt(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoBiometricsPrompt ?? false\n    );\n  }\n\n  async setDisableAutoBiometricsPrompt(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoBiometricsPrompt = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableAutoTotpCopy(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableAutoTotpCopy ?? false\n    );\n  }\n\n  async setDisableAutoTotpCopy(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableAutoTotpCopy = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableBadgeCounter(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableBadgeCounter ?? false\n    );\n  }\n\n  async setDisableBadgeCounter(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableBadgeCounter = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableChangedPasswordNotification(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableChangedPasswordNotification ?? false\n    );\n  }\n\n  async setDisableChangedPasswordNotification(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableChangedPasswordNotification = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableContextMenuItem(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableContextMenuItem ?? false\n    );\n  }\n\n  async setDisableContextMenuItem(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableContextMenuItem = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDisableFavicon(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getGlobals(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.disableFavicon ?? false\n    );\n  }\n\n  async setDisableFavicon(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.disableFavicon = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getDisableGa(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.disableGa ?? false\n    );\n  }\n\n  async setDisableGa(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.disableGa = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDismissedAutofillCallout(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dismissedAutoFillOnPageLoadCallout ?? false\n    );\n  }\n\n  async setDismissedAutofillCallout(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dismissedAutoFillOnPageLoadCallout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowCardsCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowCardsCurrentTab ?? false\n    );\n  }\n\n  async setDontShowCardsCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowCardsCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDontShowIdentitiesCurrentTab(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.dontShowIdentitiesCurrentTab ?? false\n    );\n  }\n\n  async setDontShowIdentitiesCurrentTab(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.dontShowIdentitiesCurrentTab = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getDuckDuckGoSharedKey(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return null;\n    }\n    return await this.secureStorageService.get<string>(DDG_SHARED_KEY, options);\n  }\n\n  async setDuckDuckGoSharedKey(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultSecureStorageOptions());\n    if (options?.userId == null) {\n      return;\n    }\n    value == null\n      ? await this.secureStorageService.remove(DDG_SHARED_KEY, options)\n      : await this.secureStorageService.save(DDG_SHARED_KEY, value, options);\n  }\n\n  async getEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.profile?.email;\n  }\n\n  async setEmail(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.email = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getEmailVerified(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.profile.emailVerified ?? false\n    );\n  }\n\n  async setEmailVerified(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.emailVerified = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAlwaysOnTop(options?: StorageOptions): Promise<boolean> {\n    const accountPreference = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.enableAlwaysOnTop;\n    const globalPreference = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.enableAlwaysOnTop;\n    return accountPreference ?? globalPreference ?? false;\n  }\n\n  async setEnableAlwaysOnTop(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAlwaysOnTop = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableAlwaysOnTop = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableAutoFillOnPageLoad(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.enableAutoFillOnPageLoad ?? false\n    );\n  }\n\n  async setEnableAutoFillOnPageLoad(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.enableAutoFillOnPageLoad = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBiometric(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBiometrics ?? false\n    );\n  }\n\n  async setEnableBiometric(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableBrowserIntegration(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableBrowserIntegrationFingerprint(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableBrowserIntegrationFingerprint ?? false\n    );\n  }\n\n  async setEnableBrowserIntegrationFingerprint(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableBrowserIntegrationFingerprint = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableCloseToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableCloseToTray ?? false\n    );\n  }\n\n  async setEnableCloseToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableCloseToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableDuckDuckGoBrowserIntegration(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableDuckDuckGoBrowserIntegration ?? false\n    );\n  }\n\n  async setEnableDuckDuckGoBrowserIntegration(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableDuckDuckGoBrowserIntegration = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableFullWidth(options?: StorageOptions): Promise<boolean> {\n    return (\n      (\n        await this.getAccount(\n          this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n        )\n      )?.settings?.enableFullWidth ?? false\n    );\n  }\n\n  async setEnableFullWidth(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.enableFullWidth = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnableMinimizeToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableMinimizeToTray ?? false\n    );\n  }\n\n  async setEnableMinimizeToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableMinimizeToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableStartToTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableStartToTray ?? false\n    );\n  }\n\n  async setEnableStartToTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableStartToTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEnableTray(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.enableTray ?? false\n    );\n  }\n\n  async setEnableTray(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.enableTray = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CipherData)\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.ciphers?.encrypted;\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.ciphers.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(CollectionData)\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.collections?.encrypted;\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.collections.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedCryptoSymmetricKey(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys.cryptoSymmetricKey.encrypted;\n  }\n\n  async setEncryptedCryptoSymmetricKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.cryptoSymmetricKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(FolderData)\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.folders?.encrypted;\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.folders.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEncryptedOrganizationKeys(\n    options?: StorageOptions\n  ): Promise<{ [orgId: string]: EncryptedOrganizationKeyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.organizationKeys.encrypted;\n  }\n\n  async setEncryptedOrganizationKeys(\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.organizationKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(GeneratedPasswordHistory)\n  async getEncryptedPasswordGenerationHistory(\n    options?: StorageOptions\n  ): Promise<GeneratedPasswordHistory[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.passwordGenerationHistory?.encrypted;\n  }\n\n  async setEncryptedPasswordGenerationHistory(\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.passwordGenerationHistory.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPinProtected(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.pinProtected?.encrypted;\n  }\n\n  async setEncryptedPinProtected(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.pinProtected.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(PolicyData)\n  async getEncryptedPolicies(options?: StorageOptions): Promise<{ [id: string]: PolicyData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.policies?.encrypted;\n  }\n\n  async setEncryptedPolicies(\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.policies.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedPrivateKey(options?: StorageOptions): Promise<string> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    return account?.keys?.privateKey?.encrypted;\n  }\n\n  async setEncryptedPrivateKey(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.privateKey.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEncryptedProviderKeys(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.keys?.providerKeys?.encrypted;\n  }\n\n  async setEncryptedProviderKeys(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.keys.providerKeys.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(SendData)\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.data?.sends.encrypted;\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.data.sends.encrypted = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getEntityId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityId;\n  }\n\n  async setEntityId(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityId = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEntityType(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.profile?.entityType;\n  }\n\n  async setEntityType(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.profile.entityType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    if ((await this.state())?.activeUserId == null) {\n      return await this.getGlobalEnvironmentUrls(options);\n    }\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getAccount(options))?.settings?.environmentUrls ?? new EnvironmentUrls();\n  }\n\n  async setEnvironmentUrls(value: EnvironmentUrls, options?: StorageOptions): Promise<void> {\n    // Global values are set on each change and the current global settings are passed to any newly authed accounts.\n    // This is to allow setting environement values before an account is active, while still allowing individual accounts to have their own environments.\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.environmentUrls = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEquivalentDomains(options?: StorageOptions): Promise<string[][]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.equivalentDomains;\n  }\n\n  async setEquivalentDomains(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.equivalentDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForArrayMembers(EventData)\n  async getEventCollection(options?: StorageOptions): Promise<EventData[]> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.eventCollection;\n  }\n\n  async setEventCollection(value: EventData[], options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.eventCollection = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getEverBeenUnlocked(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.everBeenUnlocked ?? false\n    );\n  }\n\n  async setEverBeenUnlocked(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.everBeenUnlocked = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getForcePasswordReset(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions())))\n        ?.profile?.forcePasswordReset ?? false\n    );\n  }\n\n  async setForcePasswordReset(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.profile.forcePasswordReset = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getInstalledVersion(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.installedVersion;\n  }\n\n  async setInstalledVersion(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.installedVersion = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getIsAuthenticated(options?: StorageOptions): Promise<boolean> {\n    return (await this.getAccessToken(options)) != null && (await this.getUserId(options)) != null;\n  }\n\n  async getKdfConfig(options?: StorageOptions): Promise<KdfConfig> {\n    const iterations = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfIterations;\n    const memory = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfMemory;\n    const parallelism = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfParallelism;\n    return new KdfConfig(iterations, memory, parallelism);\n  }\n\n  async setKdfConfig(config: KdfConfig, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfIterations = config.iterations;\n    account.profile.kdfMemory = config.memory;\n    account.profile.kdfParallelism = config.parallelism;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKdfType(options?: StorageOptions): Promise<KdfType> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.kdfType;\n  }\n\n  async setKdfType(value: KdfType, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.kdfType = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getKeyHash(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.keyHash;\n  }\n\n  async setKeyHash(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.keyHash = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getLastActive(options?: StorageOptions): Promise<number> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n\n    const accountActivity = await this.storageService.get<{ [userId: string]: number }>(\n      keys.accountActivity,\n      options\n    );\n\n    if (accountActivity == null || Object.keys(accountActivity).length < 1) {\n      return null;\n    }\n\n    return accountActivity[options.userId];\n  }\n\n  async setLastActive(value: number, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    if (options.userId == null) {\n      return;\n    }\n    const accountActivity =\n      (await this.storageService.get<{ [userId: string]: number }>(\n        keys.accountActivity,\n        options\n      )) ?? {};\n    accountActivity[options.userId] = value;\n    await this.storageService.save(keys.accountActivity, accountActivity, options);\n  }\n\n  async getLastSync(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.profile?.lastSync;\n  }\n\n  async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.profile.lastSync = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getLocalData(options?: StorageOptions): Promise<{ [cipherId: string]: LocalData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.data?.localData;\n  }\n\n  async setLocalData(\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.data.localData = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getLocale(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.locale;\n  }\n\n  async setLocale(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.locale = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getMainWindowSize(options?: StorageOptions): Promise<number> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.mainWindowSize;\n  }\n\n  async setMainWindowSize(value: number, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.mainWindowSize = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getMinimizeOnCopyToClipboard(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.settings?.minimizeOnCopyToClipboard ?? false\n    );\n  }\n\n  async setMinimizeOnCopyToClipboard(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.minimizeOnCopyToClipboard = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNeverDomains(options?: StorageOptions): Promise<{ [id: string]: any }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.neverDomains;\n  }\n\n  async setNeverDomains(value: { [id: string]: any }, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.neverDomains = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometrics(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.noAutoPromptBiometrics ?? false\n    );\n  }\n\n  async setNoAutoPromptBiometrics(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometrics = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getNoAutoPromptBiometricsText(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.noAutoPromptBiometricsText;\n  }\n\n  async setNoAutoPromptBiometricsText(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.noAutoPromptBiometricsText = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOpenAtLogin(options?: StorageOptions): Promise<boolean> {\n    return (\n      (await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions())))\n        ?.openAtLogin ?? false\n    );\n  }\n\n  async setOpenAtLogin(value: boolean, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.openAtLogin = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getOrganizationInvitation(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.organizationInvitation;\n  }\n\n  async setOrganizationInvitation(value: any, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    globals.organizationInvitation = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async getOrganizations(options?: StorageOptions): Promise<{ [id: string]: OrganizationData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.organizations;\n  }\n\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  async setOrganizations(\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.organizations = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPasswordGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.passwordGenerationOptions;\n  }\n\n  async setPasswordGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.passwordGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUsernameGenerationOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.usernameGenerationOptions;\n  }\n\n  async setUsernameGenerationOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.usernameGenerationOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getGeneratorOptions(options?: StorageOptions): Promise<any> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.generatorOptions;\n  }\n\n  async setGeneratorOptions(value: any, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.generatorOptions = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getProtectedPin(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.settings?.protectedPin;\n  }\n\n  async setProtectedPin(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.settings.protectedPin = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  @withPrototypeForObjectValues(ProviderData)\n  async getProviders(options?: StorageOptions): Promise<{ [id: string]: ProviderData }> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.data?.providers;\n  }\n\n  async setProviders(\n    value: { [id: string]: ProviderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.data.providers = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getPublicKey(options?: StorageOptions): Promise<ArrayBuffer> {\n    const keys = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.keys;\n    return keys?.publicKey;\n  }\n\n  async setPublicKey(value: ArrayBuffer, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.keys.publicKey = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getRefreshToken(options?: StorageOptions): Promise<string> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    return (await this.getAccount(options))?.tokens?.refreshToken;\n  }\n\n  async setRefreshToken(value: string, options?: StorageOptions): Promise<void> {\n    options = await this.getTimeoutBasedStorageOptions(options);\n    const account = await this.getAccount(options);\n    account.tokens.refreshToken = value;\n    await this.saveAccount(account, options);\n  }\n\n  async getRememberedEmail(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.rememberedEmail;\n  }\n\n  async setRememberedEmail(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.rememberedEmail = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSecurityStamp(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultInMemoryOptions()))\n    )?.tokens?.securityStamp;\n  }\n\n  async setSecurityStamp(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n    account.tokens.securityStamp = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultInMemoryOptions())\n    );\n  }\n\n  async getSettings(options?: StorageOptions): Promise<AccountSettingsSettings> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions()))\n    )?.settings?.settings;\n  }\n\n  async setSettings(value: AccountSettingsSettings, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n    account.settings.settings = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskMemoryOptions())\n    );\n  }\n\n  async getSsoCodeVerifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoCodeVerifier;\n  }\n\n  async setSsoCodeVerifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoCodeVerifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getSsoOrgIdentifier(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.ssoOrganizationIdentifier;\n  }\n\n  async setSsoOrganizationIdentifier(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.ssoOrganizationIdentifier = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSsoState(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.ssoState;\n  }\n\n  async setSsoState(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.ssoState = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getTheme(options?: StorageOptions): Promise<ThemeType> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.theme;\n  }\n\n  async setTheme(value: ThemeType, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.theme = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getTwoFactorToken(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.twoFactorToken;\n  }\n\n  async setTwoFactorToken(value: string, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    globals.twoFactorToken = value;\n    await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getUserId(options?: StorageOptions): Promise<string> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.userId;\n  }\n\n  async getUsesKeyConnector(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskOptions()))\n    )?.profile?.usesKeyConnector;\n  }\n\n  async setUsesKeyConnector(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    account.profile.usesKeyConnector = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async getVaultTimeout(options?: StorageOptions): Promise<number> {\n    const accountVaultTimeout = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeout;\n    return accountVaultTimeout;\n  }\n\n  async setVaultTimeout(value: number, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeout = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getVaultTimeoutAction(options?: StorageOptions): Promise<string> {\n    const accountVaultTimeoutAction = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.vaultTimeoutAction;\n    const globalVaultTimeoutAction = (\n      await this.getGlobals(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.vaultTimeoutAction;\n    return accountVaultTimeoutAction ?? globalVaultTimeoutAction;\n  }\n\n  async setVaultTimeoutAction(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.vaultTimeoutAction = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getApproveLoginRequests(options?: StorageOptions): Promise<boolean> {\n    const approveLoginRequests = (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.approveLoginRequests;\n    return approveLoginRequests;\n  }\n\n  async setApproveLoginRequests(value: boolean, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.approveLoginRequests = value;\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getStateVersion(): Promise<number> {\n    return (await this.getGlobals(await this.defaultOnDiskLocalOptions())).stateVersion ?? 1;\n  }\n\n  async setStateVersion(value: number): Promise<void> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    globals.stateVersion = value;\n    await this.saveGlobals(globals, await this.defaultOnDiskOptions());\n  }\n\n  async getWindow(): Promise<WindowState> {\n    const globals = await this.getGlobals(await this.defaultOnDiskOptions());\n    return globals?.window != null && Object.keys(globals.window).length > 0\n      ? globals.window\n      : new WindowState();\n  }\n\n  async setWindow(value: WindowState, options?: StorageOptions): Promise<void> {\n    const globals = await this.getGlobals(\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n    globals.window = value;\n    return await this.saveGlobals(\n      globals,\n      this.reconcileOptions(options, await this.defaultOnDiskOptions())\n    );\n  }\n\n  async setServerConfig(value: ServerConfigData, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.serverConfig = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getServerConfig(options: StorageOptions): Promise<ServerConfigData> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.serverConfig;\n  }\n\n  async getAvatarColor(options?: StorageOptions): Promise<string | null | undefined> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.avatarColor;\n  }\n\n  async setAvatarColor(value: string, options?: StorageOptions): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.avatarColor = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getActivateAutoFillOnPageLoadFromPolicy(options?: StorageOptions): Promise<boolean> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.activateAutoFillOnPageLoadFromPolicy;\n  }\n\n  async setActivateAutoFillOnPageLoadFromPolicy(\n    value: boolean,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.activateAutoFillOnPageLoadFromPolicy = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  async getSMOnboardingTasks(\n    options?: StorageOptions\n  ): Promise<Record<string, Record<string, boolean>>> {\n    return (\n      await this.getAccount(this.reconcileOptions(options, await this.defaultOnDiskLocalOptions()))\n    )?.settings?.smOnboardingTasks;\n  }\n\n  async setSMOnboardingTasks(\n    value: Record<string, Record<string, boolean>>,\n    options?: StorageOptions\n  ): Promise<void> {\n    const account = await this.getAccount(\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n    account.settings.smOnboardingTasks = value;\n    return await this.saveAccount(\n      account,\n      this.reconcileOptions(options, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async getGlobals(options: StorageOptions): Promise<TGlobalState> {\n    let globals: TGlobalState;\n    if (this.useMemory(options.storageLocation)) {\n      globals = await this.getGlobalsFromMemory();\n    }\n\n    if (this.useDisk && globals == null) {\n      globals = await this.getGlobalsFromDisk(options);\n    }\n\n    return globals ?? this.createGlobals();\n  }\n\n  protected async saveGlobals(globals: TGlobalState, options: StorageOptions) {\n    return this.useMemory(options.storageLocation)\n      ? this.saveGlobalsToMemory(globals)\n      : await this.saveGlobalsToDisk(globals, options);\n  }\n\n  protected async getGlobalsFromMemory(): Promise<TGlobalState> {\n    return (await this.state()).globals;\n  }\n\n  protected async getGlobalsFromDisk(options: StorageOptions): Promise<TGlobalState> {\n    return await this.storageService.get<TGlobalState>(keys.global, options);\n  }\n\n  protected async saveGlobalsToMemory(globals: TGlobalState): Promise<void> {\n    await this.updateState(async (state) => {\n      state.globals = globals;\n      return state;\n    });\n  }\n\n  protected async saveGlobalsToDisk(globals: TGlobalState, options: StorageOptions): Promise<void> {\n    if (options.useSecureStorage) {\n      await this.secureStorageService.save(keys.global, globals, options);\n    } else {\n      await this.storageService.save(keys.global, globals, options);\n    }\n  }\n\n  protected async getAccount(options: StorageOptions): Promise<TAccount> {\n    try {\n      let account: TAccount;\n      if (this.useMemory(options.storageLocation)) {\n        account = await this.getAccountFromMemory(options);\n      }\n\n      if (this.useDisk(options.storageLocation) && account == null) {\n        account = await this.getAccountFromDisk(options);\n      }\n\n      return account;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async getAccountFromMemory(options: StorageOptions): Promise<TAccount> {\n    return await this.state().then(async (state) => {\n      if (state.accounts == null) {\n        return null;\n      }\n      return state.accounts[await this.getUserIdFromMemory(options)];\n    });\n  }\n\n  protected async getUserIdFromMemory(options: StorageOptions): Promise<string> {\n    return await this.state().then((state) => {\n      return options?.userId != null\n        ? state.accounts[options.userId]?.profile?.userId\n        : state.activeUserId;\n    });\n  }\n\n  protected async getAccountFromDisk(options: StorageOptions): Promise<TAccount> {\n    if (options?.userId == null && (await this.state())?.activeUserId == null) {\n      return null;\n    }\n\n    if (this.useAccountCache) {\n      const cachedAccount = this.accountDiskCache.value[options.userId];\n      if (cachedAccount != null) {\n        return cachedAccount;\n      }\n    }\n\n    const account = options?.useSecureStorage\n      ? (await this.secureStorageService.get<TAccount>(options.userId, options)) ??\n        (await this.storageService.get<TAccount>(\n          options.userId,\n          this.reconcileOptions(options, { htmlStorageLocation: HtmlStorageLocation.Local })\n        ))\n      : await this.storageService.get<TAccount>(options.userId, options);\n\n    this.setDiskCache(options.userId, account);\n    return account;\n  }\n\n  protected useMemory(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Memory || storageLocation === StorageLocation.Both;\n  }\n\n  protected useDisk(storageLocation: StorageLocation) {\n    return storageLocation === StorageLocation.Disk || storageLocation === StorageLocation.Both;\n  }\n\n  protected async saveAccount(\n    account: TAccount,\n    options: StorageOptions = {\n      storageLocation: StorageLocation.Both,\n      useSecureStorage: false,\n    }\n  ) {\n    return this.useMemory(options.storageLocation)\n      ? await this.saveAccountToMemory(account)\n      : await this.saveAccountToDisk(account, options);\n  }\n\n  protected async saveAccountToDisk(account: TAccount, options: StorageOptions): Promise<void> {\n    const storageLocation = options.useSecureStorage\n      ? this.secureStorageService\n      : this.storageService;\n\n    await storageLocation.save(`${options.userId}`, account, options);\n\n    this.deleteDiskCache(options.userId);\n  }\n\n  protected async saveAccountToMemory(account: TAccount): Promise<void> {\n    if (this.getAccountFromMemory({ userId: account.profile.userId }) !== null) {\n      await this.updateState((state) => {\n        return new Promise((resolve) => {\n          state.accounts[account.profile.userId] = account;\n          resolve(state);\n        });\n      });\n    }\n    await this.pushAccounts();\n  }\n\n  protected async scaffoldNewAccountStorage(account: TAccount): Promise<void> {\n    // We don't want to manipulate the referenced in memory account\n    const deepClone = JSON.parse(JSON.stringify(account));\n    await this.scaffoldNewAccountLocalStorage(deepClone);\n    await this.scaffoldNewAccountSessionStorage(deepClone);\n    await this.scaffoldNewAccountMemoryStorage(deepClone);\n  }\n\n  // TODO: There is a tech debt item for splitting up these methods - only Web uses multiple storage locations in its storageService.\n  // For now these methods exist with some redundancy to facilitate this special web requirement.\n  protected async scaffoldNewAccountLocalStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n    // EnvironmentUrls are set before authenticating and should override whatever is stored from any previous session\n    const environmentUrls = account.settings.environmentUrls;\n    if (storedAccount?.settings != null) {\n      account.settings = storedAccount.settings;\n    } else if (await this.storageService.has(keys.tempAccountSettings)) {\n      account.settings = await this.storageService.get<AccountSettings>(keys.tempAccountSettings);\n      await this.storageService.remove(keys.tempAccountSettings);\n    }\n    account.settings.environmentUrls = environmentUrls;\n    if (account.settings.vaultTimeoutAction === \"logOut\" && account.settings.vaultTimeout != null) {\n      account.tokens.accessToken = null;\n      account.tokens.refreshToken = null;\n      account.profile.apiKeyClientId = null;\n      account.keys.apiKeyClientSecret = null;\n    }\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskLocalOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountMemoryStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions(\n        { userId: account.profile.userId },\n        await this.defaultOnDiskMemoryOptions()\n      )\n    );\n  }\n\n  protected async scaffoldNewAccountSessionStorage(account: TAccount): Promise<void> {\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n    if (storedAccount?.settings != null) {\n      storedAccount.settings.environmentUrls = account.settings.environmentUrls;\n      account.settings = storedAccount.settings;\n    }\n    await this.storageService.save(\n      account.profile.userId,\n      account,\n      await this.defaultOnDiskMemoryOptions()\n    );\n    await this.saveAccount(\n      account,\n      this.reconcileOptions({ userId: account.profile.userId }, await this.defaultOnDiskOptions())\n    );\n  }\n  //\n\n  protected async pushAccounts(): Promise<void> {\n    await this.pruneInMemoryAccounts();\n    await this.state().then((state) => {\n      if (state.accounts == null || Object.keys(state.accounts).length < 1) {\n        this.accountsSubject.next({});\n        return;\n      }\n\n      this.accountsSubject.next(state.accounts);\n    });\n  }\n\n  protected reconcileOptions(\n    requestedOptions: StorageOptions,\n    defaultOptions: StorageOptions\n  ): StorageOptions {\n    if (requestedOptions == null) {\n      return defaultOptions;\n    }\n    requestedOptions.userId = requestedOptions?.userId ?? defaultOptions.userId;\n    requestedOptions.storageLocation =\n      requestedOptions?.storageLocation ?? defaultOptions.storageLocation;\n    requestedOptions.useSecureStorage =\n      requestedOptions?.useSecureStorage ?? defaultOptions.useSecureStorage;\n    requestedOptions.htmlStorageLocation =\n      requestedOptions?.htmlStorageLocation ?? defaultOptions.htmlStorageLocation;\n    requestedOptions.keySuffix = requestedOptions?.keySuffix ?? defaultOptions.keySuffix;\n    return requestedOptions;\n  }\n\n  protected async defaultInMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Memory,\n      userId: (await this.state()).activeUserId,\n    };\n  }\n\n  protected async defaultOnDiskOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Session,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskLocalOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Local,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultOnDiskMemoryOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      htmlStorageLocation: HtmlStorageLocation.Memory,\n      userId: (await this.state())?.activeUserId ?? (await this.getUserId()),\n      useSecureStorage: false,\n    };\n  }\n\n  protected async defaultSecureStorageOptions(): Promise<StorageOptions> {\n    return {\n      storageLocation: StorageLocation.Disk,\n      useSecureStorage: true,\n      userId: (await this.state())?.activeUserId ?? (await this.getActiveUserIdFromStorage()),\n    };\n  }\n\n  protected async getActiveUserIdFromStorage(): Promise<string> {\n    return await this.storageService.get<string>(keys.activeUserId);\n  }\n\n  protected async removeAccountFromLocalStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskLocalOptions())\n    );\n  }\n\n  protected async removeAccountFromSessionStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    const storedAccount = await this.getAccount(\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n    await this.saveAccount(\n      this.resetAccount(storedAccount),\n      this.reconcileOptions({ userId: userId }, await this.defaultOnDiskOptions())\n    );\n  }\n\n  protected async removeAccountFromSecureStorage(userId: string = null): Promise<void> {\n    userId = userId ?? (await this.state())?.activeUserId;\n    await this.setCryptoMasterKeyAuto(null, { userId: userId });\n    await this.setCryptoMasterKeyBiometric(null, { userId: userId });\n    await this.setCryptoMasterKeyB64(null, { userId: userId });\n  }\n\n  protected async removeAccountFromMemory(userId: string = null): Promise<void> {\n    await this.updateState(async (state) => {\n      userId = userId ?? state.activeUserId;\n      delete state.accounts[userId];\n\n      this.deleteDiskCache(userId);\n\n      return state;\n    });\n  }\n\n  protected async pruneInMemoryAccounts() {\n    // We preserve settings for logged out accounts, but we don't want to consider them when thinking about active account state\n    for (const userId in (await this.state())?.accounts) {\n      if (!(await this.getIsAuthenticated({ userId: userId }))) {\n        await this.removeAccountFromMemory(userId);\n      }\n    }\n  }\n\n  // settings persist even on reset, and are not effected by this method\n  protected resetAccount(account: TAccount) {\n    const persistentAccountInformation = { settings: account.settings };\n    return Object.assign(this.createAccount(), persistentAccountInformation);\n  }\n\n  protected async setAccountEnvironmentUrls(account: TAccount): Promise<TAccount> {\n    account.settings.environmentUrls = await this.getGlobalEnvironmentUrls();\n    return account;\n  }\n\n  protected async getGlobalEnvironmentUrls(options?: StorageOptions): Promise<EnvironmentUrls> {\n    options = this.reconcileOptions(options, await this.defaultOnDiskOptions());\n    return (await this.getGlobals(options)).environmentUrls ?? new EnvironmentUrls();\n  }\n\n  protected async clearDecryptedDataForActiveUser(): Promise<void> {\n    await this.updateState(async (state) => {\n      const userId = state?.activeUserId;\n      if (userId != null && state?.accounts[userId]?.data != null) {\n        state.accounts[userId].data = new AccountData();\n      }\n\n      return state;\n    });\n  }\n\n  protected createAccount(init: Partial<TAccount> = null): TAccount {\n    return this.stateFactory.createAccount(init);\n  }\n\n  protected createGlobals(init: Partial<TGlobalState> = null): TGlobalState {\n    return this.stateFactory.createGlobal(init);\n  }\n\n  protected async deAuthenticateAccount(userId: string): Promise<void> {\n    await this.setAccessToken(null, { userId: userId });\n    await this.setLastActive(null, { userId: userId });\n    await this.updateState(async (state) => {\n      state.authenticatedAccounts = state.authenticatedAccounts.filter((id) => id !== userId);\n\n      await this.storageService.save(keys.authenticatedAccounts, state.authenticatedAccounts);\n\n      return state;\n    });\n  }\n\n  protected async removeAccountFromDisk(userId: string) {\n    await this.removeAccountFromSessionStorage(userId);\n    await this.removeAccountFromLocalStorage(userId);\n    await this.removeAccountFromSecureStorage(userId);\n  }\n\n  protected async dynamicallySetActiveUser() {\n    const accounts = (await this.state())?.accounts;\n    if (accounts == null || Object.keys(accounts).length < 1) {\n      await this.setActiveUser(null);\n      return;\n    }\n    for (const userId in accounts) {\n      if (userId == null) {\n        continue;\n      }\n      if (await this.getIsAuthenticated({ userId: userId })) {\n        await this.setActiveUser(userId);\n        break;\n      }\n      await this.setActiveUser(null);\n    }\n  }\n\n  private async getTimeoutBasedStorageOptions(options?: StorageOptions): Promise<StorageOptions> {\n    const timeoutAction = await this.getVaultTimeoutAction({ userId: options?.userId });\n    const timeout = await this.getVaultTimeout({ userId: options?.userId });\n    const defaultOptions =\n      timeoutAction === \"logOut\" && timeout != null\n        ? await this.defaultInMemoryOptions()\n        : await this.defaultOnDiskOptions();\n    return this.reconcileOptions(options, defaultOptions);\n  }\n\n  private async saveSecureStorageKey(key: string, value: string, options?: StorageOptions) {\n    return value == null\n      ? await this.secureStorageService.remove(`${options.userId}${key}`, options)\n      : await this.secureStorageService.save(`${options.userId}${key}`, value, options);\n  }\n\n  protected async state(): Promise<State<TGlobalState, TAccount>> {\n    const state = await this.memoryStorageService.get<State<TGlobalState, TAccount>>(keys.state, {\n      deserializer: (s) => State.fromJSON(s, this.accountDeserializer),\n    });\n    return state;\n  }\n\n  private async setState(state: State<TGlobalState, TAccount>): Promise<void> {\n    await this.memoryStorageService.save(keys.state, state);\n  }\n\n  protected async updateState(\n    stateUpdater: (state: State<TGlobalState, TAccount>) => Promise<State<TGlobalState, TAccount>>\n  ) {\n    await this.state().then(async (state) => {\n      const updatedState = await stateUpdater(state);\n      if (updatedState == null) {\n        throw new Error(\"Attempted to update state to null value\");\n      }\n\n      await this.setState(updatedState);\n    });\n  }\n\n  private setDiskCache(key: string, value: TAccount, options?: StorageOptions) {\n    if (this.useAccountCache) {\n      this.accountDiskCache.value[key] = value;\n      this.accountDiskCache.next(this.accountDiskCache.value);\n    }\n  }\n\n  private deleteDiskCache(key: string) {\n    if (this.useAccountCache) {\n      delete this.accountDiskCache.value[key];\n      this.accountDiskCache.next(this.accountDiskCache.value);\n    }\n  }\n}\n\nfunction withPrototypeForArrayMembers<T>(\n  memberConstructor: new (...args: any[]) => T,\n  memberConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<T[]> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<any[]> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else if (!(result instanceof Array)) {\n            throw new Error(\n              `Attempted to retrieve non array type from state as an array for method ${String(\n                propertyKey\n              )}`\n            );\n          } else {\n            return result.map((r) => {\n              return r == null ||\n                r.constructor.name === memberConstructor.prototype.constructor.name\n                ? r\n                : memberConverter(\n                    Object.create(memberConstructor.prototype, Object.getOwnPropertyDescriptors(r))\n                  );\n            });\n          }\n        });\n      },\n    };\n  };\n}\n\nfunction withPrototypeForObjectValues<T>(\n  valuesConstructor: new (...args: any[]) => T,\n  valuesConverter: (input: any) => T = (i) => i\n): (\n  target: any,\n  propertyKey: string | symbol,\n  descriptor: PropertyDescriptor\n) => { value: (...args: any[]) => Promise<{ [key: string]: T }> } {\n  return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    return {\n      value: function (...args: any[]) {\n        const originalResult: Promise<{ [key: string]: T }> = originalMethod.apply(this, args);\n\n        if (!(originalResult instanceof Promise)) {\n          throw new Error(\n            `Error applying prototype to stored value -- result is not a promise for method ${String(\n              propertyKey\n            )}`\n          );\n        }\n\n        return originalResult.then((result) => {\n          if (result == null) {\n            return null;\n          } else {\n            for (const [key, val] of Object.entries(result)) {\n              result[key] =\n                val == null || val.constructor.name === valuesConstructor.prototype.constructor.name\n                  ? valuesConverter(val)\n                  : valuesConverter(\n                      Object.create(\n                        valuesConstructor.prototype,\n                        Object.getOwnPropertyDescriptors(val)\n                      )\n                    );\n            }\n\n            return result as { [key: string]: T };\n          }\n        });\n      },\n    };\n  };\n}\n","import { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { EnvironmentUrls } from \"../auth/models/domain/environment-urls\";\nimport { TokenService } from \"../auth/services/token.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { StateVersion } from \"../enums/stateVersion\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { StateFactory } from \"../factories/stateFactory\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport {\n  Account,\n  AccountSettings,\n  AccountSettingsSettings,\n  EncryptionPair,\n} from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { GlobalState } from \"../models/domain/global-state\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { GeneratedPasswordHistory } from \"../tools/generator/password\";\nimport { CipherData } from \"../vault/models/data/cipher.data\";\nimport { FolderData } from \"../vault/models/data/folder.data\";\n\n// Originally (before January 2022) storage was handled as a flat key/value pair store.\n// With the move to a typed object for state storage these keys should no longer be in use anywhere outside of this migration.\nconst v1Keys: { [key: string]: string } = {\n  accessToken: \"accessToken\",\n  alwaysShowDock: \"alwaysShowDock\",\n  autoConfirmFingerprints: \"autoConfirmFingerprints\",\n  autoFillOnPageLoadDefault: \"autoFillOnPageLoadDefault\",\n  biometricAwaitingAcceptance: \"biometricAwaitingAcceptance\",\n  biometricFingerprintValidated: \"biometricFingerprintValidated\",\n  biometricText: \"biometricText\",\n  biometricUnlock: \"biometric\",\n  clearClipboard: \"clearClipboardKey\",\n  clientId: \"apikey_clientId\",\n  clientSecret: \"apikey_clientSecret\",\n  collapsedGroupings: \"collapsedGroupings\",\n  convertAccountToKeyConnector: \"convertAccountToKeyConnector\",\n  defaultUriMatch: \"defaultUriMatch\",\n  disableAddLoginNotification: \"disableAddLoginNotification\",\n  disableAutoBiometricsPrompt: \"noAutoPromptBiometrics\",\n  disableAutoTotpCopy: \"disableAutoTotpCopy\",\n  disableBadgeCounter: \"disableBadgeCounter\",\n  disableChangedPasswordNotification: \"disableChangedPasswordNotification\",\n  disableContextMenuItem: \"disableContextMenuItem\",\n  disableFavicon: \"disableFavicon\",\n  disableGa: \"disableGa\",\n  dontShowCardsCurrentTab: \"dontShowCardsCurrentTab\",\n  dontShowIdentitiesCurrentTab: \"dontShowIdentitiesCurrentTab\",\n  emailVerified: \"emailVerified\",\n  enableAlwaysOnTop: \"enableAlwaysOnTopKey\",\n  enableAutoFillOnPageLoad: \"enableAutoFillOnPageLoad\",\n  enableBiometric: \"enabledBiometric\",\n  enableBrowserIntegration: \"enableBrowserIntegration\",\n  enableBrowserIntegrationFingerprint: \"enableBrowserIntegrationFingerprint\",\n  enableCloseToTray: \"enableCloseToTray\",\n  enableFullWidth: \"enableFullWidth\",\n  enableMinimizeToTray: \"enableMinimizeToTray\",\n  enableStartToTray: \"enableStartToTrayKey\",\n  enableTray: \"enableTray\",\n  encKey: \"encKey\", // Generated Symmetric Key\n  encOrgKeys: \"encOrgKeys\",\n  encPrivate: \"encPrivateKey\",\n  encProviderKeys: \"encProviderKeys\",\n  entityId: \"entityId\",\n  entityType: \"entityType\",\n  environmentUrls: \"environmentUrls\",\n  equivalentDomains: \"equivalentDomains\",\n  eventCollection: \"eventCollection\",\n  forcePasswordReset: \"forcePasswordReset\",\n  history: \"generatedPasswordHistory\",\n  installedVersion: \"installedVersion\",\n  kdf: \"kdf\",\n  kdfIterations: \"kdfIterations\",\n  key: \"key\", // Master Key\n  keyHash: \"keyHash\",\n  lastActive: \"lastActive\",\n  localData: \"sitesLocalData\",\n  locale: \"locale\",\n  mainWindowSize: \"mainWindowSize\",\n  minimizeOnCopyToClipboard: \"minimizeOnCopyToClipboardKey\",\n  neverDomains: \"neverDomains\",\n  noAutoPromptBiometricsText: \"noAutoPromptBiometricsText\",\n  openAtLogin: \"openAtLogin\",\n  passwordGenerationOptions: \"passwordGenerationOptions\",\n  pinProtected: \"pinProtectedKey\",\n  protectedPin: \"protectedPin\",\n  refreshToken: \"refreshToken\",\n  ssoCodeVerifier: \"ssoCodeVerifier\",\n  ssoIdentifier: \"ssoOrgIdentifier\",\n  ssoState: \"ssoState\",\n  stamp: \"securityStamp\",\n  theme: \"theme\",\n  userEmail: \"userEmail\",\n  userId: \"userId\",\n  usesConnector: \"usesKeyConnector\",\n  vaultTimeoutAction: \"vaultTimeoutAction\",\n  vaultTimeout: \"lockOption\",\n  rememberedEmail: \"rememberedEmail\",\n};\n\nconst v1KeyPrefixes: { [key: string]: string } = {\n  ciphers: \"ciphers_\",\n  collections: \"collections_\",\n  folders: \"folders_\",\n  lastSync: \"lastSync_\",\n  policies: \"policies_\",\n  twoFactorToken: \"twoFactorToken_\",\n  organizations: \"organizations_\",\n  providers: \"providers_\",\n  sends: \"sends_\",\n  settings: \"settings_\",\n};\n\nconst keys = {\n  global: \"global\",\n  authenticatedAccounts: \"authenticatedAccounts\",\n  activeUserId: \"activeUserId\",\n  tempAccountSettings: \"tempAccountSettings\", // used to hold account specific settings (i.e clear clipboard) between initial migration and first account authentication\n  accountActivity: \"accountActivity\",\n};\n\nconst partialKeys = {\n  autoKey: \"_masterkey_auto\",\n  biometricKey: \"_masterkey_biometric\",\n  masterKey: \"_masterkey\",\n};\n\nexport class StateMigrationService<\n  TGlobalState extends GlobalState = GlobalState,\n  TAccount extends Account = Account\n> {\n  constructor(\n    protected storageService: AbstractStorageService,\n    protected secureStorageService: AbstractStorageService,\n    protected stateFactory: StateFactory<TGlobalState, TAccount>\n  ) {}\n\n  async needsMigration(): Promise<boolean> {\n    const currentStateVersion = await this.getCurrentStateVersion();\n    return currentStateVersion == null || currentStateVersion < StateVersion.Latest;\n  }\n\n  async migrate(): Promise<void> {\n    let currentStateVersion = await this.getCurrentStateVersion();\n    while (currentStateVersion < StateVersion.Latest) {\n      switch (currentStateVersion) {\n        case StateVersion.One:\n          await this.migrateStateFrom1To2();\n          break;\n        case StateVersion.Two:\n          await this.migrateStateFrom2To3();\n          break;\n        case StateVersion.Three:\n          await this.migrateStateFrom3To4();\n          break;\n        case StateVersion.Four: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom4To5(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Five);\n          break;\n        }\n        case StateVersion.Five: {\n          const authenticatedAccounts = await this.getAuthenticatedAccounts();\n          for (const account of authenticatedAccounts) {\n            const migratedAccount = await this.migrateAccountFrom5To6(account);\n            await this.set(account.profile.userId, migratedAccount);\n          }\n          await this.setCurrentStateVersion(StateVersion.Six);\n          break;\n        }\n      }\n\n      currentStateVersion += 1;\n    }\n  }\n\n  protected async migrateStateFrom1To2(): Promise<void> {\n    const clearV1Keys = async (clearingUserId?: string) => {\n      for (const key in v1Keys) {\n        if (key == null) {\n          continue;\n        }\n        await this.set(v1Keys[key], null);\n      }\n      if (clearingUserId != null) {\n        for (const keyPrefix in v1KeyPrefixes) {\n          if (keyPrefix == null) {\n            continue;\n          }\n          await this.set(v1KeyPrefixes[keyPrefix] + userId, null);\n        }\n      }\n    };\n\n    // Some processes, like biometrics, may have already defined a value before migrations are run.\n    // We don't want to null out those values if they don't exist in the old storage scheme (like for new installs)\n    // So, the OOO for migration is that we:\n    // 1. Check for an existing storage value from the old storage structure OR\n    // 2. Check for a value already set by processes that run before migration OR\n    // 3. Assign the default value\n    const globals =\n      (await this.get<GlobalState>(keys.global)) ?? this.stateFactory.createGlobal(null);\n    globals.stateVersion = StateVersion.Two;\n    globals.environmentUrls =\n      (await this.get<EnvironmentUrls>(v1Keys.environmentUrls)) ?? globals.environmentUrls;\n    globals.locale = (await this.get<string>(v1Keys.locale)) ?? globals.locale;\n    globals.noAutoPromptBiometrics =\n      (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n      globals.noAutoPromptBiometrics;\n    globals.noAutoPromptBiometricsText =\n      (await this.get<string>(v1Keys.noAutoPromptBiometricsText)) ??\n      globals.noAutoPromptBiometricsText;\n    globals.ssoCodeVerifier =\n      (await this.get<string>(v1Keys.ssoCodeVerifier)) ?? globals.ssoCodeVerifier;\n    globals.ssoOrganizationIdentifier =\n      (await this.get<string>(v1Keys.ssoIdentifier)) ?? globals.ssoOrganizationIdentifier;\n    globals.ssoState = (await this.get<any>(v1Keys.ssoState)) ?? globals.ssoState;\n    globals.rememberedEmail =\n      (await this.get<string>(v1Keys.rememberedEmail)) ?? globals.rememberedEmail;\n    globals.theme = (await this.get<ThemeType>(v1Keys.theme)) ?? globals.theme;\n    globals.vaultTimeout = (await this.get<number>(v1Keys.vaultTimeout)) ?? globals.vaultTimeout;\n    globals.vaultTimeoutAction =\n      (await this.get<string>(v1Keys.vaultTimeoutAction)) ?? globals.vaultTimeoutAction;\n    globals.window = (await this.get<any>(v1Keys.mainWindowSize)) ?? globals.window;\n    globals.enableTray = (await this.get<boolean>(v1Keys.enableTray)) ?? globals.enableTray;\n    globals.enableMinimizeToTray =\n      (await this.get<boolean>(v1Keys.enableMinimizeToTray)) ?? globals.enableMinimizeToTray;\n    globals.enableCloseToTray =\n      (await this.get<boolean>(v1Keys.enableCloseToTray)) ?? globals.enableCloseToTray;\n    globals.enableStartToTray =\n      (await this.get<boolean>(v1Keys.enableStartToTray)) ?? globals.enableStartToTray;\n    globals.openAtLogin = (await this.get<boolean>(v1Keys.openAtLogin)) ?? globals.openAtLogin;\n    globals.alwaysShowDock =\n      (await this.get<boolean>(v1Keys.alwaysShowDock)) ?? globals.alwaysShowDock;\n    globals.enableBrowserIntegration =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegration)) ??\n      globals.enableBrowserIntegration;\n    globals.enableBrowserIntegrationFingerprint =\n      (await this.get<boolean>(v1Keys.enableBrowserIntegrationFingerprint)) ??\n      globals.enableBrowserIntegrationFingerprint;\n\n    const userId =\n      (await this.get<string>(v1Keys.userId)) ?? (await this.get<string>(v1Keys.entityId));\n\n    const defaultAccount = this.stateFactory.createAccount(null);\n    const accountSettings: AccountSettings = {\n      autoConfirmFingerPrints:\n        (await this.get<boolean>(v1Keys.autoConfirmFingerprints)) ??\n        defaultAccount.settings.autoConfirmFingerPrints,\n      autoFillOnPageLoadDefault:\n        (await this.get<boolean>(v1Keys.autoFillOnPageLoadDefault)) ??\n        defaultAccount.settings.autoFillOnPageLoadDefault,\n      biometricUnlock:\n        (await this.get<boolean>(v1Keys.biometricUnlock)) ??\n        defaultAccount.settings.biometricUnlock,\n      clearClipboard:\n        (await this.get<number>(v1Keys.clearClipboard)) ?? defaultAccount.settings.clearClipboard,\n      defaultUriMatch:\n        (await this.get<any>(v1Keys.defaultUriMatch)) ?? defaultAccount.settings.defaultUriMatch,\n      disableAddLoginNotification:\n        (await this.get<boolean>(v1Keys.disableAddLoginNotification)) ??\n        defaultAccount.settings.disableAddLoginNotification,\n      disableAutoBiometricsPrompt:\n        (await this.get<boolean>(v1Keys.disableAutoBiometricsPrompt)) ??\n        defaultAccount.settings.disableAutoBiometricsPrompt,\n      disableAutoTotpCopy:\n        (await this.get<boolean>(v1Keys.disableAutoTotpCopy)) ??\n        defaultAccount.settings.disableAutoTotpCopy,\n      disableBadgeCounter:\n        (await this.get<boolean>(v1Keys.disableBadgeCounter)) ??\n        defaultAccount.settings.disableBadgeCounter,\n      disableChangedPasswordNotification:\n        (await this.get<boolean>(v1Keys.disableChangedPasswordNotification)) ??\n        defaultAccount.settings.disableChangedPasswordNotification,\n      disableContextMenuItem:\n        (await this.get<boolean>(v1Keys.disableContextMenuItem)) ??\n        defaultAccount.settings.disableContextMenuItem,\n      disableGa: (await this.get<boolean>(v1Keys.disableGa)) ?? defaultAccount.settings.disableGa,\n      dontShowCardsCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowCardsCurrentTab)) ??\n        defaultAccount.settings.dontShowCardsCurrentTab,\n      dontShowIdentitiesCurrentTab:\n        (await this.get<boolean>(v1Keys.dontShowIdentitiesCurrentTab)) ??\n        defaultAccount.settings.dontShowIdentitiesCurrentTab,\n      enableAlwaysOnTop:\n        (await this.get<boolean>(v1Keys.enableAlwaysOnTop)) ??\n        defaultAccount.settings.enableAlwaysOnTop,\n      enableAutoFillOnPageLoad:\n        (await this.get<boolean>(v1Keys.enableAutoFillOnPageLoad)) ??\n        defaultAccount.settings.enableAutoFillOnPageLoad,\n      enableBiometric:\n        (await this.get<boolean>(v1Keys.enableBiometric)) ??\n        defaultAccount.settings.enableBiometric,\n      enableFullWidth:\n        (await this.get<boolean>(v1Keys.enableFullWidth)) ??\n        defaultAccount.settings.enableFullWidth,\n      environmentUrls: globals.environmentUrls ?? defaultAccount.settings.environmentUrls,\n      equivalentDomains:\n        (await this.get<any>(v1Keys.equivalentDomains)) ??\n        defaultAccount.settings.equivalentDomains,\n      minimizeOnCopyToClipboard:\n        (await this.get<boolean>(v1Keys.minimizeOnCopyToClipboard)) ??\n        defaultAccount.settings.minimizeOnCopyToClipboard,\n      neverDomains:\n        (await this.get<any>(v1Keys.neverDomains)) ?? defaultAccount.settings.neverDomains,\n      passwordGenerationOptions:\n        (await this.get<any>(v1Keys.passwordGenerationOptions)) ??\n        defaultAccount.settings.passwordGenerationOptions,\n      pinProtected: Object.assign(new EncryptionPair<string, EncString>(), {\n        decrypted: null,\n        encrypted: await this.get<string>(v1Keys.pinProtected),\n      }),\n      protectedPin: await this.get<string>(v1Keys.protectedPin),\n      settings:\n        userId == null\n          ? null\n          : await this.get<AccountSettingsSettings>(v1KeyPrefixes.settings + userId),\n      vaultTimeout:\n        (await this.get<number>(v1Keys.vaultTimeout)) ?? defaultAccount.settings.vaultTimeout,\n      vaultTimeoutAction:\n        (await this.get<string>(v1Keys.vaultTimeoutAction)) ??\n        defaultAccount.settings.vaultTimeoutAction,\n    };\n\n    // (userId == null) = no logged in user (so no known userId) and we need to temporarily store account specific settings in state to migrate on first auth\n    // (userId != null) = we have a currently authed user (so known userId) with encrypted data and other key settings we can move, no need to temporarily store account settings\n    if (userId == null) {\n      await this.set(keys.tempAccountSettings, accountSettings);\n      await this.set(keys.global, globals);\n      await this.set(keys.authenticatedAccounts, []);\n      await this.set(keys.activeUserId, null);\n      await clearV1Keys();\n      return;\n    }\n\n    globals.twoFactorToken = await this.get<string>(v1KeyPrefixes.twoFactorToken + userId);\n    await this.set(keys.global, globals);\n    await this.set(userId, {\n      data: {\n        addEditCipherInfo: null,\n        ciphers: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CipherData }>(v1KeyPrefixes.ciphers + userId),\n        },\n        collapsedGroupings: null,\n        collections: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: CollectionData }>(\n            v1KeyPrefixes.collections + userId\n          ),\n        },\n        eventCollection: await this.get<EventData[]>(v1Keys.eventCollection),\n        folders: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: FolderData }>(v1KeyPrefixes.folders + userId),\n        },\n        localData: null,\n        organizations: await this.get<{ [id: string]: OrganizationData }>(\n          v1KeyPrefixes.organizations + userId\n        ),\n        passwordGenerationHistory: {\n          decrypted: null,\n          encrypted: await this.get<GeneratedPasswordHistory[]>(v1Keys.history),\n        },\n        policies: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: PolicyData }>(v1KeyPrefixes.policies + userId),\n        },\n        providers: await this.get<{ [id: string]: ProviderData }>(v1KeyPrefixes.providers + userId),\n        sends: {\n          decrypted: null,\n          encrypted: await this.get<{ [id: string]: SendData }>(v1KeyPrefixes.sends + userId),\n        },\n      },\n      keys: {\n        apiKeyClientSecret: await this.get<string>(v1Keys.clientSecret),\n        cryptoMasterKey: null,\n        cryptoMasterKeyAuto: null,\n        cryptoMasterKeyB64: null,\n        cryptoMasterKeyBiometric: null,\n        cryptoSymmetricKey: {\n          encrypted: await this.get<string>(v1Keys.encKey),\n          decrypted: null,\n        },\n        legacyEtmKey: null,\n        organizationKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encOrgKeys),\n        },\n        privateKey: {\n          decrypted: null,\n          encrypted: await this.get<string>(v1Keys.encPrivate),\n        },\n        providerKeys: {\n          decrypted: null,\n          encrypted: await this.get<any>(v1Keys.encProviderKeys),\n        },\n        publicKey: null,\n      },\n      profile: {\n        apiKeyClientId: await this.get<string>(v1Keys.clientId),\n        authenticationStatus: null,\n        convertAccountToKeyConnector: await this.get<boolean>(v1Keys.convertAccountToKeyConnector),\n        email: await this.get<string>(v1Keys.userEmail),\n        emailVerified: await this.get<boolean>(v1Keys.emailVerified),\n        entityId: null,\n        entityType: null,\n        everBeenUnlocked: null,\n        forcePasswordReset: null,\n        hasPremiumPersonally: null,\n        kdfIterations: await this.get<number>(v1Keys.kdfIterations),\n        kdfType: await this.get<KdfType>(v1Keys.kdf),\n        keyHash: await this.get<string>(v1Keys.keyHash),\n        lastSync: null,\n        userId: userId,\n        usesKeyConnector: null,\n      },\n      settings: accountSettings,\n      tokens: {\n        accessToken: await this.get<string>(v1Keys.accessToken),\n        decodedToken: null,\n        refreshToken: await this.get<string>(v1Keys.refreshToken),\n        securityStamp: null,\n      },\n    });\n\n    await this.set(keys.authenticatedAccounts, [userId]);\n    await this.set(keys.activeUserId, userId);\n\n    const accountActivity: { [userId: string]: number } = {\n      [userId]: await this.get<number>(v1Keys.lastActive),\n    };\n    accountActivity[userId] = await this.get<number>(v1Keys.lastActive);\n    await this.set(keys.accountActivity, accountActivity);\n\n    await clearV1Keys(userId);\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"biometric\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.biometricKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"biometric\" }),\n        { keySuffix: \"biometric\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"biometric\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key, { keySuffix: \"auto\" })) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.autoKey}`,\n        await this.secureStorageService.get(v1Keys.key, { keySuffix: \"auto\" }),\n        { keySuffix: \"auto\" }\n      );\n      await this.secureStorageService.remove(v1Keys.key, { keySuffix: \"auto\" });\n    }\n\n    if (await this.secureStorageService.has(v1Keys.key)) {\n      await this.secureStorageService.save(\n        `${userId}${partialKeys.masterKey}`,\n        await this.secureStorageService.get(v1Keys.key)\n      );\n      await this.secureStorageService.remove(v1Keys.key);\n    }\n  }\n\n  protected async migrateStateFrom2To3(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (\n          account?.profile?.hasPremiumPersonally === null &&\n          account.tokens?.accessToken != null\n        ) {\n          const decodedToken = await TokenService.decodeToken(account.tokens.accessToken);\n          account.profile.hasPremiumPersonally = decodedToken.premium;\n          await this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Three;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateStateFrom3To4(): Promise<void> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    await Promise.all(\n      authenticatedUserIds.map(async (userId) => {\n        const account = await this.get<TAccount>(userId);\n        if (account?.profile?.everBeenUnlocked != null) {\n          delete account.profile.everBeenUnlocked;\n          return this.set(userId, account);\n        }\n      })\n    );\n\n    const globals = await this.getGlobals();\n    globals.stateVersion = StateVersion.Four;\n    await this.set(keys.global, globals);\n  }\n\n  protected async migrateAccountFrom4To5(account: TAccount): Promise<TAccount> {\n    const encryptedOrgKeys = account.keys?.organizationKeys?.encrypted;\n    if (encryptedOrgKeys != null) {\n      for (const [orgId, encKey] of Object.entries(encryptedOrgKeys)) {\n        encryptedOrgKeys[orgId] = {\n          type: \"organization\",\n          key: encKey as unknown as string, // Account v4 does not reflect the current account model so we have to cast\n        };\n      }\n    }\n\n    return account;\n  }\n\n  protected async migrateAccountFrom5To6(account: TAccount): Promise<TAccount> {\n    delete (account as any).keys?.legacyEtmKey;\n    return account;\n  }\n\n  protected get options(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Local };\n  }\n\n  protected get<T>(key: string): Promise<T> {\n    return this.storageService.get<T>(key, this.options);\n  }\n\n  protected set(key: string, value: any): Promise<any> {\n    if (value == null) {\n      return this.storageService.remove(key, this.options);\n    }\n    return this.storageService.save(key, value, this.options);\n  }\n\n  protected async getGlobals(): Promise<TGlobalState> {\n    return await this.get<TGlobalState>(keys.global);\n  }\n\n  protected async getCurrentStateVersion(): Promise<StateVersion> {\n    return (await this.getGlobals())?.stateVersion ?? StateVersion.One;\n  }\n\n  protected async setCurrentStateVersion(newVersion: StateVersion): Promise<void> {\n    const globals = await this.getGlobals();\n    globals.stateVersion = newVersion;\n    await this.set(keys.global, globals);\n  }\n\n  protected async getAuthenticatedAccounts(): Promise<TAccount[]> {\n    const authenticatedUserIds = await this.get<string[]>(keys.authenticatedAccounts);\n    return Promise.all(authenticatedUserIds.map((id) => this.get<TAccount>(id)));\n  }\n}\n","import { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { TotpService as TotpServiceAbstraction } from \"../abstractions/totp.service\";\nimport { Utils } from \"../misc/utils\";\n\nconst B32Chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\nconst SteamChars = \"23456789BCDFGHJKMNPQRTVWXY\";\n\nexport class TotpService implements TotpServiceAbstraction {\n  constructor(\n    private cryptoFunctionService: CryptoFunctionService,\n    private logService: LogService\n  ) {}\n\n  async getCode(key: string): Promise<string> {\n    if (key == null) {\n      return null;\n    }\n    let period = 30;\n    let alg: \"sha1\" | \"sha256\" | \"sha512\" = \"sha1\";\n    let digits = 6;\n    let keyB32 = key;\n    const isOtpAuth = key.toLowerCase().indexOf(\"otpauth://\") === 0;\n    const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf(\"steam://\") === 0;\n    if (isOtpAuth) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"digits\") && params.get(\"digits\") != null) {\n        try {\n          const digitParams = parseInt(params.get(\"digits\").trim(), null);\n          if (digitParams > 10) {\n            digits = 10;\n          } else if (digitParams > 0) {\n            digits = digitParams;\n          }\n        } catch {\n          this.logService.error(\"Invalid digits param.\");\n        }\n      }\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          const periodParam = parseInt(params.get(\"period\").trim(), null);\n          if (periodParam > 0) {\n            period = periodParam;\n          }\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n      if (params.has(\"secret\") && params.get(\"secret\") != null) {\n        keyB32 = params.get(\"secret\");\n      }\n      if (params.has(\"algorithm\") && params.get(\"algorithm\") != null) {\n        const algParam = params.get(\"algorithm\").toLowerCase();\n        if (algParam === \"sha1\" || algParam === \"sha256\" || algParam === \"sha512\") {\n          alg = algParam;\n        }\n      }\n    } else if (isSteamAuth) {\n      keyB32 = key.substr(\"steam://\".length);\n      digits = 5;\n    }\n\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, \"0\");\n    const timeBytes = Utils.fromHexToArray(timeHex);\n    const keyBytes = this.b32ToBytes(keyB32);\n\n    if (!keyBytes.length || !timeBytes.length) {\n      return null;\n    }\n\n    const hash = await this.sign(keyBytes, timeBytes, alg);\n    if (hash.length === 0) {\n      return null;\n    }\n\n    const offset = hash[hash.length - 1] & 0xf;\n    const binary =\n      ((hash[offset] & 0x7f) << 24) |\n      ((hash[offset + 1] & 0xff) << 16) |\n      ((hash[offset + 2] & 0xff) << 8) |\n      (hash[offset + 3] & 0xff);\n\n    let otp = \"\";\n    if (isSteamAuth) {\n      let fullCode = binary & 0x7fffffff;\n      for (let i = 0; i < digits; i++) {\n        otp += SteamChars[fullCode % SteamChars.length];\n        fullCode = Math.trunc(fullCode / SteamChars.length);\n      }\n    } else {\n      otp = (binary % Math.pow(10, digits)).toString();\n      otp = this.leftPad(otp, digits, \"0\");\n    }\n\n    return otp;\n  }\n\n  getTimeInterval(key: string): number {\n    let period = 30;\n    if (key != null && key.toLowerCase().indexOf(\"otpauth://\") === 0) {\n      const params = Utils.getQueryParams(key);\n      if (params.has(\"period\") && params.get(\"period\") != null) {\n        try {\n          period = parseInt(params.get(\"period\").trim(), null);\n        } catch {\n          this.logService.error(\"Invalid period param.\");\n        }\n      }\n    }\n    return period;\n  }\n\n  // Helpers\n\n  private leftPad(s: string, l: number, p: string): string {\n    if (l + 1 >= s.length) {\n      s = Array(l + 1 - s.length).join(p) + s;\n    }\n    return s;\n  }\n\n  private decToHex(d: number): string {\n    return (d < 15.5 ? \"0\" : \"\") + Math.round(d).toString(16);\n  }\n\n  private b32ToHex(s: string): string {\n    s = s.toUpperCase();\n    let cleanedInput = \"\";\n\n    for (let i = 0; i < s.length; i++) {\n      if (B32Chars.indexOf(s[i]) < 0) {\n        continue;\n      }\n\n      cleanedInput += s[i];\n    }\n    s = cleanedInput;\n\n    let bits = \"\";\n    let hex = \"\";\n    for (let i = 0; i < s.length; i++) {\n      const byteIndex = B32Chars.indexOf(s.charAt(i));\n      if (byteIndex < 0) {\n        continue;\n      }\n      bits += this.leftPad(byteIndex.toString(2), 5, \"0\");\n    }\n    for (let i = 0; i + 4 <= bits.length; i += 4) {\n      const chunk = bits.substr(i, 4);\n      hex = hex + parseInt(chunk, 2).toString(16);\n    }\n    return hex;\n  }\n\n  private b32ToBytes(s: string): Uint8Array {\n    return Utils.fromHexToArray(this.b32ToHex(s));\n  }\n\n  private async sign(\n    keyBytes: Uint8Array,\n    timeBytes: Uint8Array,\n    alg: \"sha1\" | \"sha256\" | \"sha512\"\n  ) {\n    const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n    return new Uint8Array(signature);\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import { Observable } from \"rxjs\";\n\nimport { SyncEventArgs } from \"../../types/sync-event-args\";\n\nexport abstract class SyncNotifierService {\n  sync$: Observable<SyncEventArgs>;\n  next: (event: SyncEventArgs) => void;\n}\n","import { CipherView } from \"../view/cipher.view\";\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n  private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n  private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n  constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) {}\n\n  isCached(url: string) {\n    return this.sortedCiphersByUrl.has(url);\n  }\n\n  addCiphers(url: string, ciphers: CipherView[]) {\n    ciphers.sort(this.comparator);\n    this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n    this.resetTimer(url);\n  }\n\n  getLastUsed(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n  }\n\n  getLastLaunched(url: string) {\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastLaunched() : null;\n  }\n\n  getNext(url: string) {\n    this.resetTimer(url);\n    return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n  }\n\n  updateLastUsedIndex(url: string) {\n    if (this.isCached(url)) {\n      this.sortedCiphersByUrl.get(url).updateLastUsedIndex();\n    }\n  }\n\n  clear() {\n    this.sortedCiphersByUrl.clear();\n    this.timeouts.clear();\n  }\n\n  private resetTimer(url: string) {\n    clearTimeout(this.timeouts.get(url));\n    this.timeouts.set(\n      url,\n      setTimeout(() => {\n        this.sortedCiphersByUrl.delete(url);\n        this.timeouts.delete(url);\n      }, CacheTTL)\n    );\n  }\n}\n\nclass Ciphers {\n  lastUsedIndex = -1;\n\n  constructor(private readonly ciphers: CipherView[]) {}\n\n  getLastUsed() {\n    this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n    return this.ciphers[this.lastUsedIndex];\n  }\n\n  getLastLaunched() {\n    const usedCiphers = this.ciphers.filter((cipher) => cipher.localData?.lastLaunched);\n    const sortedCiphers = usedCiphers.sort(\n      (x, y) => y.localData.lastLaunched.valueOf() - x.localData.lastLaunched.valueOf()\n    );\n    return sortedCiphers[0];\n  }\n\n  getNextIndex() {\n    return (this.lastUsedIndex + 1) % this.ciphers.length;\n  }\n\n  getNext() {\n    return this.ciphers[this.getNextIndex()];\n  }\n\n  updateLastUsedIndex() {\n    this.lastUsedIndex = this.getNextIndex();\n  }\n}\n","export class CipherBulkMoveRequest {\n  ids: string[];\n  folderId: string;\n\n  constructor(ids: string[], folderId: string) {\n    this.ids = ids == null ? [] : ids;\n    this.folderId = folderId;\n  }\n}\n","export class CipherBulkRestoreRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherWithIdRequest } from \"./cipher-with-id.request\";\n\nexport class CipherBulkShareRequest {\n  ciphers: CipherWithIdRequest[];\n  collectionIds: string[];\n\n  constructor(ciphers: Cipher[], collectionIds: string[]) {\n    if (ciphers != null) {\n      this.ciphers = [];\n      ciphers.forEach((c) => {\n        this.ciphers.push(new CipherWithIdRequest(c));\n      });\n    }\n    this.collectionIds = collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nexport class CipherPartialRequest {\n  folderId: string;\n  favorite: boolean;\n\n  constructor(cipher: Cipher) {\n    this.folderId = cipher.folderId;\n    this.favorite = cipher.favorite;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherShareRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptService } from \"../../abstractions/encrypt.service\";\nimport { FileUploadService } from \"../../abstractions/fileUpload.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { SearchService } from \"../../abstractions/search.service\";\nimport { SettingsService } from \"../../abstractions/settings.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { FieldType } from \"../../enums/fieldType\";\nimport { UriMatchType } from \"../../enums/uriMatchType\";\nimport { sequentialize } from \"../../misc/sequentialize\";\nimport { Utils } from \"../../misc/utils\";\nimport { AccountSettingsSettings } from \"../../models/domain/account\";\nimport Domain from \"../../models/domain/domain-base\";\nimport { EncArrayBuffer } from \"../../models/domain/enc-array-buffer\";\nimport { EncString } from \"../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { ErrorResponse } from \"../../models/response/error.response\";\nimport { View } from \"../../models/view/view\";\nimport { CipherService as CipherServiceAbstraction } from \"../abstractions/cipher.service\";\nimport { CipherType } from \"../enums/cipher-type\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { Attachment } from \"../models/domain/attachment\";\nimport { Card } from \"../models/domain/card\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { Identity } from \"../models/domain/identity\";\nimport { Login } from \"../models/domain/login\";\nimport { LoginUri } from \"../models/domain/login-uri\";\nimport { Password } from \"../models/domain/password\";\nimport { SecureNote } from \"../models/domain/secure-note\";\nimport { SortedCiphersCache } from \"../models/domain/sorted-ciphers-cache\";\nimport { AttachmentRequest } from \"../models/request/attachment.request\";\nimport { CipherBulkDeleteRequest } from \"../models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../models/request/cipher-share.request\";\nimport { CipherRequest } from \"../models/request/cipher.request\";\nimport { CipherResponse } from \"../models/response/cipher.response\";\nimport { AttachmentView } from \"../models/view/attachment.view\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\nimport { PasswordHistoryView } from \"../models/view/password-history.view\";\n\nexport class CipherService implements CipherServiceAbstraction {\n  private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(\n    this.sortCiphersByLastUsed\n  );\n\n  constructor(\n    private cryptoService: CryptoService,\n    private settingsService: SettingsService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private searchService: () => SearchService,\n    private logService: LogService,\n    private stateService: StateService,\n    private encryptService: EncryptService\n  ) {}\n\n  async getDecryptedCipherCache(): Promise<CipherView[]> {\n    const decryptedCiphers = await this.stateService.getDecryptedCiphers();\n    return decryptedCiphers;\n  }\n\n  async setDecryptedCipherCache(value: CipherView[]) {\n    await this.stateService.setDecryptedCiphers(value);\n    if (this.searchService != null) {\n      if (value == null) {\n        this.searchService().clearIndex();\n      } else {\n        this.searchService().indexCiphers();\n      }\n    }\n  }\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.clearDecryptedCiphersState(userId);\n  }\n\n  async encrypt(\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher: Cipher = null\n  ): Promise<Cipher> {\n    // Adjust password history\n    if (model.id != null) {\n      if (originalCipher == null) {\n        originalCipher = await this.get(model.id);\n      }\n      if (originalCipher != null) {\n        const existingCipher = await originalCipher.decrypt();\n        model.passwordHistory = existingCipher.passwordHistory || [];\n        if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n          if (\n            existingCipher.login.password != null &&\n            existingCipher.login.password !== \"\" &&\n            existingCipher.login.password !== model.login.password\n          ) {\n            const ph = new PasswordHistoryView();\n            ph.password = existingCipher.login.password;\n            ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n            model.passwordHistory.splice(0, 0, ph);\n          } else {\n            model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n          }\n        }\n        if (existingCipher.hasFields) {\n          const existingHiddenFields = existingCipher.fields.filter(\n            (f) =>\n              f.type === FieldType.Hidden &&\n              f.name != null &&\n              f.name !== \"\" &&\n              f.value != null &&\n              f.value !== \"\"\n          );\n          const hiddenFields =\n            model.fields == null\n              ? []\n              : model.fields.filter(\n                  (f) => f.type === FieldType.Hidden && f.name != null && f.name !== \"\"\n                );\n          existingHiddenFields.forEach((ef) => {\n            const matchedField = hiddenFields.find((f) => f.name === ef.name);\n            if (matchedField == null || matchedField.value !== ef.value) {\n              const ph = new PasswordHistoryView();\n              ph.password = ef.name + \": \" + ef.value;\n              ph.lastUsedDate = new Date();\n              model.passwordHistory.splice(0, 0, ph);\n            }\n          });\n        }\n      }\n      if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n        model.passwordHistory = null;\n      } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n        // only save last 5 history\n        model.passwordHistory = model.passwordHistory.slice(0, 5);\n      }\n    }\n\n    const cipher = new Cipher();\n    cipher.id = model.id;\n    cipher.folderId = model.folderId;\n    cipher.favorite = model.favorite;\n    cipher.organizationId = model.organizationId;\n    cipher.type = model.type;\n    cipher.collectionIds = model.collectionIds;\n    cipher.revisionDate = model.revisionDate;\n    cipher.reprompt = model.reprompt;\n    cipher.edit = model.edit;\n\n    if (key == null && cipher.organizationId != null) {\n      key = await this.cryptoService.getOrgKey(cipher.organizationId);\n      if (key == null) {\n        throw new Error(\"Cannot encrypt cipher for organization. No key.\");\n      }\n    }\n    await Promise.all([\n      this.encryptObjProperty(\n        model,\n        cipher,\n        {\n          name: null,\n          notes: null,\n        },\n        key\n      ),\n      this.encryptCipherData(cipher, model, key),\n      this.encryptFields(model.fields, key).then((fields) => {\n        cipher.fields = fields;\n      }),\n      this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n        cipher.passwordHistory = ph;\n      }),\n      this.encryptAttachments(model.attachments, key).then((attachments) => {\n        cipher.attachments = attachments;\n      }),\n    ]);\n\n    return cipher;\n  }\n\n  async encryptAttachments(\n    attachmentsModel: AttachmentView[],\n    key: SymmetricCryptoKey\n  ): Promise<Attachment[]> {\n    if (attachmentsModel == null || attachmentsModel.length === 0) {\n      return null;\n    }\n\n    const promises: Promise<any>[] = [];\n    const encAttachments: Attachment[] = [];\n    attachmentsModel.forEach(async (model) => {\n      const attachment = new Attachment();\n      attachment.id = model.id;\n      attachment.size = model.size;\n      attachment.sizeName = model.sizeName;\n      attachment.url = model.url;\n      const promise = this.encryptObjProperty(\n        model,\n        attachment,\n        {\n          fileName: null,\n        },\n        key\n      ).then(async () => {\n        if (model.key != null) {\n          attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n        }\n        encAttachments.push(attachment);\n      });\n      promises.push(promise);\n    });\n\n    await Promise.all(promises);\n    return encAttachments;\n  }\n\n  async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n    if (!fieldsModel || !fieldsModel.length) {\n      return null;\n    }\n\n    const self = this;\n    const encFields: Field[] = [];\n    await fieldsModel.reduce(async (promise, field) => {\n      await promise;\n      const encField = await self.encryptField(field, key);\n      encFields.push(encField);\n    }, Promise.resolve());\n\n    return encFields;\n  }\n\n  async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n    const field = new Field();\n    field.type = fieldModel.type;\n    field.linkedId = fieldModel.linkedId;\n    // normalize boolean type field values\n    if (fieldModel.type === FieldType.Boolean && fieldModel.value !== \"true\") {\n      fieldModel.value = \"false\";\n    }\n\n    await this.encryptObjProperty(\n      fieldModel,\n      field,\n      {\n        name: null,\n        value: null,\n      },\n      key\n    );\n\n    return field;\n  }\n\n  async encryptPasswordHistories(\n    phModels: PasswordHistoryView[],\n    key: SymmetricCryptoKey\n  ): Promise<Password[]> {\n    if (!phModels || !phModels.length) {\n      return null;\n    }\n\n    const self = this;\n    const encPhs: Password[] = [];\n    await phModels.reduce(async (promise, ph) => {\n      await promise;\n      const encPh = await self.encryptPasswordHistory(ph, key);\n      encPhs.push(encPh);\n    }, Promise.resolve());\n\n    return encPhs;\n  }\n\n  async encryptPasswordHistory(\n    phModel: PasswordHistoryView,\n    key: SymmetricCryptoKey\n  ): Promise<Password> {\n    const ph = new Password();\n    ph.lastUsedDate = phModel.lastUsedDate;\n\n    await this.encryptObjProperty(\n      phModel,\n      ph,\n      {\n        password: null,\n      },\n      key\n    );\n\n    return ph;\n  }\n\n  async get(id: string): Promise<Cipher> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    const localData = await this.stateService.getLocalData();\n    return new Cipher(ciphers[id], localData ? localData[id] : null);\n  }\n\n  async getAll(): Promise<Cipher[]> {\n    const localData = await this.stateService.getLocalData();\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    const response: Cipher[] = [];\n    for (const id in ciphers) {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        response.push(new Cipher(ciphers[id], localData ? localData[id] : null));\n      }\n    }\n    return response;\n  }\n\n  @sequentialize(() => \"getAllDecrypted\")\n  async getAllDecrypted(): Promise<CipherView[]> {\n    if ((await this.getDecryptedCipherCache()) != null) {\n      await this.reindexCiphers();\n      return await this.getDecryptedCipherCache();\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const ciphers = await this.getAll();\n    const orgKeys = await this.cryptoService.getOrgKeys();\n    const userKey = await this.cryptoService.getKeyForUserEncryption();\n\n    // Group ciphers by orgId or under 'null' for the user's ciphers\n    const grouped = ciphers.reduce((agg, c) => {\n      agg[c.organizationId] ??= [];\n      agg[c.organizationId].push(c);\n      return agg;\n    }, {} as Record<string, Cipher[]>);\n\n    const decCiphers = (\n      await Promise.all(\n        Object.entries(grouped).map(([orgId, groupedCiphers]) =>\n          this.encryptService.decryptItems(groupedCiphers, orgKeys.get(orgId) ?? userKey)\n        )\n      )\n    )\n      .flat()\n      .sort(this.getLocaleSortingFunction());\n\n    await this.setDecryptedCipherCache(decCiphers);\n    return decCiphers;\n  }\n\n  private async reindexCiphers() {\n    const userId = await this.stateService.getUserId();\n    const reindexRequired =\n      this.searchService != null && (this.searchService().indexedEntityId ?? userId) !== userId;\n    if (reindexRequired) {\n      await this.searchService().indexCiphers(userId, await this.getDecryptedCipherCache());\n    }\n  }\n\n  async getAllDecryptedForGrouping(groupingId: string, folder = true): Promise<CipherView[]> {\n    const ciphers = await this.getAllDecrypted();\n\n    return ciphers.filter((cipher) => {\n      if (cipher.isDeleted) {\n        return false;\n      }\n      if (folder && cipher.folderId === groupingId) {\n        return true;\n      } else if (\n        !folder &&\n        cipher.collectionIds != null &&\n        cipher.collectionIds.indexOf(groupingId) > -1\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n  }\n\n  async getAllDecryptedForUrl(\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch: UriMatchType = null\n  ): Promise<CipherView[]> {\n    if (url == null && includeOtherTypes == null) {\n      return Promise.resolve([]);\n    }\n\n    const domain = Utils.getDomain(url);\n    const eqDomainsPromise =\n      domain == null\n        ? Promise.resolve([])\n        : firstValueFrom(this.settingsService.settings$).then(\n            (settings: AccountSettingsSettings) => {\n              let matches: any[] = [];\n              settings?.equivalentDomains?.forEach((eqDomain: any) => {\n                if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                  matches = matches.concat(eqDomain);\n                }\n              });\n\n              if (!matches.length) {\n                matches.push(domain);\n              }\n\n              return matches;\n            }\n          );\n\n    const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n    const matchingDomains = result[0];\n    const ciphers = result[1];\n\n    if (defaultMatch == null) {\n      defaultMatch = await this.stateService.getDefaultUriMatch();\n      if (defaultMatch == null) {\n        defaultMatch = UriMatchType.Domain;\n      }\n    }\n\n    return ciphers.filter((cipher) => {\n      if (cipher.deletedDate != null) {\n        return false;\n      }\n      if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n        return true;\n      }\n\n      if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n        for (let i = 0; i < cipher.login.uris.length; i++) {\n          const u = cipher.login.uris[i];\n          if (u.uri == null) {\n            continue;\n          }\n\n          const match = u.match == null ? defaultMatch : u.match;\n          switch (match) {\n            case UriMatchType.Domain:\n              if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                if (Utils.DomainMatchBlacklist.has(u.domain)) {\n                  const domainUrlHost = Utils.getHost(url);\n                  if (!Utils.DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                    return true;\n                  }\n                } else {\n                  return true;\n                }\n              }\n              break;\n            case UriMatchType.Host: {\n              const urlHost = Utils.getHost(url);\n              if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                return true;\n              }\n              break;\n            }\n            case UriMatchType.Exact:\n              if (url === u.uri) {\n                return true;\n              }\n              break;\n            case UriMatchType.StartsWith:\n              if (url.startsWith(u.uri)) {\n                return true;\n              }\n              break;\n            case UriMatchType.RegularExpression:\n              try {\n                const regex = new RegExp(u.uri, \"i\");\n                if (regex.test(url)) {\n                  return true;\n                }\n              } catch (e) {\n                this.logService.error(e);\n              }\n              break;\n            case UriMatchType.Never:\n            default:\n              break;\n          }\n        }\n      }\n\n      return false;\n    });\n  }\n\n  async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n    const response = await this.apiService.getCiphersOrganization(organizationId);\n    if (response?.data == null || response.data.length < 1) {\n      return [];\n    }\n\n    const ciphers = response.data.map((cr) => new Cipher(new CipherData(cr)));\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const decCiphers = await this.encryptService.decryptItems(ciphers, key);\n\n    decCiphers.sort(this.getLocaleSortingFunction());\n    return decCiphers;\n  }\n\n  async getLastUsedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, true, false, autofillOnPageLoad);\n  }\n\n  async getLastLaunchedForUrl(url: string, autofillOnPageLoad = false): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, true, autofillOnPageLoad);\n  }\n\n  async getNextCipherForUrl(url: string): Promise<CipherView> {\n    return this.getCipherForUrl(url, false, false, false);\n  }\n\n  updateLastUsedIndexForUrl(url: string) {\n    this.sortedCiphersCache.updateLastUsedIndex(url);\n  }\n\n  async updateLastUsedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastUsedDate = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async updateLastLaunchedDate(id: string): Promise<void> {\n    let ciphersLocalData = await this.stateService.getLocalData();\n    if (!ciphersLocalData) {\n      ciphersLocalData = {};\n    }\n\n    if (ciphersLocalData[id]) {\n      ciphersLocalData[id].lastLaunched = new Date().getTime();\n    } else {\n      ciphersLocalData[id] = {\n        lastUsedDate: new Date().getTime(),\n      };\n    }\n\n    await this.stateService.setLocalData(ciphersLocalData);\n\n    const decryptedCipherCache = await this.stateService.getDecryptedCiphers();\n    if (!decryptedCipherCache) {\n      return;\n    }\n\n    for (let i = 0; i < decryptedCipherCache.length; i++) {\n      const cached = decryptedCipherCache[i];\n      if (cached.id === id) {\n        cached.localData = ciphersLocalData[id];\n        break;\n      }\n    }\n    await this.stateService.setDecryptedCiphers(decryptedCipherCache);\n  }\n\n  async saveNeverDomain(domain: string): Promise<void> {\n    if (domain == null) {\n      return;\n    }\n\n    let domains = await this.stateService.getNeverDomains();\n    if (!domains) {\n      domains = {};\n    }\n    domains[domain] = null;\n    await this.stateService.setNeverDomains(domains);\n  }\n\n  async createWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.collectionIds != null) {\n      const request = new CipherCreateRequest(cipher);\n      response = await this.apiService.postCipherCreate(request);\n    } else {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.postCipher(request);\n    }\n    cipher.id = response.id;\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async updateWithServer(cipher: Cipher): Promise<any> {\n    let response: CipherResponse;\n    if (cipher.edit) {\n      const request = new CipherRequest(cipher);\n      response = await this.apiService.putCipher(cipher.id, request);\n    } else {\n      const request = new CipherPartialRequest(cipher);\n      response = await this.apiService.putPartialCipher(cipher.id, request);\n    }\n\n    const data = new CipherData(response, cipher.collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareWithServer(\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const attachmentPromises: Promise<any>[] = [];\n    if (cipher.attachments != null) {\n      cipher.attachments.forEach((attachment) => {\n        if (attachment.key == null) {\n          attachmentPromises.push(\n            this.shareAttachmentWithServer(attachment, cipher.id, organizationId)\n          );\n        }\n      });\n    }\n    await Promise.all(attachmentPromises);\n\n    cipher.organizationId = organizationId;\n    cipher.collectionIds = collectionIds;\n    const encCipher = await this.encrypt(cipher);\n    const request = new CipherShareRequest(encCipher);\n    const response = await this.apiService.putShareCipher(cipher.id, request);\n    const data = new CipherData(response, collectionIds);\n    await this.upsert(data);\n  }\n\n  async shareManyWithServer(\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ): Promise<any> {\n    const promises: Promise<any>[] = [];\n    const encCiphers: Cipher[] = [];\n    for (const cipher of ciphers) {\n      cipher.organizationId = organizationId;\n      cipher.collectionIds = collectionIds;\n      promises.push(\n        this.encrypt(cipher).then((c) => {\n          encCiphers.push(c);\n        })\n      );\n    }\n    await Promise.all(promises);\n    const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n    try {\n      await this.apiService.putShareCiphers(request);\n    } catch (e) {\n      for (const cipher of ciphers) {\n        cipher.organizationId = null;\n        cipher.collectionIds = null;\n      }\n      throw e;\n    }\n    await this.upsert(encCiphers.map((c) => c.toCipherData()));\n  }\n\n  saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(unencryptedFile);\n      reader.onload = async (evt: any) => {\n        try {\n          const cData = await this.saveAttachmentRawWithServer(\n            cipher,\n            unencryptedFile.name,\n            evt.target.result,\n            admin\n          );\n          resolve(cData);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  async saveAttachmentRawWithServer(\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin = false\n  ): Promise<Cipher> {\n    const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n    const encFileName = await this.cryptoService.encrypt(filename, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n    const request: AttachmentRequest = {\n      key: dataEncKey[1].encryptedString,\n      fileName: encFileName.encryptedString,\n      fileSize: encData.buffer.byteLength,\n      adminRequest: admin,\n    };\n\n    let response: CipherResponse;\n    try {\n      const uploadDataResponse = await this.apiService.postCipherAttachment(cipher.id, request);\n      response = admin ? uploadDataResponse.cipherMiniResponse : uploadDataResponse.cipherResponse;\n      await this.fileUploadService.uploadCipherAttachment(\n        admin,\n        uploadDataResponse,\n        encFileName,\n        encData\n      );\n    } catch (e) {\n      if (\n        (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) ||\n        (e as ErrorResponse).statusCode === 405\n      ) {\n        response = await this.legacyServerAttachmentFileUpload(\n          admin,\n          cipher.id,\n          encFileName,\n          encData,\n          dataEncKey[1]\n        );\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    const cData = new CipherData(response, cipher.collectionIds);\n    if (!admin) {\n      await this.upsert(cData);\n    }\n    return new Cipher(cData);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerAttachmentFileUpload(\n    admin: boolean,\n    cipherId: string,\n    encFileName: EncString,\n    encData: EncArrayBuffer,\n    key: EncString\n  ) {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", key.encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", key.encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    let response: CipherResponse;\n    try {\n      if (admin) {\n        response = await this.apiService.postCipherAttachmentAdminLegacy(cipherId, fd);\n      } else {\n        response = await this.apiService.postCipherAttachmentLegacy(cipherId, fd);\n      }\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n\n    return response;\n  }\n\n  async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n    const request = new CipherCollectionsRequest(cipher.collectionIds);\n    await this.apiService.putCipherCollections(cipher.id, request);\n    const data = cipher.toCipherData();\n    await this.upsert(data);\n  }\n\n  async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    if (cipher instanceof CipherData) {\n      const c = cipher as CipherData;\n      ciphers[c.id] = c;\n    } else {\n      (cipher as CipherData[]).forEach((c) => {\n        ciphers[c.id] = c;\n      });\n    }\n\n    await this.replace(ciphers);\n  }\n\n  async replace(ciphers: { [id: string]: CipherData }): Promise<any> {\n    await this.clearDecryptedCiphersState();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearEncryptedCiphersState(userId);\n    await this.clearCache(userId);\n  }\n\n  async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n    await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n    let ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      ciphers = {};\n    }\n\n    ids.forEach((id) => {\n      // eslint-disable-next-line\n      if (ciphers.hasOwnProperty(id)) {\n        ciphers[id].folderId = folderId;\n      }\n    });\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (ciphers[id] == null) {\n        return;\n      }\n      delete ciphers[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete ciphers[i];\n      });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteCipher(id);\n    await this.delete(id);\n  }\n\n  async deleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.delete(ids);\n  }\n\n  async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n\n    // eslint-disable-next-line\n    if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n      return;\n    }\n\n    for (let i = 0; i < ciphers[id].attachments.length; i++) {\n      if (ciphers[id].attachments[i].id === attachmentId) {\n        ciphers[id].attachments.splice(i, 1);\n      }\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n    try {\n      await this.apiService.deleteCipherAttachment(id, attachmentId);\n    } catch (e) {\n      return Promise.reject((e as ErrorResponse).getSingleMessage());\n    }\n    await this.deleteAttachment(id, attachmentId);\n  }\n\n  sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n    const aLastUsed =\n      a.localData && a.localData.lastUsedDate ? (a.localData.lastUsedDate as number) : null;\n    const bLastUsed =\n      b.localData && b.localData.lastUsedDate ? (b.localData.lastUsedDate as number) : null;\n\n    const bothNotNull = aLastUsed != null && bLastUsed != null;\n    if (bothNotNull && aLastUsed < bLastUsed) {\n      return 1;\n    }\n    if (aLastUsed != null && bLastUsed == null) {\n      return -1;\n    }\n\n    if (bothNotNull && aLastUsed > bLastUsed) {\n      return -1;\n    }\n    if (bLastUsed != null && aLastUsed == null) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n    const result = this.sortCiphersByLastUsed(a, b);\n    if (result !== 0) {\n      return result;\n    }\n\n    return this.getLocaleSortingFunction()(a, b);\n  }\n\n  getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n    return (a, b) => {\n      let aName = a.name;\n      let bName = b.name;\n\n      if (aName == null && bName != null) {\n        return -1;\n      }\n      if (aName != null && bName == null) {\n        return 1;\n      }\n      if (aName == null && bName == null) {\n        return 0;\n      }\n\n      const result = this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n\n      if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n        return result;\n      }\n\n      if (a.login.username != null) {\n        aName += a.login.username;\n      }\n\n      if (b.login.username != null) {\n        bName += b.login.username;\n      }\n\n      return this.i18nService.collator\n        ? this.i18nService.collator.compare(aName, bName)\n        : aName.localeCompare(bName);\n    };\n  }\n\n  async softDelete(id: string | string[]): Promise<any> {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const setDeletedDate = (cipherId: string) => {\n      if (ciphers[cipherId] == null) {\n        return;\n      }\n      ciphers[cipherId].deletedDate = new Date().toISOString();\n    };\n\n    if (typeof id === \"string\") {\n      setDeletedDate(id);\n    } else {\n      (id as string[]).forEach(setDeletedDate);\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async softDeleteWithServer(id: string): Promise<any> {\n    await this.apiService.putDeleteCipher(id);\n    await this.softDelete(id);\n  }\n\n  async softDeleteManyWithServer(ids: string[]): Promise<any> {\n    await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n    await this.softDelete(ids);\n  }\n\n  async restore(\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) {\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers == null) {\n      return;\n    }\n\n    const clearDeletedDate = (c: { id: string; revisionDate: string }) => {\n      if (ciphers[c.id] == null) {\n        return;\n      }\n      ciphers[c.id].deletedDate = null;\n      ciphers[c.id].revisionDate = c.revisionDate;\n    };\n\n    if (cipher.constructor.name === Array.name) {\n      (cipher as { id: string; revisionDate: string }[]).forEach(clearDeletedDate);\n    } else {\n      clearDeletedDate(cipher as { id: string; revisionDate: string });\n    }\n\n    await this.clearCache();\n    await this.stateService.setEncryptedCiphers(ciphers);\n  }\n\n  async restoreWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putRestoreCipher(id);\n    await this.restore({ id: id, revisionDate: response.revisionDate });\n  }\n\n  async restoreManyWithServer(ids: string[]): Promise<any> {\n    const response = await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n    const restores: { id: string; revisionDate: string }[] = [];\n    for (const cipher of response.data) {\n      restores.push({ id: cipher.id, revisionDate: cipher.revisionDate });\n    }\n    await this.restore(restores);\n  }\n\n  // Helpers\n\n  private async shareAttachmentWithServer(\n    attachmentView: AttachmentView,\n    cipherId: string,\n    organizationId: string\n  ): Promise<any> {\n    const attachmentResponse = await this.apiService.nativeFetch(\n      new Request(attachmentView.url, { cache: \"no-store\" })\n    );\n    if (attachmentResponse.status !== 200) {\n      throw Error(\"Failed to download attachment: \" + attachmentResponse.status.toString());\n    }\n\n    const encBuf = await EncArrayBuffer.fromResponse(attachmentResponse);\n    const decBuf = await this.cryptoService.decryptFromBytes(encBuf, null);\n    const key = await this.cryptoService.getOrgKey(organizationId);\n    const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n    const dataEncKey = await this.cryptoService.makeEncKey(key);\n    const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n    const fd = new FormData();\n    try {\n      const blob = new Blob([encData.buffer], { type: \"application/octet-stream\" });\n      fd.append(\"key\", dataEncKey[1].encryptedString);\n      fd.append(\"data\", blob, encFileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"key\", dataEncKey[1].encryptedString);\n        fd.append(\n          \"data\",\n          Buffer.from(encData.buffer) as any,\n          {\n            filepath: encFileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n\n    try {\n      await this.apiService.postShareCipherAttachment(\n        cipherId,\n        attachmentView.id,\n        fd,\n        organizationId\n      );\n    } catch (e) {\n      throw new Error((e as ErrorResponse).getSingleMessage());\n    }\n  }\n\n  private async encryptObjProperty<V extends View, D extends Domain>(\n    model: V,\n    obj: D,\n    map: any,\n    key: SymmetricCryptoKey\n  ): Promise<void> {\n    const promises = [];\n    const self = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp, theObj) {\n        const p = Promise.resolve()\n          .then(() => {\n            const modelProp = (model as any)[map[theProp] || theProp];\n            if (modelProp && modelProp !== \"\") {\n              return self.cryptoService.encrypt(modelProp, key);\n            }\n            return null;\n          })\n          .then((val: EncString) => {\n            (theObj as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop, obj);\n    }\n\n    await Promise.all(promises);\n  }\n\n  private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n    switch (cipher.type) {\n      case CipherType.Login:\n        cipher.login = new Login();\n        cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n        cipher.login.autofillOnPageLoad = model.login.autofillOnPageLoad;\n        await this.encryptObjProperty(\n          model.login,\n          cipher.login,\n          {\n            username: null,\n            password: null,\n            totp: null,\n          },\n          key\n        );\n\n        if (model.login.uris != null) {\n          cipher.login.uris = [];\n          for (let i = 0; i < model.login.uris.length; i++) {\n            const loginUri = new LoginUri();\n            loginUri.match = model.login.uris[i].match;\n            await this.encryptObjProperty(\n              model.login.uris[i],\n              loginUri,\n              {\n                uri: null,\n              },\n              key\n            );\n            cipher.login.uris.push(loginUri);\n          }\n        }\n        return;\n      case CipherType.SecureNote:\n        cipher.secureNote = new SecureNote();\n        cipher.secureNote.type = model.secureNote.type;\n        return;\n      case CipherType.Card:\n        cipher.card = new Card();\n        await this.encryptObjProperty(\n          model.card,\n          cipher.card,\n          {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n          },\n          key\n        );\n        return;\n      case CipherType.Identity:\n        cipher.identity = new Identity();\n        await this.encryptObjProperty(\n          model.identity,\n          cipher.identity,\n          {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n          },\n          key\n        );\n        return;\n      default:\n        throw new Error(\"Unknown cipher type.\");\n    }\n  }\n\n  private async getCipherForUrl(\n    url: string,\n    lastUsed: boolean,\n    lastLaunched: boolean,\n    autofillOnPageLoad: boolean\n  ): Promise<CipherView> {\n    const cacheKey = autofillOnPageLoad ? \"autofillOnPageLoad-\" + url : url;\n\n    if (!this.sortedCiphersCache.isCached(cacheKey)) {\n      let ciphers = await this.getAllDecryptedForUrl(url);\n      if (!ciphers) {\n        return null;\n      }\n\n      if (autofillOnPageLoad) {\n        const autofillOnPageLoadDefault = await this.stateService.getAutoFillOnPageLoadDefault();\n        ciphers = ciphers.filter(\n          (cipher) =>\n            cipher.login.autofillOnPageLoad ||\n            (cipher.login.autofillOnPageLoad == null && autofillOnPageLoadDefault !== false)\n        );\n        if (ciphers.length === 0) {\n          return null;\n        }\n      }\n\n      this.sortedCiphersCache.addCiphers(cacheKey, ciphers);\n    }\n\n    if (lastLaunched) {\n      return this.sortedCiphersCache.getLastLaunched(cacheKey);\n    } else if (lastUsed) {\n      return this.sortedCiphersCache.getLastUsed(cacheKey);\n    } else {\n      return this.sortedCiphersCache.getNext(cacheKey);\n    }\n  }\n\n  private async clearEncryptedCiphersState(userId?: string) {\n    await this.stateService.setEncryptedCiphers(null, { userId: userId });\n  }\n\n  private async clearDecryptedCiphersState(userId?: string) {\n    await this.stateService.setDecryptedCiphers(null, { userId: userId });\n    this.clearSortedCiphers();\n  }\n\n  private clearSortedCiphers() {\n    this.sortedCiphersCache.clear();\n  }\n}\n","import { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { ProfileOrganizationResponse } from \"../response/profile-organization.response\";\n\nexport class OrganizationData {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  useActivateAutofillPolicy: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n  accessSecretsManager: boolean;\n\n  constructor(response: ProfileOrganizationResponse) {\n    this.id = response.id;\n    this.name = response.name;\n    this.status = response.status;\n    this.type = response.type;\n    this.enabled = response.enabled;\n    this.usePolicies = response.usePolicies;\n    this.useGroups = response.useGroups;\n    this.useDirectory = response.useDirectory;\n    this.useEvents = response.useEvents;\n    this.useTotp = response.useTotp;\n    this.use2fa = response.use2fa;\n    this.useApi = response.useApi;\n    this.useSso = response.useSso;\n    this.useKeyConnector = response.useKeyConnector;\n    this.useScim = response.useScim;\n    this.useCustomPermissions = response.useCustomPermissions;\n    this.useResetPassword = response.useResetPassword;\n    this.useSecretsManager = response.useSecretsManager;\n    this.useActivateAutofillPolicy = response.useActivateAutofillPolicy;\n    this.selfHost = response.selfHost;\n    this.usersGetPremium = response.usersGetPremium;\n    this.seats = response.seats;\n    this.maxCollections = response.maxCollections;\n    this.maxStorageGb = response.maxStorageGb;\n    this.ssoBound = response.ssoBound;\n    this.identifier = response.identifier;\n    this.permissions = response.permissions;\n    this.resetPasswordEnrolled = response.resetPasswordEnrolled;\n    this.userId = response.userId;\n    this.hasPublicAndPrivateKeys = response.hasPublicAndPrivateKeys;\n    this.providerId = response.providerId;\n    this.providerName = response.providerName;\n    this.familySponsorshipFriendlyName = response.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = response.familySponsorshipAvailable;\n    this.planProductType = response.planProductType;\n    this.keyConnectorEnabled = response.keyConnectorEnabled;\n    this.keyConnectorUrl = response.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = response.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = response.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = response.familySponsorshipToDelete;\n    this.accessSecretsManager = response.accessSecretsManager;\n  }\n}\n","import { ApiService } from \"../../../abstractions/api.service\";\nimport { CollectionService } from \"../../../abstractions/collection.service\";\nimport { CryptoService } from \"../../../abstractions/crypto.service\";\nimport { LogService } from \"../../../abstractions/log.service\";\nimport { MessagingService } from \"../../../abstractions/messaging.service\";\nimport { InternalOrganizationService } from \"../../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService } from \"../../../abstractions/policy/policy.service.abstraction\";\nimport { ProviderService } from \"../../../abstractions/provider.service\";\nimport { SendService } from \"../../../abstractions/send.service\";\nimport { SettingsService } from \"../../../abstractions/settings.service\";\nimport { StateService } from \"../../../abstractions/state.service\";\nimport { KeyConnectorService } from \"../../../auth/abstractions/key-connector.service\";\nimport { sequentialize } from \"../../../misc/sequentialize\";\nimport { CollectionData } from \"../../../models/data/collection.data\";\nimport { OrganizationData } from \"../../../models/data/organization.data\";\nimport { PolicyData } from \"../../../models/data/policy.data\";\nimport { ProviderData } from \"../../../models/data/provider.data\";\nimport { SendData } from \"../../../models/data/send.data\";\nimport { CollectionDetailsResponse } from \"../../../models/response/collection.response\";\nimport { DomainsResponse } from \"../../../models/response/domains.response\";\nimport {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../../models/response/notification.response\";\nimport { PolicyResponse } from \"../../../models/response/policy.response\";\nimport { ProfileResponse } from \"../../../models/response/profile.response\";\nimport { SendResponse } from \"../../../models/response/send.response\";\nimport { CipherService } from \"../../../vault/abstractions/cipher.service\";\nimport { FolderApiServiceAbstraction } from \"../../../vault/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../../vault/abstractions/folder/folder.service.abstraction\";\nimport { SyncService as SyncServiceAbstraction } from \"../../../vault/abstractions/sync/sync.service.abstraction\";\nimport { CipherData } from \"../../../vault/models/data/cipher.data\";\nimport { FolderData } from \"../../../vault/models/data/folder.data\";\nimport { CipherResponse } from \"../../../vault/models/response/cipher.response\";\nimport { FolderResponse } from \"../../../vault/models/response/folder.response\";\n\nexport class SyncService implements SyncServiceAbstraction {\n  syncInProgress = false;\n\n  constructor(\n    private apiService: ApiService,\n    private settingsService: SettingsService,\n    private folderService: InternalFolderService,\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private messagingService: MessagingService,\n    private policyService: InternalPolicyService,\n    private sendService: SendService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private providerService: ProviderService,\n    private folderApiService: FolderApiServiceAbstraction,\n    private organizationService: InternalOrganizationService,\n    private logoutCallback: (expired: boolean) => Promise<void>\n  ) {}\n\n  async getLastSync(): Promise<Date> {\n    if ((await this.stateService.getUserId()) == null) {\n      return null;\n    }\n\n    const lastSync = await this.stateService.getLastSync();\n    if (lastSync) {\n      return new Date(lastSync);\n    }\n\n    return null;\n  }\n\n  async setLastSync(date: Date, userId?: string): Promise<any> {\n    await this.stateService.setLastSync(date.toJSON(), { userId: userId });\n  }\n\n  @sequentialize(() => \"fullSync\")\n  async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n    this.syncStarted();\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    if (!isAuthenticated) {\n      return this.syncCompleted(false);\n    }\n\n    const now = new Date();\n    let needsSync = false;\n    try {\n      needsSync = await this.needsSyncing(forceSync);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      }\n    }\n\n    if (!needsSync) {\n      await this.setLastSync(now);\n      return this.syncCompleted(false);\n    }\n\n    try {\n      await this.apiService.refreshIdentityToken();\n      const response = await this.apiService.getSync();\n\n      await this.syncProfile(response.profile);\n      await this.syncFolders(response.folders);\n      await this.syncCollections(response.collections);\n      await this.syncCiphers(response.ciphers);\n      await this.syncSends(response.sends);\n      await this.syncSettings(response.domains);\n      await this.syncPolicies(response.policies);\n\n      await this.setLastSync(now);\n      return this.syncCompleted(true);\n    } catch (e) {\n      if (allowThrowOnError) {\n        throw e;\n      } else {\n        return this.syncCompleted(false);\n      }\n    }\n  }\n\n  async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localFolder = await this.folderService.get(notification.id);\n        if (\n          (!isEdit && localFolder == null) ||\n          (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)\n        ) {\n          const remoteFolder = await this.folderApiService.get(notification.id);\n          if (remoteFolder != null) {\n            await this.folderService.upsert(new FolderData(remoteFolder));\n            this.messagingService.send(\"syncedUpsertedFolder\", { folderId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.folderService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedFolder\", { folderId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        let shouldUpdate = true;\n        const localCipher = await this.cipherService.get(notification.id);\n        if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n          shouldUpdate = false;\n        }\n\n        let checkCollections = false;\n        if (shouldUpdate) {\n          if (isEdit) {\n            shouldUpdate = localCipher != null;\n            checkCollections = true;\n          } else {\n            if (notification.collectionIds == null || notification.organizationId == null) {\n              shouldUpdate = localCipher == null;\n            } else {\n              shouldUpdate = false;\n              checkCollections = true;\n            }\n          }\n        }\n\n        if (\n          !shouldUpdate &&\n          checkCollections &&\n          notification.organizationId != null &&\n          notification.collectionIds != null &&\n          notification.collectionIds.length > 0\n        ) {\n          const collections = await this.collectionService.getAll();\n          if (collections != null) {\n            for (let i = 0; i < collections.length; i++) {\n              if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (shouldUpdate) {\n          const remoteCipher = await this.apiService.getFullCipherDetails(notification.id);\n          if (remoteCipher != null) {\n            await this.cipherService.upsert(new CipherData(remoteCipher));\n            this.messagingService.send(\"syncedUpsertedCipher\", { cipherId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        if (e != null && e.statusCode === 404 && isEdit) {\n          await this.cipherService.delete(notification.id);\n          this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n          return this.syncCompleted(true);\n        }\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.cipherService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedCipher\", { cipherId: notification.id });\n      return this.syncCompleted(true);\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncUpsertSend(notification: SyncSendNotification, isEdit: boolean): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      try {\n        const localSend = await this.sendService.get(notification.id);\n        if (\n          (!isEdit && localSend == null) ||\n          (isEdit && localSend != null && localSend.revisionDate < notification.revisionDate)\n        ) {\n          const remoteSend = await this.apiService.getSend(notification.id);\n          if (remoteSend != null) {\n            await this.sendService.upsert(new SendData(remoteSend));\n            this.messagingService.send(\"syncedUpsertedSend\", { sendId: notification.id });\n            return this.syncCompleted(true);\n          }\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return this.syncCompleted(false);\n  }\n\n  async syncDeleteSend(notification: SyncSendNotification): Promise<boolean> {\n    this.syncStarted();\n    if (await this.stateService.getIsAuthenticated()) {\n      await this.sendService.delete(notification.id);\n      this.messagingService.send(\"syncedDeletedSend\", { sendId: notification.id });\n      this.syncCompleted(true);\n      return true;\n    }\n    return this.syncCompleted(false);\n  }\n\n  // Helpers\n\n  private syncStarted() {\n    this.syncInProgress = true;\n    this.messagingService.send(\"syncStarted\");\n  }\n\n  private syncCompleted(successfully: boolean): boolean {\n    this.syncInProgress = false;\n    this.messagingService.send(\"syncCompleted\", { successfully: successfully });\n    return successfully;\n  }\n\n  private async needsSyncing(forceSync: boolean) {\n    if (forceSync) {\n      return true;\n    }\n\n    const lastSync = await this.getLastSync();\n    if (lastSync == null || lastSync.getTime() === 0) {\n      return true;\n    }\n\n    const response = await this.apiService.getAccountRevisionDate();\n    if (new Date(response) <= lastSync) {\n      return false;\n    }\n    return true;\n  }\n\n  private async syncProfile(response: ProfileResponse) {\n    const stamp = await this.stateService.getSecurityStamp();\n    if (stamp != null && stamp !== response.securityStamp) {\n      if (this.logoutCallback != null) {\n        await this.logoutCallback(true);\n      }\n\n      throw new Error(\"Stamp has changed\");\n    }\n\n    await this.cryptoService.setEncKey(response.key);\n    await this.cryptoService.setEncPrivateKey(response.privateKey);\n    await this.cryptoService.setProviderKeys(response.providers);\n    await this.cryptoService.setOrgKeys(response.organizations, response.providerOrganizations);\n    await this.stateService.setAvatarColor(response.avatarColor);\n    await this.stateService.setSecurityStamp(response.securityStamp);\n    await this.stateService.setEmailVerified(response.emailVerified);\n    await this.stateService.setHasPremiumPersonally(response.premiumPersonally);\n    await this.stateService.setHasPremiumFromOrganization(response.premiumFromOrganization);\n    await this.stateService.setForcePasswordReset(response.forcePasswordReset);\n    await this.keyConnectorService.setUsesKeyConnector(response.usesKeyConnector);\n\n    const organizations: { [id: string]: OrganizationData } = {};\n    response.organizations.forEach((o) => {\n      organizations[o.id] = new OrganizationData(o);\n    });\n\n    const providers: { [id: string]: ProviderData } = {};\n    response.providers.forEach((p) => {\n      providers[p.id] = new ProviderData(p);\n    });\n\n    response.providerOrganizations.forEach((o) => {\n      if (organizations[o.id] == null) {\n        organizations[o.id] = new OrganizationData(o);\n        organizations[o.id].isProviderUser = true;\n      }\n    });\n\n    await this.organizationService.replace(organizations);\n    await this.providerService.save(providers);\n\n    if (await this.keyConnectorService.userNeedsMigration()) {\n      await this.keyConnectorService.setConvertAccountRequired(true);\n      this.messagingService.send(\"convertAccountToKeyConnector\");\n    } else {\n      this.keyConnectorService.removeConvertAccountRequired();\n    }\n  }\n\n  private async syncFolders(response: FolderResponse[]) {\n    const folders: { [id: string]: FolderData } = {};\n    response.forEach((f) => {\n      folders[f.id] = new FolderData(f);\n    });\n    return await this.folderService.replace(folders);\n  }\n\n  private async syncCollections(response: CollectionDetailsResponse[]) {\n    const collections: { [id: string]: CollectionData } = {};\n    response.forEach((c) => {\n      collections[c.id] = new CollectionData(c);\n    });\n    return await this.collectionService.replace(collections);\n  }\n\n  private async syncCiphers(response: CipherResponse[]) {\n    const ciphers: { [id: string]: CipherData } = {};\n    response.forEach((c) => {\n      ciphers[c.id] = new CipherData(c);\n    });\n    return await this.cipherService.replace(ciphers);\n  }\n\n  private async syncSends(response: SendResponse[]) {\n    const sends: { [id: string]: SendData } = {};\n    response.forEach((s) => {\n      sends[s.id] = new SendData(s);\n    });\n    return await this.sendService.replace(sends);\n  }\n\n  private async syncSettings(response: DomainsResponse) {\n    let eqDomains: string[][] = [];\n    if (response != null && response.equivalentDomains != null) {\n      eqDomains = eqDomains.concat(response.equivalentDomains);\n    }\n\n    if (response != null && response.globalEquivalentDomains != null) {\n      response.globalEquivalentDomains.forEach((global) => {\n        if (global.domains.length > 0) {\n          eqDomains.push(global.domains);\n        }\n      });\n    }\n\n    return this.settingsService.setEquivalentDomains(eqDomains);\n  }\n\n  private async syncPolicies(response: PolicyResponse[]) {\n    const policies: { [id: string]: PolicyData } = {};\n    if (response != null) {\n      response.forEach((p) => {\n        policies[p.id] = new PolicyData(p);\n      });\n    }\n    return await this.policyService.replace(policies);\n  }\n}\n","import { Directive } from \"@angular/core\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\nimport { ModalRef } from \"../../components/modal/modal.ref\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationComponent for any other situation where you need to verify the user's identity.\n */\n@Directive()\nexport class PasswordRepromptComponent {\n  showPassword = false;\n  masterPassword = \"\";\n\n  constructor(\n    private modalRef: ModalRef,\n    private cryptoService: CryptoService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  async submit() {\n    if (!(await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, null))) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    this.modalRef.close(true);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/auth/abstractions/key-connector.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\n\nimport { ModalService } from \"../../services/modal.service\";\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n/**\n * Used to verify the user's Master Password for the \"Master Password Re-prompt\" feature only.\n * See UserVerificationService for any other situation where you need to verify the user's identity.\n */\n@Injectable()\nexport class PasswordRepromptService implements PasswordRepromptServiceAbstraction {\n  protected component = PasswordRepromptComponent;\n\n  constructor(\n    private modalService: ModalService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  protectedFields() {\n    return [\"TOTP\", \"Password\", \"H_Field\", \"Card Number\", \"Security Code\"];\n  }\n\n  async showPasswordPrompt() {\n    if (!(await this.enabled())) {\n      return true;\n    }\n\n    const ref = this.modalService.open(this.component, { allowMultipleModals: true });\n\n    if (ref == null) {\n      return false;\n    }\n\n    const result = await ref.onClosedPromise();\n    return result === true;\n  }\n\n  async enabled() {\n    return !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService as BaseBroadcasterService } from \"@bitwarden/common/services/broadcaster.service\";\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {}\n","import {\n  BroadcasterService as BroadcasterServiceAbstraction,\n  MessageBase,\n} from \"../abstractions/broadcaster.service\";\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n  subscribers: Map<string, (message: MessageBase) => void> = new Map<\n    string,\n    (message: MessageBase) => void\n  >();\n\n  send(message: MessageBase, id?: string) {\n    if (id != null) {\n      if (this.subscribers.has(id)) {\n        this.subscribers.get(id)(message);\n      }\n      return;\n    }\n\n    this.subscribers.forEach((value) => {\n      value(message);\n    });\n  }\n\n  subscribe(id: string, messageCallback: (message: MessageBase) => void) {\n    this.subscribers.set(id, messageCallback);\n  }\n\n  unsubscribe(id: string) {\n    if (this.subscribers.has(id)) {\n      this.subscribers.delete(id);\n    }\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport class ThemeBuilder implements Theme {\n  get effectiveTheme(): ThemeType {\n    return this.configuredTheme != ThemeType.System ? this.configuredTheme : this.systemTheme;\n  }\n\n  constructor(readonly configuredTheme: ThemeType, readonly systemTheme: ThemeType) {}\n\n  updateSystemTheme(systemTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(this.configuredTheme, systemTheme);\n  }\n\n  updateConfiguredTheme(configuredTheme: ThemeType): ThemeBuilder {\n    return new ThemeBuilder(configuredTheme, this.systemTheme);\n  }\n}\n","import { DOCUMENT } from \"@angular/common\";\nimport { Inject, Injectable } from \"@angular/core\";\nimport { BehaviorSubject, filter, fromEvent, Observable } from \"rxjs\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { WINDOW } from \"../injection-tokens\";\n\nimport { Theme } from \"./theme\";\nimport { ThemeBuilder } from \"./themeBuilder\";\nimport { AbstractThemingService } from \"./theming.service.abstraction\";\n\n@Injectable()\nexport class ThemingService implements AbstractThemingService {\n  private _theme = new BehaviorSubject<ThemeBuilder | null>(null);\n  theme$: Observable<Theme> = this._theme.pipe(filter((x) => x !== null));\n\n  constructor(\n    private stateService: StateService,\n    @Inject(WINDOW) private window: Window,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.monitorThemeChanges();\n  }\n\n  async monitorThemeChanges(): Promise<void> {\n    this._theme.next(\n      new ThemeBuilder(await this.stateService.getTheme(), await this.getSystemTheme())\n    );\n    this.monitorConfiguredThemeChanges();\n    this.monitorSystemThemeChanges();\n  }\n\n  updateSystemTheme(systemTheme: ThemeType): void {\n    this._theme.next(this._theme.getValue().updateSystemTheme(systemTheme));\n  }\n\n  async updateConfiguredTheme(theme: ThemeType): Promise<void> {\n    await this.stateService.setTheme(theme);\n    this._theme.next(this._theme.getValue().updateConfiguredTheme(theme));\n  }\n\n  protected monitorConfiguredThemeChanges(): void {\n    this.theme$.subscribe((theme: Theme) => {\n      this.document.documentElement.classList.remove(\n        \"theme_\" + ThemeType.Light,\n        \"theme_\" + ThemeType.Dark,\n        \"theme_\" + ThemeType.Nord,\n        \"theme_\" + ThemeType.SolarizedDark\n      );\n      this.document.documentElement.classList.add(\"theme_\" + theme.effectiveTheme);\n    });\n  }\n\n  // We use a media match query for monitoring the system theme on web and browser, but this doesn't work for electron apps on Linux.\n  // In desktop we override these methods to track systemTheme with the electron renderer instead, which works for all OSs.\n  protected async getSystemTheme(): Promise<ThemeType> {\n    return this.window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n      ? ThemeType.Dark\n      : ThemeType.Light;\n  }\n\n  protected monitorSystemThemeChanges(): void {\n    fromEvent<MediaQueryListEvent>(\n      this.window.matchMedia(\"(prefers-color-scheme: dark)\"),\n      \"change\"\n    ).subscribe((event) => {\n      this.updateSystemTheme(event.matches ? ThemeType.Dark : ThemeType.Light);\n    });\n  }\n}\n","import { Injector, LOCALE_ID, NgModule } from \"@angular/core\";\n\nimport { AvatarUpdateService as AccountUpdateServiceAbstraction } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\nimport { AnonymousHubService as AnonymousHubServiceAbstraction } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService as ApiServiceAbstraction } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService as AppIdServiceAbstraction } from \"@bitwarden/common/abstractions/appId.service\";\nimport { AuditService as AuditServiceAbstraction } from \"@bitwarden/common/abstractions/audit.service\";\nimport { BroadcasterService as BroadcasterServiceAbstraction } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CollectionService as CollectionServiceAbstraction } from \"@bitwarden/common/abstractions/collection.service\";\nimport { ConfigApiServiceAbstraction } from \"@bitwarden/common/abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"@bitwarden/common/abstractions/config/config.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport { EnvironmentService as EnvironmentServiceAbstraction } from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventCollectionService as EventCollectionServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { ExportService as ExportServiceAbstraction } from \"@bitwarden/common/abstractions/export.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"@bitwarden/common/abstractions/fileUpload.service\";\nimport { FormValidationErrorsService as FormValidationErrorsServiceAbstraction } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { OrgDomainApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization-domain/org-domain-api.service.abstraction\";\nimport {\n  OrgDomainServiceAbstraction,\n  OrgDomainInternalServiceAbstraction,\n} from \"@bitwarden/common/abstractions/organization-domain/org-domain.service.abstraction\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport {\n  InternalOrganizationService,\n  OrganizationService as OrganizationServiceAbstraction,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport {\n  InternalPolicyService,\n  PolicyService as PolicyServiceAbstraction,\n} from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProviderService as ProviderServiceAbstraction } from \"@bitwarden/common/abstractions/provider.service\";\nimport { SearchService as SearchServiceAbstraction } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService as SendServiceAbstraction } from \"@bitwarden/common/abstractions/send.service\";\nimport { SettingsService as SettingsServiceAbstraction } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { TotpService as TotpServiceAbstraction } from \"@bitwarden/common/abstractions/totp.service\";\nimport { UserVerificationApiServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { ValidationService as ValidationServiceAbstraction } from \"@bitwarden/common/abstractions/validation.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AccountApiService as AccountApiServiceAbstraction } from \"@bitwarden/common/auth/abstractions/account-api.service\";\nimport {\n  AccountService as AccountServiceAbstraction,\n  InternalAccountService,\n} from \"@bitwarden/common/auth/abstractions/account.service\";\nimport { AuthService as AuthServiceAbstraction } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"@bitwarden/common/auth/abstractions/key-connector.service\";\nimport { LoginService as LoginServiceAbstraction } from \"@bitwarden/common/auth/abstractions/login.service\";\nimport { TokenService as TokenServiceAbstraction } from \"@bitwarden/common/auth/abstractions/token.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/auth/abstractions/two-factor.service\";\nimport { AccountApiServiceImplementation } from \"@bitwarden/common/auth/services/account-api.service\";\nimport { AccountServiceImplementation } from \"@bitwarden/common/auth/services/account.service\";\nimport { AuthService } from \"@bitwarden/common/auth/services/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/auth/services/key-connector.service\";\nimport { LoginService } from \"@bitwarden/common/auth/services/login.service\";\nimport { TokenService } from \"@bitwarden/common/auth/services/token.service\";\nimport { TwoFactorService } from \"@bitwarden/common/auth/services/two-factor.service\";\nimport { UserVerificationApiService } from \"@bitwarden/common/auth/services/user-verification/user-verification-api.service\";\nimport { UserVerificationService } from \"@bitwarden/common/auth/services/user-verification/user-verification.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { flagEnabled } from \"@bitwarden/common/misc/flags\";\nimport { Account } from \"@bitwarden/common/models/domain/account\";\nimport { GlobalState } from \"@bitwarden/common/models/domain/global-state\";\nimport { AvatarUpdateService } from \"@bitwarden/common/services/account/avatar-update.service\";\nimport { AnonymousHubService } from \"@bitwarden/common/services/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/services/api.service\";\nimport { AppIdService } from \"@bitwarden/common/services/appId.service\";\nimport { AuditService } from \"@bitwarden/common/services/audit.service\";\nimport { CollectionService } from \"@bitwarden/common/services/collection.service\";\nimport { ConfigApiService } from \"@bitwarden/common/services/config/config-api.service\";\nimport { ConfigService } from \"@bitwarden/common/services/config/config.service\";\nimport { ConsoleLogService } from \"@bitwarden/common/services/consoleLog.service\";\nimport { CryptoService } from \"@bitwarden/common/services/crypto.service\";\nimport { EncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/encrypt.service.implementation\";\nimport { MultithreadEncryptServiceImplementation } from \"@bitwarden/common/services/cryptography/multithread-encrypt.service.implementation\";\nimport { EnvironmentService } from \"@bitwarden/common/services/environment.service\";\nimport { EventCollectionService } from \"@bitwarden/common/services/event/event-collection.service\";\nimport { EventUploadService } from \"@bitwarden/common/services/event/event-upload.service\";\nimport { ExportService } from \"@bitwarden/common/services/export.service\";\nimport { FileUploadService } from \"@bitwarden/common/services/fileUpload.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/services/formValidationErrors.service\";\nimport { NotificationsService } from \"@bitwarden/common/services/notifications.service\";\nimport { OrgDomainApiService } from \"@bitwarden/common/services/organization-domain/org-domain-api.service\";\nimport { OrgDomainService } from \"@bitwarden/common/services/organization-domain/org-domain.service\";\nimport { OrganizationUserServiceImplementation } from \"@bitwarden/common/services/organization-user/organization-user.service.implementation\";\nimport { OrganizationApiService } from \"@bitwarden/common/services/organization/organization-api.service\";\nimport { OrganizationService } from \"@bitwarden/common/services/organization/organization.service\";\nimport { PolicyApiService } from \"@bitwarden/common/services/policy/policy-api.service\";\nimport { PolicyService } from \"@bitwarden/common/services/policy/policy.service\";\nimport { ProviderService } from \"@bitwarden/common/services/provider.service\";\nimport { SearchService } from \"@bitwarden/common/services/search.service\";\nimport { SendService } from \"@bitwarden/common/services/send.service\";\nimport { SettingsService } from \"@bitwarden/common/services/settings.service\";\nimport { StateService } from \"@bitwarden/common/services/state.service\";\nimport { StateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\nimport { TotpService } from \"@bitwarden/common/services/totp.service\";\nimport { ValidationService } from \"@bitwarden/common/services/validation.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeoutSettings.service\";\nimport { WebCryptoFunctionService } from \"@bitwarden/common/services/webCryptoFunction.service\";\nimport {\n  PasswordGenerationService,\n  PasswordGenerationServiceAbstraction,\n} from \"@bitwarden/common/tools/generator/password\";\nimport {\n  UsernameGenerationService,\n  UsernameGenerationServiceAbstraction,\n} from \"@bitwarden/common/tools/generator/username\";\nimport { CipherService as CipherServiceAbstraction } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/vault/abstractions/folder/folder-api.service.abstraction\";\nimport {\n  FolderService as FolderServiceAbstraction,\n  InternalFolderService,\n} from \"@bitwarden/common/vault/abstractions/folder/folder.service.abstraction\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"@bitwarden/common/vault/abstractions/sync/sync-notifier.service.abstraction\";\nimport { SyncService as SyncServiceAbstraction } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\nimport { CipherService } from \"@bitwarden/common/vault/services/cipher.service\";\nimport { FolderApiService } from \"@bitwarden/common/vault/services/folder/folder-api.service\";\nimport { FolderService } from \"@bitwarden/common/vault/services/folder/folder.service\";\nimport { SyncNotifierService } from \"@bitwarden/common/vault/services/sync/sync-notifier.service\";\nimport { SyncService } from \"@bitwarden/common/vault/services/sync/sync.service\";\n\nimport { AuthGuard } from \"../auth/guards/auth.guard\";\nimport { LockGuard } from \"../auth/guards/lock.guard\";\nimport { UnauthGuard } from \"../auth/guards/unauth.guard\";\nimport { PasswordRepromptService } from \"../vault/services/password-reprompt.service\";\n\nimport { BroadcasterService } from \"./broadcaster.service\";\nimport {\n  LOCALES_DIRECTORY,\n  LOCKED_CALLBACK,\n  LOG_MAC_FAILURES,\n  LOGOUT_CALLBACK,\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  SYSTEM_LANGUAGE,\n  WINDOW,\n} from \"./injection-tokens\";\nimport { ModalService } from \"./modal.service\";\nimport { ThemingService } from \"./theming/theming.service\";\nimport { AbstractThemingService } from \"./theming/theming.service.abstraction\";\n\n@NgModule({\n  declarations: [],\n  providers: [\n    AuthGuard,\n    UnauthGuard,\n    LockGuard,\n    ModalService,\n    { provide: WINDOW, useValue: window },\n    {\n      provide: LOCALE_ID,\n      useFactory: (i18nService: I18nServiceAbstraction) => i18nService.translationLocale,\n      deps: [I18nServiceAbstraction],\n    },\n    {\n      provide: LOCALES_DIRECTORY,\n      useValue: \"./locales\",\n    },\n    {\n      provide: SYSTEM_LANGUAGE,\n      useFactory: (window: Window) => window.navigator.language,\n      deps: [WINDOW],\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: true,\n    },\n    {\n      provide: LOGOUT_CALLBACK,\n      useFactory:\n        (messagingService: MessagingServiceAbstraction) => (expired: boolean, userId?: string) =>\n          messagingService.send(\"logout\", { expired: expired, userId: userId }),\n      deps: [MessagingServiceAbstraction],\n    },\n    {\n      provide: LOCKED_CALLBACK,\n      useValue: null,\n    },\n    {\n      provide: LOG_MAC_FAILURES,\n      useValue: true,\n    },\n    {\n      provide: AppIdServiceAbstraction,\n      useClass: AppIdService,\n      deps: [AbstractStorageService],\n    },\n    {\n      provide: AuditServiceAbstraction,\n      useClass: AuditService,\n      deps: [CryptoFunctionServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AuthServiceAbstraction,\n      useClass: AuthService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        AppIdServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        StateServiceAbstraction,\n        TwoFactorServiceAbstraction,\n        I18nServiceAbstraction,\n      ],\n    },\n    {\n      provide: CipherServiceAbstraction,\n      useFactory: (\n        cryptoService: CryptoServiceAbstraction,\n        settingsService: SettingsServiceAbstraction,\n        apiService: ApiServiceAbstraction,\n        fileUploadService: FileUploadServiceAbstraction,\n        i18nService: I18nServiceAbstraction,\n        injector: Injector,\n        logService: LogService,\n        stateService: StateServiceAbstraction,\n        encryptService: EncryptService\n      ) =>\n        new CipherService(\n          cryptoService,\n          settingsService,\n          apiService,\n          fileUploadService,\n          i18nService,\n          () => injector.get(SearchServiceAbstraction),\n          logService,\n          stateService,\n          encryptService\n        ),\n      deps: [\n        CryptoServiceAbstraction,\n        SettingsServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        Injector, // TODO: Get rid of this circular dependency!\n        LogService,\n        StateServiceAbstraction,\n        EncryptService,\n      ],\n    },\n    {\n      provide: FolderServiceAbstraction,\n      useClass: FolderService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: InternalFolderService,\n      useExisting: FolderServiceAbstraction,\n    },\n    {\n      provide: FolderApiServiceAbstraction,\n      useClass: FolderApiService,\n      deps: [FolderServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: AccountApiServiceAbstraction,\n      useClass: AccountApiServiceImplementation,\n      deps: [\n        ApiServiceAbstraction,\n        UserVerificationServiceAbstraction,\n        LogService,\n        InternalAccountService,\n      ],\n    },\n    {\n      provide: AccountServiceAbstraction,\n      useClass: AccountServiceImplementation,\n      deps: [MessagingServiceAbstraction, LogService],\n    },\n    {\n      provide: InternalAccountService,\n      useExisting: AccountServiceAbstraction,\n    },\n    {\n      provide: AccountUpdateServiceAbstraction,\n      useClass: AvatarUpdateService,\n      deps: [ApiServiceAbstraction, StateServiceAbstraction],\n    },\n    { provide: LogService, useFactory: () => new ConsoleLogService(false) },\n    {\n      provide: CollectionServiceAbstraction,\n      useClass: CollectionService,\n      deps: [CryptoServiceAbstraction, I18nServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: EnvironmentServiceAbstraction,\n      useClass: EnvironmentService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TotpServiceAbstraction,\n      useClass: TotpService,\n      deps: [CryptoFunctionServiceAbstraction, LogService, StateServiceAbstraction],\n    },\n    { provide: TokenServiceAbstraction, useClass: TokenService, deps: [StateServiceAbstraction] },\n    {\n      provide: CryptoServiceAbstraction,\n      useClass: CryptoService,\n      deps: [\n        CryptoFunctionServiceAbstraction,\n        EncryptService,\n        PlatformUtilsServiceAbstraction,\n        LogService,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: PasswordGenerationServiceAbstraction,\n      useClass: PasswordGenerationService,\n      deps: [CryptoServiceAbstraction, PolicyServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: UsernameGenerationServiceAbstraction,\n      useClass: UsernameGenerationService,\n      deps: [CryptoServiceAbstraction, StateServiceAbstraction, ApiServiceAbstraction],\n    },\n    {\n      provide: ApiServiceAbstraction,\n      useClass: ApiService,\n      deps: [\n        TokenServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        AppIdServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: FileUploadServiceAbstraction,\n      useClass: FileUploadService,\n      deps: [LogService, ApiServiceAbstraction],\n    },\n    {\n      provide: SyncServiceAbstraction,\n      useClass: SyncService,\n      deps: [\n        ApiServiceAbstraction,\n        SettingsServiceAbstraction,\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        CryptoServiceAbstraction,\n        CollectionServiceAbstraction,\n        MessagingServiceAbstraction,\n        PolicyServiceAbstraction,\n        SendServiceAbstraction,\n        LogService,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        ProviderServiceAbstraction,\n        FolderApiServiceAbstraction,\n        OrganizationServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    { provide: BroadcasterServiceAbstraction, useClass: BroadcasterService },\n    {\n      provide: SettingsServiceAbstraction,\n      useClass: SettingsService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: VaultTimeoutSettingsServiceAbstraction,\n      useClass: VaultTimeoutSettingsService,\n      deps: [\n        CryptoServiceAbstraction,\n        TokenServiceAbstraction,\n        PolicyServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: VaultTimeoutServiceAbstraction,\n      useClass: VaultTimeoutService,\n      deps: [\n        CipherServiceAbstraction,\n        FolderServiceAbstraction,\n        CollectionServiceAbstraction,\n        CryptoServiceAbstraction,\n        PlatformUtilsServiceAbstraction,\n        MessagingServiceAbstraction,\n        SearchServiceAbstraction,\n        KeyConnectorServiceAbstraction,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        VaultTimeoutSettingsServiceAbstraction,\n        LOCKED_CALLBACK,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: StateServiceAbstraction,\n      useClass: StateService,\n      deps: [\n        AbstractStorageService,\n        SECURE_STORAGE,\n        MEMORY_STORAGE,\n        LogService,\n        StateMigrationServiceAbstraction,\n        STATE_FACTORY,\n        STATE_SERVICE_USE_CACHE,\n      ],\n    },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    {\n      provide: ExportServiceAbstraction,\n      useClass: ExportService,\n      deps: [\n        FolderServiceAbstraction,\n        CipherServiceAbstraction,\n        ApiServiceAbstraction,\n        CryptoServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n      ],\n    },\n    {\n      provide: SearchServiceAbstraction,\n      useClass: SearchService,\n      deps: [CipherServiceAbstraction, LogService, I18nServiceAbstraction],\n    },\n    {\n      provide: NotificationsServiceAbstraction,\n      useClass: NotificationsService,\n      deps: [\n        SyncServiceAbstraction,\n        AppIdServiceAbstraction,\n        ApiServiceAbstraction,\n        EnvironmentServiceAbstraction,\n        LOGOUT_CALLBACK,\n        LogService,\n        StateServiceAbstraction,\n        AuthServiceAbstraction,\n        MessagingServiceAbstraction,\n      ],\n    },\n    {\n      provide: CryptoFunctionServiceAbstraction,\n      useClass: WebCryptoFunctionService,\n      deps: [WINDOW],\n    },\n    {\n      provide: EncryptService,\n      useFactory: encryptServiceFactory,\n      deps: [CryptoFunctionServiceAbstraction, LogService, LOG_MAC_FAILURES],\n    },\n    {\n      provide: EventUploadServiceAbstraction,\n      useClass: EventUploadService,\n      deps: [ApiServiceAbstraction, StateServiceAbstraction, LogService],\n    },\n    {\n      provide: EventCollectionServiceAbstraction,\n      useClass: EventCollectionService,\n      deps: [\n        CipherServiceAbstraction,\n        StateServiceAbstraction,\n        OrganizationServiceAbstraction,\n        EventUploadServiceAbstraction,\n      ],\n    },\n    {\n      provide: PolicyServiceAbstraction,\n      useClass: PolicyService,\n      deps: [StateServiceAbstraction, OrganizationServiceAbstraction],\n    },\n    {\n      provide: InternalPolicyService,\n      useExisting: PolicyServiceAbstraction,\n    },\n    {\n      provide: PolicyApiServiceAbstraction,\n      useClass: PolicyApiService,\n      deps: [PolicyServiceAbstraction, ApiServiceAbstraction, StateServiceAbstraction],\n    },\n    {\n      provide: SendServiceAbstraction,\n      useClass: SendService,\n      deps: [\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        FileUploadServiceAbstraction,\n        I18nServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        StateServiceAbstraction,\n      ],\n    },\n    {\n      provide: KeyConnectorServiceAbstraction,\n      useClass: KeyConnectorService,\n      deps: [\n        StateServiceAbstraction,\n        CryptoServiceAbstraction,\n        ApiServiceAbstraction,\n        TokenServiceAbstraction,\n        LogService,\n        OrganizationServiceAbstraction,\n        CryptoFunctionServiceAbstraction,\n        SyncNotifierServiceAbstraction,\n        MessagingServiceAbstraction,\n        LOGOUT_CALLBACK,\n      ],\n    },\n    {\n      provide: UserVerificationServiceAbstraction,\n      useClass: UserVerificationService,\n      deps: [\n        CryptoServiceAbstraction,\n        I18nServiceAbstraction,\n        UserVerificationApiServiceAbstraction,\n      ],\n    },\n    { provide: PasswordRepromptServiceAbstraction, useClass: PasswordRepromptService },\n    {\n      provide: OrganizationServiceAbstraction,\n      useClass: OrganizationService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: InternalOrganizationService,\n      useExisting: OrganizationServiceAbstraction,\n    },\n    {\n      provide: OrganizationUserService,\n      useClass: OrganizationUserServiceImplementation,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: ProviderServiceAbstraction,\n      useClass: ProviderService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: TwoFactorServiceAbstraction,\n      useClass: TwoFactorService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: AbstractThemingService,\n      useClass: ThemingService,\n    },\n    {\n      provide: FormValidationErrorsServiceAbstraction,\n      useClass: FormValidationErrorsService,\n    },\n    {\n      provide: UserVerificationApiServiceAbstraction,\n      useClass: UserVerificationApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: OrganizationApiServiceAbstraction,\n      useClass: OrganizationApiService,\n      // This is a slightly odd dependency tree for a specialized api service\n      // it depends on SyncService so that new data can be retrieved through the sync\n      // rather than updating the OrganizationService directly. Instead OrganizationService\n      // subscribes to sync notifications and will update itself based on that.\n      deps: [ApiServiceAbstraction, SyncServiceAbstraction],\n    },\n    {\n      provide: SyncNotifierServiceAbstraction,\n      useClass: SyncNotifierService,\n    },\n    {\n      provide: ConfigServiceAbstraction,\n      useClass: ConfigService,\n      deps: [StateServiceAbstraction, ConfigApiServiceAbstraction],\n    },\n    {\n      provide: ConfigApiServiceAbstraction,\n      useClass: ConfigApiService,\n      deps: [ApiServiceAbstraction],\n    },\n    {\n      provide: AnonymousHubServiceAbstraction,\n      useClass: AnonymousHubService,\n      deps: [EnvironmentServiceAbstraction, AuthServiceAbstraction, LogService],\n    },\n    {\n      provide: ValidationServiceAbstraction,\n      useClass: ValidationService,\n      deps: [I18nServiceAbstraction, PlatformUtilsServiceAbstraction],\n    },\n    {\n      provide: LoginServiceAbstraction,\n      useClass: LoginService,\n      deps: [StateServiceAbstraction],\n    },\n    {\n      provide: OrgDomainServiceAbstraction,\n      useClass: OrgDomainService,\n      deps: [PlatformUtilsServiceAbstraction, I18nServiceAbstraction],\n    },\n    {\n      provide: OrgDomainInternalServiceAbstraction,\n      useExisting: OrgDomainServiceAbstraction,\n    },\n    {\n      provide: OrgDomainApiServiceAbstraction,\n      useClass: OrgDomainApiService,\n      deps: [OrgDomainServiceAbstraction, ApiServiceAbstraction],\n    },\n  ],\n})\nexport class JslibServicesModule {}\n\nfunction encryptServiceFactory(\n  cryptoFunctionservice: CryptoFunctionServiceAbstraction,\n  logService: LogService,\n  logMacFailures: boolean\n): EncryptService {\n  return flagEnabled(\"multithreadDecryption\")\n    ? new MultithreadEncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures)\n    : new EncryptServiceImplementation(cryptoFunctionservice, logService, logMacFailures);\n}\n","import { AppIdService as AppIdServiceAbstraction } from \"../abstractions/appId.service\";\nimport { AbstractStorageService } from \"../abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"../enums/htmlStorageLocation\";\nimport { Utils } from \"../misc/utils\";\n\nexport class AppIdService implements AppIdServiceAbstraction {\n  constructor(private storageService: AbstractStorageService) {}\n\n  getAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"appId\");\n  }\n\n  getAnonymousAppId(): Promise<string> {\n    return this.makeAndGetAppId(\"anonymousAppId\");\n  }\n\n  private async makeAndGetAppId(key: string) {\n    const existingId = await this.storageService.get<string>(key, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    if (existingId != null) {\n      return existingId;\n    }\n\n    const guid = Utils.newGuid();\n    await this.storageService.save(key, guid, {\n      htmlStorageLocation: HtmlStorageLocation.Local,\n    });\n    return guid;\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\n\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { AppIdService } from \"../../abstractions/appId.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { EncryptService } from \"../../abstractions/encrypt.service\";\nimport { EnvironmentService } from \"../../abstractions/environment.service\";\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { KdfType } from \"../../enums/kdfType\";\nimport { KeySuffixOptions } from \"../../enums/keySuffixOptions\";\nimport { Utils } from \"../../misc/utils\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { PreloginRequest } from \"../../models/request/prelogin.request\";\nimport { ErrorResponse } from \"../../models/response/error.response\";\nimport { AuthRequestPushNotification } from \"../../models/response/notification.response\";\nimport { AuthService as AuthServiceAbstraction } from \"../abstractions/auth.service\";\nimport { KeyConnectorService } from \"../abstractions/key-connector.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { TwoFactorService } from \"../abstractions/two-factor.service\";\nimport { AuthenticationStatus } from \"../enums/authentication-status\";\nimport { AuthenticationType } from \"../enums/authentication-type\";\nimport { PasswordLogInStrategy } from \"../login-strategies/password-login.strategy\";\nimport { PasswordlessLogInStrategy } from \"../login-strategies/passwordless-login.strategy\";\nimport { SsoLogInStrategy } from \"../login-strategies/sso-login.strategy\";\nimport { UserApiLogInStrategy } from \"../login-strategies/user-api-login.strategy\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport { KdfConfig } from \"../models/domain/kdf-config\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { PasswordlessAuthRequest } from \"../models/request/passwordless-auth.request\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\n\nconst sessionTimeoutLength = 2 * 60 * 1000; // 2 minutes\n\nexport class AuthService implements AuthServiceAbstraction {\n  get email(): string {\n    if (\n      this.logInStrategy instanceof PasswordLogInStrategy ||\n      this.logInStrategy instanceof PasswordlessLogInStrategy\n    ) {\n      return this.logInStrategy.email;\n    }\n\n    return null;\n  }\n\n  get masterPasswordHash(): string {\n    return this.logInStrategy instanceof PasswordLogInStrategy\n      ? this.logInStrategy.masterPasswordHash\n      : null;\n  }\n\n  get accessCode(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.accessCode\n      : null;\n  }\n\n  get authRequestId(): string {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy\n      ? this.logInStrategy.authRequestId\n      : null;\n  }\n\n  private logInStrategy:\n    | UserApiLogInStrategy\n    | PasswordLogInStrategy\n    | SsoLogInStrategy\n    | PasswordlessLogInStrategy;\n  private sessionTimeout: any;\n\n  private pushNotificationSubject = new Subject<string>();\n\n  constructor(\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected tokenService: TokenService,\n    protected appIdService: AppIdService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected logService: LogService,\n    protected keyConnectorService: KeyConnectorService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected twoFactorService: TwoFactorService,\n    protected i18nService: I18nService,\n    protected encryptService: EncryptService\n  ) {}\n\n  async logIn(\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ): Promise<AuthResult> {\n    this.clearState();\n\n    let strategy:\n      | UserApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy;\n\n    switch (credentials.type) {\n      case AuthenticationType.Password:\n        strategy = new PasswordLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n      case AuthenticationType.Sso:\n        strategy = new SsoLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.UserApi:\n        strategy = new UserApiLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this.environmentService,\n          this.keyConnectorService\n        );\n        break;\n      case AuthenticationType.Passwordless:\n        strategy = new PasswordlessLogInStrategy(\n          this.cryptoService,\n          this.apiService,\n          this.tokenService,\n          this.appIdService,\n          this.platformUtilsService,\n          this.messagingService,\n          this.logService,\n          this.stateService,\n          this.twoFactorService,\n          this\n        );\n        break;\n    }\n\n    const result = await strategy.logIn(credentials as any);\n\n    if (result?.requiresTwoFactor) {\n      this.saveState(strategy);\n    }\n    return result;\n  }\n\n  async logInTwoFactor(\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ): Promise<AuthResult> {\n    if (this.logInStrategy == null) {\n      throw new Error(this.i18nService.t(\"sessionTimeout\"));\n    }\n\n    try {\n      const result = await this.logInStrategy.logInTwoFactor(twoFactor, captchaResponse);\n\n      // Only clear state if 2FA token has been accepted, otherwise we need to be able to try again\n      if (!result.requiresTwoFactor && !result.requiresCaptcha) {\n        this.clearState();\n      }\n      return result;\n    } catch (e) {\n      // API exceptions are okay, but if there are any unhandled client-side errors then clear state to be safe\n      if (!(e instanceof ErrorResponse)) {\n        this.clearState();\n      }\n      throw e;\n    }\n  }\n\n  logOut(callback: () => void) {\n    callback();\n    this.messagingService.send(\"loggedOut\");\n  }\n\n  authingWithUserApiKey(): boolean {\n    return this.logInStrategy instanceof UserApiLogInStrategy;\n  }\n\n  authingWithSso(): boolean {\n    return this.logInStrategy instanceof SsoLogInStrategy;\n  }\n\n  authingWithPassword(): boolean {\n    return this.logInStrategy instanceof PasswordLogInStrategy;\n  }\n\n  authingWithPasswordless(): boolean {\n    return this.logInStrategy instanceof PasswordlessLogInStrategy;\n  }\n\n  async getAuthStatus(userId?: string): Promise<AuthenticationStatus> {\n    const isAuthenticated = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!isAuthenticated) {\n      return AuthenticationStatus.LoggedOut;\n    }\n\n    // Keys aren't stored for a device that is locked or logged out\n    // Make sure we're logged in before checking this, otherwise we could mix up those states\n    const neverLock =\n      (await this.cryptoService.hasKeyStored(KeySuffixOptions.Auto, userId)) &&\n      !(await this.stateService.getEverBeenUnlocked({ userId: userId }));\n    if (neverLock) {\n      // TODO: This also _sets_ the key so when we check memory in the next line it finds a key.\n      // We should refactor here.\n      await this.cryptoService.getKey(KeySuffixOptions.Auto, userId);\n    }\n\n    const hasKeyInMemory = await this.cryptoService.hasKeyInMemory(userId);\n    if (!hasKeyInMemory) {\n      return AuthenticationStatus.Locked;\n    }\n\n    return AuthenticationStatus.Unlocked;\n  }\n\n  async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n    email = email.trim().toLowerCase();\n    let kdf: KdfType = null;\n    let kdfConfig: KdfConfig = null;\n    try {\n      const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n      if (preloginResponse != null) {\n        kdf = preloginResponse.kdf;\n        kdfConfig = new KdfConfig(\n          preloginResponse.kdfIterations,\n          preloginResponse.kdfMemory,\n          preloginResponse.kdfParallelism\n        );\n      }\n    } catch (e) {\n      if (e == null || e.statusCode !== 404) {\n        throw e;\n      }\n    }\n    return this.cryptoService.makeKey(masterPassword, email, kdf, kdfConfig);\n  }\n\n  async authResponsePushNotifiction(notification: AuthRequestPushNotification): Promise<any> {\n    this.pushNotificationSubject.next(notification.id);\n  }\n\n  getPushNotifcationObs$(): Observable<any> {\n    return this.pushNotificationSubject.asObservable();\n  }\n\n  async passwordlessLogin(\n    id: string,\n    key: string,\n    requestApproved: boolean\n  ): Promise<AuthRequestResponse> {\n    const pubKey = Utils.fromB64ToArray(key);\n    const encryptedKey = await this.cryptoService.rsaEncrypt(\n      (\n        await this.cryptoService.getKey()\n      ).encKey,\n      pubKey.buffer\n    );\n    const encryptedMasterPassword = await this.cryptoService.rsaEncrypt(\n      Utils.fromUtf8ToArray(await this.stateService.getKeyHash()),\n      pubKey.buffer\n    );\n    const request = new PasswordlessAuthRequest(\n      encryptedKey.encryptedString,\n      encryptedMasterPassword.encryptedString,\n      await this.appIdService.getAppId(),\n      requestApproved\n    );\n    return await this.apiService.putAuthRequest(id, request);\n  }\n\n  private saveState(\n    strategy:\n      | UserApiLogInStrategy\n      | PasswordLogInStrategy\n      | SsoLogInStrategy\n      | PasswordlessLogInStrategy\n  ) {\n    this.logInStrategy = strategy;\n    this.startSessionTimeout();\n  }\n\n  private clearState() {\n    this.logInStrategy = null;\n    this.clearSessionTimeout();\n  }\n\n  private startSessionTimeout() {\n    this.clearSessionTimeout();\n    this.sessionTimeout = setTimeout(() => this.clearState(), sessionTimeoutLength);\n  }\n\n  private clearSessionTimeout() {\n    if (this.sessionTimeout != null) {\n      clearTimeout(this.sessionTimeout);\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { CryptoService } from \"../../../abstractions/crypto.service\";\nimport { I18nService } from \"../../../abstractions/i18n.service\";\nimport { StateService } from \"../../../abstractions/state.service\";\nimport { Utils } from \"../../../misc/utils\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { CipherService } from \"../../../vault/abstractions/cipher.service\";\nimport { InternalFolderService as InternalFolderServiceAbstraction } from \"../../../vault/abstractions/folder/folder.service.abstraction\";\nimport { CipherData } from \"../../../vault/models/data/cipher.data\";\nimport { FolderData } from \"../../../vault/models/data/folder.data\";\nimport { Folder } from \"../../../vault/models/domain/folder\";\nimport { FolderView } from \"../../../vault/models/view/folder.view\";\n\nexport class FolderService implements InternalFolderServiceAbstraction {\n  protected _folders: BehaviorSubject<Folder[]> = new BehaviorSubject([]);\n  protected _folderViews: BehaviorSubject<FolderView[]> = new BehaviorSubject([]);\n\n  folders$ = this._folders.asObservable();\n  folderViews$ = this._folderViews.asObservable();\n\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private cipherService: CipherService,\n    private stateService: StateService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._folders.next([]);\n            this._folderViews.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedFolders();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async clearCache(): Promise<void> {\n    this._folderViews.next([]);\n  }\n\n  // TODO: This should be moved to EncryptService or something\n  async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n    const folder = new Folder();\n    folder.id = model.id;\n    folder.name = await this.cryptoService.encrypt(model.name, key);\n    return folder;\n  }\n\n  async get(id: string): Promise<Folder> {\n    const folders = this._folders.getValue();\n\n    return folders.find((folder) => folder.id === id);\n  }\n\n  async getAllFromState(): Promise<Folder[]> {\n    const folders = await this.stateService.getEncryptedFolders();\n    const response: Folder[] = [];\n    for (const id in folders) {\n      // eslint-disable-next-line\n      if (folders.hasOwnProperty(id)) {\n        response.push(new Folder(folders[id]));\n      }\n    }\n    return response;\n  }\n\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the folder\n   */\n  async getFromState(id: string): Promise<Folder> {\n    const foldersMap = await this.stateService.getEncryptedFolders();\n    const folder = foldersMap[id];\n    if (folder == null) {\n      return null;\n    }\n\n    return new Folder(folder);\n  }\n\n  /**\n   * @deprecated Only use in CLI!\n   */\n  async getAllDecryptedFromState(): Promise<FolderView[]> {\n    const data = await this.stateService.getEncryptedFolders();\n    const folders = Object.values(data || {}).map((f) => new Folder(f));\n\n    return this.decryptFolders(folders);\n  }\n\n  async upsert(folder: FolderData | FolderData[]): Promise<void> {\n    let folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      folders = {};\n    }\n\n    if (folder instanceof FolderData) {\n      const f = folder as FolderData;\n      folders[f.id] = f;\n    } else {\n      (folder as FolderData[]).forEach((f) => {\n        folders[f.id] = f;\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async replace(folders: { [id: string]: FolderData }): Promise<void> {\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._folders.next([]);\n      this._folderViews.next([]);\n    }\n    await this.stateService.setEncryptedFolders(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const folders = await this.stateService.getEncryptedFolders();\n    if (folders == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (folders[id] == null) {\n        return;\n      }\n      delete folders[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete folders[i];\n      });\n    }\n\n    await this.updateObservables(folders);\n    await this.stateService.setEncryptedFolders(folders);\n\n    // Items in a deleted folder are re-assigned to \"No Folder\"\n    const ciphers = await this.stateService.getEncryptedCiphers();\n    if (ciphers != null) {\n      const updates: CipherData[] = [];\n      for (const cId in ciphers) {\n        if (ciphers[cId].folderId === id) {\n          ciphers[cId].folderId = null;\n          updates.push(ciphers[cId]);\n        }\n      }\n      if (updates.length > 0) {\n        this.cipherService.upsert(updates);\n      }\n    }\n  }\n\n  private async updateObservables(foldersMap: { [id: string]: FolderData }) {\n    const folders = Object.values(foldersMap || {}).map((f) => new Folder(f));\n\n    this._folders.next(folders);\n\n    if (await this.cryptoService.hasKey()) {\n      this._folderViews.next(await this.decryptFolders(folders));\n    }\n  }\n\n  private async decryptFolders(folders: Folder[]) {\n    const decryptFolderPromises = folders.map((f) => f.decrypt());\n    const decryptedFolders = await Promise.all(decryptFolderPromises);\n\n    decryptedFolders.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    const noneFolder = new FolderView();\n    noneFolder.name = this.i18nService.t(\"noneFolder\");\n    decryptedFolders.push(noneFolder);\n\n    return decryptedFolders;\n  }\n}\n","import { ApiService } from \"../../../abstractions/api.service\";\nimport { FolderApiServiceAbstraction } from \"../../../vault/abstractions/folder/folder-api.service.abstraction\";\nimport { InternalFolderService } from \"../../../vault/abstractions/folder/folder.service.abstraction\";\nimport { FolderData } from \"../../../vault/models/data/folder.data\";\nimport { Folder } from \"../../../vault/models/domain/folder\";\nimport { FolderRequest } from \"../../../vault/models/request/folder.request\";\nimport { FolderResponse } from \"../../../vault/models/response/folder.response\";\n\nexport class FolderApiService implements FolderApiServiceAbstraction {\n  constructor(private folderService: InternalFolderService, private apiService: ApiService) {}\n\n  async save(folder: Folder): Promise<any> {\n    const request = new FolderRequest(folder);\n\n    let response: FolderResponse;\n    if (folder.id == null) {\n      response = await this.postFolder(request);\n      folder.id = response.id;\n    } else {\n      response = await this.putFolder(folder.id, request);\n    }\n\n    const data = new FolderData(response);\n    await this.folderService.upsert(data);\n  }\n\n  async delete(id: string): Promise<any> {\n    await this.deleteFolder(id);\n    await this.folderService.delete(id);\n  }\n\n  async get(id: string): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"GET\", \"/folders/\" + id, null, true, true);\n    return new FolderResponse(r);\n  }\n\n  private async postFolder(request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"POST\", \"/folders\", request, true, true);\n    return new FolderResponse(r);\n  }\n\n  async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/folders/\" + id, request, true, true);\n    return new FolderResponse(r);\n  }\n\n  private deleteFolder(id: string): Promise<any> {\n    return this.apiService.send(\"DELETE\", \"/folders/\" + id, null, true, false);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { UserVerificationService } from \"../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"../../types/verification\";\nimport { AccountApiService } from \"../abstractions/account-api.service\";\nimport { InternalAccountService } from \"../abstractions/account.service\";\n\nexport class AccountApiServiceImplementation implements AccountApiService {\n  constructor(\n    private apiService: ApiService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private accountService: InternalAccountService\n  ) {}\n\n  async deleteAccount(verification: Verification): Promise<void> {\n    try {\n      const verificationRequest = await this.userVerificationService.buildRequest(verification);\n      await this.apiService.send(\"DELETE\", \"/accounts\", verificationRequest, true, false);\n      this.accountService.delete();\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { LogService } from \"../../abstractions/log.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { InternalAccountService } from \"../../auth/abstractions/account.service\";\n\nexport class AccountServiceImplementation implements InternalAccountService {\n  constructor(private messagingService: MessagingService, private logService: LogService) {}\n\n  async delete(): Promise<void> {\n    try {\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n      throw e;\n    }\n  }\n}\n","import { BehaviorSubject, Observable } from \"rxjs\";\n\nimport { AvatarUpdateService as AvatarUpdateServiceAbstraction } from \"../../abstractions/account/avatar-update.service\";\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { UpdateAvatarRequest } from \"../../models/request/update-avatar.request\";\nimport { ProfileResponse } from \"../../models/response/profile.response\";\n\nexport class AvatarUpdateService implements AvatarUpdateServiceAbstraction {\n  private _avatarUpdate$ = new BehaviorSubject<string | null>(null);\n  avatarUpdate$: Observable<string | null> = this._avatarUpdate$.asObservable();\n\n  constructor(private apiService: ApiService, private stateService: StateService) {\n    this.loadColorFromState();\n  }\n\n  loadColorFromState(): Promise<string | null> {\n    return this.stateService.getAvatarColor().then((color) => {\n      this._avatarUpdate$.next(color);\n      return color;\n    });\n  }\n\n  pushUpdate(color: string | null): Promise<ProfileResponse | void> {\n    return this.apiService.putAvatar(new UpdateAvatarRequest(color)).then((response) => {\n      this.stateService.setAvatarColor(response.avatarColor);\n      this._avatarUpdate$.next(response.avatarColor);\n    });\n  }\n}\n","import { CollectionService as CollectionServiceAbstraction } from \"../abstractions/collection.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ServiceUtils } from \"../misc/serviceUtils\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nconst NestingDelimiter = \"/\";\n\nexport class CollectionService implements CollectionServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(userId?: string): Promise<void> {\n    await this.stateService.setDecryptedCollections(null, { userId: userId });\n  }\n\n  async encrypt(model: CollectionView): Promise<Collection> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new Collection();\n    collection.id = model.id;\n    collection.organizationId = model.organizationId;\n    collection.readOnly = model.readOnly;\n    collection.name = await this.cryptoService.encrypt(model.name, key);\n    return collection;\n  }\n\n  async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n    if (collections == null) {\n      return [];\n    }\n    const decCollections: CollectionView[] = [];\n    const promises: Promise<any>[] = [];\n    collections.forEach((collection) => {\n      promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n    });\n    await Promise.all(promises);\n    return decCollections.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  async get(id: string): Promise<Collection> {\n    const collections = await this.stateService.getEncryptedCollections();\n    // eslint-disable-next-line\n    if (collections == null || !collections.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Collection(collections[id]);\n  }\n\n  async getAll(): Promise<Collection[]> {\n    const collections = await this.stateService.getEncryptedCollections();\n    const response: Collection[] = [];\n    for (const id in collections) {\n      // eslint-disable-next-line\n      if (collections.hasOwnProperty(id)) {\n        response.push(new Collection(collections[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<CollectionView[]> {\n    let decryptedCollections = await this.stateService.getDecryptedCollections();\n    if (decryptedCollections != null) {\n      return decryptedCollections;\n    }\n\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const collections = await this.getAll();\n    decryptedCollections = await this.decryptMany(collections);\n\n    await this.stateService.setDecryptedCollections(decryptedCollections);\n    return decryptedCollections;\n  }\n\n  async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n    if (collections == null) {\n      collections = await this.getAllDecrypted();\n    }\n    const nodes: TreeNode<CollectionView>[] = [];\n    collections.forEach((c) => {\n      const collectionCopy = new CollectionView();\n      collectionCopy.id = c.id;\n      collectionCopy.organizationId = c.organizationId;\n      const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n    });\n    return nodes;\n  }\n\n  /**\n   * @deprecated August 30 2022: Moved to new Vault Filter Service\n   * Remove when Desktop and Browser are updated\n   */\n  async getNested(id: string): Promise<TreeNode<CollectionView>> {\n    const collections = await this.getAllNested();\n    return ServiceUtils.getTreeNodeObjectFromList(collections, id) as TreeNode<CollectionView>;\n  }\n\n  async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n    let collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      collections = {};\n    }\n\n    if (collection instanceof CollectionData) {\n      const c = collection as CollectionData;\n      collections[c.id] = c;\n    } else {\n      (collection as CollectionData[]).forEach((c) => {\n        collections[c.id] = c;\n      });\n    }\n\n    await this.replace(collections);\n  }\n\n  async replace(collections: { [id: string]: CollectionData }): Promise<any> {\n    await this.clearCache();\n    await this.stateService.setEncryptedCollections(collections);\n  }\n\n  async clear(userId?: string): Promise<any> {\n    await this.clearCache(userId);\n    await this.stateService.setEncryptedCollections(null, { userId: userId });\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const collections = await this.stateService.getEncryptedCollections();\n    if (collections == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      delete collections[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete collections[i];\n      });\n    }\n\n    await this.replace(collections);\n  }\n}\n","import { concatMap, Observable, Subject } from \"rxjs\";\n\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"../abstractions/environment.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { EnvironmentUrls } from \"../auth/models/domain/environment-urls\";\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n  private readonly urlsSubject = new Subject<Urls>();\n  urls: Observable<Urls> = this.urlsSubject;\n\n  protected baseUrl: string;\n  protected webVaultUrl: string;\n  protected apiUrl: string;\n  protected identityUrl: string;\n  protected iconsUrl: string;\n  protected notificationsUrl: string;\n  protected eventsUrl: string;\n  private keyConnectorUrl: string;\n  private scimUrl: string = null;\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.setUrlsFromStorage();\n        })\n      )\n      .subscribe();\n  }\n\n  hasBaseUrl() {\n    return this.baseUrl != null;\n  }\n\n  getNotificationsUrl() {\n    if (this.notificationsUrl != null) {\n      return this.notificationsUrl;\n    }\n\n    if (this.baseUrl != null) {\n      return this.baseUrl + \"/notifications\";\n    }\n\n    return \"https://notifications.bitwarden.com\";\n  }\n\n  getWebVaultUrl() {\n    if (this.webVaultUrl != null) {\n      return this.webVaultUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n    return \"https://vault.bitwarden.com\";\n  }\n\n  getSendUrl() {\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://send.bitwarden.com/#\"\n      : this.getWebVaultUrl() + \"/#/send/\";\n  }\n\n  getIconsUrl() {\n    if (this.iconsUrl != null) {\n      return this.iconsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/icons\";\n    }\n\n    return \"https://icons.bitwarden.net\";\n  }\n\n  getApiUrl() {\n    if (this.apiUrl != null) {\n      return this.apiUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/api\";\n    }\n\n    return \"https://api.bitwarden.com\";\n  }\n\n  getIdentityUrl() {\n    if (this.identityUrl != null) {\n      return this.identityUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/identity\";\n    }\n\n    return \"https://identity.bitwarden.com\";\n  }\n\n  getEventsUrl() {\n    if (this.eventsUrl != null) {\n      return this.eventsUrl;\n    }\n\n    if (this.baseUrl) {\n      return this.baseUrl + \"/events\";\n    }\n\n    return \"https://events.bitwarden.com\";\n  }\n\n  getKeyConnectorUrl() {\n    return this.keyConnectorUrl;\n  }\n\n  getScimUrl() {\n    if (this.scimUrl != null) {\n      return this.scimUrl + \"/v2\";\n    }\n\n    return this.getWebVaultUrl() === \"https://vault.bitwarden.com\"\n      ? \"https://scim.bitwarden.com/v2\"\n      : this.getWebVaultUrl() + \"/scim/v2\";\n  }\n\n  async setUrlsFromStorage(): Promise<void> {\n    const urls: any = await this.stateService.getEnvironmentUrls();\n    const envUrls = new EnvironmentUrls();\n\n    this.baseUrl = envUrls.base = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = envUrls.api = urls.api;\n    this.identityUrl = envUrls.identity = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = envUrls.events = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    // scimUrl is not saved to storage\n  }\n\n  async setUrls(urls: Urls): Promise<Urls> {\n    urls.base = this.formatUrl(urls.base);\n    urls.webVault = this.formatUrl(urls.webVault);\n    urls.api = this.formatUrl(urls.api);\n    urls.identity = this.formatUrl(urls.identity);\n    urls.icons = this.formatUrl(urls.icons);\n    urls.notifications = this.formatUrl(urls.notifications);\n    urls.events = this.formatUrl(urls.events);\n    urls.keyConnector = this.formatUrl(urls.keyConnector);\n\n    // scimUrl cannot be cleared\n    urls.scim = this.formatUrl(urls.scim) ?? this.scimUrl;\n\n    await this.stateService.setEnvironmentUrls({\n      base: urls.base,\n      api: urls.api,\n      identity: urls.identity,\n      webVault: urls.webVault,\n      icons: urls.icons,\n      notifications: urls.notifications,\n      events: urls.events,\n      keyConnector: urls.keyConnector,\n      // scimUrl is not saved to storage\n    });\n\n    this.baseUrl = urls.base;\n    this.webVaultUrl = urls.webVault;\n    this.apiUrl = urls.api;\n    this.identityUrl = urls.identity;\n    this.iconsUrl = urls.icons;\n    this.notificationsUrl = urls.notifications;\n    this.eventsUrl = urls.events;\n    this.keyConnectorUrl = urls.keyConnector;\n    this.scimUrl = urls.scim;\n\n    this.urlsSubject.next(urls);\n\n    return urls;\n  }\n\n  getUrls() {\n    return {\n      base: this.baseUrl,\n      webVault: this.webVaultUrl,\n      api: this.apiUrl,\n      identity: this.identityUrl,\n      icons: this.iconsUrl,\n      notifications: this.notificationsUrl,\n      events: this.eventsUrl,\n      keyConnector: this.keyConnectorUrl,\n      scim: this.scimUrl,\n    };\n  }\n\n  private formatUrl(url: string): string {\n    if (url == null || url === \"\") {\n      return null;\n    }\n\n    url = url.replace(/\\/+$/g, \"\");\n    if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) {\n      url = \"https://\" + url;\n    }\n\n    return url.trim();\n  }\n\n  isCloud(): boolean {\n    return [\"https://api.bitwarden.com\", \"https://vault.bitwarden.com/api\"].includes(\n      this.getApiUrl()\n    );\n  }\n\n  isSelfHosted(): boolean {\n    return ![\n      \"http://vault.bitwarden.com\",\n      \"https://vault.bitwarden.com\",\n      \"http://vault.qa.bitwarden.pw\",\n      \"https://vault.qa.bitwarden.pw\",\n    ].includes(this.getWebVaultUrl());\n  }\n}\n","import { ApiService as ApiServiceAbstraction } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { TokenService } from \"../auth/abstractions/token.service\";\nimport { DeviceVerificationRequest } from \"../auth/models/request/device-verification.request\";\nimport { EmailTokenRequest } from \"../auth/models/request/email-token.request\";\nimport { EmailRequest } from \"../auth/models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../auth/models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../auth/models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../auth/models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../auth/models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../auth/models/request/emergency-access-update.request\";\nimport { DeviceRequest } from \"../auth/models/request/identity-token/device.request\";\nimport { PasswordTokenRequest } from \"../auth/models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../auth/models/request/identity-token/sso-token.request\";\nimport { TokenTwoFactorRequest } from \"../auth/models/request/identity-token/token-two-factor.request\";\nimport { UserApiTokenRequest } from \"../auth/models/request/identity-token/user-api-token.request\";\nimport { KeyConnectorUserKeyRequest } from \"../auth/models/request/key-connector-user-key.request\";\nimport { PasswordHintRequest } from \"../auth/models/request/password-hint.request\";\nimport { PasswordRequest } from \"../auth/models/request/password.request\";\nimport { PasswordlessAuthRequest } from \"../auth/models/request/passwordless-auth.request\";\nimport { PasswordlessCreateAuthRequest } from \"../auth/models/request/passwordless-create-auth.request\";\nimport { SecretVerificationRequest } from \"../auth/models/request/secret-verification.request\";\nimport { SetKeyConnectorKeyRequest } from \"../auth/models/request/set-key-connector-key.request\";\nimport { SetPasswordRequest } from \"../auth/models/request/set-password.request\";\nimport { TwoFactorEmailRequest } from \"../auth/models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../auth/models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../auth/models/request/two-factor-recovery.request\";\nimport { UpdateProfileRequest } from \"../auth/models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../auth/models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../auth/models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../auth/models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../auth/models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../auth/models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../auth/models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../auth/models/request/update-two-factor-yubio-otp.request\";\nimport { ApiKeyResponse } from \"../auth/models/response/api-key.response\";\nimport { AuthRequestResponse } from \"../auth/models/response/auth-request.response\";\nimport { DeviceVerificationResponse } from \"../auth/models/response/device-verification.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../auth/models/response/emergency-access.response\";\nimport { IdentityCaptchaResponse } from \"../auth/models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../auth/models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../auth/models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../auth/models/response/key-connector-user-key.response\";\nimport { PreloginResponse } from \"../auth/models/response/prelogin.response\";\nimport { RegisterResponse } from \"../auth/models/response/register.response\";\nimport { SsoPreValidateResponse } from \"../auth/models/response/sso-pre-validate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../auth/models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../auth/models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../auth/models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../auth/models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../auth/models/response/two-factor-recover.response\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../auth/models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../auth/models/response/two-factor-yubi-key.response\";\nimport { DeviceType } from \"../enums/deviceType\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { Utils } from \"../misc/utils\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CollectionBulkDeleteRequest } from \"../models/request/collection-bulk-delete.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { UpdateAvatarRequest } from \"../models/request/update-avatar.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport {\n  CollectionAccessDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\nimport { AttachmentRequest } from \"../vault/models/request/attachment.request\";\nimport { CipherBulkDeleteRequest } from \"../vault/models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../vault/models/request/cipher-bulk-move.request\";\nimport { CipherBulkShareRequest } from \"../vault/models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../vault/models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../vault/models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../vault/models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../vault/models/request/cipher-share.request\";\nimport { CipherRequest } from \"../vault/models/request/cipher.request\";\nimport { AttachmentUploadDataResponse } from \"../vault/models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../vault/models/response/attachment.response\";\nimport { CipherResponse } from \"../vault/models/response/cipher.response\";\nimport { SyncResponse } from \"../vault/models/response/sync.response\";\n\n/**\n * @deprecated The `ApiService` class is deprecated and calls should be extracted into individual\n * api services. The `send` method is still allowed to be used within api services. For background\n * of this decision please read https://contributing.bitwarden.com/architecture/adr/refactor-api-service.\n */\nexport class ApiService implements ApiServiceAbstraction {\n  private device: DeviceType;\n  private deviceType: string;\n  private isWebClient = false;\n  private isDesktopClient = false;\n\n  constructor(\n    private tokenService: TokenService,\n    private platformUtilsService: PlatformUtilsService,\n    private environmentService: EnvironmentService,\n    private appIdService: AppIdService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private customUserAgent: string = null\n  ) {\n    this.device = platformUtilsService.getDevice();\n    this.deviceType = this.device.toString();\n    this.isWebClient =\n      this.device === DeviceType.IEBrowser ||\n      this.device === DeviceType.ChromeBrowser ||\n      this.device === DeviceType.EdgeBrowser ||\n      this.device === DeviceType.FirefoxBrowser ||\n      this.device === DeviceType.OperaBrowser ||\n      this.device === DeviceType.SafariBrowser ||\n      this.device === DeviceType.UnknownBrowser ||\n      this.device === DeviceType.VivaldiBrowser;\n    this.isDesktopClient =\n      this.device === DeviceType.WindowsDesktop ||\n      this.device === DeviceType.MacOsDesktop ||\n      this.device === DeviceType.LinuxDesktop;\n  }\n\n  // Auth APIs\n\n  async postIdentityToken(\n    request: UserApiTokenRequest | PasswordTokenRequest | SsoTokenRequest\n  ): Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse> {\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    request.alterIdentityTokenHeaders(headers);\n\n    const identityToken =\n      request instanceof UserApiTokenRequest\n        ? request.toIdentityToken()\n        : request.toIdentityToken(this.platformUtilsService.getClientType());\n\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify(identityToken),\n        credentials: this.getCredentials(),\n        cache: \"no-store\",\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    }\n\n    if (responseJson != null) {\n      if (response.status === 200) {\n        return new IdentityTokenResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.TwoFactorProviders2 &&\n        Object.keys(responseJson.TwoFactorProviders2).length\n      ) {\n        await this.tokenService.clearTwoFactorToken();\n        return new IdentityTwoFactorResponse(responseJson);\n      } else if (\n        response.status === 400 &&\n        responseJson.HCaptcha_SiteKey &&\n        Object.keys(responseJson.HCaptcha_SiteKey).length\n      ) {\n        return new IdentityCaptchaResponse(responseJson);\n      }\n    }\n\n    return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n  }\n\n  async refreshIdentityToken(): Promise<any> {\n    try {\n      await this.doAuthRefresh();\n    } catch (e) {\n      return Promise.reject(null);\n    }\n  }\n\n  async postAuthRequest(request: PasswordlessCreateAuthRequest): Promise<AuthRequestResponse> {\n    const r = await this.send(\"POST\", \"/auth-requests/\", request, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  async getAuthResponse(id: string, accessCode: string): Promise<AuthRequestResponse> {\n    const path = `/auth-requests/${id}/response?code=${accessCode}`;\n    const r = await this.send(\"GET\", path, null, false, true);\n    return new AuthRequestResponse(r);\n  }\n\n  async getAuthRequest(id: string): Promise<AuthRequestResponse> {\n    const path = `/auth-requests/${id}`;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AuthRequestResponse(r);\n  }\n\n  async putAuthRequest(id: string, request: PasswordlessAuthRequest): Promise<AuthRequestResponse> {\n    const path = `/auth-requests/${id}`;\n    const r = await this.send(\"PUT\", path, request, true, true);\n    return new AuthRequestResponse(r);\n  }\n\n  async getAuthRequests(): Promise<ListResponse<AuthRequestResponse>> {\n    const path = `/auth-requests/`;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new ListResponse(r, AuthRequestResponse);\n  }\n\n  async getLastAuthRequest(): Promise<AuthRequestResponse> {\n    const requests = await this.getAuthRequests();\n    const activeRequests = requests.data.filter((m) => !m.isAnswered && !m.isExpired);\n    const lastRequest = activeRequests.sort((a: AuthRequestResponse, b: AuthRequestResponse) =>\n      a.creationDate.localeCompare(b.creationDate)\n    )[activeRequests.length - 1];\n    return lastRequest;\n  }\n\n  // Account APIs\n\n  async getProfile(): Promise<ProfileResponse> {\n    const r = await this.send(\"GET\", \"/accounts/profile\", null, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async getUserSubscription(): Promise<SubscriptionResponse> {\n    const r = await this.send(\"GET\", \"/accounts/subscription\", null, true, true);\n    return new SubscriptionResponse(r);\n  }\n\n  async getTaxInfo(): Promise<TaxInfoResponse> {\n    const r = await this.send(\"GET\", \"/accounts/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/profile\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  async putAvatar(request: UpdateAvatarRequest): Promise<ProfileResponse> {\n    const r = await this.send(\"PUT\", \"/accounts/avatar\", request, true, true);\n    return new ProfileResponse(r);\n  }\n\n  putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/tax\", request, true, false);\n  }\n\n  async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/prelogin\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new PreloginResponse(r);\n  }\n\n  postEmailToken(request: EmailTokenRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email-token\", request, true, false);\n  }\n\n  postEmail(request: EmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/email\", request, true, false);\n  }\n\n  postPassword(request: PasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password\", request, true, false);\n  }\n\n  setPassword(request: SetPasswordRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-password\", request, true, false);\n  }\n\n  postSetKeyConnectorKey(request: SetKeyConnectorKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/set-key-connector-key\", request, true, false);\n  }\n\n  postSecurityStamp(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/security-stamp\", request, true, false);\n  }\n\n  async getAccountRevisionDate(): Promise<number> {\n    const r = await this.send(\"GET\", \"/accounts/revision-date\", null, true, true);\n    return r as number;\n  }\n\n  postPasswordHint(request: PasswordHintRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/password-hint\", request, false, false);\n  }\n\n  async postRegister(request: RegisterRequest): Promise<RegisterResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/accounts/register\",\n      request,\n      false,\n      true,\n      this.environmentService.getIdentityUrl()\n    );\n    return new RegisterResponse(r);\n  }\n\n  async postPremium(data: FormData): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/premium\", data, true, true);\n    return new PaymentResponse(r);\n  }\n\n  async postIapCheck(request: IapCheckRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/iap-check\", request, true, false);\n  }\n\n  postReinstatePremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/reinstate-premium\", null, true, false);\n  }\n\n  postCancelPremium(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/cancel-premium\", null, true, false);\n  }\n\n  async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.send(\"POST\", \"/accounts/storage\", request, true, true);\n    return new PaymentResponse(r);\n  }\n\n  postAccountPayment(request: PaymentRequest): Promise<void> {\n    return this.send(\"POST\", \"/accounts/payment\", request, true, false);\n  }\n\n  postAccountLicense(data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/accounts/license\", data, true, false);\n  }\n\n  postAccountKeys(request: KeysRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/keys\", request, true, false);\n  }\n\n  postAccountKey(request: UpdateKeyRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/key\", request, true, false);\n  }\n\n  postAccountVerifyEmail(): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email\", null, true, false);\n  }\n\n  postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-email-token\", request, false, false);\n  }\n\n  postAccountVerifyPassword(request: SecretVerificationRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/verify-password\", request, true, false);\n  }\n\n  postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover\", request, false, false);\n  }\n\n  postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/delete-recover-token\", request, false, false);\n  }\n\n  postAccountKdf(request: KdfRequest): Promise<any> {\n    return this.send(\"POST\", \"/accounts/kdf\", request, true, false);\n  }\n\n  async deleteSsoUser(organizationId: string): Promise<void> {\n    return this.send(\"DELETE\", \"/accounts/sso/\" + organizationId, null, true, false);\n  }\n\n  async getSsoUserIdentifier(): Promise<string> {\n    return this.send(\"GET\", \"/accounts/sso/user-identifier\", null, true, true);\n  }\n\n  async postUserApiKey(id: string, request: SecretVerificationRequest): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  async postUserRotateApiKey(\n    id: string,\n    request: SecretVerificationRequest\n  ): Promise<ApiKeyResponse> {\n    const r = await this.send(\"POST\", \"/accounts/rotate-api-key\", request, true, true);\n    return new ApiKeyResponse(r);\n  }\n\n  putUpdateTempPassword(request: UpdateTempPasswordRequest): Promise<any> {\n    return this.send(\"PUT\", \"/accounts/update-temp-password\", request, true, false);\n  }\n\n  postConvertToKeyConnector(): Promise<void> {\n    return this.send(\"POST\", \"/accounts/convert-to-key-connector\", null, true, false);\n  }\n\n  // Account Billing APIs\n\n  async getUserBillingHistory(): Promise<BillingHistoryResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/history\", null, true, true);\n    return new BillingHistoryResponse(r);\n  }\n\n  async getUserBillingPayment(): Promise<BillingPaymentResponse> {\n    const r = await this.send(\"GET\", \"/accounts/billing/payment-method\", null, true, true);\n    return new BillingPaymentResponse(r);\n  }\n\n  // Send APIs\n\n  async getSend(id: string): Promise<SendResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + id, null, true, true);\n    return new SendResponse(r);\n  }\n\n  async postSendAccess(\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendAccessResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/access/\" + id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendAccessResponse(r);\n  }\n\n  async getSendFileDownloadData(\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ): Promise<SendFileDownloadDataResponse> {\n    const addSendIdHeader = (headers: Headers) => {\n      headers.set(\"Send-Id\", send.id);\n    };\n    const r = await this.send(\n      \"POST\",\n      \"/sends/\" + send.id + \"/access/file/\" + send.file.id,\n      request,\n      false,\n      true,\n      apiUrl,\n      addSendIdHeader\n    );\n    return new SendFileDownloadDataResponse(r);\n  }\n\n  async getSends(): Promise<ListResponse<SendResponse>> {\n    const r = await this.send(\"GET\", \"/sends\", null, true, true);\n    return new ListResponse(r, SendResponse);\n  }\n\n  async postSend(request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends\", request, true, true);\n    return new SendResponse(r);\n  }\n\n  async postFileTypeSend(request: SendRequest): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/sends/file/v2\", request, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  async renewSendFileUploadUrl(\n    sendId: string,\n    fileId: string\n  ): Promise<SendFileUploadDataResponse> {\n    const r = await this.send(\"GET\", \"/sends/\" + sendId + \"/file/\" + fileId, null, true, true);\n    return new SendFileUploadDataResponse(r);\n  }\n\n  postSendFile(sendId: string, fileId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/sends/\" + sendId + \"/file/\" + fileId, data, true, false);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postSendFileLegacy(data: FormData): Promise<SendResponse> {\n    const r = await this.send(\"POST\", \"/sends/file\", data, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSend(id: string, request: SendRequest): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id, request, true, true);\n    return new SendResponse(r);\n  }\n\n  async putSendRemovePassword(id: string): Promise<SendResponse> {\n    const r = await this.send(\"PUT\", \"/sends/\" + id + \"/remove-password\", null, true, true);\n    return new SendResponse(r);\n  }\n\n  deleteSend(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/sends/\" + id, null, true, false);\n  }\n\n  // Cipher APIs\n\n  async getCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id, null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getFullCipherDetails(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/details\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"GET\", \"/ciphers/\" + id + \"/admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/organization-details?organizationId=\" + organizationId,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CipherResponse);\n  }\n\n  async postCipher(request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/create\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id, request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putPartialCipher(id: string, request: CipherPartialRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/partial\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/admin\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipher(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id, null, true, false);\n  }\n\n  deleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/admin\", null, true, false);\n  }\n\n  deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers\", request, true, false);\n  }\n\n  deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/admin\", request, true, false);\n  }\n\n  putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/move\", request, true, false);\n  }\n\n  async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/share\", request, true, true);\n    return new CipherResponse(r);\n  }\n\n  putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/share\", request, true, false);\n  }\n\n  putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections\", request, true, false);\n  }\n\n  putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/collections-admin\", request, true, false);\n  }\n\n  postPurgeCiphers(\n    request: SecretVerificationRequest,\n    organizationId: string = null\n  ): Promise<any> {\n    let path = \"/ciphers/purge\";\n    if (organizationId != null) {\n      path += \"?organizationId=\" + organizationId;\n    }\n    return this.send(\"POST\", path, request, true, false);\n  }\n\n  putDeleteCipher(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete\", null, true, false);\n  }\n\n  putDeleteCipherAdmin(id: string): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/\" + id + \"/delete-admin\", null, true, false);\n  }\n\n  putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete\", request, true, false);\n  }\n\n  putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n    return this.send(\"PUT\", \"/ciphers/delete-admin\", request, true, false);\n  }\n\n  async putRestoreCipher(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreCipherAdmin(id: string): Promise<CipherResponse> {\n    const r = await this.send(\"PUT\", \"/ciphers/\" + id + \"/restore-admin\", null, true, true);\n    return new CipherResponse(r);\n  }\n\n  async putRestoreManyCiphers(\n    request: CipherBulkDeleteRequest\n  ): Promise<ListResponse<CipherResponse>> {\n    const r = await this.send(\"PUT\", \"/ciphers/restore\", request, true, true);\n    return new ListResponse<CipherResponse>(r, CipherResponse);\n  }\n\n  // Attachments APIs\n\n  async getAttachmentData(\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ): Promise<AttachmentResponse> {\n    const path =\n      (emergencyAccessId != null ? \"/emergency-access/\" + emergencyAccessId + \"/\" : \"/ciphers/\") +\n      cipherId +\n      \"/attachment/\" +\n      attachmentId;\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new AttachmentResponse(r);\n  }\n\n  async postCipherAttachment(\n    id: string,\n    request: AttachmentRequest\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/v2\", request, true, true);\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async postCipherAttachmentAdminLegacy(id: string, data: FormData): Promise<CipherResponse> {\n    const r = await this.send(\"POST\", \"/ciphers/\" + id + \"/attachment-admin\", data, true, true);\n    return new CipherResponse(r);\n  }\n\n  deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n    return this.send(\"DELETE\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, null, true, false);\n  }\n\n  deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/admin\",\n      null,\n      true,\n      false\n    );\n  }\n\n  postShareCipherAttachment(\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/share?organizationId=\" + organizationId,\n      data,\n      true,\n      false\n    );\n  }\n\n  async renewAttachmentUploadUrl(\n    id: string,\n    attachmentId: string\n  ): Promise<AttachmentUploadDataResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/ciphers/\" + id + \"/attachment/\" + attachmentId + \"/renew\",\n      null,\n      true,\n      true\n    );\n    return new AttachmentUploadDataResponse(r);\n  }\n\n  postAttachmentFile(id: string, attachmentId: string, data: FormData): Promise<any> {\n    return this.send(\"POST\", \"/ciphers/\" + id + \"/attachment/\" + attachmentId, data, true, false);\n  }\n\n  // Collections APIs\n\n  async getCollectionAccessDetails(\n    organizationId: string,\n    id: string\n  ): Promise<CollectionAccessDetailsResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/details\",\n      null,\n      true,\n      true\n    );\n    return new CollectionAccessDetailsResponse(r);\n  }\n\n  async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\"GET\", \"/collections\", null, true, true);\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionResponse);\n  }\n\n  async getManyCollectionsWithAccessDetails(\n    organizationId: string\n  ): Promise<ListResponse<CollectionAccessDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/details\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, CollectionAccessDetailsResponse);\n  }\n\n  async getCollectionUsers(\n    organizationId: string,\n    id: string\n  ): Promise<SelectionReadOnlyResponse[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n  }\n\n  async postCollection(\n    organizationId: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/collections\",\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollection(\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ): Promise<CollectionResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      request,\n      true,\n      true\n    );\n    return new CollectionResponse(r);\n  }\n\n  async putCollectionUsers(\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollection(organizationId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  deleteManyCollections(request: CollectionBulkDeleteRequest): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + request.organizationId + \"/collections\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteCollectionUser(\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/collections/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Groups APIs\n\n  async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n    await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/users\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id + \"/user/\" + organizationUserId,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Plan APIs\n\n  async getPlans(): Promise<ListResponse<PlanResponse>> {\n    const r = await this.send(\"GET\", \"/plans/\", null, false, true);\n    return new ListResponse(r, PlanResponse);\n  }\n\n  async postPublicImportDirectory(request: OrganizationImportRequest): Promise<any> {\n    return this.send(\"POST\", \"/public/organization/import\", request, true, false);\n  }\n\n  async getTaxRates(): Promise<ListResponse<TaxRateResponse>> {\n    const r = await this.send(\"GET\", \"/plans/sales-tax-rates/\", null, true, true);\n    return new ListResponse(r, TaxRateResponse);\n  }\n\n  // Settings APIs\n\n  async getSettingsDomains(): Promise<DomainsResponse> {\n    const r = await this.send(\"GET\", \"/settings/domains\", null, true, true);\n    return new DomainsResponse(r);\n  }\n\n  async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n    const r = await this.send(\"PUT\", \"/settings/domains\", request, true, true);\n    return new DomainsResponse(r);\n  }\n\n  // Sync APIs\n\n  async getSync(): Promise<SyncResponse> {\n    const path = this.isDesktopClient || this.isWebClient ? \"/sync?excludeDomains=true\" : \"/sync\";\n    const r = await this.send(\"GET\", path, null, true, true);\n    return new SyncResponse(r);\n  }\n\n  // Two-factor APIs\n\n  async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\"GET\", \"/two-factor\", null, true, true);\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorOrganizationProviders(\n    organizationId: string\n  ): Promise<ListResponse<TwoFactorProviderResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/two-factor\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, TwoFactorProviderResponse);\n  }\n\n  async getTwoFactorAuthenticator(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async getTwoFactorEmail(request: SecretVerificationRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async getTwoFactorDuo(request: SecretVerificationRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/two-factor/get-duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async getTwoFactorYubiKey(request: SecretVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async getTwoFactorWebAuthn(\n    request: SecretVerificationRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async getTwoFactorWebAuthnChallenge(\n    request: SecretVerificationRequest\n  ): Promise<ChallengeResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-webauthn-challenge\", request, true, true);\n    return new ChallengeResponse(r);\n  }\n\n  async getTwoFactorRecover(request: SecretVerificationRequest): Promise<TwoFactorRecoverResponse> {\n    const r = await this.send(\"POST\", \"/two-factor/get-recover\", request, true, true);\n    return new TwoFactorRecoverResponse(r);\n  }\n\n  async putTwoFactorAuthenticator(\n    request: UpdateTwoFactorAuthenticatorRequest\n  ): Promise<TwoFactorAuthenticatorResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/authenticator\", request, true, true);\n    return new TwoFactorAuthenticatorResponse(r);\n  }\n\n  async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/email\", request, true, true);\n    return new TwoFactorEmailResponse(r);\n  }\n\n  async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/duo\", request, true, true);\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorOrganizationDuo(\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ): Promise<TwoFactorDuoResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/duo\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorDuoResponse(r);\n  }\n\n  async putTwoFactorYubiKey(\n    request: UpdateTwoFactorYubioOtpRequest\n  ): Promise<TwoFactorYubiKeyResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/yubikey\", request, true, true);\n    return new TwoFactorYubiKeyResponse(r);\n  }\n\n  async putTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const response = request.deviceResponse.response as AuthenticatorAttestationResponse;\n    const data: any = Object.assign({}, request);\n\n    data.deviceResponse = {\n      id: request.deviceResponse.id,\n      rawId: btoa(request.deviceResponse.id),\n      type: request.deviceResponse.type,\n      extensions: request.deviceResponse.getClientExtensionResults(),\n      response: {\n        AttestationObject: Utils.fromBufferToB64(response.attestationObject),\n        clientDataJson: Utils.fromBufferToB64(response.clientDataJSON),\n      },\n    };\n\n    const r = await this.send(\"PUT\", \"/two-factor/webauthn\", data, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async deleteTwoFactorWebAuthn(\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ): Promise<TwoFactorWebAuthnResponse> {\n    const r = await this.send(\"DELETE\", \"/two-factor/webauthn\", request, true, true);\n    return new TwoFactorWebAuthnResponse(r);\n  }\n\n  async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\"PUT\", \"/two-factor/disable\", request, true, true);\n    return new TwoFactorProviderResponse(r);\n  }\n\n  async putTwoFactorOrganizationDisable(\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ): Promise<TwoFactorProviderResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/two-factor/disable\",\n      request,\n      true,\n      true\n    );\n    return new TwoFactorProviderResponse(r);\n  }\n\n  postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/recover\", request, false, false);\n  }\n\n  postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email\", request, true, false);\n  }\n\n  postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n    return this.send(\"POST\", \"/two-factor/send-email-login\", request, false, false);\n  }\n\n  async getDeviceVerificationSettings(): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/two-factor/get-device-verification-settings\",\n      null,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async putDeviceVerificationSettings(\n    request: DeviceVerificationRequest\n  ): Promise<DeviceVerificationResponse> {\n    const r = await this.send(\n      \"PUT\",\n      \"/two-factor/device-verification-settings\",\n      request,\n      true,\n      true\n    );\n    return new DeviceVerificationResponse(r);\n  }\n\n  async getKnownDevice(email: string, deviceIdentifier: string): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/devices/knowndevice\", null, false, true, null, (headers) => {\n      headers.set(\"X-Device-Identifier\", deviceIdentifier);\n      headers.set(\"X-Request-Email\", Utils.fromUtf8ToUrlB64(email));\n    });\n    return r as boolean;\n  }\n\n  // Emergency Access APIs\n\n  async getEmergencyAccessTrusted(): Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/trusted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGranteeDetailsResponse);\n  }\n\n  async getEmergencyAccessGranted(): Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/granted\", null, true, true);\n    return new ListResponse(r, EmergencyAccessGrantorDetailsResponse);\n  }\n\n  async getEmergencyAccess(id: string): Promise<EmergencyAccessGranteeDetailsResponse> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id, null, true, true);\n    return new EmergencyAccessGranteeDetailsResponse(r);\n  }\n\n  async getEmergencyGrantorPolicies(id: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.send(\"GET\", \"/emergency-access/\" + id + \"/policies\", null, true, true);\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  putEmergencyAccess(id: string, request: EmergencyAccessUpdateRequest): Promise<any> {\n    return this.send(\"PUT\", \"/emergency-access/\" + id, request, true, false);\n  }\n\n  deleteEmergencyAccess(id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/emergency-access/\" + id, null, true, false);\n  }\n\n  postEmergencyAccessInvite(request: EmergencyAccessInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/invite\", request, true, false);\n  }\n\n  postEmergencyAccessReinvite(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reinvite\", null, true, false);\n  }\n\n  postEmergencyAccessAccept(id: string, request: EmergencyAccessAcceptRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/accept\", request, true, false);\n  }\n\n  postEmergencyAccessConfirm(id: string, request: EmergencyAccessConfirmRequest): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/confirm\", request, true, false);\n  }\n\n  postEmergencyAccessInitiate(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/initiate\", null, true, false);\n  }\n\n  postEmergencyAccessApprove(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/approve\", null, true, false);\n  }\n\n  postEmergencyAccessReject(id: string): Promise<any> {\n    return this.send(\"POST\", \"/emergency-access/\" + id + \"/reject\", null, true, false);\n  }\n\n  async postEmergencyAccessTakeover(id: string): Promise<EmergencyAccessTakeoverResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/takeover\", null, true, true);\n    return new EmergencyAccessTakeoverResponse(r);\n  }\n\n  async postEmergencyAccessPassword(\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ): Promise<any> {\n    await this.send(\"POST\", \"/emergency-access/\" + id + \"/password\", request, true, true);\n  }\n\n  async postEmergencyAccessView(id: string): Promise<EmergencyAccessViewResponse> {\n    const r = await this.send(\"POST\", \"/emergency-access/\" + id + \"/view\", null, true, true);\n    return new EmergencyAccessViewResponse(r);\n  }\n\n  // Organization APIs\n\n  async getCloudCommunicationsEnabled(): Promise<boolean> {\n    const r = await this.send(\"GET\", \"/organizations/connections/enabled\", null, true, true);\n    return r as boolean;\n  }\n\n  async getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"GET\", `/organizations/connections/${id}/${type}`, null, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\"POST\", \"/organizations/connections/\", request, true, true);\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId?: string\n  ): Promise<OrganizationConnectionResponse<TConfig>> {\n    const r = await this.send(\n      \"PUT\",\n      \"/organizations/connections/\" + organizationConnectionId,\n      request,\n      true,\n      true\n    );\n    return new OrganizationConnectionResponse(r, configType);\n  }\n\n  async deleteOrganizationConnection(id: string): Promise<void> {\n    return this.send(\"DELETE\", \"/organizations/connections/\" + id, null, true, false);\n  }\n\n  // Provider APIs\n\n  async postProviderSetup(id: string, request: ProviderSetupRequest) {\n    const r = await this.send(\"POST\", \"/providers/\" + id + \"/setup\", request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async getProvider(id: string) {\n    const r = await this.send(\"GET\", \"/providers/\" + id, null, true, true);\n    return new ProviderResponse(r);\n  }\n\n  async putProvider(id: string, request: ProviderUpdateRequest) {\n    const r = await this.send(\"PUT\", \"/providers/\" + id, request, true, true);\n    return new ProviderResponse(r);\n  }\n\n  // Provider User APIs\n\n  async getProviderUsers(\n    providerId: string\n  ): Promise<ListResponse<ProviderUserUserDetailsResponse>> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users\", null, true, true);\n    return new ListResponse(r, ProviderUserUserDetailsResponse);\n  }\n\n  async getProviderUser(providerId: string, id: string): Promise<ProviderUserResponse> {\n    const r = await this.send(\"GET\", \"/providers/\" + providerId + \"/users/\" + id, null, true, true);\n    return new ProviderUserResponse(r);\n  }\n\n  postProviderUserInvite(providerId: string, request: ProviderUserInviteRequest): Promise<any> {\n    return this.send(\"POST\", \"/providers/\" + providerId + \"/users/invite\", request, true, false);\n  }\n\n  postProviderUserReinvite(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyProviderUserReinvite(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/reinvite\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async postProviderUserBulkConfirm(\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  async deleteManyProviderUsers(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkResponse>> {\n    const r = await this.send(\"DELETE\", \"/providers/\" + providerId + \"/users\", request, true, true);\n    return new ListResponse(r, ProviderUserBulkResponse);\n  }\n\n  postProviderUserAccept(\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postProviderUserConfirm(\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderUsersPublicKey(\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ): Promise<ListResponse<ProviderUserBulkPublicKeyResponse>> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/users/public-keys\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderUserBulkPublicKeyResponse);\n  }\n\n  putProviderUser(\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ): Promise<any> {\n    return this.send(\"PUT\", \"/providers/\" + providerId + \"/users/\" + id, request, true, false);\n  }\n\n  deleteProviderUser(providerId: string, id: string): Promise<any> {\n    return this.send(\"DELETE\", \"/providers/\" + providerId + \"/users/\" + id, null, true, false);\n  }\n\n  // Provider Organization APIs\n\n  async getProviderClients(\n    providerId: string\n  ): Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>> {\n    const r = await this.send(\n      \"GET\",\n      \"/providers/\" + providerId + \"/organizations\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, ProviderOrganizationOrganizationDetailsResponse);\n  }\n\n  postProviderAddOrganization(\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ): Promise<any> {\n    return this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations/add\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postProviderCreateOrganization(\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ): Promise<ProviderOrganizationResponse> {\n    const r = await this.send(\n      \"POST\",\n      \"/providers/\" + providerId + \"/organizations\",\n      request,\n      true,\n      true\n    );\n    return new ProviderOrganizationResponse(r);\n  }\n\n  deleteProviderOrganization(providerId: string, id: string): Promise<any> {\n    return this.send(\n      \"DELETE\",\n      \"/providers/\" + providerId + \"/organizations/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  // Event APIs\n\n  async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsCipher(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/ciphers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganization(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/organizations/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsOrganizationUser(\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/organizations/\" + organizationId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProvider(\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\"/providers/\" + id + \"/events\", start, end, token),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async getEventsProviderUser(\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ): Promise<ListResponse<EventResponse>> {\n    const r = await this.send(\n      \"GET\",\n      this.addEventParameters(\n        \"/providers/\" + providerId + \"/users/\" + id + \"/events\",\n        start,\n        end,\n        token\n      ),\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, EventResponse);\n  }\n\n  async postEventsCollect(request: EventRequest[]): Promise<any> {\n    const authHeader = await this.getActiveBearerToken();\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n      Authorization: \"Bearer \" + authHeader,\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n    const response = await this.fetch(\n      new Request(this.environmentService.getEventsUrl() + \"/collect\", {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        method: \"POST\",\n        body: JSON.stringify(request),\n        headers: headers,\n      })\n    );\n    if (response.status !== 200) {\n      return Promise.reject(\"Event post failed.\");\n    }\n  }\n\n  // User APIs\n\n  async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n    const r = await this.send(\"GET\", \"/users/\" + id + \"/public-key\", null, true, true);\n    return new UserKeyResponse(r);\n  }\n\n  // HIBP APIs\n\n  async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n    const r = await this.send(\"GET\", \"/hibp/breach?username=\" + username, null, true, true);\n    return r.map((a: any) => new BreachAccountResponse(a));\n  }\n\n  // Misc\n\n  async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n    const r = await this.send(\"POST\", \"/bitpay-invoice\", request, true, true);\n    return r as string;\n  }\n\n  async postSetupPayment(): Promise<string> {\n    const r = await this.send(\"POST\", \"/setup-payment\", null, true, true);\n    return r as string;\n  }\n\n  // Key Connector\n\n  async getUserKeyFromKeyConnector(keyConnectorUrl: string): Promise<KeyConnectorUserKeyResponse> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n\n    return new KeyConnectorUserKeyResponse(await response.json());\n  }\n\n  async postUserKeyToKeyConnector(\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ): Promise<void> {\n    const authHeader = await this.getActiveBearerToken();\n\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/user-keys\", {\n        cache: \"no-store\",\n        method: \"POST\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          Authorization: \"Bearer \" + authHeader,\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n        body: JSON.stringify(request),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getKeyConnectorAlive(keyConnectorUrl: string) {\n    const response = await this.fetch(\n      new Request(keyConnectorUrl + \"/alive\", {\n        cache: \"no-store\",\n        method: \"GET\",\n        headers: new Headers({\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json; charset=utf-8\",\n        }),\n      })\n    );\n\n    if (response.status !== 200) {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async getOrganizationExport(organizationId: string): Promise<OrganizationExportResponse> {\n    const r = await this.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/export\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationExportResponse(r);\n  }\n\n  // Helpers\n\n  async getActiveBearerToken(): Promise<string> {\n    let accessToken = await this.tokenService.getToken();\n    if (await this.tokenService.tokenNeedsRefresh()) {\n      await this.doAuthRefresh();\n      accessToken = await this.tokenService.getToken();\n    }\n    return accessToken;\n  }\n\n  async fetch(request: Request): Promise<Response> {\n    if (request.method === \"GET\") {\n      request.headers.set(\"Cache-Control\", \"no-store\");\n      request.headers.set(\"Pragma\", \"no-cache\");\n    }\n    request.headers.set(\"Bitwarden-Client-Name\", this.platformUtilsService.getClientType());\n    request.headers.set(\n      \"Bitwarden-Client-Version\",\n      await this.platformUtilsService.getApplicationVersionNumber()\n    );\n    return this.nativeFetch(request);\n  }\n\n  nativeFetch(request: Request): Promise<Response> {\n    return fetch(request);\n  }\n\n  async preValidateSso(identifier: string): Promise<SsoPreValidateResponse> {\n    if (identifier == null || identifier === \"\") {\n      throw new Error(\"Organization Identifier was not provided.\");\n    }\n    const headers = new Headers({\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + path, {\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"GET\",\n      })\n    );\n\n    if (response.status === 200) {\n      const body = await response.json();\n      return new SsoPreValidateResponse(body);\n    } else {\n      const error = await this.handleError(response, false, true);\n      return Promise.reject(error);\n    }\n  }\n\n  async postCreateSponsorship(\n    sponsoredOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoredOrgId +\n        \"/families-for-enterprise\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getSponsorshipSyncStatus(\n    sponsoredOrgId: string\n  ): Promise<OrganizationSponsorshipSyncStatusResponse> {\n    const response = await this.send(\n      \"GET\",\n      \"/organization/sponsorship/\" + sponsoredOrgId + \"/sync-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSponsorshipSyncStatusResponse(response);\n  }\n\n  async deleteRevokeSponsorship(sponsoringOrganizationId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/\" +\n        (this.platformUtilsService.isSelfHost() ? \"self-hosted/\" : \"\") +\n        sponsoringOrganizationId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteRemoveSponsorship(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"DELETE\",\n      \"/organization/sponsorship/sponsored/\" + sponsoringOrgId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async postPreValidateSponsorshipToken(sponsorshipToken: string): Promise<boolean> {\n    const r = await this.send(\n      \"POST\",\n      \"/organization/sponsorship/validate-token?sponsorshipToken=\" +\n        encodeURIComponent(sponsorshipToken),\n      null,\n      true,\n      true\n    );\n    return r as boolean;\n  }\n\n  async postRedeemSponsorship(\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/redeem?sponsorshipToken=\" + encodeURIComponent(sponsorshipToken),\n      request,\n      true,\n      false\n    );\n  }\n\n  async postResendSponsorshipOffer(sponsoringOrgId: string): Promise<void> {\n    return await this.send(\n      \"POST\",\n      \"/organization/sponsorship/\" + sponsoringOrgId + \"/families-for-enterprise/resend\",\n      null,\n      true,\n      false\n    );\n  }\n\n  protected async doAuthRefresh(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken != null && refreshToken !== \"\") {\n      return this.doRefreshToken();\n    }\n\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n    if (!Utils.isNullOrWhitespace(clientId) && !Utils.isNullOrWhitespace(clientSecret)) {\n      return this.doApiTokenRefresh();\n    }\n\n    throw new Error(\"Cannot refresh token, no refresh token or api keys are stored\");\n  }\n\n  protected async doRefreshToken(): Promise<void> {\n    const refreshToken = await this.tokenService.getRefreshToken();\n    if (refreshToken == null || refreshToken === \"\") {\n      throw new Error();\n    }\n    const headers = new Headers({\n      \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n      Accept: \"application/json\",\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const decodedToken = await this.tokenService.decodeToken();\n    const response = await this.fetch(\n      new Request(this.environmentService.getIdentityUrl() + \"/connect/token\", {\n        body: this.qsStringify({\n          grant_type: \"refresh_token\",\n          client_id: decodedToken.client_id,\n          refresh_token: refreshToken,\n        }),\n        cache: \"no-store\",\n        credentials: this.getCredentials(),\n        headers: headers,\n        method: \"POST\",\n      })\n    );\n\n    if (response.status === 200) {\n      const responseJson = await response.json();\n      const tokenResponse = new IdentityTokenResponse(responseJson);\n      await this.tokenService.setTokens(\n        tokenResponse.accessToken,\n        tokenResponse.refreshToken,\n        null\n      );\n    } else {\n      const error = await this.handleError(response, true, true);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async doApiTokenRefresh(): Promise<void> {\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const appId = await this.appIdService.getAppId();\n    const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n    const tokenRequest = new UserApiTokenRequest(\n      clientId,\n      clientSecret,\n      new TokenTwoFactorRequest(),\n      deviceRequest\n    );\n\n    const response = await this.postIdentityToken(tokenRequest);\n    if (!(response instanceof IdentityTokenResponse)) {\n      throw new Error(\"Invalid response received when refreshing api token\");\n    }\n\n    await this.tokenService.setToken(response.accessToken);\n  }\n\n  async send(\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ): Promise<any> {\n    apiUrl = Utils.isNullOrWhitespace(apiUrl) ? this.environmentService.getApiUrl() : apiUrl;\n\n    // Prevent directory traversal from malicious paths\n    const pathParts = path.split(\"?\");\n    const requestUrl =\n      apiUrl + Utils.normalizePath(pathParts[0]) + (pathParts.length > 1 ? `?${pathParts[1]}` : \"\");\n\n    const headers = new Headers({\n      \"Device-Type\": this.deviceType,\n    });\n    if (this.customUserAgent != null) {\n      headers.set(\"User-Agent\", this.customUserAgent);\n    }\n\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      credentials: this.getCredentials(),\n      method: method,\n    };\n\n    if (authed) {\n      const authHeader = await this.getActiveBearerToken();\n      headers.set(\"Authorization\", \"Bearer \" + authHeader);\n    }\n    if (body != null) {\n      if (typeof body === \"string\") {\n        requestInit.body = body;\n        headers.set(\"Content-Type\", \"application/x-www-form-urlencoded; charset=utf-8\");\n      } else if (typeof body === \"object\") {\n        if (body instanceof FormData) {\n          requestInit.body = body;\n        } else {\n          headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n          requestInit.body = JSON.stringify(body);\n        }\n      }\n    }\n    if (hasResponse) {\n      headers.set(\"Accept\", \"application/json\");\n    }\n    if (alterHeaders != null) {\n      alterHeaders(headers);\n    }\n\n    requestInit.headers = headers;\n    const response = await this.fetch(new Request(requestUrl, requestInit));\n\n    const responseType = response.headers.get(\"content-type\");\n    const responseIsJson = responseType != null && responseType.indexOf(\"application/json\") !== -1;\n    if (hasResponse && response.status === 200 && responseIsJson) {\n      const responseJson = await response.json();\n      return responseJson;\n    } else if (response.status !== 200) {\n      const error = await this.handleError(response, false, authed);\n      return Promise.reject(error);\n    }\n  }\n\n  private async handleError(\n    response: Response,\n    tokenError: boolean,\n    authed: boolean\n  ): Promise<ErrorResponse> {\n    let responseJson: any = null;\n    if (this.isJsonResponse(response)) {\n      responseJson = await response.json();\n    } else if (this.isTextResponse(response)) {\n      responseJson = { Message: await response.text() };\n    }\n\n    if (authed) {\n      if (\n        response.status === 401 ||\n        response.status === 403 ||\n        (tokenError &&\n          response.status === 400 &&\n          responseJson != null &&\n          responseJson.error === \"invalid_grant\")\n      ) {\n        await this.logoutCallback(true);\n        return null;\n      }\n    }\n\n    return new ErrorResponse(responseJson, response.status, tokenError);\n  }\n\n  private qsStringify(params: any): string {\n    return Object.keys(params)\n      .map((key) => {\n        return encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]);\n      })\n      .join(\"&\");\n  }\n\n  private getCredentials(): RequestCredentials {\n    if (!this.isWebClient || this.environmentService.hasBaseUrl()) {\n      return \"include\";\n    }\n    return undefined;\n  }\n\n  private addEventParameters(base: string, start: string, end: string, token: string) {\n    if (start != null) {\n      base += \"?start=\" + start;\n    }\n    if (end != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"end=\" + end;\n    }\n    if (token != null) {\n      base += base.indexOf(\"?\") > -1 ? \"&\" : \"?\";\n      base += \"continuationToken=\" + token;\n    }\n    return base;\n  }\n\n  private isJsonResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"application/json\") > -1;\n  }\n\n  private isTextResponse(response: Response): boolean {\n    const typeHeader = response.headers.get(\"content-type\");\n    return typeHeader != null && typeHeader.indexOf(\"text\") > -1;\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { FileUploadService as FileUploadServiceAbstraction } from \"../abstractions/fileUpload.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { FileUploadType } from \"../enums/fileUploadType\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { AttachmentUploadDataResponse } from \"../vault/models/response/attachment-upload-data.response\";\n\nimport { AzureFileUploadService } from \"./azureFileUpload.service\";\nimport { BitwardenFileUploadService } from \"./bitwardenFileUpload.service\";\n\nexport class FileUploadService implements FileUploadServiceAbstraction {\n  private azureFileUploadService: AzureFileUploadService;\n  private bitwardenFileUploadService: BitwardenFileUploadService;\n\n  constructor(private logService: LogService, private apiService: ApiService) {\n    this.azureFileUploadService = new AzureFileUploadService(logService);\n    this.bitwardenFileUploadService = new BitwardenFileUploadService();\n  }\n\n  async uploadSendFile(\n    uploadData: SendFileUploadDataResponse,\n    fileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            fileName.encryptedString,\n            encryptedFileData,\n            (fd) =>\n              this.apiService.postSendFile(\n                uploadData.sendResponse.id,\n                uploadData.sendResponse.file.id,\n                fd\n              )\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewSendFileUploadUrl(\n              uploadData.sendResponse.id,\n              uploadData.sendResponse.file.id\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type\");\n      }\n    } catch (e) {\n      await this.apiService.deleteSend(uploadData.sendResponse.id);\n      throw e;\n    }\n  }\n\n  async uploadCipherAttachment(\n    admin: boolean,\n    uploadData: AttachmentUploadDataResponse,\n    encryptedFileName: EncString,\n    encryptedFileData: EncArrayBuffer\n  ) {\n    const response = admin ? uploadData.cipherMiniResponse : uploadData.cipherResponse;\n    try {\n      switch (uploadData.fileUploadType) {\n        case FileUploadType.Direct:\n          await this.bitwardenFileUploadService.upload(\n            encryptedFileName.encryptedString,\n            encryptedFileData,\n            (fd) => this.apiService.postAttachmentFile(response.id, uploadData.attachmentId, fd)\n          );\n          break;\n        case FileUploadType.Azure: {\n          const renewalCallback = async () => {\n            const renewalResponse = await this.apiService.renewAttachmentUploadUrl(\n              response.id,\n              uploadData.attachmentId\n            );\n            return renewalResponse.url;\n          };\n          await this.azureFileUploadService.upload(\n            uploadData.url,\n            encryptedFileData,\n            renewalCallback\n          );\n          break;\n        }\n        default:\n          throw new Error(\"Unknown file upload type.\");\n      }\n    } catch (e) {\n      if (admin) {\n        await this.apiService.deleteCipherAttachmentAdmin(response.id, uploadData.attachmentId);\n      } else {\n        await this.apiService.deleteCipherAttachment(response.id, uploadData.attachmentId);\n      }\n      throw e;\n    }\n  }\n}\n","import { BehaviorSubject, concatMap } from \"rxjs\";\n\nimport { SettingsService as SettingsServiceAbstraction } from \"../abstractions/settings.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { Utils } from \"../misc/utils\";\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport class SettingsService implements SettingsServiceAbstraction {\n  protected _settings: BehaviorSubject<AccountSettingsSettings> = new BehaviorSubject({});\n\n  settings$ = this._settings.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._settings.next({});\n            return;\n          }\n\n          const data = await this.stateService.getSettings();\n\n          this._settings.next(data);\n        })\n      )\n      .subscribe();\n  }\n\n  async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n    const settings = this._settings.getValue() ?? {};\n\n    settings.equivalentDomains = equivalentDomains;\n\n    this._settings.next(settings);\n    await this.stateService.setSettings(settings);\n  }\n\n  getEquivalentDomains(url: string): string[] {\n    const domain = Utils.getDomain(url);\n    if (domain == null) {\n      return null;\n    }\n\n    const settings = this._settings.getValue();\n\n    let result: string[] = [];\n\n    if (settings?.equivalentDomains != null) {\n      settings.equivalentDomains\n        .filter((ed) => ed.length > 0 && ed.includes(domain))\n        .forEach((ed) => {\n          result = result.concat(ed);\n        });\n    }\n\n    return result;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._settings.next({});\n    }\n\n    await this.stateService.setSettings(null, { userId: userId });\n  }\n}\n","import { CryptoService } from \"../../abstractions/crypto.service\";\nimport { PolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { VaultTimeoutSettingsService as VaultTimeoutSettingsServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { TokenService } from \"../../auth/abstractions/token.service\";\nimport { PolicyType } from \"../../enums/policyType\";\n\nexport class VaultTimeoutSettingsService implements VaultTimeoutSettingsServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private tokenService: TokenService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n    await this.stateService.setVaultTimeout(timeout);\n\n    // We swap these tokens from being on disk for lock actions, and in memory for logout actions\n    // Get them here to set them to their new location after changing the timeout action and clearing if needed\n    const token = await this.tokenService.getToken();\n    const refreshToken = await this.tokenService.getRefreshToken();\n    const clientId = await this.tokenService.getClientId();\n    const clientSecret = await this.tokenService.getClientSecret();\n\n    const currentAction = await this.stateService.getVaultTimeoutAction();\n    if ((timeout != null || timeout === 0) && action === \"logOut\" && action !== currentAction) {\n      // if we have a vault timeout and the action is log out, reset tokens\n      await this.tokenService.clearToken();\n    }\n\n    await this.stateService.setVaultTimeoutAction(action);\n\n    await this.tokenService.setToken(token);\n    await this.tokenService.setRefreshToken(refreshToken);\n    await this.tokenService.setClientId(clientId);\n    await this.tokenService.setClientSecret(clientSecret);\n\n    await this.cryptoService.toggleKey();\n  }\n\n  async isPinLockSet(): Promise<[boolean, boolean]> {\n    const protectedPin = await this.stateService.getProtectedPin();\n    const pinProtectedKey = await this.stateService.getEncryptedPinProtected();\n    return [protectedPin != null, pinProtectedKey != null];\n  }\n\n  async isBiometricLockSet(): Promise<boolean> {\n    return await this.stateService.getBiometricUnlock();\n  }\n\n  async getVaultTimeout(userId?: string): Promise<number> {\n    const vaultTimeout = await this.stateService.getVaultTimeout({ userId: userId });\n\n    if (\n      await this.policyService.policyAppliesToUser(PolicyType.MaximumVaultTimeout, null, userId)\n    ) {\n      const policy = await this.policyService.getAll(PolicyType.MaximumVaultTimeout, userId);\n      // Remove negative values, and ensure it's smaller than maximum allowed value according to policy\n      let timeout = Math.min(vaultTimeout, policy[0].data.minutes);\n\n      if (vaultTimeout == null || timeout < 0) {\n        timeout = policy[0].data.minutes;\n      }\n\n      // We really shouldn't need to set the value here, but multiple services relies on this value being correct.\n      if (vaultTimeout !== timeout) {\n        await this.stateService.setVaultTimeout(timeout, { userId: userId });\n      }\n\n      return timeout;\n    }\n\n    return vaultTimeout;\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEverBeenUnlocked(false, { userId: userId });\n    await this.stateService.setDecryptedPinProtected(null, { userId: userId });\n    await this.stateService.setProtectedPin(null, { userId: userId });\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { CollectionService } from \"../../abstractions/collection.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { MessagingService } from \"../../abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport { SearchService } from \"../../abstractions/search.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"../../abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"../../abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { AuthService } from \"../../auth/abstractions/auth.service\";\nimport { KeyConnectorService } from \"../../auth/abstractions/key-connector.service\";\nimport { AuthenticationStatus } from \"../../auth/enums/authentication-status\";\nimport { CipherService } from \"../../vault/abstractions/cipher.service\";\nimport { FolderService } from \"../../vault/abstractions/folder/folder.service.abstraction\";\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n  private inited = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private folderService: FolderService,\n    private collectionService: CollectionService,\n    private cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private searchService: SearchService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private lockedCallback: (userId?: string) => Promise<void> = null,\n    private loggedOutCallback: (expired: boolean, userId?: string) => Promise<void> = null\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.startCheck();\n    }\n  }\n\n  startCheck() {\n    this.checkVaultTimeout();\n    setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n  }\n\n  async checkVaultTimeout(): Promise<void> {\n    if (await this.platformUtilsService.isViewOpen()) {\n      return;\n    }\n\n    const accounts = await firstValueFrom(this.stateService.accounts$);\n    for (const userId in accounts) {\n      if (userId != null && (await this.shouldLock(userId))) {\n        await this.executeTimeoutAction(userId);\n      }\n    }\n  }\n\n  async lock(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      const pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n      const pinLock =\n        (pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) || pinSet[1];\n\n      if (!pinLock && !(await this.vaultTimeoutSettingsService.isBiometricLockSet())) {\n        await this.logOut(userId);\n      }\n    }\n\n    if (userId == null || userId === (await this.stateService.getUserId())) {\n      this.searchService.clearIndex();\n      await this.folderService.clearCache();\n    }\n\n    await this.stateService.setEverBeenUnlocked(true, { userId: userId });\n    await this.stateService.setCryptoMasterKeyAuto(null, { userId: userId });\n\n    await this.cryptoService.clearKey(false, userId);\n    await this.cryptoService.clearOrgKeys(true, userId);\n    await this.cryptoService.clearKeyPair(true, userId);\n    await this.cryptoService.clearEncKey(true, userId);\n\n    await this.cipherService.clearCache(userId);\n    await this.collectionService.clearCache(userId);\n\n    this.messagingService.send(\"locked\", { userId: userId });\n\n    if (this.lockedCallback != null) {\n      await this.lockedCallback(userId);\n    }\n  }\n\n  async logOut(userId?: string): Promise<void> {\n    if (this.loggedOutCallback != null) {\n      await this.loggedOutCallback(false, userId);\n    }\n  }\n\n  private async shouldLock(userId: string): Promise<boolean> {\n    const authStatus = await this.authService.getAuthStatus(userId);\n    if (\n      authStatus === AuthenticationStatus.Locked ||\n      authStatus === AuthenticationStatus.LoggedOut\n    ) {\n      return false;\n    }\n\n    const vaultTimeout = await this.vaultTimeoutSettingsService.getVaultTimeout(userId);\n    if (vaultTimeout == null || vaultTimeout < 0) {\n      return false;\n    }\n\n    const lastActive = await this.stateService.getLastActive({ userId: userId });\n    if (lastActive == null) {\n      return false;\n    }\n\n    const vaultTimeoutSeconds = vaultTimeout * 60;\n    const diffSeconds = (new Date().getTime() - lastActive) / 1000;\n    return diffSeconds >= vaultTimeoutSeconds;\n  }\n\n  private async executeTimeoutAction(userId: string): Promise<void> {\n    const timeoutAction = await this.stateService.getVaultTimeoutAction({ userId: userId });\n    timeoutAction === \"logOut\" ? await this.logOut(userId) : await this.lock(userId);\n  }\n}\n","import * as papa from \"papaparse\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport {\n  ExportFormat,\n  ExportService as ExportServiceAbstraction,\n} from \"../abstractions/export.service\";\nimport { KdfConfig } from \"../auth/models/domain/kdf-config\";\nimport { DEFAULT_PBKDF2_ITERATIONS, KdfType } from \"../enums/kdfType\";\nimport { Utils } from \"../misc/utils\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { CipherWithIdExport as CipherExport } from \"../models/export/cipher-with-ids.export\";\nimport { CollectionWithIdExport as CollectionExport } from \"../models/export/collection-with-id.export\";\nimport { EventExport } from \"../models/export/event.export\";\nimport { FolderWithIdExport as FolderExport } from \"../models/export/folder-with-id.export\";\nimport { CollectionDetailsResponse } from \"../models/response/collection.response\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { EventView } from \"../models/view/event.view\";\nimport { CipherService } from \"../vault/abstractions/cipher.service\";\nimport { FolderService } from \"../vault/abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"../vault/enums/cipher-type\";\nimport { CipherData } from \"../vault/models/data/cipher.data\";\nimport { Cipher } from \"../vault/models/domain/cipher\";\nimport { Folder } from \"../vault/models/domain/folder\";\nimport { CipherView } from \"../vault/models/view/cipher.view\";\nimport { FolderView } from \"../vault/models/view/folder.view\";\n\nexport class ExportService implements ExportServiceAbstraction {\n  constructor(\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService\n  ) {}\n\n  async getExport(format: ExportFormat = \"csv\", organizationId?: string): Promise<string> {\n    if (organizationId) {\n      return await this.getOrganizationExport(organizationId, format);\n    }\n\n    if (format === \"encrypted_json\") {\n      return this.getEncryptedExport();\n    } else {\n      return this.getDecryptedExport(format);\n    }\n  }\n\n  async getPasswordProtectedExport(password: string, organizationId?: string): Promise<string> {\n    const clearText = organizationId\n      ? await this.getOrganizationExport(organizationId, \"json\")\n      : await this.getExport(\"json\");\n\n    const salt = Utils.fromBufferToB64(await this.cryptoFunctionService.randomBytes(16));\n    const kdfConfig = new KdfConfig(DEFAULT_PBKDF2_ITERATIONS);\n    const key = await this.cryptoService.makePinKey(\n      password,\n      salt,\n      KdfType.PBKDF2_SHA256,\n      kdfConfig\n    );\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), key);\n    const encText = await this.cryptoService.encrypt(clearText, key);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      passwordProtected: true,\n      salt: salt,\n      kdfIterations: kdfConfig.iterations,\n      kdfType: KdfType.PBKDF2_SHA256,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      data: encText.encryptedString,\n    };\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  async getOrganizationExport(\n    organizationId: string,\n    format: ExportFormat = \"csv\"\n  ): Promise<string> {\n    if (format === \"encrypted_json\") {\n      return this.getOrganizationEncryptedExport(organizationId);\n    } else {\n      return this.getOrganizationDecryptedExport(organizationId, format);\n    }\n  }\n\n  async getEventExport(events: EventView[]): Promise<string> {\n    return papa.unparse(events.map((e) => new EventExport(e)));\n  }\n\n  getFileName(prefix: string = null, extension = \"csv\"): string {\n    const now = new Date();\n    const dateString =\n      now.getFullYear() +\n      \"\" +\n      this.padNumber(now.getMonth() + 1, 2) +\n      \"\" +\n      this.padNumber(now.getDate(), 2) +\n      this.padNumber(now.getHours(), 2) +\n      \"\" +\n      this.padNumber(now.getMinutes(), 2) +\n      this.padNumber(now.getSeconds(), 2);\n\n    return \"bitwarden\" + (prefix ? \"_\" + prefix : \"\") + \"_export_\" + dateString + \".\" + extension;\n  }\n\n  private async getDecryptedExport(format: \"json\" | \"csv\"): Promise<string> {\n    let decFolders: FolderView[] = [];\n    let decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllDecryptedFromState().then((folders) => {\n        decFolders = folders;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAllDecrypted().then((ciphers) => {\n        decCiphers = ciphers.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const foldersMap = new Map<string, FolderView>();\n      decFolders.forEach((f) => {\n        if (f.id != null) {\n          foldersMap.set(f.id, f);\n        }\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n        if (c.organizationId != null) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.folder =\n          c.folderId != null && foldersMap.has(c.folderId) ? foldersMap.get(c.folderId).name : null;\n        cipher.favorite = c.favorite ? 1 : null;\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        folders: [],\n        items: [],\n      };\n\n      decFolders.forEach((f) => {\n        if (f.id == null) {\n          return;\n        }\n        const folder = new FolderExport();\n        folder.build(f);\n        jsonDoc.folders.push(folder);\n      });\n\n      decCiphers.forEach((c) => {\n        if (c.organizationId != null) {\n          return;\n        }\n        const cipher = new CipherExport();\n        cipher.build(c);\n        cipher.collectionIds = null;\n        jsonDoc.items.push(cipher);\n      });\n\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getEncryptedExport(): Promise<string> {\n    let folders: Folder[] = [];\n    let ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.folderService.getAllFromState().then((f) => {\n        folders = f;\n      })\n    );\n\n    promises.push(\n      this.cipherService.getAll().then((c) => {\n        ciphers = c.filter((f) => f.deletedDate == null);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid());\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      folders: [],\n      items: [],\n    };\n\n    folders.forEach((f) => {\n      if (f.id == null) {\n        return;\n      }\n      const folder = new FolderExport();\n      folder.build(f);\n      jsonDoc.folders.push(folder);\n    });\n\n    ciphers.forEach((c) => {\n      if (c.organizationId != null) {\n        return;\n      }\n      const cipher = new CipherExport();\n      cipher.build(c);\n      cipher.collectionIds = null;\n      jsonDoc.items.push(cipher);\n    });\n\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private async getOrganizationDecryptedExport(\n    organizationId: string,\n    format: \"json\" | \"csv\"\n  ): Promise<string> {\n    const decCollections: CollectionView[] = [];\n    const decCiphers: CipherView[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getOrganizationExport(organizationId).then((exportData) => {\n        const exportPromises: any = [];\n        if (exportData != null) {\n          if (exportData.collections != null && exportData.collections.length > 0) {\n            exportData.collections.forEach((c) => {\n              const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n              exportPromises.push(\n                collection.decrypt().then((decCol) => {\n                  decCollections.push(decCol);\n                })\n              );\n            });\n          }\n          if (exportData.ciphers != null && exportData.ciphers.length > 0) {\n            exportData.ciphers\n              .filter((c) => c.deletedDate === null)\n              .forEach((c) => {\n                const cipher = new Cipher(new CipherData(c));\n                exportPromises.push(\n                  cipher.decrypt().then((decCipher) => {\n                    decCiphers.push(decCipher);\n                  })\n                );\n              });\n          }\n        }\n        return Promise.all(exportPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    if (format === \"csv\") {\n      const collectionsMap = new Map<string, CollectionView>();\n      decCollections.forEach((c) => {\n        collectionsMap.set(c.id, c);\n      });\n\n      const exportCiphers: any[] = [];\n      decCiphers.forEach((c) => {\n        // only export logins and secure notes\n        if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n          return;\n        }\n\n        const cipher: any = {};\n        cipher.collections = [];\n        if (c.collectionIds != null) {\n          cipher.collections = c.collectionIds\n            .filter((id) => collectionsMap.has(id))\n            .map((id) => collectionsMap.get(id).name);\n        }\n        this.buildCommonCipher(cipher, c);\n        exportCiphers.push(cipher);\n      });\n\n      return papa.unparse(exportCiphers);\n    } else {\n      const jsonDoc: any = {\n        encrypted: false,\n        collections: [],\n        items: [],\n      };\n\n      decCollections.forEach((c) => {\n        const collection = new CollectionExport();\n        collection.build(c);\n        jsonDoc.collections.push(collection);\n      });\n\n      decCiphers.forEach((c) => {\n        const cipher = new CipherExport();\n        cipher.build(c);\n        jsonDoc.items.push(cipher);\n      });\n      return JSON.stringify(jsonDoc, null, \"  \");\n    }\n  }\n\n  private async getOrganizationEncryptedExport(organizationId: string): Promise<string> {\n    const collections: Collection[] = [];\n    const ciphers: Cipher[] = [];\n    const promises = [];\n\n    promises.push(\n      this.apiService.getCollections(organizationId).then((c) => {\n        const collectionPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data.forEach((r) => {\n            const collection = new Collection(new CollectionData(r as CollectionDetailsResponse));\n            collections.push(collection);\n          });\n        }\n        return Promise.all(collectionPromises);\n      })\n    );\n\n    promises.push(\n      this.apiService.getCiphersOrganization(organizationId).then((c) => {\n        const cipherPromises: any = [];\n        if (c != null && c.data != null && c.data.length > 0) {\n          c.data\n            .filter((item) => item.deletedDate === null)\n            .forEach((item) => {\n              const cipher = new Cipher(new CipherData(item));\n              ciphers.push(cipher);\n            });\n        }\n        return Promise.all(cipherPromises);\n      })\n    );\n\n    await Promise.all(promises);\n\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n    const encKeyValidation = await this.cryptoService.encrypt(Utils.newGuid(), orgKey);\n\n    const jsonDoc: any = {\n      encrypted: true,\n      encKeyValidation_DO_NOT_EDIT: encKeyValidation.encryptedString,\n      collections: [],\n      items: [],\n    };\n\n    collections.forEach((c) => {\n      const collection = new CollectionExport();\n      collection.build(c);\n      jsonDoc.collections.push(collection);\n    });\n\n    ciphers.forEach((c) => {\n      const cipher = new CipherExport();\n      cipher.build(c);\n      jsonDoc.items.push(cipher);\n    });\n    return JSON.stringify(jsonDoc, null, \"  \");\n  }\n\n  private padNumber(num: number, width: number, padCharacter = \"0\"): string {\n    const numString = num.toString();\n    return numString.length >= width\n      ? numString\n      : new Array(width - numString.length + 1).join(padCharacter) + numString;\n  }\n\n  private buildCommonCipher(cipher: any, c: CipherView) {\n    cipher.type = null;\n    cipher.name = c.name;\n    cipher.notes = c.notes;\n    cipher.fields = null;\n    cipher.reprompt = c.reprompt;\n    // Login props\n    cipher.login_uri = null;\n    cipher.login_username = null;\n    cipher.login_password = null;\n    cipher.login_totp = null;\n\n    if (c.fields) {\n      c.fields.forEach((f: any) => {\n        if (!cipher.fields) {\n          cipher.fields = \"\";\n        } else {\n          cipher.fields += \"\\n\";\n        }\n\n        cipher.fields += (f.name || \"\") + \": \" + f.value;\n      });\n    }\n\n    switch (c.type) {\n      case CipherType.Login:\n        cipher.type = \"login\";\n        cipher.login_username = c.login.username;\n        cipher.login_password = c.login.password;\n        cipher.login_totp = c.login.totp;\n\n        if (c.login.uris) {\n          cipher.login_uri = [];\n          c.login.uris.forEach((u) => {\n            cipher.login_uri.push(u.uri);\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        cipher.type = \"note\";\n        break;\n      default:\n        return;\n    }\n\n    return cipher;\n  }\n}\n","import * as signalR from \"@microsoft/signalr\";\nimport * as signalRMsgPack from \"@microsoft/signalr-protocol-msgpack\";\n\nimport { ApiService } from \"../abstractions/api.service\";\nimport { AppIdService } from \"../abstractions/appId.service\";\nimport { EnvironmentService } from \"../abstractions/environment.service\";\nimport { LogService } from \"../abstractions/log.service\";\nimport { MessagingService } from \"../abstractions/messaging.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"../abstractions/notifications.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { AuthService } from \"../auth/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"../auth/enums/authentication-status\";\nimport { NotificationType } from \"../enums/notificationType\";\nimport {\n  NotificationResponse,\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../models/response/notification.response\";\nimport { SyncService } from \"../vault/abstractions/sync/sync.service.abstraction\";\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n  private signalrConnection: signalR.HubConnection;\n  private url: string;\n  private connected = false;\n  private inited = false;\n  private inactive = false;\n  private reconnectTimer: any = null;\n\n  constructor(\n    private syncService: SyncService,\n    private appIdService: AppIdService,\n    private apiService: ApiService,\n    private environmentService: EnvironmentService,\n    private logoutCallback: (expired: boolean) => Promise<void>,\n    private logService: LogService,\n    private stateService: StateService,\n    private authService: AuthService,\n    private messagingService: MessagingService\n  ) {\n    this.environmentService.urls.subscribe(() => {\n      if (!this.inited) {\n        return;\n      }\n\n      this.init();\n    });\n  }\n\n  async init(): Promise<void> {\n    this.inited = false;\n    this.url = this.environmentService.getNotificationsUrl();\n\n    // Set notifications server URL to `https://-` to effectively disable communication\n    // with the notifications server from the client app\n    if (this.url === \"https://-\") {\n      return;\n    }\n\n    if (this.signalrConnection != null) {\n      this.signalrConnection.off(\"ReceiveMessage\");\n      this.signalrConnection.off(\"Heartbeat\");\n      await this.signalrConnection.stop();\n      this.connected = false;\n      this.signalrConnection = null;\n    }\n\n    this.signalrConnection = new signalR.HubConnectionBuilder()\n      .withUrl(this.url + \"/hub\", {\n        accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n        skipNegotiation: true,\n        transport: signalR.HttpTransportType.WebSockets,\n      })\n      .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol() as signalR.IHubProtocol)\n      // .configureLogging(signalR.LogLevel.Trace)\n      .build();\n\n    this.signalrConnection.on(\"ReceiveMessage\", (data: any) =>\n      this.processNotification(new NotificationResponse(data))\n    );\n    // eslint-disable-next-line\n    this.signalrConnection.on(\"Heartbeat\", (data: any) => {\n      /*console.log('Heartbeat!');*/\n    });\n    this.signalrConnection.onclose(() => {\n      this.connected = false;\n      this.reconnect(true);\n    });\n    this.inited = true;\n    if (await this.isAuthedAndUnlocked()) {\n      await this.reconnect(false);\n    }\n  }\n\n  async updateConnection(sync = false): Promise<void> {\n    if (!this.inited) {\n      return;\n    }\n    try {\n      if (await this.isAuthedAndUnlocked()) {\n        await this.reconnect(sync);\n      } else {\n        await this.signalrConnection.stop();\n      }\n    } catch (e) {\n      this.logService.error(e.toString());\n    }\n  }\n\n  async reconnectFromActivity(): Promise<void> {\n    this.inactive = false;\n    if (this.inited && !this.connected) {\n      await this.reconnect(true);\n    }\n  }\n\n  async disconnectFromInactivity(): Promise<void> {\n    this.inactive = true;\n    if (this.inited && this.connected) {\n      await this.signalrConnection.stop();\n    }\n  }\n\n  private async processNotification(notification: NotificationResponse) {\n    const appId = await this.appIdService.getAppId();\n    if (notification == null || notification.contextId === appId) {\n      return;\n    }\n\n    const isAuthenticated = await this.stateService.getIsAuthenticated();\n    const payloadUserId = notification.payload.userId || notification.payload.UserId;\n    const myUserId = await this.stateService.getUserId();\n    if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n      return;\n    }\n\n    switch (notification.type) {\n      case NotificationType.SyncCipherCreate:\n      case NotificationType.SyncCipherUpdate:\n        await this.syncService.syncUpsertCipher(\n          notification.payload as SyncCipherNotification,\n          notification.type === NotificationType.SyncCipherUpdate\n        );\n        break;\n      case NotificationType.SyncCipherDelete:\n      case NotificationType.SyncLoginDelete:\n        await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n        break;\n      case NotificationType.SyncFolderCreate:\n      case NotificationType.SyncFolderUpdate:\n        await this.syncService.syncUpsertFolder(\n          notification.payload as SyncFolderNotification,\n          notification.type === NotificationType.SyncFolderUpdate\n        );\n        break;\n      case NotificationType.SyncFolderDelete:\n        await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n        break;\n      case NotificationType.SyncVault:\n      case NotificationType.SyncCiphers:\n      case NotificationType.SyncSettings:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(false);\n        }\n        break;\n      case NotificationType.SyncOrgKeys:\n        if (isAuthenticated) {\n          await this.syncService.fullSync(true);\n          // Stop so a reconnect can be made\n          await this.signalrConnection.stop();\n        }\n        break;\n      case NotificationType.LogOut:\n        if (isAuthenticated) {\n          this.logoutCallback(true);\n        }\n        break;\n      case NotificationType.SyncSendCreate:\n      case NotificationType.SyncSendUpdate:\n        await this.syncService.syncUpsertSend(\n          notification.payload as SyncSendNotification,\n          notification.type === NotificationType.SyncSendUpdate\n        );\n        break;\n      case NotificationType.SyncSendDelete:\n        await this.syncService.syncDeleteSend(notification.payload as SyncSendNotification);\n        break;\n      case NotificationType.AuthRequest:\n        if (await this.stateService.getApproveLoginRequests()) {\n          this.messagingService.send(\"openLoginApproval\", {\n            notificationId: notification.payload.id,\n          });\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  private async reconnect(sync: boolean) {\n    if (this.reconnectTimer != null) {\n      clearTimeout(this.reconnectTimer);\n      this.reconnectTimer = null;\n    }\n    if (this.connected || !this.inited || this.inactive) {\n      return;\n    }\n    const authedAndUnlocked = await this.isAuthedAndUnlocked();\n    if (!authedAndUnlocked) {\n      return;\n    }\n\n    try {\n      await this.signalrConnection.start();\n      this.connected = true;\n      if (sync) {\n        await this.syncService.fullSync(false);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (!this.connected) {\n      this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n    }\n  }\n\n  private async isAuthedAndUnlocked() {\n    const authStatus = await this.authService.getAuthStatus();\n    return authStatus >= AuthenticationStatus.Unlocked;\n  }\n\n  private random(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","import * as argon2 from \"argon2-browser\";\nimport * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n  private wasmSupported: boolean;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n    this.wasmSupported = this.checkIfWasmSupported();\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async argon2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    iterations: number,\n    memory: number,\n    parallelism: number\n  ): Promise<ArrayBuffer> {\n    if (!this.wasmSupported) {\n      throw \"Webassembly support is required for the Argon2 KDF feature.\";\n    }\n\n    const passwordArr = new Uint8Array(this.toBuf(password));\n    const saltArr = new Uint8Array(this.toBuf(salt));\n\n    const result = await argon2.hash({\n      pass: passwordArr,\n      salt: saltArr,\n      time: iterations,\n      mem: memory,\n      parallelism: parallelism,\n      hashLen: 32,\n      type: argon2.ArgonType.Argon2id,\n    });\n    return result.hash;\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n\n  // ref: https://stackoverflow.com/a/47880734/1090359\n  private checkIfWasmSupported(): boolean {\n    try {\n      if (typeof WebAssembly === \"object\" && typeof WebAssembly.instantiate === \"function\") {\n        const module = new WebAssembly.Module(\n          Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00)\n        );\n        if (module instanceof WebAssembly.Module) {\n          return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\n        }\n      }\n    } catch {\n      return false;\n    }\n    return false;\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"../../abstractions/event/event-upload.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { EventRequest } from \"../../models/request/event.request\";\n\nexport class EventUploadService implements EventUploadServiceAbstraction {\n  private inited = false;\n  constructor(\n    private apiService: ApiService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  init(checkOnInterval: boolean) {\n    if (this.inited) {\n      return;\n    }\n\n    this.inited = true;\n    if (checkOnInterval) {\n      this.uploadEvents();\n      setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n    }\n  }\n\n  async uploadEvents(userId?: string): Promise<void> {\n    const authed = await this.stateService.getIsAuthenticated({ userId: userId });\n    if (!authed) {\n      return;\n    }\n    const eventCollection = await this.stateService.getEventCollection({ userId: userId });\n    if (eventCollection == null || eventCollection.length === 0) {\n      return;\n    }\n    const request = eventCollection.map((e) => {\n      const req = new EventRequest();\n      req.type = e.type;\n      req.cipherId = e.cipherId;\n      req.date = e.date;\n      req.organizationId = e.organizationId;\n      return req;\n    });\n    try {\n      await this.apiService.postEventsCollect(request);\n      this.clearEvents(userId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async clearEvents(userId?: string): Promise<any> {\n    await this.stateService.setEventCollection(null, { userId: userId });\n  }\n}\n","import { EventCollectionService as EventCollectionServiceAbstraction } from \"../../abstractions/event/event-collection.service\";\nimport { EventUploadService } from \"../../abstractions/event/event-upload.service\";\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { EventType } from \"../../enums/eventType\";\nimport { EventData } from \"../../models/data/event.data\";\nimport { CipherService } from \"../../vault/abstractions/cipher.service\";\n\nexport class EventCollectionService implements EventCollectionServiceAbstraction {\n  constructor(\n    private cipherService: CipherService,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private eventUploadService: EventUploadService\n  ) {}\n\n  async collect(\n    eventType: EventType,\n    cipherId: string = null,\n    uploadImmediately = false,\n    organizationId: string = null\n  ): Promise<any> {\n    const authed = await this.stateService.getIsAuthenticated();\n    if (!authed) {\n      return;\n    }\n    const organizations = await this.organizationService.getAll();\n    if (organizations == null) {\n      return;\n    }\n    const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n    if (orgIds.size === 0) {\n      return;\n    }\n    if (cipherId != null) {\n      const cipher = await this.cipherService.get(cipherId);\n      if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n        return;\n      }\n    }\n    if (organizationId != null) {\n      if (!orgIds.has(organizationId)) {\n        return;\n      }\n    }\n    let eventCollection = await this.stateService.getEventCollection();\n    if (eventCollection == null) {\n      eventCollection = [];\n    }\n    const event = new EventData();\n    event.type = eventType;\n    event.cipherId = cipherId;\n    event.date = new Date().toISOString();\n    event.organizationId = organizationId;\n    eventCollection.push(event);\n    await this.stateService.setEventCollection(eventCollection);\n    if (uploadImmediately) {\n      await this.eventUploadService.uploadEvents();\n    }\n  }\n}\n","import { of, concatMap, BehaviorSubject, Observable, map } from \"rxjs\";\n\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { InternalPolicyService as InternalPolicyServiceAbstraction } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { Utils } from \"../../misc/utils\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyService implements InternalPolicyServiceAbstraction {\n  protected _policies: BehaviorSubject<Policy[]> = new BehaviorSubject([]);\n\n  policies$ = this._policies.asObservable();\n\n  constructor(\n    protected stateService: StateService,\n    private organizationService: OrganizationService\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (Utils.global.bitwardenContainerService == null) {\n            return;\n          }\n\n          if (!unlocked) {\n            this._policies.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getEncryptedPolicies();\n\n          await this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  async getAll(type?: PolicyType, userId?: string): Promise<Policy[]> {\n    let response: Policy[] = [];\n    const decryptedPolicies = await this.stateService.getDecryptedPolicies({ userId: userId });\n    if (decryptedPolicies != null) {\n      response = decryptedPolicies;\n    } else {\n      const diskPolicies = await this.stateService.getEncryptedPolicies({ userId: userId });\n      for (const id in diskPolicies) {\n        if (Object.prototype.hasOwnProperty.call(diskPolicies, id)) {\n          response.push(new Policy(diskPolicies[id]));\n        }\n      }\n      await this.stateService.setDecryptedPolicies(response, { userId: userId });\n    }\n    if (type != null) {\n      return response.filter((policy) => policy.type === type);\n    } else {\n      return response;\n    }\n  }\n\n  masterPasswordPolicyOptions$(policies?: Policy[]): Observable<MasterPasswordPolicyOptions> {\n    const observable = policies ? of(policies) : this.policies$;\n    return observable.pipe(\n      map((obsPolicies) => {\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\n        const filteredPolicies = obsPolicies.filter((p) => p.type === PolicyType.MasterPassword);\n\n        if (filteredPolicies == null || filteredPolicies.length === 0) {\n          return enforcedOptions;\n        }\n\n        filteredPolicies.forEach((currentPolicy) => {\n          if (!currentPolicy.enabled || currentPolicy.data == null) {\n            return;\n          }\n\n          if (enforcedOptions == null) {\n            enforcedOptions = new MasterPasswordPolicyOptions();\n          }\n\n          if (\n            currentPolicy.data.minComplexity != null &&\n            currentPolicy.data.minComplexity > enforcedOptions.minComplexity\n          ) {\n            enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n          }\n\n          if (\n            currentPolicy.data.minLength != null &&\n            currentPolicy.data.minLength > enforcedOptions.minLength\n          ) {\n            enforcedOptions.minLength = currentPolicy.data.minLength;\n          }\n\n          if (currentPolicy.data.requireUpper) {\n            enforcedOptions.requireUpper = true;\n          }\n\n          if (currentPolicy.data.requireLower) {\n            enforcedOptions.requireLower = true;\n          }\n\n          if (currentPolicy.data.requireNumbers) {\n            enforcedOptions.requireNumbers = true;\n          }\n\n          if (currentPolicy.data.requireSpecial) {\n            enforcedOptions.requireSpecial = true;\n          }\n        });\n\n        return enforcedOptions;\n      })\n    );\n  }\n\n  policyAppliesToActiveUser$(policyType: PolicyType, policyFilter?: (policy: Policy) => boolean) {\n    return this.policies$.pipe(\n      concatMap(async (policies) => {\n        const userId = await this.stateService.getUserId();\n        return await this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n      })\n    );\n  }\n\n  evaluateMasterPassword(\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions: MasterPasswordPolicyOptions\n  ): boolean {\n    if (enforcedPolicyOptions == null) {\n      return true;\n    }\n\n    if (\n      enforcedPolicyOptions.minComplexity > 0 &&\n      enforcedPolicyOptions.minComplexity > passwordStrength\n    ) {\n      return false;\n    }\n\n    if (\n      enforcedPolicyOptions.minLength > 0 &&\n      enforcedPolicyOptions.minLength > newPassword.length\n    ) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n      return false;\n    }\n\n    if (enforcedPolicyOptions.requireNumbers && !/[0-9]/.test(newPassword)) {\n      return false;\n    }\n\n    // eslint-disable-next-line\n    if (enforcedPolicyOptions.requireSpecial && !/[!@#$%\\^&*]/g.test(newPassword)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getResetPasswordPolicyOptions(\n    policies: Policy[],\n    orgId: string\n  ): [ResetPasswordPolicyOptions, boolean] {\n    const resetPasswordPolicyOptions = new ResetPasswordPolicyOptions();\n\n    if (policies == null || orgId == null) {\n      return [resetPasswordPolicyOptions, false];\n    }\n\n    const policy = policies.find(\n      (p) => p.organizationId === orgId && p.type === PolicyType.ResetPassword && p.enabled\n    );\n    resetPasswordPolicyOptions.autoEnrollEnabled = policy?.data?.autoEnrollEnabled ?? false;\n\n    return [resetPasswordPolicyOptions, policy?.enabled ?? false];\n  }\n\n  mapPoliciesFromToken(policiesResponse: ListResponse<PolicyResponse>): Policy[] {\n    if (policiesResponse == null || policiesResponse.data == null) {\n      return null;\n    }\n\n    const policiesData = policiesResponse.data.map((p) => new PolicyData(p));\n    return policiesData.map((p) => new Policy(p));\n  }\n\n  async policyAppliesToUser(\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const policies = await this.getAll(policyType, userId);\n\n    return this.checkPoliciesThatApplyToUser(policies, policyType, policyFilter, userId);\n  }\n\n  async upsert(policy: PolicyData): Promise<any> {\n    let policies = await this.stateService.getEncryptedPolicies();\n    if (policies == null) {\n      policies = {};\n    }\n\n    policies[policy.id] = policy;\n\n    await this.updateObservables(policies);\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async replace(policies: { [id: string]: PolicyData }): Promise<void> {\n    await this.updateObservables(policies);\n    await this.stateService.setDecryptedPolicies(null);\n    await this.stateService.setEncryptedPolicies(policies);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    if (userId == null || userId == (await this.stateService.getUserId())) {\n      this._policies.next([]);\n    }\n    await this.stateService.setDecryptedPolicies(null, { userId: userId });\n    await this.stateService.setEncryptedPolicies(null, { userId: userId });\n  }\n\n  private isExcemptFromPolicies(organization: Organization, policyType: PolicyType) {\n    if (policyType === PolicyType.MaximumVaultTimeout) {\n      return organization.type === OrganizationUserType.Owner;\n    }\n\n    return organization.isExemptFromPolicies;\n  }\n\n  private async updateObservables(policiesMap: { [id: string]: PolicyData }) {\n    const policies = Object.values(policiesMap || {}).map((f) => new Policy(f));\n\n    this._policies.next(policies);\n  }\n\n  private async checkPoliciesThatApplyToUser(\n    policies: Policy[],\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) {\n    const organizations = await this.organizationService.getAll(userId);\n    const filteredPolicies = policies.filter(\n      (p) => p.type === policyType && p.enabled && (policyFilter == null || policyFilter(p))\n    );\n    const policySet = new Set(filteredPolicies.map((p) => p.organizationId));\n\n    return organizations.some(\n      (o) =>\n        o.status >= OrganizationUserStatusType.Accepted &&\n        o.usePolicies &&\n        policySet.has(o.id) &&\n        !this.isExcemptFromPolicies(o, policyType)\n    );\n  }\n}\n","import { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"../../abstractions/api.service\";\nimport { PolicyApiServiceAbstraction } from \"../../abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { PolicyType } from \"../../enums/policyType\";\nimport { Utils } from \"../../misc/utils\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiService implements PolicyApiServiceAbstraction {\n  constructor(\n    private policyService: InternalPolicyService,\n    private apiService: ApiService,\n    private stateService: StateService\n  ) {}\n\n  async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      null,\n      true,\n      true\n    );\n    return new PolicyResponse(r);\n  }\n\n  async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies\",\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByToken(\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" +\n        organizationId +\n        \"/policies/token?\" +\n        \"token=\" +\n        encodeURIComponent(token) +\n        \"&email=\" +\n        Utils.encodeRFC3986URIComponent(email) +\n        \"&organizationUserId=\" +\n        organizationUserId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getPoliciesByInvitedUser(\n    organizationId: string,\n    userId: string\n  ): Promise<ListResponse<PolicyResponse>> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/policies/invited-user?\" + \"userId=\" + userId,\n      null,\n      false,\n      true\n    );\n    return new ListResponse(r, PolicyResponse);\n  }\n\n  async getMasterPasswordPoliciesForInvitedUsers(\n    orgId: string\n  ): Promise<MasterPasswordPolicyOptions> {\n    const userId = await this.stateService.getUserId();\n    const response = await this.getPoliciesByInvitedUser(orgId, userId);\n    const policies = await this.policyService.mapPoliciesFromToken(response);\n    return await firstValueFrom(this.policyService.masterPasswordPolicyOptions$(policies));\n  }\n\n  async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<any> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/policies/\" + type,\n      request,\n      true,\n      true\n    );\n    const response = new PolicyResponse(r);\n    const data = new PolicyData(response);\n    await this.policyService.upsert(data);\n  }\n}\n","import { ApiService } from \"../abstractions/api.service\";\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { FileUploadService } from \"../abstractions/fileUpload.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\nimport { SendService as SendServiceAbstraction } from \"../abstractions/send.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { SEND_KDF_ITERATIONS } from \"../enums/kdfType\";\nimport { SendType } from \"../enums/sendType\";\nimport { Utils } from \"../misc/utils\";\nimport { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Send } from \"../models/domain/send\";\nimport { SendFile } from \"../models/domain/send-file\";\nimport { SendText } from \"../models/domain/send-text\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { ErrorResponse } from \"../models/response/error.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport class SendService implements SendServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private fileUploadService: FileUploadService,\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private stateService: StateService\n  ) {}\n\n  async clearCache(): Promise<void> {\n    await this.stateService.setDecryptedSends(null);\n  }\n\n  async encrypt(\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ): Promise<[Send, EncArrayBuffer]> {\n    let fileData: EncArrayBuffer = null;\n    const send = new Send();\n    send.id = model.id;\n    send.type = model.type;\n    send.disabled = model.disabled;\n    send.hideEmail = model.hideEmail;\n    send.maxAccessCount = model.maxAccessCount;\n    if (model.key == null) {\n      model.key = await this.cryptoFunctionService.randomBytes(16);\n      model.cryptoKey = await this.cryptoService.makeSendKey(model.key);\n    }\n    if (password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        password,\n        model.key,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      send.password = Utils.fromBufferToB64(passwordHash);\n    }\n    send.key = await this.cryptoService.encrypt(model.key, key);\n    send.name = await this.cryptoService.encrypt(model.name, model.cryptoKey);\n    send.notes = await this.cryptoService.encrypt(model.notes, model.cryptoKey);\n    if (send.type === SendType.Text) {\n      send.text = new SendText();\n      send.text.text = await this.cryptoService.encrypt(model.text.text, model.cryptoKey);\n      send.text.hidden = model.text.hidden;\n    } else if (send.type === SendType.File) {\n      send.file = new SendFile();\n      if (file != null) {\n        if (file instanceof ArrayBuffer) {\n          const [name, data] = await this.encryptFileData(\n            model.file.fileName,\n            file,\n            model.cryptoKey\n          );\n          send.file.fileName = name;\n          fileData = data;\n        } else {\n          fileData = await this.parseFile(send, file, model.cryptoKey);\n        }\n      }\n    }\n\n    return [send, fileData];\n  }\n\n  async get(id: string): Promise<Send> {\n    const sends = await this.stateService.getEncryptedSends();\n    // eslint-disable-next-line\n    if (sends == null || !sends.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Send(sends[id]);\n  }\n\n  async getAll(): Promise<Send[]> {\n    const sends = await this.stateService.getEncryptedSends();\n    const response: Send[] = [];\n    for (const id in sends) {\n      // eslint-disable-next-line\n      if (sends.hasOwnProperty(id)) {\n        response.push(new Send(sends[id]));\n      }\n    }\n    return response;\n  }\n\n  async getAllDecrypted(): Promise<SendView[]> {\n    let decSends = await this.stateService.getDecryptedSends();\n    if (decSends != null) {\n      return decSends;\n    }\n\n    decSends = [];\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      throw new Error(\"No key.\");\n    }\n\n    const promises: Promise<any>[] = [];\n    const sends = await this.getAll();\n    sends.forEach((send) => {\n      promises.push(send.decrypt().then((f) => decSends.push(f)));\n    });\n\n    await Promise.all(promises);\n    decSends.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n\n    await this.stateService.setDecryptedSends(decSends);\n    return decSends;\n  }\n\n  async saveWithServer(sendData: [Send, EncArrayBuffer]): Promise<any> {\n    const request = new SendRequest(sendData[0], sendData[1]?.buffer.byteLength);\n    let response: SendResponse;\n    if (sendData[0].id == null) {\n      if (sendData[0].type === SendType.Text) {\n        response = await this.apiService.postSend(request);\n      } else {\n        try {\n          const uploadDataResponse = await this.apiService.postFileTypeSend(request);\n          response = uploadDataResponse.sendResponse;\n\n          await this.fileUploadService.uploadSendFile(\n            uploadDataResponse,\n            sendData[0].file.fileName,\n            sendData[1]\n          );\n        } catch (e) {\n          if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n            response = await this.legacyServerSendFileUpload(sendData, request);\n          } else if (e instanceof ErrorResponse) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n          } else {\n            throw e;\n          }\n        }\n      }\n      sendData[0].id = response.id;\n      sendData[0].accessId = response.accessId;\n    } else {\n      response = await this.apiService.putSend(sendData[0].id, request);\n    }\n\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  async legacyServerSendFileUpload(\n    sendData: [Send, EncArrayBuffer],\n    request: SendRequest\n  ): Promise<SendResponse> {\n    const fd = new FormData();\n    try {\n      const blob = new Blob([sendData[1].buffer], { type: \"application/octet-stream\" });\n      fd.append(\"model\", JSON.stringify(request));\n      fd.append(\"data\", blob, sendData[0].file.fileName.encryptedString);\n    } catch (e) {\n      if (Utils.isNode && !Utils.isBrowser) {\n        fd.append(\"model\", JSON.stringify(request));\n        fd.append(\n          \"data\",\n          Buffer.from(sendData[1].buffer) as any,\n          {\n            filepath: sendData[0].file.fileName.encryptedString,\n            contentType: \"application/octet-stream\",\n          } as any\n        );\n      } else {\n        throw e;\n      }\n    }\n    return await this.apiService.postSendFileLegacy(fd);\n  }\n\n  async upsert(send: SendData | SendData[]): Promise<any> {\n    let sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      sends = {};\n    }\n\n    if (send instanceof SendData) {\n      const s = send as SendData;\n      sends[s.id] = s;\n    } else {\n      (send as SendData[]).forEach((s) => {\n        sends[s.id] = s;\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async replace(sends: { [id: string]: SendData }): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(sends);\n  }\n\n  async clear(): Promise<any> {\n    await this.stateService.setDecryptedSends(null);\n    await this.stateService.setEncryptedSends(null);\n  }\n\n  async delete(id: string | string[]): Promise<any> {\n    const sends = await this.stateService.getEncryptedSends();\n    if (sends == null) {\n      return;\n    }\n\n    if (typeof id === \"string\") {\n      if (sends[id] == null) {\n        return;\n      }\n      delete sends[id];\n    } else {\n      (id as string[]).forEach((i) => {\n        delete sends[i];\n      });\n    }\n\n    await this.replace(sends);\n  }\n\n  async deleteWithServer(id: string): Promise<any> {\n    await this.apiService.deleteSend(id);\n    await this.delete(id);\n  }\n\n  async removePasswordWithServer(id: string): Promise<any> {\n    const response = await this.apiService.putSendRemovePassword(id);\n    const data = new SendData(response);\n    await this.upsert(data);\n  }\n\n  private parseFile(send: Send, file: File, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onload = async (evt) => {\n        try {\n          const [name, data] = await this.encryptFileData(\n            file.name,\n            evt.target.result as ArrayBuffer,\n            key\n          );\n          send.file.fileName = name;\n          resolve(data);\n        } catch (e) {\n          reject(e);\n        }\n      };\n      reader.onerror = () => {\n        reject(\"Error reading file.\");\n      };\n    });\n  }\n\n  private async encryptFileData(\n    fileName: string,\n    data: ArrayBuffer,\n    key: SymmetricCryptoKey\n  ): Promise<[EncString, EncArrayBuffer]> {\n    const encFileName = await this.cryptoService.encrypt(fileName, key);\n    const encFileData = await this.cryptoService.encryptToBytes(data, key);\n    return [encFileName, encFileData];\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { CryptoService } from \"../../abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"../../abstractions/cryptoFunction.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { OrganizationService } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { Utils } from \"../../misc/utils\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { KeysRequest } from \"../../models/request/keys.request\";\nimport { KeyConnectorService as KeyConnectorServiceAbstraction } from \"../abstractions/key-connector.service\";\nimport { TokenService } from \"../abstractions/token.service\";\nimport { KdfConfig } from \"../models/domain/kdf-config\";\nimport { KeyConnectorUserKeyRequest } from \"../models/request/key-connector-user-key.request\";\nimport { SetKeyConnectorKeyRequest } from \"../models/request/set-key-connector-key.request\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport class KeyConnectorService implements KeyConnectorServiceAbstraction {\n  constructor(\n    private stateService: StateService,\n    private cryptoService: CryptoService,\n    private apiService: ApiService,\n    private tokenService: TokenService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private logoutCallback: (expired: boolean, userId?: string) => void\n  ) {}\n\n  setUsesKeyConnector(usesKeyConnector: boolean) {\n    return this.stateService.setUsesKeyConnector(usesKeyConnector);\n  }\n\n  async getUsesKeyConnector(): Promise<boolean> {\n    return await this.stateService.getUsesKeyConnector();\n  }\n\n  async userNeedsMigration() {\n    const loggedInUsingSso = await this.tokenService.getIsExternal();\n    const requiredByOrganization = (await this.getManagingOrganization()) != null;\n    const userIsNotUsingKeyConnector = !(await this.getUsesKeyConnector());\n\n    return loggedInUsingSso && requiredByOrganization && userIsNotUsingKeyConnector;\n  }\n\n  async migrateUser() {\n    const organization = await this.getManagingOrganization();\n    const key = await this.cryptoService.getKey();\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(key.encKeyB64);\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(\n        organization.keyConnectorUrl,\n        keyConnectorRequest\n      );\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    await this.apiService.postConvertToKeyConnector();\n  }\n\n  async getAndSetKey(url: string) {\n    try {\n      const userKeyResponse = await this.apiService.getUserKeyFromKeyConnector(url);\n      const keyArr = Utils.fromB64ToArray(userKeyResponse.key);\n      const k = new SymmetricCryptoKey(keyArr);\n      await this.cryptoService.setKey(k);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n  }\n\n  async getManagingOrganization() {\n    const orgs = await this.organizationService.getAll();\n    return orgs.find(\n      (o) =>\n        o.keyConnectorEnabled &&\n        o.type !== OrganizationUserType.Admin &&\n        o.type !== OrganizationUserType.Owner &&\n        !o.isProviderUser\n    );\n  }\n\n  async convertNewSsoUserToKeyConnector(tokenResponse: IdentityTokenResponse, orgId: string) {\n    const { kdf, kdfIterations, kdfMemory, kdfParallelism, keyConnectorUrl } = tokenResponse;\n    const password = await this.cryptoFunctionService.randomBytes(64);\n    const kdfConfig = new KdfConfig(kdfIterations, kdfMemory, kdfParallelism);\n\n    const k = await this.cryptoService.makeKey(\n      Utils.fromBufferToB64(password),\n      await this.tokenService.getEmail(),\n      kdf,\n      kdfConfig\n    );\n    const keyConnectorRequest = new KeyConnectorUserKeyRequest(k.encKeyB64);\n    await this.cryptoService.setKey(k);\n\n    const encKey = await this.cryptoService.makeEncKey(k);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n\n    const [pubKey, privKey] = await this.cryptoService.makeKeyPair();\n\n    try {\n      await this.apiService.postUserKeyToKeyConnector(keyConnectorUrl, keyConnectorRequest);\n    } catch (e) {\n      this.handleKeyConnectorError(e);\n    }\n\n    const keys = new KeysRequest(pubKey, privKey.encryptedString);\n    const setPasswordRequest = new SetKeyConnectorKeyRequest(\n      encKey[1].encryptedString,\n      kdf,\n      kdfConfig,\n      orgId,\n      keys\n    );\n    await this.apiService.postSetKeyConnectorKey(setPasswordRequest);\n  }\n\n  async setConvertAccountRequired(status: boolean) {\n    await this.stateService.setConvertAccountToKeyConnector(status);\n  }\n\n  async getConvertAccountRequired(): Promise<boolean> {\n    return await this.stateService.getConvertAccountToKeyConnector();\n  }\n\n  async removeConvertAccountRequired() {\n    await this.stateService.setConvertAccountToKeyConnector(null);\n  }\n\n  async clear() {\n    await this.removeConvertAccountRequired();\n  }\n\n  private handleKeyConnectorError(e: any) {\n    this.logService.error(e);\n    if (this.logoutCallback != null) {\n      this.logoutCallback(false);\n    }\n    throw new Error(\"Key Connector error\");\n  }\n}\n","import { CryptoService } from \"../../../abstractions/crypto.service\";\nimport { I18nService } from \"../../../abstractions/i18n.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { UserVerificationService as UserVerificationServiceAbstraction } from \"../../../abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"../../../types/verification\";\nimport { VerificationType } from \"../../enums/verification-type\";\nimport { SecretVerificationRequest } from \"../../models/request/secret-verification.request\";\nimport { VerifyOTPRequest } from \"../../models/request/verify-otp.request\";\n\n/**\n * Used for general-purpose user verification throughout the app.\n * Use it to verify the input collected by UserVerificationComponent.\n */\nexport class UserVerificationService implements UserVerificationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private i18nService: I18nService,\n    private userVerificationApiService: UserVerificationApiServiceAbstraction\n  ) {}\n\n  /**\n   * Create a new request model to be used for server-side verification\n   * @param verification User-supplied verification data (Master Password or OTP)\n   * @param requestClass The request model to create\n   * @param alreadyHashed Whether the master password is already hashed\n   */\n  async buildRequest<T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) {\n    this.validateInput(verification);\n\n    const request =\n      requestClass != null ? new requestClass() : (new SecretVerificationRequest() as T);\n\n    if (verification.type === VerificationType.OTP) {\n      request.otp = verification.secret;\n    } else {\n      request.masterPasswordHash = alreadyHashed\n        ? verification.secret\n        : await this.cryptoService.hashPassword(verification.secret, null);\n    }\n\n    return request;\n  }\n\n  /**\n   * Used to verify the Master Password client-side, or send the OTP to the server for verification (with no other data)\n   * Generally used for client-side verification only.\n   * @param verification User-supplied verification data (Master Password or OTP)\n   */\n  async verifyUser(verification: Verification): Promise<boolean> {\n    this.validateInput(verification);\n\n    if (verification.type === VerificationType.OTP) {\n      const request = new VerifyOTPRequest(verification.secret);\n      try {\n        await this.userVerificationApiService.postAccountVerifyOTP(request);\n      } catch (e) {\n        throw new Error(this.i18nService.t(\"invalidVerificationCode\"));\n      }\n    } else {\n      const passwordValid = await this.cryptoService.compareAndUpdateKeyHash(\n        verification.secret,\n        null\n      );\n      if (!passwordValid) {\n        throw new Error(this.i18nService.t(\"invalidMasterPassword\"));\n      }\n    }\n    return true;\n  }\n\n  async requestOTP() {\n    await this.userVerificationApiService.postAccountRequestOTP();\n  }\n\n  private validateInput(verification: Verification) {\n    if (verification?.secret == null || verification.secret === \"\") {\n      if (verification.type === VerificationType.OTP) {\n        throw new Error(this.i18nService.t(\"verificationCodeRequired\"));\n      } else {\n        throw new Error(this.i18nService.t(\"masterPasswordRequired\"));\n      }\n    }\n  }\n}\n","import { BehaviorSubject, concatMap, map, Observable } from \"rxjs\";\n\nimport { InternalOrganizationService as InternalOrganizationServiceAbstraction } from \"../../abstractions/organization/organization.service.abstraction\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\n\nexport class OrganizationService implements InternalOrganizationServiceAbstraction {\n  protected _organizations = new BehaviorSubject<Organization[]>([]);\n\n  organizations$ = this._organizations.asObservable();\n\n  constructor(private stateService: StateService) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        concatMap(async (unlocked) => {\n          if (!unlocked) {\n            this._organizations.next([]);\n            return;\n          }\n\n          const data = await this.stateService.getOrganizations();\n          this.updateObservables(data);\n        })\n      )\n      .subscribe();\n  }\n\n  get$(id: string): Observable<Organization | undefined> {\n    return this.organizations$.pipe(map((orgs) => orgs.find((o) => o.id === id)));\n  }\n\n  async getAll(userId?: string): Promise<Organization[]> {\n    const organizationsMap = await this.stateService.getOrganizations({ userId: userId });\n    return Object.values(organizationsMap || {}).map((o) => new Organization(o));\n  }\n\n  async canManageSponsorships(): Promise<boolean> {\n    const organizations = this._organizations.getValue();\n    return organizations.some(\n      (o) => o.familySponsorshipAvailable || o.familySponsorshipFriendlyName !== null\n    );\n  }\n\n  hasOrganizations(): boolean {\n    const organizations = this._organizations.getValue();\n    return organizations.length > 0;\n  }\n\n  async upsert(organization: OrganizationData): Promise<void> {\n    let organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      organizations = {};\n    }\n\n    organizations[organization.id] = organization;\n\n    await this.replace(organizations);\n  }\n\n  async delete(id: string): Promise<void> {\n    const organizations = await this.stateService.getOrganizations();\n    if (organizations == null) {\n      return;\n    }\n\n    if (organizations[id] == null) {\n      return;\n    }\n\n    delete organizations[id];\n    await this.replace(organizations);\n  }\n\n  get(id: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.id === id);\n  }\n\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the organization\n   */\n  async getFromState(id: string): Promise<Organization> {\n    const organizationsMap = await this.stateService.getOrganizations();\n    const organization = organizationsMap[id];\n    if (organization == null) {\n      return null;\n    }\n\n    return new Organization(organization);\n  }\n\n  getByIdentifier(identifier: string): Organization {\n    const organizations = this._organizations.getValue();\n\n    return organizations.find((organization) => organization.identifier === identifier);\n  }\n\n  async replace(organizations: { [id: string]: OrganizationData }) {\n    await this.stateService.setOrganizations(organizations);\n    this.updateObservables(organizations);\n  }\n\n  private updateObservables(organizationsMap: { [id: string]: OrganizationData }) {\n    const organizations = Object.values(organizationsMap || {}).map((o) => new Organization(o));\n    this._organizations.next(organizations);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationUserService } from \"../../abstractions/organization-user/organization-user.service\";\nimport {\n  OrganizationUserAcceptRequest,\n  OrganizationUserBulkConfirmRequest,\n  OrganizationUserConfirmRequest,\n  OrganizationUserInviteRequest,\n  OrganizationUserResetPasswordEnrollmentRequest,\n  OrganizationUserResetPasswordRequest,\n  OrganizationUserUpdateGroupsRequest,\n  OrganizationUserUpdateRequest,\n} from \"../../abstractions/organization-user/requests\";\nimport {\n  OrganizationUserBulkPublicKeyResponse,\n  OrganizationUserBulkResponse,\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"../../abstractions/organization-user/responses\";\nimport { ListResponse } from \"../../models/response/list.response\";\n\nimport { OrganizationUserBulkRequest } from \"./requests\";\n\nexport class OrganizationUserServiceImplementation implements OrganizationUserService {\n  constructor(private apiService: ApiService) {}\n\n  async getOrganizationUser(\n    organizationId: string,\n    id: string,\n    options?: {\n      includeGroups?: boolean;\n    }\n  ): Promise<OrganizationUserDetailsResponse> {\n    const params = new URLSearchParams();\n\n    if (options?.includeGroups) {\n      params.set(\"includeGroups\", \"true\");\n    }\n\n    const r = await this.apiService.send(\n      \"GET\",\n      `/organizations/${organizationId}/users/${id}?${params.toString()}`,\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserDetailsResponse(r);\n  }\n\n  async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      null,\n      true,\n      true\n    );\n    return r;\n  }\n\n  async getAllUsers(\n    organizationId: string,\n    options?: {\n      includeCollections?: boolean;\n      includeGroups?: boolean;\n    }\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n    const params = new URLSearchParams();\n\n    if (options?.includeCollections) {\n      params.set(\"includeCollections\", \"true\");\n    }\n    if (options?.includeGroups) {\n      params.set(\"includeGroups\", \"true\");\n    }\n\n    const r = await this.apiService.send(\n      \"GET\",\n      `/organizations/${organizationId}/users?${params.toString()}`,\n      null,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserUserDetailsResponse);\n  }\n\n  async getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password-details\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationUserResetPasswordDetailsReponse(r);\n  }\n\n  postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/invite\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reinvite\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async postManyOrganizationUserReinvite(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/reinvite\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/accept\",\n      request,\n      true,\n      false\n    );\n  }\n\n  postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/confirm\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async postOrganizationUsersPublicKey(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/public-keys\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkPublicKeyResponse);\n  }\n\n  async postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/users/confirm\",\n      request,\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateGroupsRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/groups\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + userId + \"/reset-password-enrollment\",\n      request,\n      true,\n      false\n    );\n  }\n\n  putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/reset-password\",\n      request,\n      true,\n      false\n    );\n  }\n\n  deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n    return this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users/\" + id,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + organizationId + \"/users\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  revokeOrganizationUser(organizationId: string, id: string): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/revoke\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async revokeManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/revoke\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n\n  restoreOrganizationUser(organizationId: string, id: string): Promise<void> {\n    return this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/\" + id + \"/restore\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async restoreManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/users/restore\",\n      new OrganizationUserBulkRequest(ids),\n      true,\n      true\n    );\n    return new ListResponse(r, OrganizationUserBulkResponse);\n  }\n}\n","import { ProviderService as ProviderServiceAbstraction } from \"../abstractions/provider.service\";\nimport { StateService } from \"../abstractions/state.service\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport class ProviderService implements ProviderServiceAbstraction {\n  constructor(private stateService: StateService) {}\n\n  async get(id: string): Promise<Provider> {\n    const providers = await this.stateService.getProviders();\n    // eslint-disable-next-line\n    if (providers == null || !providers.hasOwnProperty(id)) {\n      return null;\n    }\n\n    return new Provider(providers[id]);\n  }\n\n  async getAll(): Promise<Provider[]> {\n    const providers = await this.stateService.getProviders();\n    const response: Provider[] = [];\n    for (const id in providers) {\n      // eslint-disable-next-line\n      if (providers.hasOwnProperty(id)) {\n        response.push(new Provider(providers[id]));\n      }\n    }\n    return response;\n  }\n\n  async save(providers: { [id: string]: ProviderData }) {\n    await this.stateService.setProviders(providers);\n  }\n}\n","import { UntypedFormGroup, ValidationErrors } from \"@angular/forms\";\n\nimport {\n  FormGroupControls,\n  FormValidationErrorsService as FormValidationErrorsAbstraction,\n  AllValidationErrors,\n} from \"../abstractions/formValidationErrors.service\";\n\nexport class FormValidationErrorsService implements FormValidationErrorsAbstraction {\n  getFormValidationErrors(controls: FormGroupControls): AllValidationErrors[] {\n    let errors: AllValidationErrors[] = [];\n    Object.keys(controls).forEach((key) => {\n      const control = controls[key];\n      if (control instanceof UntypedFormGroup) {\n        errors = errors.concat(this.getFormValidationErrors(control.controls));\n      }\n\n      const controlErrors: ValidationErrors = controls[key].errors;\n      if (controlErrors !== null) {\n        Object.keys(controlErrors).forEach((keyError) => {\n          errors.push({\n            controlName: key,\n            errorName: keyError,\n          });\n        });\n      }\n    });\n\n    return errors;\n  }\n}\n","import { ApiService } from \"../../../abstractions/api.service\";\nimport { UserVerificationApiServiceAbstraction } from \"../../../abstractions/userVerification/userVerification-api.service.abstraction\";\nimport { VerifyOTPRequest } from \"../../models/request/verify-otp.request\";\n\nexport class UserVerificationApiService implements UserVerificationApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  postAccountVerifyOTP(request: VerifyOTPRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/verify-otp\", request, true, false);\n  }\n  async postAccountRequestOTP(): Promise<void> {\n    return this.apiService.send(\"POST\", \"/accounts/request-otp\", null, true, false);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrganizationApiServiceAbstraction } from \"../../abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationApiKeyType } from \"../../auth/enums/organization-api-key-type\";\nimport { OrganizationSsoRequest } from \"../../auth/models/request/organization-sso.request\";\nimport { SecretVerificationRequest } from \"../../auth/models/request/secret-verification.request\";\nimport { ApiKeyResponse } from \"../../auth/models/response/api-key.response\";\nimport { OrganizationSsoResponse } from \"../../auth/models/response/organization-sso.response\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationEnrollSecretsManagerRequest } from \"../../models/request/organization/organization-enroll-secrets-manager.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\nimport { SyncService } from \"../../vault/abstractions/sync/sync.service.abstraction\";\n\nexport class OrganizationApiService implements OrganizationApiServiceAbstraction {\n  constructor(private apiService: ApiService, private syncService: SyncService) {}\n\n  async get(id: string): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id, null, true, true);\n    return new OrganizationResponse(r);\n  }\n\n  async getBilling(id: string): Promise<BillingResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/billing\",\n      null,\n      true,\n      true\n    );\n    return new BillingResponse(r);\n  }\n\n  async getSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/subscription\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationSubscriptionResponse(r);\n  }\n\n  async getLicense(id: string, installationId: string): Promise<unknown> {\n    return this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + id + \"/license?installationId=\" + installationId,\n      null,\n      true,\n      true\n    );\n  }\n\n  async getAutoEnrollStatus(identifier: string): Promise<OrganizationAutoEnrollStatusResponse> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + identifier + \"/auto-enroll-status\",\n      null,\n      true,\n      true\n    );\n    return new OrganizationAutoEnrollStatusResponse(r);\n  }\n\n  async create(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"POST\", \"/organizations\", request, true, true);\n    // Forcing a sync will notify organization service that they need to repull\n    await this.syncService.fullSync(true);\n    return new OrganizationResponse(r);\n  }\n\n  async createLicense(data: FormData): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/licenses/self-hosted\",\n      data,\n      true,\n      true\n    );\n    return new OrganizationResponse(r);\n  }\n\n  async save(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n    const r = await this.apiService.send(\"PUT\", \"/organizations/\" + id, request, true, true);\n    const data = new OrganizationResponse(r);\n    await this.syncService.fullSync(true);\n    return data;\n  }\n\n  async updatePayment(id: string, request: PaymentRequest): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/payment\", request, true, false);\n  }\n\n  async upgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/upgrade\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateSubscription(\n    id: string,\n    request: OrganizationSubscriptionUpdateRequest\n  ): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/subscription\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async updateSeats(id: string, request: SeatRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/seat\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async updateStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/storage\",\n      request,\n      true,\n      true\n    );\n    return new PaymentResponse(r);\n  }\n\n  async verifyBank(id: string, request: VerifyBankRequest): Promise<void> {\n    await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/verify-bank\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async cancel(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/cancel\", null, true, false);\n  }\n\n  async reinstate(id: string): Promise<void> {\n    return this.apiService.send(\"POST\", \"/organizations/\" + id + \"/reinstate\", null, true, false);\n  }\n\n  async leave(id: string): Promise<void> {\n    await this.apiService.send(\"POST\", \"/organizations/\" + id + \"/leave\", null, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async delete(id: string, request: SecretVerificationRequest): Promise<void> {\n    await this.apiService.send(\"DELETE\", \"/organizations/\" + id, request, true, false);\n    await this.syncService.fullSync(true);\n  }\n\n  async updateLicense(id: string, data: FormData): Promise<void> {\n    await this.apiService.send(\n      \"POST\",\n      \"/organizations/licenses/self-hosted/\" + id,\n      data,\n      true,\n      false\n    );\n  }\n\n  async importDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<void> {\n    return this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/import\",\n      request,\n      true,\n      false\n    );\n  }\n\n  async getOrCreateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getApiKeyInformation(\n    id: string,\n    organizationApiKeyType: OrganizationApiKeyType = null\n  ): Promise<ListResponse<OrganizationApiKeyInformationResponse>> {\n    const uri =\n      organizationApiKeyType === null\n        ? \"/organizations/\" + id + \"/api-key-information\"\n        : \"/organizations/\" + id + \"/api-key-information/\" + organizationApiKeyType;\n    const r = await this.apiService.send(\"GET\", uri, null, true, true);\n    return new ListResponse(r, OrganizationApiKeyInformationResponse);\n  }\n\n  async rotateApiKey(id: string, request: OrganizationApiKeyRequest): Promise<ApiKeyResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/rotate-api-key\",\n      request,\n      true,\n      true\n    );\n    return new ApiKeyResponse(r);\n  }\n\n  async getTaxInfo(id: string): Promise<TaxInfoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/tax\", null, true, true);\n    return new TaxInfoResponse(r);\n  }\n\n  async updateTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<void> {\n    // Can't broadcast anything because the response doesn't have content\n    return this.apiService.send(\"PUT\", \"/organizations/\" + id + \"/tax\", request, true, false);\n  }\n\n  async getKeys(id: string): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/keys\", null, true, true);\n    return new OrganizationKeysResponse(r);\n  }\n\n  async updateKeys(\n    id: string,\n    request: OrganizationKeysRequest\n  ): Promise<OrganizationKeysResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/keys\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationKeysResponse(r);\n  }\n\n  async getSso(id: string): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\"GET\", \"/organizations/\" + id + \"/sso\", null, true, true);\n    return new OrganizationSsoResponse(r);\n  }\n\n  async updateSso(id: string, request: OrganizationSsoRequest): Promise<OrganizationSsoResponse> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/sso\",\n      request,\n      true,\n      true\n    );\n    // Not broadcasting anything because data on this response doesn't correspond to `Organization`\n    return new OrganizationSsoResponse(r);\n  }\n\n  async selfHostedSyncLicense(id: string) {\n    await this.apiService.send(\n      \"POST\",\n      \"/organizations/licenses/self-hosted/\" + id + \"/sync/\",\n      null,\n      true,\n      false\n    );\n  }\n\n  async updateEnrollSecretsManager(id: string, request: OrganizationEnrollSecretsManagerRequest) {\n    await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + id + \"/enroll-secrets-manager\",\n      request,\n      true,\n      true\n    );\n  }\n}\n","import { Subject } from \"rxjs\";\n\nimport { SyncNotifierService as SyncNotifierServiceAbstraction } from \"../../abstractions/sync/sync-notifier.service.abstraction\";\nimport { SyncEventArgs } from \"../../types/sync-event-args\";\n\n/**\n * This class should most likely have 0 dependencies because it will hopefully\n * be rolled into SyncService once upon a time.\n */\nexport class SyncNotifierService implements SyncNotifierServiceAbstraction {\n  private _sync = new Subject<SyncEventArgs>();\n\n  sync$ = this._sync.asObservable();\n\n  next(event: SyncEventArgs): void {\n    this._sync.next(event);\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ServerConfig } from \"./server-config\";\n\nexport abstract class ConfigServiceAbstraction {\n  serverConfig$: Observable<ServerConfig | null>;\n}\n","import { BehaviorSubject, concatMap, map, switchMap, timer, EMPTY } from \"rxjs\";\n\nimport { ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ConfigServiceAbstraction } from \"../../abstractions/config/config.service.abstraction\";\nimport { ServerConfig } from \"../../abstractions/config/server-config\";\nimport { StateService } from \"../../abstractions/state.service\";\nimport { ServerConfigData } from \"../../models/data/server-config.data\";\n\nexport class ConfigService implements ConfigServiceAbstraction {\n  protected _serverConfig = new BehaviorSubject<ServerConfig | null>(null);\n  serverConfig$ = this._serverConfig.asObservable();\n\n  constructor(\n    private stateService: StateService,\n    private configApiService: ConfigApiServiceAbstraction\n  ) {\n    this.stateService.activeAccountUnlocked$\n      .pipe(\n        switchMap((unlocked) => {\n          if (!unlocked) {\n            this._serverConfig.next(null);\n            return EMPTY;\n          }\n\n          // Re-fetch the server config every hour\n          return timer(0, 3600 * 1000).pipe(map(() => unlocked));\n        }),\n        concatMap(async (unlocked) => {\n          return unlocked ? await this.buildServerConfig() : null;\n        })\n      )\n      .subscribe((serverConfig) => {\n        this._serverConfig.next(serverConfig);\n      });\n  }\n\n  private async buildServerConfig(): Promise<ServerConfig> {\n    const data = await this.stateService.getServerConfig();\n    const domain = data ? new ServerConfig(data) : null;\n\n    if (domain == null || !domain.isValid() || domain.expiresSoon()) {\n      const value = await this.fetchServerConfig();\n      return value ?? domain;\n    }\n\n    return domain;\n  }\n\n  private async fetchServerConfig(): Promise<ServerConfig> {\n    try {\n      const response = await this.configApiService.get();\n\n      if (response != null) {\n        const data = new ServerConfigData(response);\n        await this.stateService.setServerConfig(data);\n        return new ServerConfig(data);\n      }\n    } catch {\n      return null;\n    }\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { ConfigApiServiceAbstraction as ConfigApiServiceAbstraction } from \"../../abstractions/config/config-api.service.abstraction\";\nimport { ServerConfigResponse } from \"../../models/response/server-config.response\";\n\nexport class ConfigApiService implements ConfigApiServiceAbstraction {\n  constructor(private apiService: ApiService) {}\n\n  async get(): Promise<ServerConfigResponse> {\n    const r = await this.apiService.send(\"GET\", \"/config\", null, true, true);\n    return new ServerConfigResponse(r);\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\nimport { ValidationService as ValidationServiceAbstraction } from \"../abstractions/validation.service\";\nimport { ErrorResponse } from \"../models/response/error.response\";\n\nexport class ValidationService implements ValidationServiceAbstraction {\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  showError(data: any): string[] {\n    const defaultErrorMessage = this.i18nService.t(\"unexpectedError\");\n    let errors: string[] = [];\n\n    if (data != null && typeof data === \"string\") {\n      errors.push(data);\n    } else if (data == null || typeof data !== \"object\") {\n      errors.push(defaultErrorMessage);\n    } else if (data.validationErrors != null) {\n      errors = errors.concat((data as ErrorResponse).getAllMessages());\n    } else {\n      errors.push(data.message ? data.message : defaultErrorMessage);\n    }\n\n    if (errors.length === 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors[0]);\n    } else if (errors.length > 1) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errors, {\n        timeout: 5000 * errors.length,\n      });\n    }\n\n    return errors;\n  }\n}\n","import { BehaviorSubject } from \"rxjs\";\n\nimport { I18nService } from \"../../abstractions/i18n.service\";\nimport { OrgDomainInternalServiceAbstraction } from \"../../abstractions/organization-domain/org-domain.service.abstraction\";\nimport { OrganizationDomainResponse } from \"../../abstractions/organization-domain/responses/organization-domain.response\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\n\nexport class OrgDomainService implements OrgDomainInternalServiceAbstraction {\n  protected _orgDomains$: BehaviorSubject<OrganizationDomainResponse[]> = new BehaviorSubject([]);\n\n  orgDomains$ = this._orgDomains$.asObservable();\n\n  constructor(\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {}\n\n  get(orgDomainId: string): OrganizationDomainResponse {\n    const orgDomains: OrganizationDomainResponse[] = this._orgDomains$.getValue();\n\n    return orgDomains.find((orgDomain) => orgDomain.id === orgDomainId);\n  }\n\n  copyDnsTxt(dnsTxt: string): void {\n    this.platformUtilsService.copyToClipboard(dnsTxt);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"dnsTxtRecord\"))\n    );\n  }\n\n  upsert(orgDomains: OrganizationDomainResponse[]): void {\n    const existingOrgDomains: OrganizationDomainResponse[] = this._orgDomains$.getValue();\n\n    orgDomains.forEach((orgDomain: OrganizationDomainResponse) => {\n      // Determine if passed in orgDomain exists in existing array:\n      const index = existingOrgDomains.findIndex(\n        (existingOrgDomain) => existingOrgDomain.id === orgDomain.id\n      );\n      if (index !== -1) {\n        existingOrgDomains[index] = orgDomain;\n      } else {\n        existingOrgDomains.push(orgDomain);\n      }\n    });\n\n    this._orgDomains$.next(existingOrgDomains);\n  }\n\n  replace(orgDomains: OrganizationDomainResponse[]): void {\n    this._orgDomains$.next(orgDomains);\n  }\n\n  clearCache(): void {\n    this._orgDomains$.next([]);\n  }\n\n  delete(orgDomainIds: string[]): void {\n    const existingOrgDomains: OrganizationDomainResponse[] = this._orgDomains$.getValue();\n\n    orgDomainIds.forEach((orgDomainId: string) => {\n      const index = existingOrgDomains.findIndex(\n        (existingOrgDomain) => existingOrgDomain.id === orgDomainId\n      );\n      if (index !== -1) {\n        existingOrgDomains.splice(index, 1);\n      }\n    });\n\n    this._orgDomains$.next(existingOrgDomains);\n  }\n}\n","import { ApiService } from \"../../abstractions/api.service\";\nimport { OrgDomainApiServiceAbstraction } from \"../../abstractions/organization-domain/org-domain-api.service.abstraction\";\nimport { OrgDomainInternalServiceAbstraction } from \"../../abstractions/organization-domain/org-domain.service.abstraction\";\nimport { OrganizationDomainSsoDetailsResponse } from \"../../abstractions/organization-domain/responses/organization-domain-sso-details.response\";\nimport { OrganizationDomainResponse } from \"../../abstractions/organization-domain/responses/organization-domain.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\n\nimport { OrganizationDomainSsoDetailsRequest } from \"./requests/organization-domain-sso-details.request\";\nimport { OrganizationDomainRequest } from \"./requests/organization-domain.request\";\n\nexport class OrgDomainApiService implements OrgDomainApiServiceAbstraction {\n  constructor(\n    private orgDomainService: OrgDomainInternalServiceAbstraction,\n    private apiService: ApiService\n  ) {}\n\n  async getAllByOrgId(orgId: string): Promise<Array<OrganizationDomainResponse>> {\n    const listResponse: ListResponse<any> = await this.apiService.send(\n      \"GET\",\n      `/organizations/${orgId}/domain`,\n      null,\n      true,\n      true\n    );\n\n    const orgDomains = listResponse.data.map(\n      (resultOrgDomain: any) => new OrganizationDomainResponse(resultOrgDomain)\n    );\n\n    this.orgDomainService.replace(orgDomains);\n\n    return orgDomains;\n  }\n\n  async getByOrgIdAndOrgDomainId(\n    orgId: string,\n    orgDomainId: string\n  ): Promise<OrganizationDomainResponse> {\n    const result = await this.apiService.send(\n      \"GET\",\n      `/organizations/${orgId}/domain/${orgDomainId}`,\n      null,\n      true,\n      true\n    );\n\n    const response = new OrganizationDomainResponse(result);\n\n    this.orgDomainService.upsert([response]);\n\n    return response;\n  }\n\n  async post(\n    orgId: string,\n    orgDomainReq: OrganizationDomainRequest\n  ): Promise<OrganizationDomainResponse> {\n    const result = await this.apiService.send(\n      \"POST\",\n      `/organizations/${orgId}/domain`,\n      orgDomainReq,\n      true,\n      true\n    );\n\n    const response = new OrganizationDomainResponse(result);\n\n    this.orgDomainService.upsert([response]);\n\n    return response;\n  }\n\n  async verify(orgId: string, orgDomainId: string): Promise<OrganizationDomainResponse> {\n    const result = await this.apiService.send(\n      \"POST\",\n      `/organizations/${orgId}/domain/${orgDomainId}/verify`,\n      null,\n      true,\n      true\n    );\n\n    const response = new OrganizationDomainResponse(result);\n\n    this.orgDomainService.upsert([response]);\n\n    return response;\n  }\n\n  async delete(orgId: string, orgDomainId: string): Promise<any> {\n    await this.apiService.send(\n      \"DELETE\",\n      `/organizations/${orgId}/domain/${orgDomainId}`,\n      null,\n      true,\n      false\n    );\n    this.orgDomainService.delete([orgDomainId]);\n  }\n\n  async getClaimedOrgDomainByEmail(email: string): Promise<OrganizationDomainSsoDetailsResponse> {\n    const result = await this.apiService.send(\n      \"POST\",\n      `/organizations/domain/sso/details`,\n      new OrganizationDomainSsoDetailsRequest(email),\n      false, // anonymous\n      true\n    );\n    const response = new OrganizationDomainSsoDetailsResponse(result);\n\n    return response;\n  }\n}\n","import { AbstractMemoryStorageService } from \"../abstractions/storage.service\";\n\nexport class MemoryStorageService extends AbstractMemoryStorageService {\n  private store = new Map<string, any>();\n\n  get<T>(key: string): Promise<T> {\n    if (this.store.has(key)) {\n      const obj = this.store.get(key);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string): Promise<boolean> {\n    return (await this.get(key)) != null;\n  }\n\n  save(key: string, obj: any): Promise<any> {\n    if (obj == null) {\n      return this.remove(key);\n    }\n    this.store.set(key, obj);\n    return Promise.resolve();\n  }\n\n  remove(key: string): Promise<any> {\n    this.store.delete(key);\n    return Promise.resolve();\n  }\n\n  getBypassCache<T>(key: string): Promise<T> {\n    return this.get<T>(key);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PasswordRepromptComponent as BasePasswordRepromptComponent } from \"@bitwarden/angular/vault/components/password-reprompt.component\";\n\n@Component({\n  templateUrl: \"password-reprompt.component.html\",\n})\nexport class PasswordRepromptComponent extends BasePasswordRepromptComponent {}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"passwordConfirmation\" | i18n }}\n        </h1>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        {{ \"passwordConfirmationDesc\" | i18n }}\n\n        <div class=\"form-group\">\n          <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n          <div class=\"d-flex\">\n            <input\n              id=\"masterPassword\"\n              type=\"{{ showPassword ? 'text' : 'password' }}\"\n              name=\"MasterPassword\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appAutofocus\n              appInputVerbatim\n            />\n            <button\n              type=\"button\"\n              class=\"ml-1 btn btn-link\"\n              appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n              (click)=\"togglePassword()\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n              ></i>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\">\n          <span>{{ \"ok\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\n\nimport { PasswordRepromptService as BasePasswordRepromptService } from \"@bitwarden/angular/vault/services/password-reprompt.service\";\n\nimport { PasswordRepromptComponent } from \"../components/password-reprompt.component\";\n\n@Injectable()\nexport class PasswordRepromptService extends BasePasswordRepromptService {\n  component = PasswordRepromptComponent;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Injectable()\nexport class BroadcasterMessagingService implements MessagingService {\n  constructor(private broadcasterService: BroadcasterService) {}\n\n  send(subscriber: string, arg: any = {}) {\n    const message = Object.assign({}, { command: subscriber }, arg);\n    this.broadcasterService.send(message);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\n\n@Injectable()\nexport class EventService {\n  private policies: Policy[];\n\n  constructor(private i18nService: I18nService, policyService: PolicyService) {\n    policyService.policies$.subscribe((policies) => {\n      this.policies = policies;\n    });\n  }\n\n  getDefaultDateFilters() {\n    const d = new Date();\n    const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n    d.setDate(d.getDate() - 30);\n    const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n    return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n  }\n\n  formatDateFilters(filterStart: string, filterEnd: string) {\n    const start: Date = new Date(filterStart);\n    const end: Date = new Date(filterEnd + \":59.999\");\n    if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n      throw new Error(\"Invalid date range.\");\n    }\n    return [start.toISOString(), end.toISOString()];\n  }\n\n  async getEventInfo(ev: EventResponse, options = new EventOptions()): Promise<EventInfo> {\n    const appInfo = this.getAppInfo(ev);\n    const { message, humanReadableMessage } = await this.getEventMessage(ev, options);\n    return {\n      message: message,\n      humanReadableMessage: humanReadableMessage,\n      appIcon: appInfo[0],\n      appName: appInfo[1],\n    };\n  }\n\n  private async getEventMessage(ev: EventResponse, options: EventOptions) {\n    let msg = \"\";\n    let humanReadableMsg = \"\";\n    switch (ev.type) {\n      // User\n      case EventType.User_LoggedIn:\n        msg = humanReadableMsg = this.i18nService.t(\"loggedIn\");\n        break;\n      case EventType.User_ChangedPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"changedPassword\");\n        break;\n      case EventType.User_Updated2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledUpdated2fa\");\n        break;\n      case EventType.User_Disabled2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"disabled2fa\");\n        break;\n      case EventType.User_Recovered2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"recovered2fa\");\n        break;\n      case EventType.User_FailedLogIn:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin\");\n        break;\n      case EventType.User_FailedLogIn2fa:\n        msg = humanReadableMsg = this.i18nService.t(\"failedLogin2fa\");\n        break;\n      case EventType.User_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedVault\");\n        break;\n      case EventType.User_UpdatedTempPassword:\n        msg = humanReadableMsg = this.i18nService.t(\"updatedMasterPassword\");\n        break;\n      case EventType.User_MigratedKeyToKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"migratedKeyConnector\");\n        break;\n      // Cipher\n      case EventType.Cipher_Created:\n        msg = this.i18nService.t(\"createdItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"createdItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Updated:\n        msg = this.i18nService.t(\"editedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"editedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Deleted:\n        msg = this.i18nService.t(\"permanentlyDeletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"permanentlyDeletedItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_SoftDeleted:\n        msg = this.i18nService.t(\"deletedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"deletedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_Restored:\n        msg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"restoredItemId\", this.formatCipherId(ev, options));\n        break;\n      case EventType.Cipher_AttachmentCreated:\n        msg = this.i18nService.t(\"createdAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"createdAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_AttachmentDeleted:\n        msg = this.i18nService.t(\"deletedAttachmentForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedAttachmentForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_Shared:\n        msg = this.i18nService.t(\"movedItemIdToOrg\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"movedItemIdToOrg\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientViewed:\n        msg = this.i18nService.t(\"viewedItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledPasswordVisible:\n        msg = this.i18nService.t(\"viewedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"viewedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientToggledHiddenFieldVisible:\n        msg = this.i18nService.t(\"viewedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardNumberVisible:\n        msg = this.i18nService.t(\"viewedCardNumberItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedCardNumberItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientToggledCardCodeVisible:\n        msg = this.i18nService.t(\"viewedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"viewedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedHiddenField:\n        msg = this.i18nService.t(\"copiedHiddenFieldItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedHiddenFieldItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientCopiedPassword:\n        msg = this.i18nService.t(\"copiedPasswordItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"copiedPasswordItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_ClientCopiedCardCode:\n        msg = this.i18nService.t(\"copiedSecurityCodeItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"copiedSecurityCodeItemId\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      case EventType.Cipher_ClientAutofilled:\n        msg = this.i18nService.t(\"autofilledItemId\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\"autofilledItemId\", this.getShortId(ev.cipherId));\n        break;\n      case EventType.Cipher_UpdatedCollections:\n        msg = this.i18nService.t(\"editedCollectionsForItem\", this.formatCipherId(ev, options));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionsForItem\",\n          this.getShortId(ev.cipherId)\n        );\n        break;\n      // Collection\n      case EventType.Collection_Created:\n        msg = this.i18nService.t(\"createdCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Updated:\n        msg = this.i18nService.t(\"editedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      case EventType.Collection_Deleted:\n        msg = this.i18nService.t(\"deletedCollectionId\", this.formatCollectionId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"deletedCollectionId\",\n          this.getShortId(ev.collectionId)\n        );\n        break;\n      // Group\n      case EventType.Group_Created:\n        msg = this.i18nService.t(\"createdGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"createdGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Updated:\n        msg = this.i18nService.t(\"editedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedGroupId\", this.getShortId(ev.groupId));\n        break;\n      case EventType.Group_Deleted:\n        msg = this.i18nService.t(\"deletedGroupId\", this.formatGroupId(ev));\n        humanReadableMsg = this.i18nService.t(\"deletedGroupId\", this.getShortId(ev.groupId));\n        break;\n      // Org user\n      case EventType.OrganizationUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"invitedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UpdatedGroups:\n        msg = this.i18nService.t(\"editedGroupsForUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"editedGroupsForUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_UnlinkedSso:\n        msg = this.i18nService.t(\"unlinkedSsoUser\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"unlinkedSsoUser\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Enroll:\n        msg = this.i18nService.t(\"eventEnrollPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventEnrollPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetPassword_Withdraw:\n        msg = this.i18nService.t(\"eventWithdrawPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventWithdrawPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_AdminResetPassword:\n        msg = this.i18nService.t(\"eventAdminPasswordReset\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventAdminPasswordReset\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_ResetSsoLink:\n        msg = this.i18nService.t(\"eventResetSsoLink\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"eventResetSsoLink\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_FirstSsoLogin:\n        msg = this.i18nService.t(\"firstSsoLogin\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"firstSsoLogin\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Revoked:\n        msg = this.i18nService.t(\"revokedUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"revokedUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      case EventType.OrganizationUser_Restored:\n        msg = this.i18nService.t(\"restoredUserId\", this.formatOrgUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"restoredUserId\",\n          this.getShortId(ev.organizationUserId)\n        );\n        break;\n      // Org\n      case EventType.Organization_Updated:\n        msg = humanReadableMsg = this.i18nService.t(\"editedOrgSettings\");\n        break;\n      case EventType.Organization_PurgedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"purgedOrganizationVault\");\n        break;\n      case EventType.Organization_ClientExportedVault:\n        msg = humanReadableMsg = this.i18nService.t(\"exportedOrganizationVault\");\n        break;\n      case EventType.Organization_VaultAccessed:\n        msg = humanReadableMsg = this.i18nService.t(\"vaultAccessedByProvider\");\n        break;\n      case EventType.Organization_EnabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledSso\");\n        break;\n      case EventType.Organization_DisabledSso:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledSso\");\n        break;\n      case EventType.Organization_EnabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"enabledKeyConnector\");\n        break;\n      case EventType.Organization_DisabledKeyConnector:\n        msg = humanReadableMsg = this.i18nService.t(\"disabledKeyConnector\");\n        break;\n      case EventType.Organization_SponsorshipsSynced:\n        msg = humanReadableMsg = this.i18nService.t(\"sponsorshipsSynced\");\n        break;\n      // Policies\n      case EventType.Policy_Updated: {\n        msg = this.i18nService.t(\"modifiedPolicyId\", this.formatPolicyId(ev));\n\n        const policy = this.policies.filter((p) => p.id === ev.policyId)[0];\n        let p1 = this.getShortId(ev.policyId);\n        if (policy != null) {\n          p1 = PolicyType[policy.type];\n        }\n\n        humanReadableMsg = this.i18nService.t(\"modifiedPolicyId\", p1);\n        break;\n      }\n      // Provider users:\n      case EventType.ProviderUser_Invited:\n        msg = this.i18nService.t(\"invitedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"invitedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Confirmed:\n        msg = this.i18nService.t(\"confirmedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"confirmedUserId\",\n          this.getShortId(ev.providerUserId)\n        );\n        break;\n      case EventType.ProviderUser_Updated:\n        msg = this.i18nService.t(\"editedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"editedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderUser_Removed:\n        msg = this.i18nService.t(\"removedUserId\", this.formatProviderUserId(ev));\n        humanReadableMsg = this.i18nService.t(\"removedUserId\", this.getShortId(ev.providerUserId));\n        break;\n      case EventType.ProviderOrganization_Created:\n        msg = this.i18nService.t(\"createdOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"createdOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Added:\n        msg = this.i18nService.t(\"addedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"addedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_Removed:\n        msg = this.i18nService.t(\"removedOrganizationId\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"removedOrganizationId\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      case EventType.ProviderOrganization_VaultAccessed:\n        msg = this.i18nService.t(\"accessedClientVault\", this.formatProviderOrganizationId(ev));\n        humanReadableMsg = this.i18nService.t(\n          \"accessedClientVault\",\n          this.getShortId(ev.providerOrganizationId)\n        );\n        break;\n      // Org Domain claiming events\n      case EventType.OrganizationDomain_Added:\n        msg = humanReadableMsg = this.i18nService.t(\"addedDomain\", ev.domainName);\n        break;\n      case EventType.OrganizationDomain_Removed:\n        msg = humanReadableMsg = this.i18nService.t(\"removedDomain\", ev.domainName);\n        break;\n      case EventType.OrganizationDomain_Verified:\n        msg = humanReadableMsg = this.i18nService.t(\"domainVerifiedEvent\", ev.domainName);\n        break;\n      case EventType.OrganizationDomain_NotVerified:\n        msg = humanReadableMsg = this.i18nService.t(\"domainNotVerifiedEvent\", ev.domainName);\n        break;\n      // Secrets Manager\n      case EventType.Secret_Retrieved:\n        msg = this.i18nService.t(\"accessedSecret\", this.formatSecretId(ev));\n        humanReadableMsg = this.i18nService.t(\"accessedSecret\", this.getShortId(ev.secretId));\n        break;\n      default:\n        break;\n    }\n    return {\n      message: msg === \"\" ? null : msg,\n      humanReadableMessage: humanReadableMsg === \"\" ? null : humanReadableMsg,\n    };\n  }\n\n  private getAppInfo(ev: EventResponse): [string, string] {\n    if (ev.serviceAccountId) {\n      return [\"bwi-globe\", this.i18nService.t(\"sdk\")];\n    }\n\n    switch (ev.deviceType) {\n      case DeviceType.Android:\n        return [\"bwi-android\", this.i18nService.t(\"mobile\") + \" - Android\"];\n      case DeviceType.iOS:\n        return [\"bwi-apple\", this.i18nService.t(\"mobile\") + \" - iOS\"];\n      case DeviceType.UWP:\n        return [\"bwi-windows\", this.i18nService.t(\"mobile\") + \" - Windows\"];\n      case DeviceType.ChromeExtension:\n        return [\"bwi-chrome\", this.i18nService.t(\"extension\") + \" - Chrome\"];\n      case DeviceType.FirefoxExtension:\n        return [\"bwi-firefox\", this.i18nService.t(\"extension\") + \" - Firefox\"];\n      case DeviceType.OperaExtension:\n        return [\"bwi-opera\", this.i18nService.t(\"extension\") + \" - Opera\"];\n      case DeviceType.EdgeExtension:\n        return [\"bwi-edge\", this.i18nService.t(\"extension\") + \" - Edge\"];\n      case DeviceType.VivaldiExtension:\n        return [\"bwi-puzzle\", this.i18nService.t(\"extension\") + \" - Vivaldi\"];\n      case DeviceType.SafariExtension:\n        return [\"bwi-safari\", this.i18nService.t(\"extension\") + \" - Safari\"];\n      case DeviceType.WindowsDesktop:\n        return [\"bwi-windows\", this.i18nService.t(\"desktop\") + \" - Windows\"];\n      case DeviceType.MacOsDesktop:\n        return [\"bwi-apple\", this.i18nService.t(\"desktop\") + \" - macOS\"];\n      case DeviceType.LinuxDesktop:\n        return [\"bwi-linux\", this.i18nService.t(\"desktop\") + \" - Linux\"];\n      case DeviceType.ChromeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Chrome\"];\n      case DeviceType.FirefoxBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Firefox\"];\n      case DeviceType.OperaBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Opera\"];\n      case DeviceType.SafariBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Safari\"];\n      case DeviceType.VivaldiBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Vivaldi\"];\n      case DeviceType.EdgeBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - Edge\"];\n      case DeviceType.IEBrowser:\n        return [\"bwi-globe\", this.i18nService.t(\"webVault\") + \" - IE\"];\n      case DeviceType.Server:\n        return [\"bwi-server\", this.i18nService.t(\"server\")];\n      case DeviceType.UnknownBrowser:\n        return [\n          \"bwi-globe\",\n          this.i18nService.t(\"webVault\") + \" - \" + this.i18nService.t(\"unknown\"),\n        ];\n      default:\n        return [\"bwi-globe\", this.i18nService.t(\"unknown\")];\n    }\n  }\n\n  private formatCipherId(ev: EventResponse, options: EventOptions) {\n    const shortId = this.getShortId(ev.cipherId);\n    if (ev.organizationId == null || !options.cipherInfo) {\n      return \"<code>\" + shortId + \"</code>\";\n    }\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/vault?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.cipherId\n    );\n    return a.outerHTML;\n  }\n\n  private formatGroupId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.groupId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/organizations/\" + ev.organizationId + \"/groups?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatCollectionId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.collectionId);\n    const a = this.makeAnchor(shortId);\n    // TODO: Update view/edit collection link after EC-14 is completed\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/collections?search=\" + shortId\n    );\n    return a.outerHTML;\n  }\n\n  private formatOrgUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.organizationUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" +\n        ev.organizationId +\n        \"/members?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.organizationUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderUserId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerUserId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/providers/\" +\n        ev.providerId +\n        \"/manage/people?search=\" +\n        shortId +\n        \"&viewEvents=\" +\n        ev.providerUserId\n    );\n    return a.outerHTML;\n  }\n\n  private formatProviderOrganizationId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.providerOrganizationId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/providers/\" + ev.providerId + \"/clients?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private formatPolicyId(ev: EventResponse) {\n    const shortId = this.getShortId(ev.policyId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\n      \"href\",\n      \"#/organizations/\" + ev.organizationId + \"/manage/policies?policyId=\" + ev.policyId\n    );\n    return a.outerHTML;\n  }\n\n  formatSecretId(ev: EventResponse): string {\n    const shortId = this.getShortId(ev.secretId);\n    const a = this.makeAnchor(shortId);\n    a.setAttribute(\"href\", \"#/sm/\" + ev.organizationId + \"/secrets?search=\" + shortId);\n    return a.outerHTML;\n  }\n\n  private makeAnchor(shortId: string) {\n    const a = document.createElement(\"a\");\n    a.title = this.i18nService.t(\"view\");\n    a.innerHTML = \"<code>\" + shortId + \"</code>\";\n    return a;\n  }\n\n  private getShortId(id: string) {\n    return id?.substring(0, 8);\n  }\n\n  private toDateTimeLocalString(date: Date) {\n    return (\n      date.getFullYear() +\n      \"-\" +\n      this.pad(date.getMonth() + 1) +\n      \"-\" +\n      this.pad(date.getDate()) +\n      \"T\" +\n      this.pad(date.getHours()) +\n      \":\" +\n      this.pad(date.getMinutes())\n    );\n  }\n\n  private pad(num: number) {\n    const norm = Math.floor(Math.abs(num));\n    return (norm < 10 ? \"0\" : \"\") + norm;\n  }\n}\n\nexport class EventInfo {\n  message: string;\n  humanReadableMessage: string;\n  appIcon: string;\n  appName: string;\n}\n\nexport class EventOptions {\n  cipherInfo = true;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { HtmlStorageLocation } from \"@bitwarden/common/enums/htmlStorageLocation\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\n\n@Injectable()\nexport class HtmlStorageService implements AbstractStorageService {\n  get defaultOptions(): StorageOptions {\n    return { htmlStorageLocation: HtmlStorageLocation.Session };\n  }\n\n  get<T>(key: string, options: StorageOptions = this.defaultOptions): Promise<T> {\n    let json: string = null;\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        json = window.localStorage.getItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        json = window.sessionStorage.getItem(key);\n        break;\n    }\n\n    if (json != null) {\n      const obj = JSON.parse(json);\n      return Promise.resolve(obj as T);\n    }\n    return Promise.resolve(null);\n  }\n\n  async has(key: string, options: StorageOptions = this.defaultOptions): Promise<boolean> {\n    return (await this.get(key, options)) != null;\n  }\n\n  save(key: string, obj: any, options: StorageOptions = this.defaultOptions): Promise<any> {\n    if (obj == null) {\n      return this.remove(key, options);\n    }\n\n    if (obj instanceof Set) {\n      obj = Array.from(obj);\n    }\n\n    const json = JSON.stringify(obj);\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.setItem(key, json);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.setItem(key, json);\n        break;\n    }\n    return Promise.resolve();\n  }\n\n  remove(key: string, options: StorageOptions = this.defaultOptions): Promise<any> {\n    switch (options.htmlStorageLocation) {\n      case HtmlStorageLocation.Local:\n        window.localStorage.removeItem(key);\n        break;\n      case HtmlStorageLocation.Session:\n      default:\n        window.sessionStorage.removeItem(key);\n        break;\n    }\n    return Promise.resolve();\n  }\n}\n","// Please leave 'en' where it is, as it's our fallback language in case no translation can be found\nexport const SupportedTranslationLocales: string[] = [\n  \"en\",\n  \"af\",\n  \"ar\",\n  \"az\",\n  \"be\",\n  \"bg\",\n  \"bn\",\n  \"bs\",\n  \"ca\",\n  \"cs\",\n  \"da\",\n  \"de\",\n  \"el\",\n  \"en-GB\",\n  \"en-IN\",\n  \"eo\",\n  \"es\",\n  \"et\",\n  \"eu\",\n  \"fi\",\n  \"fil\",\n  \"fr\",\n  \"he\",\n  \"hi\",\n  \"hr\",\n  \"hu\",\n  \"id\",\n  \"it\",\n  \"ja\",\n  \"ka\",\n  \"km\",\n  \"kn\",\n  \"ko\",\n  \"lv\",\n  \"ml\",\n  \"nb\",\n  \"nl\",\n  \"nn\",\n  \"pl\",\n  \"pt-PT\",\n  \"pt-BR\",\n  \"ro\",\n  \"ru\",\n  \"si\",\n  \"sk\",\n  \"sl\",\n  \"sr\",\n  \"sv\",\n  \"tr\",\n  \"uk\",\n  \"vi\",\n  \"zh-CN\",\n  \"zh-TW\",\n];\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService, private encryptService: EncryptService) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): EncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport { WINDOW } from \"@bitwarden/angular/services/injection-tokens\";\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { CryptoService as CryptoServiceAbstraction } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EncryptService } from \"@bitwarden/common/abstractions/encrypt.service\";\nimport {\n  EnvironmentService as EnvironmentServiceAbstraction,\n  Urls,\n} from \"@bitwarden/common/abstractions/environment.service\";\nimport { EventUploadService as EventUploadServiceAbstraction } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { NotificationsService as NotificationsServiceAbstraction } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { StateService as StateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { TwoFactorService as TwoFactorServiceAbstraction } from \"@bitwarden/common/auth/abstractions/two-factor.service\";\nimport { ContainerService } from \"@bitwarden/common/services/container.service\";\nimport { EventUploadService } from \"@bitwarden/common/services/event/event-upload.service\";\nimport { VaultTimeoutService as VaultTimeoutService } from \"@bitwarden/common/services/vaultTimeout/vaultTimeout.service\";\n\nimport { I18nService } from \"./i18n.service\";\n\n@Injectable()\nexport class InitService {\n  constructor(\n    @Inject(WINDOW) private win: Window,\n    private environmentService: EnvironmentServiceAbstraction,\n    private notificationsService: NotificationsServiceAbstraction,\n    private vaultTimeoutService: VaultTimeoutServiceAbstraction,\n    private i18nService: I18nServiceAbstraction,\n    private eventUploadService: EventUploadServiceAbstraction,\n    private twoFactorService: TwoFactorServiceAbstraction,\n    private stateService: StateServiceAbstraction,\n    private cryptoService: CryptoServiceAbstraction,\n    private themingService: AbstractThemingService,\n    private encryptService: EncryptService\n  ) {}\n\n  init() {\n    function getBaseUrl() {\n      // If the base URL is `https://vaultwarden.example.com/base/path/`,\n      // `window.location.href` should have one of the following forms:\n      //\n      // - `https://vaultwarden.example.com/base/path/`\n      // - `https://vaultwarden.example.com/base/path/#/some/route[?queryParam=...]`\n      //\n      // We want to get to just `https://vaultwarden.example.com/base/path`.\n      let baseUrl = window.location.href;\n      baseUrl = baseUrl.replace(/#.*/, '');  // Strip off `#` and everything after.\n      baseUrl = baseUrl.replace(/\\/+$/, ''); // Trim any trailing `/` chars.\n      return baseUrl;\n    }\n    return async () => {\n      await this.stateService.init();\n\n      const urls = {base: getBaseUrl()};\n      this.environmentService.setUrls(urls);\n\n      setTimeout(() => this.notificationsService.init(), 3000);\n      (this.vaultTimeoutService as VaultTimeoutService).init(true);\n      const locale = await this.stateService.getLocale();\n      await (this.i18nService as I18nService).init(locale);\n      (this.eventUploadService as EventUploadService).init(true);\n      this.twoFactorService.init();\n      const htmlEl = this.win.document.documentElement;\n      htmlEl.classList.add(\"locale_\" + this.i18nService.translationLocale);\n      await this.themingService.monitorThemeChanges();\n      const containerService = new ContainerService(this.cryptoService, this.encryptService);\n      containerService.attachToGlobal(this.win);\n    };\n  }\n}\n","import { ApplicationRef, ComponentFactoryResolver, Injectable, Injector } from \"@angular/core\";\nimport * as jq from \"jquery\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService as BaseModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Injectable()\nexport class ModalService extends BaseModalService {\n  el: any = null;\n  modalOpen = false;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    applicationRef: ApplicationRef,\n    injector: Injector,\n    private messagingService: MessagingService\n  ) {\n    super(componentFactoryResolver, applicationRef, injector);\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    modalRef.onCreated.pipe(first()).subscribe(() => {\n      const modals = Array.from(document.querySelectorAll(\".modal\"));\n      if (modals.length > 0) {\n        this.el = jq(modals[0]);\n        this.el.modal(\"show\");\n\n        this.el.on(\"show.bs.modal\", () => {\n          modalRef.show();\n          this.messagingService.send(\"modalShow\");\n        });\n        this.el.on(\"shown.bs.modal\", () => {\n          modalRef.shown();\n          this.messagingService.send(\"modalShown\");\n          if (!Utils.isMobileBrowser) {\n            this.el.find(\"*[appAutoFocus]\").focus();\n          }\n        });\n        this.el.on(\"hide.bs.modal\", () => {\n          this.messagingService.send(\"modalClose\");\n        });\n        this.el.on(\"hidden.bs.modal\", () => {\n          modalRef.closed();\n          this.messagingService.send(\"modalClosed\");\n        });\n      }\n    });\n\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      if (this.el != null) {\n        this.el.modal(\"hide\");\n      }\n    });\n  }\n}\n","import { BasePolicy } from \"../organizations/policies\";\n\nexport class PolicyListService {\n  private policies: BasePolicy[] = [];\n\n  addPolicies(policies: BasePolicy[]) {\n    this.policies.push(...policies);\n  }\n\n  getPolicies(): BasePolicy[] {\n    return this.policies;\n  }\n}\n","import {\n  Account as BaseAccount,\n  AccountSettings as BaseAccountSettings,\n} from \"@bitwarden/common/models/domain/account\";\n\nexport class AccountSettings extends BaseAccountSettings {\n  vaultTimeout: number = process.env.NODE_ENV === \"development\" ? null : 15;\n}\n\nexport class Account extends BaseAccount {\n  settings?: AccountSettings = new AccountSettings();\n\n  constructor(init: Partial<Account>) {\n    super(init);\n    Object.assign(this.settings, {\n      ...new AccountSettings(),\n      ...this.settings,\n    });\n  }\n}\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport {\n  MEMORY_STORAGE,\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateMigrationService } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport {\n  AbstractMemoryStorageService,\n  AbstractStorageService,\n} from \"@bitwarden/common/abstractions/storage.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { SendData } from \"@bitwarden/common/models/data/send.data\";\nimport { StorageOptions } from \"@bitwarden/common/models/domain/storage-options\";\nimport { StateService as BaseStateService } from \"@bitwarden/common/services/state.service\";\nimport { CipherData } from \"@bitwarden/common/vault/models/data/cipher.data\";\nimport { FolderData } from \"@bitwarden/common/vault/models/data/folder.data\";\n\nimport { Account } from \"./account\";\nimport { GlobalState } from \"./global-state\";\n\n@Injectable()\nexport class StateService extends BaseStateService<GlobalState, Account> {\n  constructor(\n    storageService: AbstractStorageService,\n    @Inject(SECURE_STORAGE) secureStorageService: AbstractStorageService,\n    @Inject(MEMORY_STORAGE) memoryStorageService: AbstractMemoryStorageService,\n    logService: LogService,\n    stateMigrationService: StateMigrationService,\n    @Inject(STATE_FACTORY) stateFactory: StateFactory<GlobalState, Account>,\n    @Inject(STATE_SERVICE_USE_CACHE) useAccountCache = true\n  ) {\n    super(\n      storageService,\n      secureStorageService,\n      memoryStorageService,\n      logService,\n      stateMigrationService,\n      stateFactory,\n      useAccountCache\n    );\n  }\n\n  async addAccount(account: Account) {\n    // Apply web overrides to default account values\n    account = new Account(account);\n    await super.addAccount(account);\n  }\n\n  async getEncryptedCiphers(options?: StorageOptions): Promise<{ [id: string]: CipherData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCiphers(options);\n  }\n\n  async setEncryptedCiphers(\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCiphers(value, options);\n  }\n\n  async getEncryptedCollections(\n    options?: StorageOptions\n  ): Promise<{ [id: string]: CollectionData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedCollections(options);\n  }\n\n  async setEncryptedCollections(\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedCollections(value, options);\n  }\n\n  async getEncryptedFolders(options?: StorageOptions): Promise<{ [id: string]: FolderData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedFolders(options);\n  }\n\n  async setEncryptedFolders(\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedFolders(value, options);\n  }\n\n  async getEncryptedSends(options?: StorageOptions): Promise<{ [id: string]: SendData }> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getEncryptedSends(options);\n  }\n\n  async setEncryptedSends(\n    value: { [id: string]: SendData },\n    options?: StorageOptions\n  ): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setEncryptedSends(value, options);\n  }\n\n  override async getLastSync(options?: StorageOptions): Promise<string> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.getLastSync(options);\n  }\n\n  override async setLastSync(value: string, options?: StorageOptions): Promise<void> {\n    options = this.reconcileOptions(options, await this.defaultInMemoryOptions());\n    return await super.setLastSync(value, options);\n  }\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport class FileDownloadBuilder {\n  get blobOptions(): any {\n    const options = this._request.blobOptions ?? {};\n    if (options.type == null) {\n      options.type = this.fileType;\n    }\n    return options;\n  }\n\n  get blob(): Blob {\n    if (this.blobOptions != null) {\n      return new Blob([this._request.blobData], this.blobOptions);\n    } else {\n      return new Blob([this._request.blobData]);\n    }\n  }\n\n  get downloadMethod(): \"save\" | \"open\" {\n    if (this._request.downloadMethod != null) {\n      return this._request.downloadMethod;\n    }\n    return this.fileType != \"application/pdf\" ? \"save\" : \"open\";\n  }\n\n  private get fileType() {\n    const fileNameLower = this._request.fileName.toLowerCase();\n    if (fileNameLower.endsWith(\".pdf\")) {\n      return \"application/pdf\";\n    } else if (fileNameLower.endsWith(\".xlsx\")) {\n      return \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n    } else if (fileNameLower.endsWith(\".docx\")) {\n      return \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\";\n    } else if (fileNameLower.endsWith(\".pptx\")) {\n      return \"application/vnd.openxmlformats-officedocument.presentationml.presentation\";\n    } else if (fileNameLower.endsWith(\".csv\")) {\n      return \"text/csv\";\n    } else if (fileNameLower.endsWith(\".png\")) {\n      return \"image/png\";\n    } else if (fileNameLower.endsWith(\".jpg\") || fileNameLower.endsWith(\".jpeg\")) {\n      return \"image/jpeg\";\n    } else if (fileNameLower.endsWith(\".gif\")) {\n      return \"image/gif\";\n    }\n    return null;\n  }\n\n  constructor(private readonly _request: FileDownloadRequest) {}\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { FileDownloadBuilder } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadBuilder\";\nimport { FileDownloadRequest } from \"@bitwarden/common/abstractions/fileDownload/fileDownloadRequest\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Injectable()\nexport class WebFileDownloadService implements FileDownloadService {\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  download(request: FileDownloadRequest): void {\n    const builder = new FileDownloadBuilder(request);\n    const a = window.document.createElement(\"a\");\n    if (builder.downloadMethod === \"save\") {\n      a.download = request.fileName;\n    } else if (!this.platformUtilsService.isSafari()) {\n      a.target = \"_blank\";\n    }\n    a.href = URL.createObjectURL(builder.blob);\n    a.style.position = \"fixed\";\n    window.document.body.appendChild(a);\n    a.click();\n    window.document.body.removeChild(a);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { APP_INITIALIZER, NgModule, Optional, SkipSelf } from \"@angular/core\";\n\nimport {\n  SECURE_STORAGE,\n  STATE_FACTORY,\n  STATE_SERVICE_USE_CACHE,\n  LOCALES_DIRECTORY,\n  SYSTEM_LANGUAGE,\n  MEMORY_STORAGE,\n} from \"@bitwarden/angular/services/injection-tokens\";\nimport { JslibServicesModule } from \"@bitwarden/angular/services/jslib-services.module\";\nimport { ModalService as ModalServiceAbstraction } from \"@bitwarden/angular/services/modal.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService as I18nServiceAbstraction } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService as MessagingServiceAbstraction } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService as BaseStateServiceAbstraction } from \"@bitwarden/common/abstractions/state.service\";\nimport { StateMigrationService as StateMigrationServiceAbstraction } from \"@bitwarden/common/abstractions/stateMigration.service\";\nimport { AbstractStorageService } from \"@bitwarden/common/abstractions/storage.service\";\nimport { LoginService as LoginServiceAbstraction } from \"@bitwarden/common/auth/abstractions/login.service\";\nimport { LoginService } from \"@bitwarden/common/auth/services/login.service\";\nimport { StateFactory } from \"@bitwarden/common/factories/stateFactory\";\nimport { MemoryStorageService } from \"@bitwarden/common/services/memoryStorage.service\";\nimport { PasswordRepromptService as PasswordRepromptServiceAbstraction } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\n\nimport { PasswordRepromptService } from \"../vault/core/password-reprompt.service\";\n\nimport { BroadcasterMessagingService } from \"./broadcaster-messaging.service\";\nimport { EventService } from \"./event.service\";\nimport { HtmlStorageService } from \"./html-storage.service\";\nimport { I18nService } from \"./i18n.service\";\nimport { InitService } from \"./init.service\";\nimport { ModalService } from \"./modal.service\";\nimport { PolicyListService } from \"./policy-list.service\";\nimport { RouterService } from \"./router.service\";\nimport { Account, GlobalState, StateService } from \"./state\";\nimport { StateMigrationService } from \"./state-migration.service\";\nimport { WebFileDownloadService } from \"./web-file-download.service\";\nimport { WebPlatformUtilsService } from \"./web-platform-utils.service\";\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, JslibServicesModule],\n  providers: [\n    InitService,\n    RouterService,\n    EventService,\n    PolicyListService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (initService: InitService) => initService.init(),\n      deps: [InitService],\n      multi: true,\n    },\n    {\n      provide: STATE_FACTORY,\n      useValue: new StateFactory(GlobalState, Account),\n    },\n    {\n      provide: STATE_SERVICE_USE_CACHE,\n      useValue: false,\n    },\n    {\n      provide: I18nServiceAbstraction,\n      useClass: I18nService,\n      deps: [SYSTEM_LANGUAGE, LOCALES_DIRECTORY],\n    },\n    { provide: AbstractStorageService, useClass: HtmlStorageService },\n    {\n      provide: SECURE_STORAGE,\n      // TODO: platformUtilsService.isDev has a helper for this, but using that service here results in a circular dependency.\n      // We have a tech debt item in the backlog to break up platformUtilsService, but in the meantime simply checking the environement here is less cumbersome.\n      useClass: process.env.NODE_ENV === \"development\" ? HtmlStorageService : MemoryStorageService,\n    },\n    {\n      provide: MEMORY_STORAGE,\n      useClass: MemoryStorageService,\n    },\n    {\n      provide: PlatformUtilsServiceAbstraction,\n      useClass: WebPlatformUtilsService,\n    },\n    { provide: MessagingServiceAbstraction, useClass: BroadcasterMessagingService },\n    { provide: ModalServiceAbstraction, useClass: ModalService },\n    {\n      provide: StateMigrationServiceAbstraction,\n      useClass: StateMigrationService,\n      deps: [AbstractStorageService, SECURE_STORAGE, STATE_FACTORY],\n    },\n    StateService,\n    {\n      provide: BaseStateServiceAbstraction,\n      useExisting: StateService,\n    },\n    {\n      provide: PasswordRepromptServiceAbstraction,\n      useClass: PasswordRepromptService,\n    },\n    {\n      provide: FileDownloadService,\n      useClass: WebFileDownloadService,\n    },\n    {\n      provide: LoginServiceAbstraction,\n      useClass: LoginService,\n      deps: [StateService],\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule?: CoreModule) {\n    if (parentModule) {\n      throw new Error(\"CoreModule is already loaded. Import it in the AppModule only\");\n    }\n  }\n}\n","import { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { GlobalState as BaseGlobalState } from \"@bitwarden/common/models/domain/global-state\";\n\nexport class GlobalState extends BaseGlobalState {\n  theme?: ThemeType = ThemeType.Light;\n  rememberEmail = true;\n}\n","import { I18nService as BaseI18nService } from \"@bitwarden/common/services/i18n.service\";\n\nimport { SupportedTranslationLocales } from \"../../translation-constants\";\n\nexport class I18nService extends BaseI18nService {\n  constructor(systemLanguage: string, localesDirectory: string) {\n    super(systemLanguage || \"en-US\", localesDirectory, async (formattedLocale: string) => {\n      const filePath =\n        this.localesDirectory +\n        \"/\" +\n        formattedLocale +\n        \"/messages.json?cache=\" +\n        process.env.CACHE_TAG;\n      const localesResult = await fetch(filePath);\n      const locales = await localesResult.json();\n      return locales;\n    });\n\n    this.supportedTranslationLocales = SupportedTranslationLocales;\n  }\n}\n","import { Observable, ReplaySubject } from \"rxjs\";\n\nimport { I18nService as I18nServiceAbstraction } from \"../abstractions/i18n.service\";\n\nimport { TranslationService } from \"./translation.service\";\n\nexport class I18nService extends TranslationService implements I18nServiceAbstraction {\n  protected _locale = new ReplaySubject<string>(1);\n  private _translationLocale: string;\n  locale$: Observable<string> = this._locale.asObservable();\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    super(systemLanguage, localesDirectory, getLocalesJson);\n  }\n\n  get translationLocale(): string {\n    return this._translationLocale;\n  }\n\n  set translationLocale(locale: string) {\n    this._translationLocale = locale;\n    this._locale.next(locale);\n  }\n}\n","import { TranslationService as TranslationServiceAbstraction } from \"../abstractions/translation.service\";\n\nexport abstract class TranslationService implements TranslationServiceAbstraction {\n  // First locale is the default (English)\n  supportedTranslationLocales: string[] = [\"en\"];\n  defaultLocale = \"en\";\n  abstract translationLocale: string;\n  collator: Intl.Collator;\n  localeNames = new Map<string, string>([\n    [\"af\", \"Afrikaans\"],\n    [\"ar\", \"العربية الفصحى\"],\n    [\"az\", \"Azərbaycanca\"],\n    [\"be\", \"Беларуская\"],\n    [\"bg\", \"български\"],\n    [\"bn\", \"বাংলা\"],\n    [\"bs\", \"bosanski jezik\"],\n    [\"ca\", \"català\"],\n    [\"cs\", \"čeština\"],\n    [\"da\", \"dansk\"],\n    [\"de\", \"Deutsch\"],\n    [\"el\", \"Ελληνικά\"],\n    [\"en\", \"English\"],\n    [\"en-GB\", \"English (British)\"],\n    [\"en-IN\", \"English (India)\"],\n    [\"eo\", \"Esperanto\"],\n    [\"es\", \"español\"],\n    [\"et\", \"eesti\"],\n    [\"eu\", \"euskara\"],\n    [\"fa\", \"فارسی\"],\n    [\"fi\", \"suomi\"],\n    [\"fil\", \"Wikang Filipino\"],\n    [\"fr\", \"français\"],\n    [\"he\", \"עברית\"],\n    [\"hi\", \"हिन्दी\"],\n    [\"hr\", \"hrvatski\"],\n    [\"hu\", \"magyar\"],\n    [\"id\", \"Bahasa Indonesia\"],\n    [\"it\", \"italiano\"],\n    [\"ja\", \"日本語\"],\n    [\"ka\", \"ქართული\"],\n    [\"km\", \"ខ្មែរ, ខេមរភាសា, ភាសាខ្មែរ\"],\n    [\"kn\", \"ಕನ್ನಡ\"],\n    [\"ko\", \"한국어\"],\n    [\"lt\", \"lietuvių kalba\"],\n    [\"lv\", \"Latvietis\"],\n    [\"me\", \"црногорски\"],\n    [\"ml\", \"മലയാളം\"],\n    [\"nb\", \"norsk (bokmål)\"],\n    [\"nl\", \"Nederlands\"],\n    [\"nn\", \"Norsk Nynorsk\"],\n    [\"pl\", \"polski\"],\n    [\"pt-BR\", \"português do Brasil\"],\n    [\"pt-PT\", \"português\"],\n    [\"ro\", \"română\"],\n    [\"ru\", \"русский\"],\n    [\"si\", \"සිංහල\"],\n    [\"sk\", \"slovenčina\"],\n    [\"sl\", \"Slovenski jezik, Slovenščina\"],\n    [\"sr\", \"Српски\"],\n    [\"sv\", \"svenska\"],\n    [\"th\", \"ไทย\"],\n    [\"tr\", \"Türkçe\"],\n    [\"uk\", \"українська\"],\n    [\"vi\", \"Tiếng Việt\"],\n    [\"zh-CN\", \"中文（中国大陆）\"],\n    [\"zh-TW\", \"中文（台灣）\"],\n  ]);\n\n  protected inited: boolean;\n  protected defaultMessages: any = {};\n  protected localeMessages: any = {};\n\n  constructor(\n    protected systemLanguage: string,\n    protected localesDirectory: string,\n    protected getLocalesJson: (formattedLocale: string) => Promise<any>\n  ) {\n    this.systemLanguage = systemLanguage.replace(\"_\", \"-\");\n  }\n\n  async init(locale?: string) {\n    if (this.inited) {\n      throw new Error(\"i18n already initialized.\");\n    }\n    if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n      throw new Error(\"supportedTranslationLocales not set.\");\n    }\n\n    this.inited = true;\n    this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n    try {\n      this.collator = new Intl.Collator(this.translationLocale, {\n        numeric: true,\n        sensitivity: \"base\",\n      });\n    } catch {\n      this.collator = null;\n    }\n\n    if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n      this.translationLocale = this.translationLocale.slice(0, 2);\n\n      if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n        this.translationLocale = this.defaultLocale;\n      }\n    }\n\n    if (this.localesDirectory != null) {\n      await this.loadMessages(this.translationLocale, this.localeMessages);\n      if (this.translationLocale !== this.defaultLocale) {\n        await this.loadMessages(this.defaultLocale, this.defaultMessages);\n      }\n    }\n  }\n\n  t(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.translate(id, p1, p2, p3);\n  }\n\n  translate(id: string, p1?: string | number, p2?: string | number, p3?: string | number): string {\n    let result: string;\n    // eslint-disable-next-line\n    if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n      result = this.localeMessages[id];\n      // eslint-disable-next-line\n    } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n      result = this.defaultMessages[id];\n    } else {\n      result = \"\";\n    }\n\n    if (result !== \"\") {\n      if (p1 != null) {\n        result = result.split(\"__$1__\").join(p1.toString());\n      }\n      if (p2 != null) {\n        result = result.split(\"__$2__\").join(p2.toString());\n      }\n      if (p3 != null) {\n        result = result.split(\"__$3__\").join(p3.toString());\n      }\n    }\n\n    return result;\n  }\n\n  protected async loadMessages(locale: string, messagesObj: any): Promise<any> {\n    const formattedLocale = locale.replace(\"-\", \"_\");\n    const locales = await this.getLocalesJson(formattedLocale);\n    for (const prop in locales) {\n      // eslint-disable-next-line\n      if (!locales.hasOwnProperty(prop)) {\n        continue;\n      }\n      messagesObj[prop] = locales[prop].message;\n\n      if (locales[prop].placeholders) {\n        for (const placeProp in locales[prop].placeholders) {\n          if (\n            !locales[prop].placeholders.hasOwnProperty(placeProp) || // eslint-disable-line\n            !locales[prop].placeholders[placeProp].content\n          ) {\n            continue;\n          }\n\n          const replaceToken = \"\\\\$\" + placeProp.toUpperCase() + \"\\\\$\";\n          let replaceContent = locales[prop].placeholders[placeProp].content;\n          if (replaceContent === \"$1\" || replaceContent === \"$2\" || replaceContent === \"$3\") {\n            replaceContent = \"__$\" + replaceContent + \"__\";\n          }\n          messagesObj[prop] = messagesObj[prop].replace(\n            new RegExp(replaceToken, \"g\"),\n            replaceContent\n          );\n        }\n      }\n    }\n  }\n}\n","import { StateMigrationService as BaseStateMigrationService } from \"@bitwarden/common/services/stateMigration.service\";\n\nimport { Account } from \"./state/account\";\nimport { GlobalState } from \"./state/global-state\";\n\nexport class StateMigrationService extends BaseStateMigrationService<GlobalState, Account> {\n  protected async migrationStateFrom1To2(): Promise<void> {\n    await super.migrateStateFrom1To2();\n    const globals = (await this.get<GlobalState>(\"global\")) ?? this.stateFactory.createGlobal(null);\n    globals.rememberEmail = (await this.get<boolean>(\"rememberEmail\")) ?? globals.rememberEmail;\n    await this.set(\"global\", globals);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Title } from \"@angular/platform-browser\";\nimport { ActivatedRoute, NavigationEnd, Router } from \"@angular/router\";\nimport { filter } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Injectable()\nexport class RouterService {\n  private previousUrl: string = undefined;\n  private currentUrl: string = undefined;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    i18nService: I18nService\n  ) {\n    this.currentUrl = this.router.url;\n\n    router.events\n      .pipe(filter((e) => e instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        this.currentUrl = event.url;\n\n        let title = i18nService.t(\"pageTitle\", \"Vaultwarden\");\n        let child = this.activatedRoute.firstChild;\n        while (child.firstChild) {\n          child = child.firstChild;\n        }\n\n        const titleId: string = child?.snapshot?.data?.titleId;\n        const rawTitle: string = child?.snapshot?.data?.title;\n        const updateUrl = !child?.snapshot?.data?.doNotSaveUrl ?? true;\n\n        if (titleId != null || rawTitle != null) {\n          const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n          if (newTitle != null && newTitle !== \"\") {\n            title = newTitle + \" | \" + title;\n          }\n        }\n        this.titleService.setTitle(title);\n        if (updateUrl) {\n          this.setPreviousUrl(this.currentUrl);\n        }\n      });\n  }\n\n  getPreviousUrl() {\n    return this.previousUrl;\n  }\n\n  setPreviousUrl(url: string) {\n    this.previousUrl = url;\n  }\n}\n","export enum ClientType {\n  Web = \"web\",\n  Browser = \"browser\",\n  Desktop = \"desktop\",\n  Mobile = \"mobile\",\n  Cli = \"cli\",\n  DirectoryConnector = \"connector\",\n}\n","import { Injectable } from \"@angular/core\";\nimport Swal, { SweetAlertIcon } from \"sweetalert2\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ClientType } from \"@bitwarden/common/enums/clientType\";\nimport { DeviceType } from \"@bitwarden/common/enums/deviceType\";\n\n@Injectable()\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n  private browserCache: DeviceType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  getDevice(): DeviceType {\n    if (this.browserCache != null) {\n      return this.browserCache;\n    }\n\n    if (\n      navigator.userAgent.indexOf(\" Firefox/\") !== -1 ||\n      navigator.userAgent.indexOf(\" Gecko/\") !== -1\n    ) {\n      this.browserCache = DeviceType.FirefoxBrowser;\n    } else if (navigator.userAgent.indexOf(\" OPR/\") >= 0) {\n      this.browserCache = DeviceType.OperaBrowser;\n    } else if (navigator.userAgent.indexOf(\" Edg/\") !== -1) {\n      this.browserCache = DeviceType.EdgeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Vivaldi/\") !== -1) {\n      this.browserCache = DeviceType.VivaldiBrowser;\n    } else if (\n      navigator.userAgent.indexOf(\" Safari/\") !== -1 &&\n      navigator.userAgent.indexOf(\"Chrome\") === -1\n    ) {\n      this.browserCache = DeviceType.SafariBrowser;\n    } else if ((window as any).chrome && navigator.userAgent.indexOf(\" Chrome/\") !== -1) {\n      this.browserCache = DeviceType.ChromeBrowser;\n    } else if (navigator.userAgent.indexOf(\" Trident/\") !== -1) {\n      this.browserCache = DeviceType.IEBrowser;\n    } else {\n      this.browserCache = DeviceType.UnknownBrowser;\n    }\n\n    return this.browserCache;\n  }\n\n  getDeviceString(): string {\n    const device = DeviceType[this.getDevice()].toLowerCase();\n    return device.replace(\"browser\", \"\");\n  }\n\n  getClientType() {\n    return ClientType.Web;\n  }\n\n  isFirefox(): boolean {\n    return this.getDevice() === DeviceType.FirefoxBrowser;\n  }\n\n  isChrome(): boolean {\n    return this.getDevice() === DeviceType.ChromeBrowser;\n  }\n\n  isEdge(): boolean {\n    return this.getDevice() === DeviceType.EdgeBrowser;\n  }\n\n  isOpera(): boolean {\n    return this.getDevice() === DeviceType.OperaBrowser;\n  }\n\n  isVivaldi(): boolean {\n    return this.getDevice() === DeviceType.VivaldiBrowser;\n  }\n\n  isSafari(): boolean {\n    return this.getDevice() === DeviceType.SafariBrowser;\n  }\n\n  isMacAppStore(): boolean {\n    return false;\n  }\n\n  isViewOpen(): Promise<boolean> {\n    return Promise.resolve(false);\n  }\n\n  launchUri(uri: string, options?: any): void {\n    const a = document.createElement(\"a\");\n    a.href = uri;\n    if (options == null || !options.sameWindow) {\n      a.target = \"_blank\";\n      a.rel = \"noreferrer noopener\";\n    }\n    a.classList.add(\"d-none\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  getApplicationVersion(): Promise<string> {\n    return Promise.resolve(process.env.APPLICATION_VERSION || \"-\");\n  }\n\n  async getApplicationVersionNumber(): Promise<string> {\n    return (await this.getApplicationVersion()).split(RegExp(\"[+|-]\"))[0].trim();\n  }\n\n  supportsWebAuthn(win: Window): boolean {\n    return typeof PublicKeyCredential !== \"undefined\";\n  }\n\n  supportsDuo(): boolean {\n    return true;\n  }\n\n  showToast(\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: any\n  ): void {\n    this.messagingService.send(\"showToast\", {\n      text: text,\n      title: title,\n      type: type,\n      options: options,\n    });\n  }\n\n  async showDialog(\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml = false,\n    target?: string\n  ) {\n    let iconClasses: string = null;\n    if (type != null) {\n      // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n      switch (type) {\n        case \"success\":\n          iconClasses = \"bwi-check text-success\";\n          break;\n        case \"warning\":\n          iconClasses = \"bwi-exclamation-triangle text-warning\";\n          break;\n        case \"error\":\n          iconClasses = \"bwi-error text-danger\";\n          break;\n        case \"info\":\n          iconClasses = \"bwi-info-circle text-info\";\n          break;\n        default:\n          break;\n      }\n    }\n\n    const bootstrapModal = document.querySelector(\"div.modal\");\n    if (bootstrapModal != null) {\n      bootstrapModal.removeAttribute(\"tabindex\");\n    }\n\n    const iconHtmlStr =\n      iconClasses != null ? `<i class=\"swal-custom-icon bwi ${iconClasses}\"></i>` : undefined;\n    const confirmed = await Swal.fire({\n      heightAuto: false,\n      buttonsStyling: false,\n      icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n      iconHtml: iconHtmlStr,\n      text: bodyIsHtml ? null : body,\n      html: bodyIsHtml ? body : null,\n      titleText: title,\n      showCancelButton: cancelText != null,\n      cancelButtonText: cancelText,\n      showConfirmButton: true,\n      confirmButtonText: confirmText == null ? this.i18nService.t(\"ok\") : confirmText,\n      target: target != null ? target : \"body\",\n      onOpen: () => Swal.getConfirmButton().focus(),\n    });\n\n    if (bootstrapModal != null) {\n      bootstrapModal.setAttribute(\"tabindex\", \"-1\");\n    }\n\n    return confirmed.value;\n  }\n\n  isDev(): boolean {\n    return false;\n  }\n\n  isSelfHost(): boolean {\n    return false;\n  }\n\n  static isSelfHost(): boolean {\n    return false;\n  }\n\n  copyToClipboard(text: string, options?: any): void | boolean {\n    let win = window;\n    let doc = window.document;\n    if (options && (options.window || options.win)) {\n      win = options.window || options.win;\n      doc = win.document;\n    } else if (options && options.doc) {\n      doc = options.doc;\n    }\n    if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n      // IE specific code path to prevent textarea being shown while dialog is visible.\n      (win as any).clipboardData.setData(\"Text\", text);\n    } else if (doc.queryCommandSupported && doc.queryCommandSupported(\"copy\")) {\n      const textarea = doc.createElement(\"textarea\");\n      textarea.textContent = text;\n      // Prevent scrolling to bottom of page in MS Edge.\n      textarea.style.position = \"fixed\";\n      let copyEl = doc.body;\n      // For some reason copy command won't work when modal is open if appending to body\n      if (doc.body.classList.contains(\"modal-open\")) {\n        copyEl = doc.body.querySelector<HTMLElement>(\".modal\");\n      }\n      copyEl.appendChild(textarea);\n      textarea.select();\n      let success = false;\n      try {\n        // Security exception may be thrown by some browsers.\n        success = doc.execCommand(\"copy\");\n        if (!success) {\n          this.logService.debug(\"Copy command unsupported or disabled.\");\n        }\n      } catch (e) {\n        // eslint-disable-next-line\n        console.warn(\"Copy to clipboard failed.\", e);\n      } finally {\n        copyEl.removeChild(textarea);\n      }\n      return success;\n    }\n  }\n\n  readFromClipboard(options?: any): Promise<string> {\n    throw new Error(\"Cannot read from clipboard on web.\");\n  }\n\n  supportsBiometric() {\n    return Promise.resolve(false);\n  }\n\n  authenticateBiometric() {\n    return Promise.resolve(false);\n  }\n\n  supportsSecureStorage() {\n    return false;\n  }\n\n  getAutofillKeyboardShortcut(): Promise<string> {\n    return null;\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\n@NgModule({})\nexport class CoreOrganizationModule {}\n","import { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { SelectionReadOnlyRequest } from \"../../../models/request/selection-read-only.request\";\n\nexport class OrganizationUserUpdateRequest {\n  type: OrganizationUserType;\n  accessAll: boolean;\n  accessSecretsManager: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  groups: string[] = [];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserType } from \"../../../enums/organizationUserType\";\nimport { PermissionsApi } from \"../../../models/api/permissions.api\";\nimport { SelectionReadOnlyRequest } from \"../../../models/request/selection-read-only.request\";\n\nexport class OrganizationUserInviteRequest {\n  emails: string[] = [];\n  type: OrganizationUserType;\n  accessAll: boolean;\n  accessSecretsManager: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  groups: string[];\n  permissions: PermissionsApi;\n}\n","import { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { PermissionsApi } from \"@bitwarden/common/models/api/permissions.api\";\n\nimport { CollectionAccessSelectionView } from \"./collection-access-selection.view\";\n\nexport class OrganizationUserAdminView {\n  id: string;\n  userId: string;\n  organizationId: string;\n  type: OrganizationUserType;\n  status: OrganizationUserStatusType;\n  externalId: string;\n  accessAll: boolean;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n\n  collections: CollectionAccessSelectionView[] = [];\n  groups: string[] = [];\n\n  accessSecretsManager: boolean;\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport {\n  OrganizationUserInviteRequest,\n  OrganizationUserUpdateRequest,\n} from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationUserDetailsResponse } from \"@bitwarden/common/abstractions/organization-user/responses\";\n\nimport { CoreOrganizationModule } from \"../core-organization.module\";\nimport { OrganizationUserAdminView } from \"../views/organization-user-admin-view\";\n\n@Injectable({ providedIn: CoreOrganizationModule })\nexport class UserAdminService {\n  constructor(private organizationUserService: OrganizationUserService) {}\n\n  async get(\n    organizationId: string,\n    organizationUserId: string\n  ): Promise<OrganizationUserAdminView | undefined> {\n    const userResponse = await this.organizationUserService.getOrganizationUser(\n      organizationId,\n      organizationUserId,\n      {\n        includeGroups: true,\n      }\n    );\n\n    if (userResponse == null) {\n      return undefined;\n    }\n\n    const [view] = await this.decryptMany(organizationId, [userResponse]);\n\n    return view;\n  }\n\n  async save(user: OrganizationUserAdminView): Promise<void> {\n    const request = new OrganizationUserUpdateRequest();\n    request.accessAll = user.accessAll;\n    request.permissions = user.permissions;\n    request.type = user.type;\n    request.collections = user.collections;\n    request.groups = user.groups;\n    request.accessSecretsManager = user.accessSecretsManager;\n\n    await this.organizationUserService.putOrganizationUser(user.organizationId, user.id, request);\n  }\n\n  async invite(emails: string[], user: OrganizationUserAdminView): Promise<void> {\n    const request = new OrganizationUserInviteRequest();\n    request.emails = emails;\n    request.accessAll = user.accessAll;\n    request.permissions = user.permissions;\n    request.type = user.type;\n    request.collections = user.collections;\n    request.groups = user.groups;\n    request.accessSecretsManager = user.accessSecretsManager;\n\n    await this.organizationUserService.postOrganizationUserInvite(user.organizationId, request);\n  }\n\n  private async decryptMany(\n    organizationId: string,\n    users: OrganizationUserDetailsResponse[]\n  ): Promise<OrganizationUserAdminView[]> {\n    const promises = users.map(async (u) => {\n      const view = new OrganizationUserAdminView();\n\n      view.id = u.id;\n      view.organizationId = organizationId;\n      view.userId = u.userId;\n      view.type = u.type;\n      view.status = u.status;\n      view.externalId = u.externalId;\n      view.accessAll = u.accessAll;\n      view.permissions = u.permissions;\n      view.resetPasswordEnrolled = u.resetPasswordEnrolled;\n      view.collections = u.collections.map((c) => ({\n        id: c.id,\n        hidePasswords: c.hidePasswords,\n        readOnly: c.readOnly,\n      }));\n      view.groups = u.groups;\n      view.accessSecretsManager = u.accessSecretsManager;\n\n      return view;\n    });\n\n    return await Promise.all(promises);\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { CollectionRequest } from \"@bitwarden/common/models/request/collection.request\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport {\n  CollectionAccessDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collection.response\";\n\nimport { CoreOrganizationModule } from \"../core-organization.module\";\nimport { CollectionAdminView } from \"../views/collection-admin.view\";\n\n@Injectable({ providedIn: CoreOrganizationModule })\nexport class CollectionAdminService {\n  constructor(private apiService: ApiService, private cryptoService: CryptoService) {}\n\n  async getAll(organizationId: string): Promise<CollectionAdminView[]> {\n    const collectionResponse = await this.apiService.getManyCollectionsWithAccessDetails(\n      organizationId\n    );\n\n    if (collectionResponse?.data == null || collectionResponse.data.length === 0) {\n      return [];\n    }\n\n    return await this.decryptMany(organizationId, collectionResponse.data);\n  }\n\n  async get(\n    organizationId: string,\n    collectionId: string\n  ): Promise<CollectionAdminView | undefined> {\n    const collectionResponse = await this.apiService.getCollectionAccessDetails(\n      organizationId,\n      collectionId\n    );\n\n    if (collectionResponse == null) {\n      return undefined;\n    }\n\n    const [view] = await this.decryptMany(organizationId, [collectionResponse]);\n\n    return view;\n  }\n\n  async save(collection: CollectionAdminView): Promise<unknown> {\n    const request = await this.encrypt(collection);\n\n    let response: CollectionResponse;\n    if (collection.id == null) {\n      response = await this.apiService.postCollection(collection.organizationId, request);\n      collection.id = response.id;\n    } else {\n      response = await this.apiService.putCollection(\n        collection.organizationId,\n        collection.id,\n        request\n      );\n    }\n\n    // TODO: Implement upsert when in PS-1083: Collection Service refactors\n    // await this.collectionService.upsert(data);\n    return;\n  }\n\n  async delete(organizationId: string, collectionId: string): Promise<void> {\n    await this.apiService.deleteCollection(organizationId, collectionId);\n  }\n\n  private async decryptMany(\n    organizationId: string,\n    collections: CollectionResponse[] | CollectionAccessDetailsResponse[]\n  ): Promise<CollectionAdminView[]> {\n    const orgKey = await this.cryptoService.getOrgKey(organizationId);\n\n    const promises = collections.map(async (c) => {\n      const view = new CollectionAdminView();\n      view.id = c.id;\n      view.name = await this.cryptoService.decryptToUtf8(new EncString(c.name), orgKey);\n      view.externalId = c.externalId;\n      view.organizationId = c.organizationId;\n\n      if (isCollectionAccessDetailsResponse(c)) {\n        view.groups = c.groups;\n        view.users = c.users;\n        view.assigned = c.assigned;\n      }\n\n      return view;\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async encrypt(model: CollectionAdminView): Promise<CollectionRequest> {\n    if (model.organizationId == null) {\n      throw new Error(\"Collection has no organization id.\");\n    }\n    const key = await this.cryptoService.getOrgKey(model.organizationId);\n    if (key == null) {\n      throw new Error(\"No key for this collection's organization.\");\n    }\n    const collection = new CollectionRequest();\n    collection.externalId = model.externalId;\n    collection.name = (await this.cryptoService.encrypt(model.name, key)).encryptedString;\n    collection.groups = model.groups.map(\n      (group) => new SelectionReadOnlyRequest(group.id, group.readOnly, group.hidePasswords)\n    );\n    collection.users = model.users.map(\n      (user) => new SelectionReadOnlyRequest(user.id, user.readOnly, user.hidePasswords)\n    );\n    return collection;\n  }\n}\n\nfunction isCollectionAccessDetailsResponse(\n  response: CollectionResponse | CollectionAccessDetailsResponse\n): response is CollectionAccessDetailsResponse {\n  const anyResponse = response as any;\n\n  return anyResponse?.groups instanceof Array && anyResponse?.users instanceof Array;\n}\n","import { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\n\nexport class GroupRequest {\n  name: string;\n  accessAll: boolean;\n  collections: SelectionReadOnlyRequest[] = [];\n  users: string[] = [];\n}\n","export class OrganizationGroupBulkRequest {\n  ids: string[];\n\n  constructor(ids: string[]) {\n    this.ids = ids == null ? [] : ids;\n  }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\n\nimport { CoreOrganizationModule } from \"../../core-organization.module\";\nimport { GroupView } from \"../../views/group.view\";\n\nimport { GroupRequest } from \"./requests/group.request\";\nimport { OrganizationGroupBulkRequest } from \"./requests/organization-group-bulk.request\";\nimport { GroupDetailsResponse, GroupResponse } from \"./responses/group.response\";\n\n@Injectable({ providedIn: CoreOrganizationModule })\nexport class GroupService {\n  constructor(private apiService: ApiService) {}\n\n  async delete(orgId: string, groupId: string): Promise<void> {\n    await this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + orgId + \"/groups/\" + groupId,\n      null,\n      true,\n      false\n    );\n  }\n\n  async deleteMany(orgId: string, groupIds: string[]): Promise<void> {\n    await this.apiService.send(\n      \"DELETE\",\n      \"/organizations/\" + orgId + \"/groups\",\n      new OrganizationGroupBulkRequest(groupIds),\n      true,\n      true\n    );\n  }\n\n  async get(orgId: string, groupId: string): Promise<GroupView> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + orgId + \"/groups/\" + groupId + \"/details\",\n      null,\n      true,\n      true\n    );\n\n    return GroupView.fromResponse(new GroupDetailsResponse(r));\n  }\n\n  async getAll(orgId: string): Promise<GroupView[]> {\n    const r = await this.apiService.send(\n      \"GET\",\n      \"/organizations/\" + orgId + \"/groups\",\n      null,\n      true,\n      true\n    );\n\n    const listResponse = new ListResponse(r, GroupDetailsResponse);\n\n    return listResponse.data?.map((gr) => GroupView.fromResponse(gr)) ?? [];\n  }\n\n  async save(group: GroupView): Promise<GroupView> {\n    const request = new GroupRequest();\n    request.name = group.name;\n    request.accessAll = group.accessAll;\n    request.users = group.members;\n    request.collections = group.collections.map(\n      (c) => new SelectionReadOnlyRequest(c.id, c.readOnly, c.hidePasswords)\n    );\n\n    if (group.id == undefined) {\n      return await this.postGroup(group.organizationId, request);\n    } else {\n      return await this.putGroup(group.organizationId, group.id, request);\n    }\n  }\n\n  private async postGroup(organizationId: string, request: GroupRequest): Promise<GroupView> {\n    const r = await this.apiService.send(\n      \"POST\",\n      \"/organizations/\" + organizationId + \"/groups\",\n      request,\n      true,\n      true\n    );\n    return GroupView.fromResponse(new GroupResponse(r));\n  }\n\n  private async putGroup(\n    organizationId: string,\n    id: string,\n    request: GroupRequest\n  ): Promise<GroupView> {\n    const r = await this.apiService.send(\n      \"PUT\",\n      \"/organizations/\" + organizationId + \"/groups/\" + id,\n      request,\n      true,\n      true\n    );\n    return GroupView.fromResponse(new GroupResponse(r));\n  }\n}\n","import { BaseResponse } from \"@bitwarden/common/models/response/base.response\";\nimport { SelectionReadOnlyResponse } from \"@bitwarden/common/models/response/selection-read-only.response\";\n\nexport class GroupResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.accessAll = this.getResponseProperty(\"AccessAll\");\n    this.externalId = this.getResponseProperty(\"ExternalId\");\n  }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n  collections: SelectionReadOnlyResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n    const collections = this.getResponseProperty(\"Collections\");\n    if (collections != null) {\n      this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n    }\n  }\n}\n","import { View } from \"@bitwarden/common/models/view/view\";\n\ninterface SelectionResponseLike {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n}\n\nexport class CollectionAccessSelectionView extends View {\n  readonly id: string;\n  readonly readOnly: boolean;\n  readonly hidePasswords: boolean;\n\n  constructor(response?: SelectionResponseLike) {\n    super();\n\n    if (!response) {\n      return;\n    }\n\n    this.id = response.id;\n    this.readOnly = response.readOnly;\n    this.hidePasswords = response.hidePasswords;\n  }\n}\n","export class View {}\n","import { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { CollectionAccessDetailsResponse } from \"@bitwarden/common/src/models/response/collection.response\";\n\nimport { CollectionAccessSelectionView } from \"./collection-access-selection.view\";\n\nexport class CollectionAdminView extends CollectionView {\n  groups: CollectionAccessSelectionView[] = [];\n  users: CollectionAccessSelectionView[] = [];\n\n  /**\n   * Flag indicating the user has been explicitly assigned to this Collection\n   */\n  assigned: boolean;\n\n  constructor(response?: CollectionAccessDetailsResponse) {\n    super(response);\n\n    if (!response) {\n      return;\n    }\n\n    this.groups = response.groups\n      ? response.groups.map((g) => new CollectionAccessSelectionView(g))\n      : [];\n\n    this.users = response.users\n      ? response.users.map((g) => new CollectionAccessSelectionView(g))\n      : [];\n\n    this.assigned = response.assigned;\n  }\n}\n","import { View } from \"@bitwarden/common/src/models/view/view\";\n\nimport { GroupDetailsResponse, GroupResponse } from \"../services/group/responses/group.response\";\n\nimport { CollectionAccessSelectionView } from \"./collection-access-selection.view\";\n\nexport class GroupView implements View {\n  id: string;\n  organizationId: string;\n  name: string;\n  accessAll: boolean;\n  externalId: string;\n  collections: CollectionAccessSelectionView[] = [];\n  members: string[] = [];\n\n  static fromResponse(response: GroupResponse): GroupView {\n    const view: GroupView = Object.assign(new GroupView(), response) as GroupView;\n\n    if (response instanceof GroupDetailsResponse && response.collections != undefined) {\n      view.collections = response.collections.map((c) => new CollectionAccessSelectionView(c));\n    }\n\n    return view;\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { OrganizationInformationComponent } from \"./organization-information.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationInformationComponent],\n  exports: [OrganizationInformationComponent],\n})\nexport class OrganizationCreateModule {}\n","<form #form [formGroup]=\"formGroup\" *ngIf=\"nameOnly\">\n  <bit-form-field>\n    <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n    <input bitInput type=\"text\" formControlName=\"name\" />\n  </bit-form-field>\n</form>\n<form #form [formGroup]=\"formGroup\" *ngIf=\"!nameOnly\">\n  <h2>{{ \"generalInformation\" | i18n }}</h2>\n  <div class=\"tw-flex tw-w-full tw-space-x-4\" *ngIf=\"createOrganization\">\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"organizationName\" | i18n }}</bit-label>\n      <input bitInput type=\"text\" formControlName=\"name\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\">\n      <bit-label>{{ \"email\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"billingEmail\" />\n    </bit-form-field>\n    <bit-form-field class=\"tw-w-1/2\" *ngIf=\"isProvider\">\n      <bit-label>{{ \"clientOwnerEmail\" | i18n }}</bit-label>\n      <input bitInput type=\"email\" formControlName=\"clientOwnerEmail\" />\n    </bit-form-field>\n  </div>\n  <div *ngIf=\"!isProvider && !acceptingSponsorship\">\n    <input\n      type=\"checkbox\"\n      name=\"businessOwned\"\n      formControlName=\"businessOwned\"\n      (change)=\"changedBusinessOwned.emit()\"\n    />\n    <bit-label for=\"businessOwned\" class=\"tw-mb-3\">{{ \"accountOwnedBusiness\" | i18n }}</bit-label>\n    <div class=\"tw-mt-4\" *ngIf=\"formGroup.controls['businessOwned'].value\">\n      <bit-form-field class=\"tw-w-1/2\">\n        <bit-label>{{ \"businessName\" | i18n }}</bit-label>\n        <input bitInput type=\"text\" formControlName=\"businessName\" />\n      </bit-form-field>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"app-org-info\",\n  templateUrl: \"organization-information.component.html\",\n})\nexport class OrganizationInformationComponent {\n  @Input() nameOnly = false;\n  @Input() createOrganization = true;\n  @Input() isProvider = false;\n  @Input() acceptingSponsorship = false;\n  @Input() formGroup: UntypedFormGroup;\n  @Output() changedBusinessOwned = new EventEmitter<void>();\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessOrgAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationPermissionsGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private organizationService: OrganizationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private syncService: SyncService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    // TODO: We need to fix this issue once and for all.\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n\n    const org = this.organizationService.get(route.params.organizationId);\n    if (org == null) {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    if (!org.isOwner && !org.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"organizationIsDisabled\")\n      );\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    const permissionsCallback: (organization: Organization) => boolean =\n      route.data?.organizationPermissions;\n    const hasPermissions = permissionsCallback == null || permissionsCallback(org);\n\n    if (!hasPermissions) {\n      // Handle linkable ciphers for organizations the user only has view access to\n      // https://bitwarden.atlassian.net/browse/EC-203\n      const cipherId =\n        state.root.queryParamMap.get(\"itemId\") || state.root.queryParamMap.get(\"cipherId\");\n      if (cipherId) {\n        return this.router.createUrlTree([\"/vault\"], {\n          queryParams: {\n            itemId: cipherId,\n          },\n        });\n      }\n\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"accessDenied\"));\n      return canAccessOrgAdmin(org)\n        ? this.router.createUrlTree([\"/organizations\", org.id])\n        : this.router.createUrlTree([\"/\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport {\n  canAccessOrgAdmin,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class OrganizationRedirectGuard implements CanActivate {\n  constructor(private router: Router, private organizationService: OrganizationService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const org = this.organizationService.get(route.params.organizationId);\n\n    const customRedirect = route.data?.autoRedirectCallback;\n    if (customRedirect) {\n      let redirectPath = customRedirect(org);\n      if (typeof redirectPath === \"string\") {\n        redirectPath = [redirectPath];\n      }\n      return this.router.createUrlTree([state.url, ...redirectPath]);\n    }\n\n    if (canAccessOrgAdmin(org)) {\n      return this.router.createUrlTree([\"/organizations\", org.id]);\n    }\n    return this.router.createUrlTree([\"/\"]);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"eventLogsTitle\">\n          {{ \"eventLogs\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loaded\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loaded\">\n        <div class=\"d-flex\">\n          <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{ \"startDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"start\"\n              placeholder=\"{{ 'startDate' | i18n }}\"\n              [(ngModel)]=\"start\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{ \"endDate\" | i18n }}</label>\n            <input\n              type=\"datetime-local\"\n              class=\"form-control form-control-sm\"\n              id=\"end\"\n              placeholder=\"{{ 'endDate' | i18n }}\"\n              [(ngModel)]=\"end\"\n              placeholder=\"YYYY-MM-DDTHH:MM\"\n            />\n          </div>\n          <button\n            #refreshBtn\n            [appApiAction]=\"refreshPromise\"\n            type=\"button\"\n            class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\"\n            [disabled]=\"loaded && $any(refreshBtn).loading\"\n          >\n            <i\n              class=\"bwi bwi-refresh bwi-fw\"\n              [ngClass]=\"{ 'bwi-spin': loaded && $any(refreshBtn).loading }\"\n              aria-hidden=\"true\"\n            ></i>\n            {{ \"refresh\" | i18n }}\n          </button>\n        </div>\n        <hr />\n        <div *ngIf=\"!events || !events.length\">\n          {{ \"noEventsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n          <thead>\n            <tr>\n              <th class=\"border-top-0\" width=\"210\">{{ \"timestamp\" | i18n }}</th>\n              <th class=\"border-top-0\" width=\"40\">\n                <span class=\"sr-only\">{{ \"device\" | i18n }}</span>\n              </th>\n              <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{ \"user\" | i18n }}</th>\n              <th class=\"border-top-0\">{{ \"event\" | i18n }}</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let e of events\">\n              <td>{{ e.date | date: \"medium\" }}</td>\n              <td>\n                <i\n                  class=\"text-muted bwi bwi-lg {{ e.appIcon }}\"\n                  title=\"{{ e.appName }}, {{ e.ip }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ e.appName }}, {{ e.ip }}</span>\n              </td>\n              <td *ngIf=\"showUser\">\n                <span appA11yTitle=\"{{ e.userEmail }}\">{{ e.userName }}</span>\n              </td>\n              <td [innerHTML]=\"e.message\"></td>\n            </tr>\n          </tbody>\n        </table>\n        <button\n          #moreBtn\n          [appApiAction]=\"morePromise\"\n          type=\"button\"\n          class=\"btn btn-block btn-link btn-submit\"\n          (click)=\"loadEvents(false)\"\n          [disabled]=\"loaded && $any(moreBtn).loading\"\n          *ngIf=\"continuationToken\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"loadMore\" | i18n }}</span>\n        </button>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EventResponse } from \"@bitwarden/common/models/response/event.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\n\nimport { EventService } from \"../../core\";\n\n@Component({\n  selector: \"app-entity-events\",\n  templateUrl: \"entity-events.component.html\",\n})\nexport class EntityEventsComponent implements OnInit {\n  @Input() name: string;\n  @Input() entity: \"user\" | \"cipher\";\n  @Input() entityId: string;\n  @Input() organizationId: string;\n  @Input() providerId: string;\n  @Input() showUser = false;\n\n  loading = true;\n  loaded = false;\n  events: any[];\n  start: string;\n  end: string;\n  continuationToken: string;\n  refreshPromise: Promise<any>;\n  morePromise: Promise<any>;\n\n  private orgUsersUserIdMap = new Map<string, any>();\n  private orgUsersIdMap = new Map<string, any>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private eventService: EventService,\n    private platformUtilsService: PlatformUtilsService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    const defaultDates = this.eventService.getDefaultDateFilters();\n    this.start = defaultDates[0];\n    this.end = defaultDates[1];\n    await this.load();\n  }\n\n  async load() {\n    if (this.showUser) {\n      const response = await this.organizationUserService.getAllUsers(this.organizationId);\n      response.data.forEach((u) => {\n        const name = this.userNamePipe.transform(u);\n        this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n        this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n      });\n    }\n    await this.loadEvents(true);\n    this.loaded = true;\n  }\n\n  async loadEvents(clearExisting: boolean) {\n    if (this.refreshPromise != null || this.morePromise != null) {\n      return;\n    }\n\n    let dates: string[] = null;\n    try {\n      dates = this.eventService.formatDateFilters(this.start, this.end);\n    } catch (e) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidDateRange\")\n      );\n      return;\n    }\n\n    this.loading = true;\n    let response: ListResponse<EventResponse>;\n    try {\n      let promise: Promise<any>;\n      if (this.entity === \"user\" && this.providerId) {\n        promise = this.apiService.getEventsProviderUser(\n          this.providerId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else if (this.entity === \"user\") {\n        promise = this.apiService.getEventsOrganizationUser(\n          this.organizationId,\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      } else {\n        promise = this.apiService.getEventsCipher(\n          this.entityId,\n          dates[0],\n          dates[1],\n          clearExisting ? null : this.continuationToken\n        );\n      }\n      if (clearExisting) {\n        this.refreshPromise = promise;\n      } else {\n        this.morePromise = promise;\n      }\n      response = await promise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.continuationToken = response.continuationToken;\n    const events = await Promise.all(\n      response.data.map(async (r) => {\n        const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n        const eventInfo = await this.eventService.getEventInfo(r);\n        const user =\n          this.showUser && userId != null && this.orgUsersUserIdMap.has(userId)\n            ? this.orgUsersUserIdMap.get(userId)\n            : null;\n        return {\n          message: eventInfo.message,\n          appIcon: eventInfo.appIcon,\n          appName: eventInfo.appName,\n          userId: userId,\n          userName: user != null ? user.name : this.showUser ? this.i18nService.t(\"unknown\") : null,\n          userEmail: user != null ? user.email : this.showUser ? \"\" : null,\n          date: r.date,\n          ip: r.ipAddress,\n          type: r.type,\n        };\n      })\n    );\n\n    if (!clearExisting && this.events != null && this.events.length > 0) {\n      this.events = this.events.concat(events);\n    } else {\n      this.events = events;\n    }\n\n    this.loading = false;\n    this.morePromise = null;\n    this.refreshPromise = null;\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { DisableSendPolicyComponent } from \"./disable-send.component\";\nimport { MasterPasswordPolicyComponent } from \"./master-password.component\";\nimport { PasswordGeneratorPolicyComponent } from \"./password-generator.component\";\nimport { PersonalOwnershipPolicyComponent } from \"./personal-ownership.component\";\nimport { PoliciesComponent } from \"./policies.component\";\nimport { PolicyEditComponent } from \"./policy-edit.component\";\nimport { RequireSsoPolicyComponent } from \"./require-sso.component\";\nimport { ResetPasswordPolicyComponent } from \"./reset-password.component\";\nimport { SendOptionsPolicyComponent } from \"./send-options.component\";\nimport { SingleOrgPolicyComponent } from \"./single-org.component\";\nimport { TwoFactorAuthenticationPolicyComponent } from \"./two-factor-authentication.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule],\n  declarations: [\n    DisableSendPolicyComponent,\n    MasterPasswordPolicyComponent,\n    PasswordGeneratorPolicyComponent,\n    PersonalOwnershipPolicyComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SendOptionsPolicyComponent,\n    SingleOrgPolicyComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    PoliciesComponent,\n    PolicyEditComponent,\n  ],\n  exports: [\n    DisableSendPolicyComponent,\n    MasterPasswordPolicyComponent,\n    PasswordGeneratorPolicyComponent,\n    PersonalOwnershipPolicyComponent,\n    RequireSsoPolicyComponent,\n    ResetPasswordPolicyComponent,\n    SendOptionsPolicyComponent,\n    SingleOrgPolicyComponent,\n    TwoFactorAuthenticationPolicyComponent,\n    PoliciesComponent,\n    PolicyEditComponent,\n  ],\n})\nexport class PoliciesModule {}\n","import { PolicyType } from \"../../enums/policyType\";\n\nexport class PolicyRequest {\n  type: PolicyType;\n  enabled: boolean;\n  data: any;\n}\n","import { Directive, Input, OnInit } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nexport abstract class BasePolicy {\n  abstract name: string;\n  abstract description: string;\n  abstract type: PolicyType;\n  abstract component: any;\n\n  display(organization: Organization) {\n    return true;\n  }\n}\n\n@Directive()\nexport abstract class BasePolicyComponent implements OnInit {\n  @Input() policyResponse: PolicyResponse;\n  @Input() policy: BasePolicy;\n\n  enabled = new UntypedFormControl(false);\n  data: UntypedFormGroup = null;\n\n  ngOnInit(): void {\n    this.enabled.setValue(this.policyResponse.enabled);\n\n    if (this.policyResponse.data != null) {\n      this.loadData();\n    }\n  }\n\n  loadData() {\n    this.data.patchValue(this.policyResponse.data ?? {});\n  }\n\n  buildRequestData() {\n    if (this.data != null) {\n      return this.data.value;\n    }\n\n    return null;\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>) {\n    const request = new PolicyRequest();\n    request.enabled = this.enabled.value;\n    request.type = this.policy.type;\n    request.data = this.buildRequestData();\n\n    return Promise.resolve(request);\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class DisableSendPolicy extends BasePolicy {\n  name = \"disableSend\";\n  description = \"disableSendPolicyDesc\";\n  type = PolicyType.DisableSend;\n  component = DisableSendPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-disable-send\",\n  templateUrl: \"disable-send.component.html\",\n})\nexport class DisableSendPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"disableSendExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minComplexity\">{{ \"minComplexityScore\" | i18n }}</label>\n      <select\n        id=\"minComplexity\"\n        name=\"minComplexity\"\n        formControlName=\"minComplexity\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        min=\"8\"\n        name=\"minLength\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireUpper\"\n      name=\"requireUpper\"\n      formControlName=\"requireUpper\"\n    />\n    <label class=\"form-check-label\" for=\"requireUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireLower\"\n      name=\"requireLower\"\n      formControlName=\"requireLower\"\n    />\n    <label class=\"form-check-label\" for=\"requireLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireNumbers\"\n      name=\"requireNumbers\"\n      formControlName=\"requireNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"requireNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"requireSpecial\"\n      name=\"requireSpecial\"\n      formControlName=\"requireSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"requireSpecial\">!@#$%^&amp;*</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class MasterPasswordPolicy extends BasePolicy {\n  name = \"masterPassPolicyTitle\";\n  description = \"masterPassPolicyDesc\";\n  type = PolicyType.MasterPassword;\n  component = MasterPasswordPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-master-password\",\n  templateUrl: \"master-password.component.html\",\n})\nexport class MasterPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    minComplexity: [null],\n    minLength: [null],\n    requireUpper: [null],\n    requireLower: [null],\n    requireNumbers: [null],\n    requireSpecial: [null],\n  });\n\n  passwordScores: { name: string; value: number }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    i18nService: I18nService,\n    private organizationService: OrganizationService\n  ) {\n    super();\n\n    this.passwordScores = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"weak\") + \" (0)\", value: 0 },\n      { name: i18nService.t(\"weak\") + \" (1)\", value: 1 },\n      { name: i18nService.t(\"weak\") + \" (2)\", value: 2 },\n      { name: i18nService.t(\"good\") + \" (3)\", value: 3 },\n      { name: i18nService.t(\"strong\") + \" (4)\", value: 4 },\n    ];\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","<div [formGroup]=\"data\">\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enabled\"\n        [formControl]=\"enabled\"\n        name=\"Enabled\"\n      />\n      <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-6 form-group mb-0\">\n      <label for=\"defaultType\">{{ \"defaultType\" | i18n }}</label>\n      <select\n        id=\"defaultType\"\n        name=\"defaultType\"\n        formControlName=\"defaultType\"\n        class=\"form-control\"\n      >\n        <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n    </div>\n  </div>\n  <h3 class=\"mt-4\">{{ \"password\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minLength\">{{ \"minLength\" | i18n }}</label>\n      <input\n        id=\"minLength\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minLength\"\n        min=\"5\"\n        max=\"128\"\n        formControlName=\"minLength\"\n      />\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumbers\">{{ \"minNumbers\" | i18n }}</label>\n      <input\n        id=\"minNumbers\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumbers\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minNumbers\"\n      />\n    </div>\n    <div class=\"col-6 form-group\">\n      <label for=\"minSpecial\">{{ \"minSpecial\" | i18n }}</label>\n      <input\n        id=\"minSpecial\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minSpecial\"\n        min=\"0\"\n        max=\"9\"\n        formControlName=\"minSpecial\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useUpper\"\n      formControlName=\"useUpper\"\n      name=\"useUpper\"\n    />\n    <label class=\"form-check-label\" for=\"useUpper\">A-Z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useLower\"\n      name=\"useLower\"\n      formControlName=\"useLower\"\n    />\n    <label class=\"form-check-label\" for=\"useLower\">a-z</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useNumbers\"\n      name=\"useNumbers\"\n      formControlName=\"useNumbers\"\n    />\n    <label class=\"form-check-label\" for=\"useNumbers\">0-9</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"useSpecial\"\n      name=\"useSpecial\"\n      formControlName=\"useSpecial\"\n    />\n    <label class=\"form-check-label\" for=\"useSpecial\">!@#$%^&amp;*</label>\n  </div>\n  <h3 class=\"mt-4\">{{ \"passphrase\" | i18n }}</h3>\n  <div class=\"row\">\n    <div class=\"col-6 form-group\">\n      <label for=\"minNumberWords\">{{ \"minimumNumberOfWords\" | i18n }}</label>\n      <input\n        id=\"minNumberWords\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"minNumberWords\"\n        min=\"3\"\n        max=\"20\"\n        formControlName=\"minNumberWords\"\n      />\n    </div>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"capitalize\"\n      name=\"capitalize\"\n      formControlName=\"capitalize\"\n    />\n    <label class=\"form-check-label\" for=\"capitalize\">{{ \"capitalize\" | i18n }}</label>\n  </div>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"includeNumber\"\n      name=\"includeNumber\"\n      formControlName=\"includeNumber\"\n    />\n    <label class=\"form-check-label\" for=\"includeNumber\">{{ \"includeNumber\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PasswordGeneratorPolicy extends BasePolicy {\n  name = \"passwordGenerator\";\n  description = \"passwordGeneratorPolicyDesc\";\n  type = PolicyType.PasswordGenerator;\n  component = PasswordGeneratorPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-password-generator\",\n  templateUrl: \"password-generator.component.html\",\n})\nexport class PasswordGeneratorPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    defaultType: [null],\n    minLength: [null],\n    useUpper: [null],\n    useLower: [null],\n    useNumbers: [null],\n    useSpecial: [null],\n    minNumbers: [null],\n    minSpecial: [null],\n    minNumberWords: [null],\n    capitalize: [null],\n    includeNumber: [null],\n  });\n\n  defaultTypes: { name: string; value: string }[];\n\n  constructor(private formBuilder: UntypedFormBuilder, i18nService: I18nService) {\n    super();\n\n    this.defaultTypes = [\n      { name: i18nService.t(\"userPreference\"), value: null },\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class PersonalOwnershipPolicy extends BasePolicy {\n  name = \"personalOwnership\";\n  description = \"personalOwnershipPolicyDesc\";\n  type = PolicyType.PersonalOwnership;\n  component = PersonalOwnershipPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-personal-ownership\",\n  templateUrl: \"personal-ownership.component.html\",\n})\nexport class PersonalOwnershipPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"personalOwnershipExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class RequireSsoPolicy extends BasePolicy {\n  name = \"requireSso\";\n  description = \"requireSsoPolicyDesc\";\n  type = PolicyType.RequireSso;\n  component = RequireSsoPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useSso;\n  }\n}\n\n@Component({\n  selector: \"policy-require-sso\",\n  templateUrl: \"require-sso.component.html\",\n})\nexport class RequireSsoPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    const singleOrgEnabled = policiesEnabledMap.get(PolicyType.SingleOrg) ?? false;\n    if (this.enabled.value && !singleOrgEnabled) {\n      throw new Error(this.i18nService.t(\"requireSsoPolicyReqError\"));\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"tip\" title=\"{{ 'prerequisite' | i18n }}\">\n  {{ \"requireSsoPolicyReq\" | i18n }}\n</app-callout>\n<app-callout type=\"warning\">\n  {{ \"requireSsoExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<app-callout type=\"info\" *ngIf=\"showKeyConnectorInfo\">\n  {{ \"keyConnectorPolicyRestriction\" | i18n }}\n</app-callout>\n\n<app-callout type=\"warning\">\n  {{ \"resetPasswordPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"resetPasswordPolicyAutoEnroll\" | i18n }}</h3>\n  <p>{{ \"resetPasswordPolicyAutoEnrollDescription\" | i18n }}</p>\n  <app-callout type=\"warning\">\n    {{ \"resetPasswordPolicyAutoEnrollWarning\" | i18n }}\n  </app-callout>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"autoEnrollEnabled\"\n      name=\"AutoEnrollEnabled\"\n      formControlName=\"autoEnrollEnabled\"\n    />\n    <label class=\"form-check-label\" for=\"autoEnrollEnabled\">\n      {{ \"resetPasswordPolicyAutoEnrollCheckbox\" | i18n }}\n    </label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class ResetPasswordPolicy extends BasePolicy {\n  name = \"resetPasswordPolicy\";\n  description = \"resetPasswordPolicyDescription\";\n  type = PolicyType.ResetPassword;\n  component = ResetPasswordPolicyComponent;\n\n  display(organization: Organization) {\n    return organization.useResetPassword;\n  }\n}\n\n@Component({\n  selector: \"policy-reset-password\",\n  templateUrl: \"reset-password.component.html\",\n})\nexport class ResetPasswordPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    autoEnrollEnabled: false,\n  });\n\n  defaultTypes: { name: string; value: string }[];\n  showKeyConnectorInfo = false;\n\n  constructor(\n    private formBuilder: UntypedFormBuilder,\n    private organizationService: OrganizationService\n  ) {\n    super();\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n    const organization = await this.organizationService.get(this.policyResponse.organizationId);\n    this.showKeyConnectorInfo = organization.keyConnectorEnabled;\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SendOptionsPolicy extends BasePolicy {\n  name = \"sendOptions\";\n  description = \"sendOptionsPolicyDesc\";\n  type = PolicyType.SendOptions;\n  component = SendOptionsPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-send-options\",\n  templateUrl: \"send-options.component.html\",\n})\nexport class SendOptionsPolicyComponent extends BasePolicyComponent {\n  data = this.formBuilder.group({\n    disableHideEmail: false,\n  });\n\n  constructor(private formBuilder: UntypedFormBuilder) {\n    super();\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"sendOptionsExemption\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n\n<div [formGroup]=\"data\">\n  <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"disableHideEmail\"\n      name=\"DisableHideEmail\"\n      formControlName=\"disableHideEmail\"\n    />\n    <label class=\"form-check-label\" for=\"disableHideEmail\">{{ \"disableHideEmail\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class SingleOrgPolicy extends BasePolicy {\n  name = \"singleOrg\";\n  description = \"singleOrgDesc\";\n  type = PolicyType.SingleOrg;\n  component = SingleOrgPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-single-org\",\n  templateUrl: \"single-org.component.html\",\n})\nexport class SingleOrgPolicyComponent extends BasePolicyComponent {\n  constructor(private i18nService: I18nService) {\n    super();\n  }\n\n  buildRequest(policiesEnabledMap: Map<PolicyType, boolean>): Promise<PolicyRequest> {\n    if (!this.enabled.value) {\n      if (policiesEnabledMap.get(PolicyType.RequireSso) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"requireSso\"))\n        );\n      }\n\n      if (policiesEnabledMap.get(PolicyType.MaximumVaultTimeout) ?? false) {\n        throw new Error(\n          this.i18nService.t(\"disableRequiredError\", this.i18nService.t(\"maximumVaultTimeoutLabel\"))\n        );\n      }\n    }\n\n    return super.buildRequest(policiesEnabledMap);\n  }\n}\n","<app-callout type=\"warning\">\n  {{ \"singleOrgPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { BasePolicy, BasePolicyComponent } from \"./base-policy.component\";\n\nexport class TwoFactorAuthenticationPolicy extends BasePolicy {\n  name = \"twoStepLoginPolicyTitle\";\n  description = \"twoStepLoginPolicyDesc\";\n  type = PolicyType.TwoFactorAuthentication;\n  component = TwoFactorAuthenticationPolicyComponent;\n}\n\n@Component({\n  selector: \"policy-two-factor-authentication\",\n  templateUrl: \"two-factor-authentication.component.html\",\n})\nexport class TwoFactorAuthenticationPolicyComponent extends BasePolicyComponent {}\n","<app-callout type=\"warning\">\n  {{ \"twoStepLoginPolicyWarning\" | i18n }}\n</app-callout>\n\n<div class=\"form-group\">\n  <div class=\"form-check\">\n    <input\n      class=\"form-check-input\"\n      type=\"checkbox\"\n      id=\"enabled\"\n      [formControl]=\"enabled\"\n      name=\"Enabled\"\n    />\n    <label class=\"form-check-label\" for=\"enabled\">{{ \"turnOn\" | i18n }}</label>\n  </div>\n</div>\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"policiesEditTitle\">\n          {{ \"editPolicy\" | i18n }} - {{ policy.name | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"modal-body\" *ngIf=\"loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div [hidden]=\"loading\">\n          <p>{{ policy.description | i18n }}</p>\n          <ng-template #policyForm></ng-template>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { PolicyRequest } from \"@bitwarden/common/models/request/policy.request\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { BasePolicy, BasePolicyComponent } from \"../policies\";\n\n@Component({\n  selector: \"app-policy-edit\",\n  templateUrl: \"policy-edit.component.html\",\n})\nexport class PolicyEditComponent {\n  @Input() policy: BasePolicy;\n  @Input() organizationId: string;\n  @Input() policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n  @Output() onSavedPolicy = new EventEmitter();\n\n  @ViewChild(\"policyForm\", { read: ViewContainerRef, static: true })\n  policyFormRef: ViewContainerRef;\n\n  policyType = PolicyType;\n  loading = true;\n  enabled = false;\n  formPromise: Promise<any>;\n  defaultTypes: any[];\n  policyComponent: BasePolicyComponent;\n\n  private policyResponse: PolicyResponse;\n\n  constructor(\n    private policyApiService: PolicyApiServiceAbstraction,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private logService: LogService\n  ) {}\n\n  async ngAfterViewInit() {\n    await this.load();\n    this.loading = false;\n\n    const factory = this.componentFactoryResolver.resolveComponentFactory(this.policy.component);\n    this.policyComponent = this.policyFormRef.createComponent(factory)\n      .instance as BasePolicyComponent;\n    this.policyComponent.policy = this.policy;\n    this.policyComponent.policyResponse = this.policyResponse;\n\n    this.cdr.detectChanges();\n  }\n\n  async load() {\n    try {\n      this.policyResponse = await this.policyApiService.getPolicy(\n        this.organizationId,\n        this.policy.type\n      );\n    } catch (e) {\n      if (e.statusCode === 404) {\n        this.policyResponse = new PolicyResponse({ Enabled: false });\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  async submit() {\n    let request: PolicyRequest;\n    try {\n      request = await this.policyComponent.buildRequest(this.policiesEnabledMap);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, e.message);\n      return;\n    }\n\n    try {\n      this.formPromise = this.policyApiService.putPolicy(\n        this.organizationId,\n        this.policy.type,\n        request\n      );\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"editedPolicyId\", this.i18nService.t(this.policy.name))\n      );\n      this.onSavedPolicy.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"policies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n  <tbody>\n    <tr *ngFor=\"let p of policies\">\n      <td *ngIf=\"p.display(organization)\">\n        <a href=\"#\" appStopClick (click)=\"edit(p)\">{{ p.name | i18n }}</a>\n        <span bitBadge badgeType=\"success\" *ngIf=\"policiesEnabledMap.get(p.type)\">{{\n          \"on\" | i18n\n        }}</span>\n        <small class=\"text-muted d-block\">{{ p.description | i18n }}</small>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\n\nimport { PolicyListService } from \"../../core\";\nimport { BasePolicy } from \"../policies\";\n\nimport { PolicyEditComponent } from \"./policy-edit.component\";\n\n@Component({\n  selector: \"app-org-policies\",\n  templateUrl: \"policies.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PoliciesComponent implements OnInit {\n  @ViewChild(\"editTemplate\", { read: ViewContainerRef, static: true })\n  editModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  policies: BasePolicy[];\n  organization: Organization;\n\n  private orgPolicies: PolicyResponse[];\n  protected policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private modalService: ModalService,\n    private organizationService: OrganizationService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyListService: PolicyListService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.organization = await this.organizationService.get(this.organizationId);\n      this.policies = this.policyListService.getPolicies();\n\n      await this.load();\n\n      // Handle policies component launch from Event message\n      /* eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe */\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        if (qParams.policyId != null) {\n          const policyIdFromEvents: string = qParams.policyId;\n          for (const orgPolicy of this.orgPolicies) {\n            if (orgPolicy.id === policyIdFromEvents) {\n              for (let i = 0; i < this.policies.length; i++) {\n                if (this.policies[i].type === orgPolicy.type) {\n                  this.edit(this.policies[i]);\n                  break;\n                }\n              }\n              break;\n            }\n          }\n        }\n      });\n    });\n  }\n\n  async load() {\n    const response = await this.policyApiService.getPolicies(this.organizationId);\n    this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n    this.orgPolicies.forEach((op) => {\n      this.policiesEnabledMap.set(op.type, op.enabled);\n    });\n\n    this.loading = false;\n  }\n\n  async edit(policy: BasePolicy) {\n    const [modal] = await this.modalService.openViewRef(\n      PolicyEditComponent,\n      this.editModalRef,\n      (comp) => {\n        comp.policy = policy;\n        comp.organizationId = this.organizationId;\n        comp.policiesEnabledMap = this.policiesEnabledMap;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSavedPolicy.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n      }\n    );\n  }\n}\n","import { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpdateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  keys: OrganizationKeysRequest;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      *ngIf=\"loaded\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{ \"deleteOrganization\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{\n          \"deletingOrganizationIsPermanentWarning\" | i18n: organizationName\n        }}</app-callout>\n        <p id=\"organizationDeleteDescription\">\n          <ng-container\n            *ngIf=\"\n              deleteOrganizationRequestType === 'InvalidFamiliesForEnterprise';\n              else regularDelete\n            \"\n          >\n            {{ \"orgCreatedSponsorshipInvalid\" | i18n }}\n          </ng-container>\n          <ng-template #regularDelete>\n            <ng-container *ngIf=\"organizationContentSummary.totalItemCount > 0\">\n              {{ \"deletingOrganizationContentWarning\" | i18n: organizationName }}\n              <ul>\n                <li *ngFor=\"let type of organizationContentSummary.itemCountByType\">\n                  {{ type.count }} {{ type.localizationKey | i18n }}\n                </li>\n              </ul>\n              {{ \"deletingOrganizationActiveUserAccountsWarning\" | i18n }}\n            </ng-container>\n          </ng-template>\n        </p>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteOrganization\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\n\nclass CountBasedLocalizationKey {\n  singular: string;\n  plural: string;\n\n  getKey(count: number) {\n    return count == 1 ? this.singular : this.plural;\n  }\n\n  constructor(singular: string, plural: string) {\n    this.singular = singular;\n    this.plural = plural;\n  }\n}\n\nclass OrganizationContentSummaryItem {\n  count: number;\n  get localizationKey(): string {\n    return this.localizationKeyOptions.getKey(this.count);\n  }\n  private localizationKeyOptions: CountBasedLocalizationKey;\n  constructor(count: number, localizationKeyOptions: CountBasedLocalizationKey) {\n    this.count = count;\n    this.localizationKeyOptions = localizationKeyOptions;\n  }\n}\n\nclass OrganizationContentSummary {\n  totalItemCount = 0;\n  itemCountByType: OrganizationContentSummaryItem[] = [];\n}\n\n@Component({\n  selector: \"app-delete-organization\",\n  templateUrl: \"delete-organization.component.html\",\n})\nexport class DeleteOrganizationComponent implements OnInit {\n  organizationId: string;\n  loaded: boolean;\n  deleteOrganizationRequestType: \"InvalidFamiliesForEnterprise\" | \"RegularDelete\" = \"RegularDelete\";\n  organizationName: string;\n  organizationContentSummary: OrganizationContentSummary = new OrganizationContentSummary();\n  @Output() onSuccess: EventEmitter<void> = new EventEmitter();\n\n  masterPassword: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService,\n    private cipherService: CipherService,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    await this.load();\n  }\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.organizationApiService.delete(this.organizationId, request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"organizationDeleted\"),\n        this.i18nService.t(\"organizationDeletedDesc\")\n      );\n      this.onSuccess.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async load() {\n    this.organizationName = (await this.organizationService.get(this.organizationId)).name;\n    this.organizationContentSummary = await this.buildOrganizationContentSummary();\n    this.loaded = true;\n  }\n\n  private async buildOrganizationContentSummary(): Promise<OrganizationContentSummary> {\n    const organizationContentSummary = new OrganizationContentSummary();\n    const organizationItems = (\n      await this.cipherService.getAllFromApiForOrganization(this.organizationId)\n    ).filter((item) => item.deletedDate == null);\n\n    if (organizationItems.length < 1) {\n      return organizationContentSummary;\n    }\n\n    organizationContentSummary.totalItemCount = organizationItems.length;\n    for (const cipherType of Utils.iterateEnum(CipherType)) {\n      const count = this.getOrganizationItemCountByType(organizationItems, cipherType);\n      if (count > 0) {\n        organizationContentSummary.itemCountByType.push(\n          new OrganizationContentSummaryItem(\n            count,\n            this.getOrganizationItemLocalizationKeysByType(CipherType[cipherType])\n          )\n        );\n      }\n    }\n\n    return organizationContentSummary;\n  }\n\n  private getOrganizationItemCountByType(items: CipherView[], type: CipherType) {\n    return items.filter((item) => item.type == type).length;\n  }\n\n  private getOrganizationItemLocalizationKeysByType(type: string): CountBasedLocalizationKey {\n    return new CountBasedLocalizationKey(`type${type}`, `type${type}Plural`);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"organizationInfo\" | i18n }}</h1>\n</div>\n<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"org && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"organizationName\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"org.name\"\n          [disabled]=\"selfHosted\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"billingEmail\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"billingEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BillingEmail\"\n          [(ngModel)]=\"org.billingEmail\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"businessName\">{{ \"businessName\" | i18n }}</label>\n        <input\n          id=\"businessName\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"BusinessName\"\n          [(ngModel)]=\"org.businessName\"\n          [disabled]=\"selfHosted || !canManageBilling\"\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <bit-avatar [text]=\"org.name\" [id]=\"org.id\" size=\"large\"></bit-avatar>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n  <div class=\"secondary-header border-0 mb-0\">\n    <h1>{{ \"apiKey\" | i18n }}</h1>\n  </div>\n  <p>\n    {{ \"apiKeyDesc\" | i18n }}\n    <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n      {{ \"learnMore\" | i18n }}\n    </a>\n  </p>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">\n    {{ \"viewApiKey\" | i18n }}\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">\n    {{ \"rotateApiKey\" | i18n }}\n  </button>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"deleteOrganization()\">\n      {{ \"deleteOrganization\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { OrganizationUpdateRequest } from \"@bitwarden/common/models/request/organization-update.request\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organization.response\";\n\nimport { ApiKeyComponent } from \"../../settings/api-key.component\";\nimport { PurgeVaultComponent } from \"../../settings/purge-vault.component\";\n\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\n\n@Component({\n  selector: \"app-org-account\",\n  templateUrl: \"account.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccountComponent {\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n  @ViewChild(\"purgeOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"apiKeyTemplate\", { read: ViewContainerRef, static: true })\n  apiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateApiKeyModalRef: ViewContainerRef;\n\n  selfHosted = false;\n  canManageBilling = true;\n  loading = true;\n  canUseApi = false;\n  org: OrganizationResponse;\n  formPromise: Promise<OrganizationResponse>;\n  taxFormPromise: Promise<unknown>;\n\n  private organizationId: string;\n\n  constructor(\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private router: Router,\n    private organizationService: OrganizationService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      this.canManageBilling = this.organizationService.get(this.organizationId).canManageBilling;\n      try {\n        this.org = await this.organizationApiService.get(this.organizationId);\n        this.canUseApi = this.org.useApi;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    });\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      const request = new OrganizationUpdateRequest();\n      request.name = this.org.name;\n      request.businessName = this.org.businessName;\n      request.billingEmail = this.org.billingEmail;\n\n      // Backfill pub/priv key if necessary\n      if (!this.org.hasPublicAndPrivateKeys) {\n        const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n        request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n      }\n\n      this.formPromise = this.organizationApiService.save(this.organizationId, request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"organizationUpdated\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteOrganization() {\n    await this.modalService.openViewRef(\n      DeleteOrganizationComponent,\n      this.deleteModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSuccess.subscribe(() => {\n          this.router.navigate([\"/\"]);\n        });\n      }\n    );\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef, (comp) => {\n      comp.organizationId = this.organizationId;\n    });\n  }\n\n  async viewApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.apiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.getOrCreateApiKey.bind(\n        this.organizationApiService\n      );\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyDesc\";\n    });\n  }\n\n  async rotateApiKey() {\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateApiKeyModalRef, (comp) => {\n      comp.keyType = \"organization\";\n      comp.isRotation = true;\n      comp.entityId = this.organizationId;\n      comp.postKey = this.organizationApiService.rotateApiKey.bind(this.organizationApiService);\n      comp.scope = \"api.organization\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"apiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"settings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\" *ngIf=\"organization$ | async as org\">\n          <a\n            routerLink=\"account\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"org.isOwner\"\n          >\n            {{ \"organizationInfo\" | i18n }}\n          </a>\n          <a\n            routerLink=\"policies\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"org.canManagePolicies\"\n          >\n            {{ \"policies\" | i18n }}\n          </a>\n          <a\n            routerLink=\"two-factor\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"org.use2fa && org.isOwner\"\n          >\n            {{ \"twoStepLogin\" | i18n }}\n          </a>\n          <a\n            routerLink=\"tools/import\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"org.canAccessImportExport\"\n          >\n            {{ \"importData\" | i18n }}\n          </a>\n          <a\n            routerLink=\"tools/export\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"org.canAccessImportExport\"\n          >\n            {{ \"exportVault\" | i18n }}\n          </a>\n          <a\n            routerLink=\"domain-verification\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"org?.canManageDomainVerification\"\n          >\n            {{ \"domainVerification\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sso\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"org.canManageSso\"\n          >\n            {{ \"singleSignOn\" | i18n }}\n          </a>\n          <a\n            routerLink=\"scim\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"org.canManageScim\"\n          >\n            {{ \"scim\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { Observable, switchMap } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit {\n  organization$: Observable<Organization>;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    this.organization$ = this.route.params.pipe(\n      switchMap((params) => this.organizationService.get$(params.organizationId))\n    );\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<div [ngClass]=\"tabbedHeader ? 'tabbed-header' : 'page-header'\">\n  <h1 *ngIf=\"!organizationId\">{{ \"twoStepLogin\" | i18n }}</h1>\n  <h1 *ngIf=\"organizationId\">{{ \"twoStepLoginEnforcement\" | i18n }}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{ \"twoStepLoginDesc\" | i18n }}</p>\n<ng-container *ngIf=\"organizationId\">\n  <p>\n    {{ \"twoStepLoginOrganizationDescStart\" | i18n }}\n    <a routerLink=\"../policies\">{{ \"twoStepLoginPolicy\" | i18n }}.</a>\n    <br />\n    {{ \"twoStepLoginOrganizationDuoDesc\" | i18n }}\n  </p>\n  <p>{{ \"twoStepLoginOrganizationSsoDesc\" | i18n }}</p>\n</ng-container>\n<bit-callout type=\"warning\" *ngIf=\"!organizationId\">\n  <p>{{ \"twoStepLoginRecoveryWarning\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"recoveryCode()\">\n    {{ \"viewRecoveryCode\" | i18n }}\n  </button>\n</bit-callout>\n<h2 [ngClass]=\"{ 'mt-5': !organizationId }\">\n  {{ \"providers\" | i18n }}\n  <small *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-fw text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </small>\n</h2>\n<bit-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n  {{ \"twoStepLoginPolicyUserWarning\" | i18n }}\n</bit-callout>\n<ul class=\"list-group list-group-2fa\">\n  <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n    <div class=\"logo-2fa d-flex justify-content-center\">\n      <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n    </div>\n    <div class=\"mx-4\">\n      <h3 class=\"mb-0\">\n        {{ p.name }}\n        <ng-container *ngIf=\"p.enabled\">\n          <i\n            class=\"bwi bwi-check text-success bwi-fw\"\n            title=\"{{ 'enabled' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"enabled\" | i18n }}</span>\n        </ng-container>\n        <app-premium-badge *ngIf=\"p.premium\"></app-premium-badge>\n      </h3>\n      {{ p.description }}\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        [disabled]=\"!canAccessPremium && p.premium\"\n        (click)=\"manage(p.type)\"\n      >\n        {{ \"manage\" | i18n }}\n      </button>\n    </div>\n  </li>\n</ul>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #webAuthnTemplate></ng-template>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\n\nimport { TwoFactorDuoComponent } from \"../../../auth/settings/two-factor-duo.component\";\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from \"../../../auth/settings/two-factor-setup.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"../../../auth/settings/two-factor-setup.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n  tabbedHeader = false;\n  constructor(\n    apiService: ApiService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    private route: ActivatedRoute,\n    stateService: StateService\n  ) {\n    super(apiService, modalService, messagingService, policyService, stateService);\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await super.ngOnInit();\n    });\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.OrganizationDuo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        duoComp.type = TwoFactorProviderType.OrganizationDuo;\n        duoComp.organizationId = this.organizationId;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type !== TwoFactorProviderType.OrganizationDuo;\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { canAccessSettingsTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { OrganizationPermissionsGuard } from \"../guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"../guards/org-redirect.guard\";\nimport { PoliciesComponent } from \"../policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SettingsComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: { organizationPermissions: canAccessSettingsTab },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        canActivate: [OrganizationRedirectGuard],\n        data: {\n          autoRedirectCallback: getSettingsRoute,\n        },\n        children: [], // This is required to make the auto redirect work,\n      },\n      { path: \"account\", component: AccountComponent, data: { titleId: \"organizationInfo\" } },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"policies\",\n        component: PoliciesComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          organizationPermissions: (org: Organization) => org.canManagePolicies,\n          titleId: \"policies\",\n        },\n      },\n      {\n        path: \"tools\",\n        loadChildren: () =>\n          import(\"../tools/import-export/org-import-export.module\").then(\n            (m) => m.OrganizationImportExportModule\n          ),\n      },\n    ],\n  },\n];\n\nfunction getSettingsRoute(organization: Organization) {\n  if (organization.isOwner) {\n    return \"account\";\n  }\n  if (organization.canManagePolicies) {\n    return \"policies\";\n  }\n  if (organization.canAccessImportExport) {\n    return [\"tools\", \"import\"];\n  }\n  if (organization.canManageSso) {\n    return \"sso\";\n  }\n  if (organization.canManageScim) {\n    return \"scim\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationSettingsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { PoliciesModule } from \"../policies\";\n\nimport { AccountComponent } from \"./account.component\";\nimport { DeleteOrganizationComponent } from \"./delete-organization.component\";\nimport { OrganizationSettingsRoutingModule } from \"./organization-settings-routing.module\";\nimport { SettingsComponent } from \"./settings.component\";\nimport { TwoFactorSetupComponent } from \"./two-factor-setup.component\";\n\n@NgModule({\n  imports: [SharedModule, LooseComponentsModule, PoliciesModule, OrganizationSettingsRoutingModule],\n  declarations: [\n    SettingsComponent,\n    AccountComponent,\n    DeleteOrganizationComponent,\n    TwoFactorSetupComponent,\n  ],\n})\nexport class OrganizationSettingsModule {}\n","import { AbstractControl, FormArray } from \"@angular/forms\";\n\nexport type SelectionItemId = {\n  id: string;\n};\n\nfunction findSortedIndex<T>(sortedArray: T[], val: T, compareFn: (a: T, b: T) => number) {\n  let low = 0;\n  let high = sortedArray.length || 0;\n  let mid = -1,\n    c = 0;\n  while (low < high) {\n    mid = Math.floor((low + high) / 2);\n    c = compareFn(sortedArray[mid], val);\n    if (c < 0) {\n      low = mid + 1;\n    } else if (c > 0) {\n      high = mid;\n    } else {\n      return mid;\n    }\n  }\n  return low;\n}\n\n/**\n * Utility to help manage a list of selectable items for use with Reactive Angular forms and FormArrays.\n *\n * It supports selecting/deselecting items, keeping items sorted, and synchronizing the selected items\n * with an array of FormControl.\n *\n * The first type parameter TItem represents the item being selected/deselected, it must have an `id`\n * property for identification/comparison. The second type parameter TControlValue represents the value\n * type of the form control.\n */\nexport class FormSelectionList<\n  TItem extends SelectionItemId,\n  TControlValue extends SelectionItemId\n> {\n  allItems: TItem[] = [];\n  /**\n   * Sorted list of selected items\n   * Immutable and should be recreated whenever a modification is made\n   */\n  selectedItems: TItem[] = [];\n\n  /**\n   * Sorted list of deselected items\n   * Immutable and should be recreated whenever a modification is made\n   */\n  deselectedItems: TItem[] = [];\n\n  /**\n   * Sorted FormArray that corresponds and stays in sync with the selectedItems\n   */\n  formArray: FormArray<AbstractControl<Partial<TControlValue>, TControlValue>> = new FormArray([]);\n\n  /**\n   * Construct a new FormSelectionList\n   * @param controlFactory - Factory responsible for creating initial form controls for each selected item. It is\n   * provided a copy of the selected item for any form control initialization logic. Specify any additional form\n   * control options or validators here.\n   * @param compareFn - Comparison function used for sorting the items.\n   */\n  constructor(\n    private controlFactory: (item: TItem) => AbstractControl<Partial<TControlValue>, TControlValue>,\n    private compareFn: (a: TItem, b: TItem) => number\n  ) {}\n\n  /**\n   * Select multiple items by their ids at once. Optionally provide an initial form control value.\n   * @param ids - List of ids to select\n   * @param initialValue - Value that will be applied to the corresponding form controls\n   * The provided `id` arguments will be automatically assigned to each form control value\n   */\n  selectItems(ids: string[], initialValue?: Partial<TControlValue> | undefined) {\n    for (const id of ids) {\n      this.selectItem(id, initialValue);\n    }\n  }\n\n  /**\n   * Deselect multiple items by their ids at once\n   * @param ids - List of ids to deselect\n   */\n  deselectItems(ids: string[]) {\n    for (const id of ids) {\n      this.deselectItem(id);\n    }\n  }\n\n  deselectAll() {\n    this.formArray.clear();\n    this.selectedItems = [];\n    this.deselectedItems = [...this.allItems];\n  }\n\n  /**\n   * Select a single item by id.\n   *\n   * Maintains list order for both selected items, deselected items, and the FormArray.\n   *\n   * @param id - Id of the item to select\n   * @param initialValue - Value that will be applied to the corresponding form control for the selected item.\n   * The provided `id` argument will be automatically assigned unless explicitly set in the initialValue.\n   */\n  selectItem(id: string, initialValue?: Partial<TControlValue>) {\n    const index = this.deselectedItems.findIndex((o) => o.id === id);\n\n    if (index === -1) {\n      return;\n    }\n\n    const selectedOption = this.deselectedItems[index];\n\n    // Note: Changes to the deselected/selected arrays must create a new copy of the array\n    // in order for Angular's Change Detection to pick up the modification (i.e. treat the arrays as immutable)\n\n    // Remove from the list of deselected options\n    this.deselectedItems = [\n      ...this.deselectedItems.slice(0, index),\n      ...this.deselectedItems.slice(index + 1),\n    ];\n\n    // Insert into the sorted selected options list\n    const sortedInsertIndex = findSortedIndex(this.selectedItems, selectedOption, this.compareFn);\n\n    this.selectedItems = [\n      ...this.selectedItems.slice(0, sortedInsertIndex),\n      selectedOption,\n      ...this.selectedItems.slice(sortedInsertIndex),\n    ];\n\n    const newControl = this.controlFactory(selectedOption);\n\n    // Patch the value and ensure the `id` is set\n    newControl.patchValue({\n      id,\n      ...initialValue,\n    });\n\n    this.formArray.insert(sortedInsertIndex, newControl);\n  }\n\n  /**\n   * Deselect a single item by id.\n   *\n   * Maintains list order for both selected items, deselected items, and the FormArray.\n   *\n   * @param id - Id of the item to deselect\n   */\n  deselectItem(id: string) {\n    const index = this.selectedItems.findIndex((o) => o.id === id);\n\n    if (index === -1) {\n      return;\n    }\n\n    const deselectedOption = this.selectedItems[index];\n\n    // Note: Changes to the deselected/selected arrays must create a new copy of the array\n    // in order for Angular's Change Detection to pick up the modification (i.e. treat the arrays as immutable)\n\n    // Remove from the list of selected items (and FormArray)\n    this.selectedItems = [\n      ...this.selectedItems.slice(0, index),\n      ...this.selectedItems.slice(index + 1),\n    ];\n    this.formArray.removeAt(index);\n\n    // Insert into the sorted deselected array\n    const sortedInsertIndex = findSortedIndex(\n      this.deselectedItems,\n      deselectedOption,\n      this.compareFn\n    );\n\n    this.deselectedItems = [\n      ...this.deselectedItems.slice(0, sortedInsertIndex),\n      deselectedOption,\n      ...this.deselectedItems.slice(sortedInsertIndex),\n    ];\n  }\n\n  /**\n   * Populate the list of deselected items, and optional specify which items should be selected and with what initial\n   * value for their Form Control\n   * @param items - A list of all items. (Will be sorted internally)\n   * @param selectedItems - The items to select initially\n   */\n  populateItems(items: TItem[], selectedItems: TControlValue[] = []) {\n    this.formArray.clear();\n    this.allItems = [...items].sort(this.compareFn);\n    this.selectedItems = [];\n    this.deselectedItems = [...this.allItems];\n\n    for (const selectedItem of selectedItems) {\n      this.selectItem(selectedItem.id, selectedItem);\n    }\n  }\n}\n","<ng-select\n  [items]=\"baseItems\"\n  [(ngModel)]=\"selectedItems\"\n  (ngModelChange)=\"onChange($event)\"\n  (blur)=\"onBlur()\"\n  bindLabel=\"listName\"\n  groupBy=\"parentGrouping\"\n  [placeholder]=\"placeholder\"\n  [loading]=\"loading\"\n  [loadingText]=\"loadingText\"\n  notFoundText=\"{{ 'multiSelectNotFound' | i18n }}\"\n  clearAllText=\"{{ 'multiSelectClearAll' | i18n }}\"\n  [multiple]=\"true\"\n  [selectOnTab]=\"true\"\n  [closeOnSelect]=\"false\"\n  (close)=\"onDropdownClosed()\"\n  [disabled]=\"disabled\"\n  [clearSearchOnAdd]=\"true\"\n  [labelForId]=\"labelForId\"\n  [keyDownFn]=\"keyDown\"\n  appendTo=\"body\"\n>\n  <ng-template ng-loadingspinner-tmp>\n    <i class=\"bwi bwi-spinner bwi-spin tw-mr-1\" [title]=\"loadingText\" aria-hidden=\"true\"></i>\n  </ng-template>\n  <ng-template ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n    <button\n      type=\"button\"\n      bitBadge\n      badgeType=\"primary\"\n      class=\"tw-mr-1 disabled:tw-border-0\"\n      [disabled]=\"disabled\"\n      (click)=\"clear(item)\"\n    >\n      <i\n        *ngIf=\"item.icon != null\"\n        class=\"tw-mr-1 bwi bwi-fw {{ item.icon }}\"\n        aria-hidden=\"true\"\n      ></i>\n      {{ item.labelName }}\n      <i class=\"bwi bwi-fw bwi-close bwi-sm tw-ml-1\" aria-hidden=\"true\"></i>\n    </button>\n  </ng-template>\n  <ng-template ng-option-tmp let-item=\"item\">\n    <div class=\"tw-flex\">\n      <div class=\"tw-w-7 tw-flex-none\">\n        <i *ngIf=\"isSelected(item)\" class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n      </div>\n      <div class=\"tw-mr-2 tw-flex-initial\">\n        <i *ngIf=\"item.icon != null\" class=\"bwi bwi-fw {{ item.icon }}\" aria-hidden=\"true\"></i>\n      </div>\n      <div class=\"tw-flex-1\">\n        {{ item.listName }}\n      </div>\n    </div>\n  </ng-template>\n</ng-select>\n","import { hasModifierKey } from \"@angular/cdk/keycodes\";\nimport {\n  Component,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  EventEmitter,\n  HostBinding,\n  Optional,\n  Self,\n} from \"@angular/core\";\nimport { ControlValueAccessor, NgControl, Validators } from \"@angular/forms\";\nimport { NgSelectComponent } from \"@ng-select/ng-select\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitFormFieldControl } from \"../form-field/form-field-control\";\n\nimport { SelectItemView } from \"./models/select-item-view\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-multi-select\",\n  templateUrl: \"./multi-select.component.html\",\n  providers: [{ provide: BitFormFieldControl, useExisting: MultiSelectComponent }],\n})\n/**\n * This component has been implemented to only support Multi-select list events\n */\nexport class MultiSelectComponent implements OnInit, BitFormFieldControl, ControlValueAccessor {\n  @ViewChild(NgSelectComponent) select: NgSelectComponent;\n\n  // Parent component should only pass selectable items (complete list - selected items = baseItems)\n  @Input() baseItems: SelectItemView[];\n  // Defaults to native ng-select behavior - set to \"true\" to clear selected items on dropdown close\n  @Input() removeSelectedItems = false;\n  @Input() placeholder: string;\n  @Input() loading = false;\n  @Input() disabled = false;\n\n  // Internal tracking of selected items\n  @Input() selectedItems: SelectItemView[];\n\n  // Default values for our implementation\n  loadingText: string;\n\n  protected searchInputId = `search-input-${nextId++}`;\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  private notifyOnChange?: (value: SelectItemView[]) => void;\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  private notifyOnTouched?: () => void;\n\n  @Output() onItemsConfirmed = new EventEmitter<any[]>();\n\n  constructor(private i18nService: I18nService, @Optional() @Self() private ngControl?: NgControl) {\n    if (ngControl != null) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n    // Default Text Values\n    this.placeholder = this.placeholder ?? this.i18nService.t(\"multiSelectPlaceholder\");\n    this.loadingText = this.i18nService.t(\"multiSelectLoading\");\n  }\n\n  /** Function for customizing keyboard navigation */\n  /** Needs to be arrow function to retain `this` scope. */\n  keyDown = (event: KeyboardEvent) => {\n    if (!this.select.isOpen && event.key === \"Enter\" && !hasModifierKey(event)) {\n      return false;\n    }\n\n    if (this.select.isOpen && event.key === \"Enter\" && !hasModifierKey(event)) {\n      this.select.close();\n      event.preventDefault();\n      return false;\n    }\n\n    if (this.select.isOpen && event.key === \"Escape\" && !hasModifierKey(event)) {\n      this.selectedItems = [];\n      this.select.close();\n      event.stopPropagation();\n      return false;\n    }\n\n    return true;\n  };\n\n  /** Helper method for showing selected state in custom template */\n  isSelected(item: any): boolean {\n    return this.selectedItems?.find((selected) => selected.id === item.id) != undefined;\n  }\n\n  /**\n   * The `close` callback will act as the only trigger for signifying the user's intent of completing the selection\n   * of items. Selected items will be emitted to the parent component in order to allow for separate data handling.\n   */\n  onDropdownClosed(): void {\n    // Early exit\n    if (this.selectedItems == null || this.selectedItems.length == 0) {\n      return;\n    }\n\n    // Emit results to parent component\n    this.onItemsConfirmed.emit(this.selectedItems);\n\n    // Remove selected items from base list based on input property\n    if (this.removeSelectedItems) {\n      let updatedBaseItems = this.baseItems;\n      this.selectedItems.forEach((selectedItem) => {\n        updatedBaseItems = updatedBaseItems.filter((item) => selectedItem.id !== item.id);\n      });\n\n      // Reset Lists\n      this.selectedItems = null;\n      this.baseItems = updatedBaseItems;\n    }\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  writeValue(obj: SelectItemView[]): void {\n    this.selectedItems = obj;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  registerOnChange(fn: (value: SelectItemView[]) => void): void {\n    this.notifyOnChange = fn;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  registerOnTouched(fn: any): void {\n    this.notifyOnTouched = fn;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  protected onChange(items: SelectItemView[]) {\n    if (!this.notifyOnChange) {\n      return;\n    }\n\n    this.notifyOnChange(items);\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  protected onBlur() {\n    if (!this.notifyOnTouched) {\n      return;\n    }\n\n    this.notifyOnTouched();\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding(\"attr.aria-describedby\")\n  get ariaDescribedBy() {\n    return this._ariaDescribedBy;\n  }\n  set ariaDescribedBy(value: string) {\n    this._ariaDescribedBy = value;\n    this.select?.searchInput.nativeElement.setAttribute(\"aria-describedby\", value);\n  }\n  private _ariaDescribedBy: string;\n\n  /**Implemented as part of BitFormFieldControl */\n  get labelForId() {\n    return this.searchInputId;\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding() @Input() id = `bit-multi-select-${nextId++}`;\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding(\"attr.required\")\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  /**Implemented as part of BitFormFieldControl */\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl?.errors)[0];\n    return [key, this.ngControl?.errors[key]];\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\n\n@Pipe({\n  name: \"userType\",\n})\nexport class UserTypePipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(value?: OrganizationUserType, unknownText?: string): string {\n    if (value == null) {\n      return unknownText ?? this.i18nService.t(\"unknown\");\n    }\n    switch (value) {\n      case OrganizationUserType.Owner:\n        return this.i18nService.t(\"owner\");\n      case OrganizationUserType.Admin:\n        return this.i18nService.t(\"admin\");\n      case OrganizationUserType.User:\n        return this.i18nService.t(\"user\");\n      case OrganizationUserType.Manager:\n        return this.i18nService.t(\"manager\");\n      case OrganizationUserType.Custom:\n        return this.i18nService.t(\"custom\");\n    }\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable tailwindcss/no-custom-classname -->\n<div class=\"tw-flex\">\n  <bit-form-field *ngIf=\"permissionMode == 'edit'\" class=\"tw-mr-3 tw-shrink-0\">\n    <bit-label>{{ \"permission\" | i18n }}</bit-label>\n    <!--\n      Built-in select height differs between browsers, this fix makes sure we match bit-multi-select height.\n      We might want to reconsider this fix when/if we implement\n      [CL-78] [Improvement] Completely restyled selects (https://bitwarden.atlassian.net/browse/CL-78)\n    -->\n    <select\n      class=\"tw-h-[35px]\"\n      bitInput\n      [disabled]=\"disabled\"\n      [(ngModel)]=\"initialPermission\"\n      [ngModelOptions]=\"{ standalone: true }\"\n      (blur)=\"handleBlur()\"\n    >\n      <option *ngFor=\"let p of permissionList\" [value]=\"p.perm\">\n        {{ p.labelId | i18n }}\n      </option>\n    </select>\n  </bit-form-field>\n\n  <bit-form-field class=\"tw-grow\">\n    <bit-label>{{ selectorLabelText }}</bit-label>\n    <bit-multi-select\n      class=\"tw-w-full\"\n      [baseItems]=\"selectionList.deselectedItems\"\n      [removeSelectedItems]=\"true\"\n      [disabled]=\"disabled\"\n      (onItemsConfirmed)=\"selectItems($event)\"\n      (blur)=\"handleBlur()\"\n    ></bit-multi-select>\n    <bit-hint *ngIf=\"selectorHelpText\">{{ selectorHelpText }}</bit-hint>\n  </bit-form-field>\n</div>\n\n<bit-table [formGroup]=\"formGroup\">\n  <ng-container header>\n    <tr>\n      <th bitCell>{{ columnHeader }}</th>\n      <th bitCell id=\"permissionColHeading\" *ngIf=\"permissionMode != 'hidden'\">\n        <div class=\"tw-border tw-border-solid tw-border-transparent\">\n          {{ \"permission\" | i18n }}\n        </div>\n      </th>\n      <th bitCell id=\"roleColHeading\" *ngIf=\"showMemberRoles\">{{ \"role\" | i18n }}</th>\n      <th bitCell id=\"groupColHeading\" *ngIf=\"showGroupColumn\">{{ \"group\" | i18n }}</th>\n      <th bitCell class=\"tw-w-20\"></th>\n    </tr>\n  </ng-container>\n  <ng-template body formArrayName=\"items\">\n    <tr\n      bitRow\n      *ngFor=\"let item of selectionList.selectedItems; let i = index\"\n      [formGroupName]=\"i\"\n      [ngClass]=\"{ 'tw-text-muted': item.readonly }\"\n    >\n      <td bitCell [ngSwitch]=\"item.type\">\n        <div class=\"tw-flex tw-items-center\" *ngSwitchCase=\"itemType.Member\">\n          <bit-avatar size=\"small\" class=\"tw-mr-3\" text=\"{{ item.labelName }}\"></bit-avatar>\n          <div class=\"tw-flex tw-flex-col\">\n            <div>\n              {{ item.labelName }}\n              <span *ngIf=\"$any(item).status == 0\" bitBadge badgeType=\"secondary\">\n                {{ \"invited\" | i18n }}\n              </span>\n            </div>\n            <div class=\"tw-text-xs tw-text-muted\" *ngIf=\"$any(item).status != 0\">\n              {{ $any(item).email }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"tw-flex tw-items-center\" *ngSwitchDefault>\n          <i\n            class=\"bwi tw-mr-3 tw-px-0.5 tw-text-2xl\"\n            [ngClass]=\"item.icon || itemIcon(item)\"\n            aria-hidden=\"true\"\n          ></i>\n          <span>{{ item.labelName }}</span>\n        </div>\n      </td>\n\n      <td bitCell *ngIf=\"permissionMode != 'hidden'\">\n        <ng-container *ngIf=\"canEditItemPermission(item); else readOnlyPerm\">\n          <label class=\"sr-only\" [for]=\"'permission' + i\"\n            >{{ item.labelName }} {{ \"permission\" | i18n }}</label\n          >\n          <div class=\"tw-relative tw-inline-block\">\n            <select\n              bitInput\n              class=\"tw-apperance-none -tw-ml-3 tw-max-w-40 tw-appearance-none tw-overflow-ellipsis !tw-rounded tw-border-transparent !tw-bg-transparent tw-pr-6 tw-font-bold hover:tw-border-primary-700\"\n              formControlName=\"permission\"\n              [id]=\"'permission' + i\"\n              (blur)=\"handleBlur()\"\n            >\n              <option *ngFor=\"let p of permissionList\" [value]=\"p.perm\">\n                {{ p.labelId | i18n }}\n              </option>\n            </select>\n            <label\n              [for]=\"'permission' + i\"\n              class=\"tw-absolute tw-inset-y-0 tw-right-4 tw-mb-0 tw-flex tw-items-center\"\n            >\n              <i class=\"bwi bwi-sm bwi-angle-down tw-leading-[0]\"></i>\n            </label>\n          </div>\n        </ng-container>\n\n        <ng-template #readOnlyPerm>\n          <div\n            *ngIf=\"item.accessAllItems\"\n            class=\"tw-max-w-40 tw-overflow-hidden tw-overflow-ellipsis tw-whitespace-nowrap tw-border tw-border-solid tw-border-transparent tw-font-bold tw-text-muted\"\n            [appA11yTitle]=\"accessAllLabelId(item) | i18n\"\n          >\n            {{ \"canEdit\" | i18n }}\n            <i class=\"bwi bwi-filter tw-ml-1\" aria-hidden=\"true\"></i>\n          </div>\n\n          <div\n            *ngIf=\"item.readonly\"\n            class=\"tw-max-w-40 tw-overflow-hidden tw-overflow-ellipsis tw-whitespace-nowrap tw-font-bold tw-text-muted\"\n            [title]=\"permissionLabelId(item.readonlyPermission) | i18n\"\n          >\n            {{ permissionLabelId(item.readonlyPermission) | i18n }}\n          </div>\n        </ng-template>\n      </td>\n\n      <td bitCell *ngIf=\"showMemberRoles\">\n        {{ $any(item).role | userType: \"-\" }}\n      </td>\n\n      <td bitCell *ngIf=\"showGroupColumn\">\n        {{ $any(item).viaGroupName ?? \"-\" }}\n      </td>\n\n      <td bitCell class=\"tw-text-right\">\n        <button\n          *ngIf=\"!item.readonly\"\n          type=\"button\"\n          bitIconButton=\"bwi-close\"\n          buttonType=\"muted\"\n          appA11yTitle=\"{{ 'remove' | i18n }} {{ item.labelName }}\"\n          [disabled]=\"disabled\"\n          (click)=\"selectionList.deselectItem(item.id); handleBlur()\"\n        ></button>\n      </td>\n    </tr>\n    <tr *ngIf=\"selectionList.selectedItems.length == 0\">\n      <td bitCell>{{ emptySelectionText }}</td>\n    </tr>\n  </ng-template>\n</bit-table>\n","import { Component, forwardRef, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { ControlValueAccessor, FormBuilder, NG_VALUE_ACCESSOR } from \"@angular/forms\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { FormSelectionList } from \"@bitwarden/angular/utils/form-selection-list\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { SelectItemView } from \"@bitwarden/components/src/multi-select/models/select-item-view\";\n\nimport {\n  AccessItemType,\n  AccessItemValue,\n  AccessItemView,\n  CollectionPermission,\n} from \"./access-selector.models\";\n\nexport enum PermissionMode {\n  /**\n   * No permission controls or column present. No permission values are emitted.\n   */\n  Hidden = \"hidden\",\n\n  /**\n   * No permission controls. Column rendered an if available on an item. No permission values are emitted\n   */\n  Readonly = \"readonly\",\n\n  /**\n   * Permission Controls and column present. Permission values are emitted.\n   */\n  Edit = \"edit\",\n}\n\n@Component({\n  selector: \"bit-access-selector\",\n  templateUrl: \"access-selector.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AccessSelectorComponent),\n      multi: true,\n    },\n  ],\n})\nexport class AccessSelectorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  private notifyOnChange: (v: unknown) => void;\n  private notifyOnTouch: () => void;\n  private pauseChangeNotification: boolean;\n\n  /**\n   * The internal selection list that tracks the value of this form control / component.\n   * It's responsible for keeping items sorted and synced with the rendered form controls\n   * @protected\n   */\n  protected selectionList = new FormSelectionList<AccessItemView, AccessItemValue>((item) => {\n    const permissionControl = this.formBuilder.control(this.initialPermission);\n\n    const fg = this.formBuilder.group({\n      id: item.id,\n      type: item.type,\n      permission: permissionControl,\n    });\n\n    // Disable entire row form group if readonly\n    if (item.readonly) {\n      fg.disable();\n    }\n\n    // Disable permission control if accessAllItems is enabled\n    if (item.accessAllItems || this.permissionMode != PermissionMode.Edit) {\n      permissionControl.disable();\n    }\n\n    return fg;\n  }, this._itemComparator.bind(this));\n\n  /**\n   * Internal form group for this component.\n   * @protected\n   */\n  protected formGroup = this.formBuilder.group({\n    items: this.selectionList.formArray,\n  });\n\n  protected itemType = AccessItemType;\n  protected permissionList = [\n    { perm: CollectionPermission.View, labelId: \"canView\" },\n    { perm: CollectionPermission.ViewExceptPass, labelId: \"canViewExceptPass\" },\n    { perm: CollectionPermission.Edit, labelId: \"canEdit\" },\n    { perm: CollectionPermission.EditExceptPass, labelId: \"canEditExceptPass\" },\n  ];\n  protected initialPermission = CollectionPermission.View;\n\n  disabled: boolean;\n\n  /**\n   * List of all selectable items that. Sorted internally.\n   */\n  @Input()\n  get items(): AccessItemView[] {\n    return this.selectionList.allItems;\n  }\n\n  set items(val: AccessItemView[]) {\n    const selected = (this.selectionList.formArray.getRawValue() ?? []).concat(\n      val.filter((m) => m.readonly)\n    );\n    this.selectionList.populateItems(\n      val.map((m) => {\n        m.icon = m.icon ?? this.itemIcon(m); // Ensure an icon is set\n        return m;\n      }),\n      selected\n    );\n  }\n\n  /**\n   * Permission mode that controls if the permission form controls and column should be present.\n   */\n  @Input()\n  get permissionMode(): PermissionMode {\n    return this._permissionMode;\n  }\n\n  set permissionMode(value: PermissionMode) {\n    this._permissionMode = value;\n    // Toggle any internal permission controls\n    for (const control of this.selectionList.formArray.controls) {\n      if (value == PermissionMode.Edit) {\n        control.get(\"permission\").enable();\n      } else {\n        control.get(\"permission\").disable();\n      }\n    }\n  }\n  private _permissionMode: PermissionMode = PermissionMode.Hidden;\n\n  /**\n   * Column header for the selected items table\n   */\n  @Input() columnHeader: string;\n\n  /**\n   * Label used for the ng selector\n   */\n  @Input() selectorLabelText: string;\n\n  /**\n   * Helper text displayed under the ng selector\n   */\n  @Input() selectorHelpText: string;\n\n  /**\n   * Text that is shown in the table when no items are selected\n   */\n  @Input() emptySelectionText: string;\n\n  /**\n   * Flag for if the member roles column should be present\n   */\n  @Input() showMemberRoles: boolean;\n\n  /**\n   * Flag for if the group column should be present\n   */\n  @Input() showGroupColumn: boolean;\n\n  constructor(\n    private readonly formBuilder: FormBuilder,\n    private readonly i18nService: I18nService\n  ) {}\n\n  /** Required for NG_VALUE_ACCESSOR */\n  registerOnChange(fn: any): void {\n    this.notifyOnChange = fn;\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  registerOnTouched(fn: any): void {\n    this.notifyOnTouch = fn;\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n\n    // Keep the internal FormGroup in sync\n    if (this.disabled) {\n      this.formGroup.disable();\n    } else {\n      this.formGroup.enable();\n    }\n  }\n\n  /** Required for NG_VALUE_ACCESSOR */\n  writeValue(selectedItems: AccessItemValue[]): void {\n    // Modifying the selection list, mistakenly fires valueChanges in the\n    // internal form array, so we need to know to pause external notification\n    this.pauseChangeNotification = true;\n\n    // Always clear the internal selection list on a new value\n    this.selectionList.deselectAll();\n\n    // We need to also select any read only items to appear in the table\n    this.selectionList.selectItems(this.items.filter((m) => m.readonly).map((m) => m.id));\n\n    // If the new value is null, then we're done\n    if (selectedItems == null) {\n      this.pauseChangeNotification = false;\n      return;\n    }\n\n    // Unable to handle other value types, throw\n    if (!Array.isArray(selectedItems)) {\n      throw new Error(\"The access selector component only supports Array form values!\");\n    }\n\n    // Iterate and internally select each item\n    for (const value of selectedItems) {\n      this.selectionList.selectItem(value.id, value);\n    }\n\n    this.pauseChangeNotification = false;\n  }\n\n  ngOnInit() {\n    // Watch the internal formArray for changes and propagate them\n    this.selectionList.formArray.valueChanges.pipe(takeUntil(this.destroy$)).subscribe((v) => {\n      if (!this.notifyOnChange || this.pauseChangeNotification) {\n        return;\n      }\n      // Disabled form arrays emit values for disabled controls, we override this to emit an empty array to avoid\n      // emitting values for disabled controls that are \"readonly\" in the table\n      if (this.selectionList.formArray.disabled) {\n        this.notifyOnChange([]);\n        return;\n      }\n      this.notifyOnChange(v);\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  protected handleBlur() {\n    if (!this.notifyOnTouch) {\n      return;\n    }\n\n    this.notifyOnTouch();\n  }\n\n  protected selectItems(items: SelectItemView[]) {\n    this.pauseChangeNotification = true;\n    this.selectionList.selectItems(items.map((i) => i.id));\n    this.pauseChangeNotification = false;\n    if (this.notifyOnChange != undefined) {\n      this.notifyOnChange(this.selectionList.formArray.value);\n    }\n  }\n\n  protected itemIcon(item: AccessItemView) {\n    switch (item.type) {\n      case AccessItemType.Collection:\n        return \"bwi-collection\";\n      case AccessItemType.Group:\n        return \"bwi-users\";\n      case AccessItemType.Member:\n        return \"bwi-user\";\n    }\n  }\n\n  protected permissionLabelId(perm: CollectionPermission) {\n    return this.permissionList.find((p) => p.perm == perm)?.labelId;\n  }\n\n  protected accessAllLabelId(item: AccessItemView) {\n    return item.type == AccessItemType.Group ? \"groupAccessAll\" : \"memberAccessAll\";\n  }\n\n  protected canEditItemPermission(item: AccessItemView) {\n    return this.permissionMode == PermissionMode.Edit && !item.readonly && !item.accessAllItems;\n  }\n\n  private _itemComparator(a: AccessItemView, b: AccessItemView) {\n    return (\n      a.type - b.type ||\n      this.i18nService.collator.compare(a.listName, b.listName) ||\n      this.i18nService.collator.compare(a.labelName, b.labelName) ||\n      Number(b.readonly) - Number(a.readonly)\n    );\n  }\n}\n","import { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { SelectItemView } from \"@bitwarden/components\";\n\nimport { CollectionAccessSelectionView } from \"../../../core\";\n\n/**\n * Permission options that replace/correspond with readOnly and hidePassword server fields.\n */\nexport enum CollectionPermission {\n  View = \"view\",\n  ViewExceptPass = \"viewExceptPass\",\n  Edit = \"edit\",\n  EditExceptPass = \"editExceptPass\",\n}\n\nexport enum AccessItemType {\n  Collection,\n  Group,\n  Member,\n}\n\n/**\n * A \"generic\" type that describes an item that can be selected from a\n * ng-select list and have its collection permission modified.\n *\n * Currently, it supports Collections, Groups, and Members. Members require some additional\n * details to render in the AccessSelectorComponent so their type is defined separately\n * and then joined back with the base type.\n *\n */\nexport type AccessItemView =\n  | SelectItemView & {\n      /**\n       * Flag that this group/member can access all items.\n       * This will disable the permission editor for this item.\n       */\n      accessAllItems?: boolean;\n\n      /**\n       * Flag that this item cannot be modified.\n       * This will disable the permission editor and will keep\n       * the item always selected.\n       */\n      readonly?: boolean;\n\n      /**\n       * Optional permission that will be rendered for this\n       * item if it set to readonly.\n       */\n      readonlyPermission?: CollectionPermission;\n    } & (\n        | {\n            type: AccessItemType.Collection;\n            viaGroupName?: string;\n          }\n        | {\n            type: AccessItemType.Group;\n          }\n        | {\n            type: AccessItemType.Member; // Members have a few extra details required to display, so they're added here\n            email: string;\n            role: OrganizationUserType;\n            status: OrganizationUserStatusType;\n          }\n      );\n\n/**\n * A type that is emitted as a value for the ngControl\n */\nexport type AccessItemValue = {\n  id: string;\n  permission?: CollectionPermission;\n  type: AccessItemType;\n};\n\n/**\n * Converts the CollectionAccessSelectionView interface to one of the new CollectionPermission values\n * for the dropdown in the AccessSelectorComponent\n * @param value\n */\nexport const convertToPermission = (value: CollectionAccessSelectionView) => {\n  if (value.readOnly) {\n    return value.hidePasswords ? CollectionPermission.ViewExceptPass : CollectionPermission.View;\n  } else {\n    return value.hidePasswords ? CollectionPermission.EditExceptPass : CollectionPermission.Edit;\n  }\n};\n\n/**\n * Converts an AccessItemValue back into a CollectionAccessView class using the CollectionPermission\n * to determine the values for `readOnly` and `hidePassword`\n * @param value\n */\nexport const convertToSelectionView = (value: AccessItemValue) => {\n  return new CollectionAccessSelectionView({\n    id: value.id,\n    readOnly: readOnly(value.permission),\n    hidePasswords: hidePassword(value.permission),\n  });\n};\n\nconst readOnly = (perm: CollectionPermission) =>\n  [CollectionPermission.View, CollectionPermission.ViewExceptPass].includes(perm);\n\nconst hidePassword = (perm: CollectionPermission) =>\n  [CollectionPermission.ViewExceptPass, CollectionPermission.EditExceptPass].includes(perm);\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../../shared/shared.module\";\n\nimport { AccessSelectorComponent } from \"./access-selector.component\";\nimport { UserTypePipe } from \"./user-type.pipe\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [AccessSelectorComponent, UserTypePipe],\n  exports: [AccessSelectorComponent],\n})\nexport class AccessSelectorModule {}\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { Component, Input } from \"@angular/core\";\n\nimport { Option } from \"./option\";\n\n@Component({\n  selector: \"bit-option\",\n  template: `<ng-template><ng-content></ng-content></ng-template>`,\n})\nexport class OptionComponent<T = unknown> implements Option<T> {\n  @Input()\n  icon?: string;\n\n  @Input()\n  value?: T = undefined;\n\n  @Input()\n  label?: string;\n\n  private _disabled = false;\n  @Input()\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: boolean | \"\") {\n    this._disabled = coerceBooleanProperty(value);\n  }\n}\n","<ng-select\n  [(ngModel)]=\"selectedOption\"\n  (ngModelChange)=\"onChange($event)\"\n  [disabled]=\"disabled\"\n  [placeholder]=\"placeholder\"\n  [items]=\"items\"\n  (blur)=\"onBlur()\"\n  [labelForId]=\"labelForId\"\n  [clearable]=\"false\"\n  appendTo=\"body\"\n>\n  <ng-template ng-option-tmp let-item=\"item\">\n    <div class=\"tw-flex\">\n      <div class=\"tw-mr-2 tw-flex-initial\">\n        <i *ngIf=\"item.icon != null\" class=\"bwi bwi-fw {{ item.icon }}\" aria-hidden=\"true\"></i>\n      </div>\n      <div class=\"tw-flex-1\">\n        {{ item.label }}\n      </div>\n    </div>\n  </ng-template>\n</ng-select>\n","import {\n  Component,\n  ContentChildren,\n  HostBinding,\n  Input,\n  Optional,\n  QueryList,\n  Self,\n  ViewChild,\n} from \"@angular/core\";\nimport { ControlValueAccessor, NgControl, Validators } from \"@angular/forms\";\nimport { NgSelectComponent } from \"@ng-select/ng-select\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitFormFieldControl } from \"../form-field\";\n\nimport { Option } from \"./option\";\nimport { OptionComponent } from \"./option.component\";\n\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-select\",\n  templateUrl: \"select.component.html\",\n  providers: [{ provide: BitFormFieldControl, useExisting: SelectComponent }],\n})\nexport class SelectComponent<T> implements BitFormFieldControl, ControlValueAccessor {\n  @ViewChild(NgSelectComponent) select: NgSelectComponent;\n\n  /** Optional: Options can be provided using an array input or using `bit-option` */\n  @Input() items: Option<T>[] = [];\n  @Input() placeholder = this.i18nService.t(\"selectPlaceholder\");\n\n  protected selectedValue: T;\n  protected selectedOption: Option<T>;\n  protected searchInputId = `bit-select-search-input-${nextId++}`;\n\n  private notifyOnChange?: (value: T) => void;\n  private notifyOnTouched?: () => void;\n\n  constructor(private i18nService: I18nService, @Optional() @Self() private ngControl?: NgControl) {\n    if (ngControl != null) {\n      ngControl.valueAccessor = this;\n    }\n  }\n\n  @ContentChildren(OptionComponent)\n  protected set options(value: QueryList<OptionComponent<T>>) {\n    this.items = value.toArray();\n    this.selectedOption = this.findSelectedOption(this.items, this.selectedValue);\n  }\n\n  @HostBinding(\"class\") protected classes = [\"tw-block\", \"tw-w-full\"];\n\n  @HostBinding()\n  @Input()\n  get disabled() {\n    return this._disabled ?? this.ngControl?.disabled ?? false;\n  }\n  set disabled(value: any) {\n    this._disabled = value != null && value !== false;\n  }\n  private _disabled: boolean;\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  writeValue(obj: T): void {\n    this.selectedValue = obj;\n    this.selectedOption = this.findSelectedOption(this.items, this.selectedValue);\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  registerOnChange(fn: (value: T) => void): void {\n    this.notifyOnChange = fn;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  registerOnTouched(fn: any): void {\n    this.notifyOnTouched = fn;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  protected onChange(option: Option<T> | null) {\n    if (!this.notifyOnChange) {\n      return;\n    }\n\n    this.notifyOnChange(option?.value);\n  }\n\n  /**Implemented as part of NG_VALUE_ACCESSOR */\n  protected onBlur() {\n    if (!this.notifyOnTouched) {\n      return;\n    }\n\n    this.notifyOnTouched();\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding(\"attr.aria-describedby\")\n  get ariaDescribedBy() {\n    return this._ariaDescribedBy;\n  }\n  set ariaDescribedBy(value: string) {\n    this._ariaDescribedBy = value;\n    this.select?.searchInput.nativeElement.setAttribute(\"aria-describedby\", value);\n  }\n  private _ariaDescribedBy: string;\n\n  /**Implemented as part of BitFormFieldControl */\n  get labelForId() {\n    return this.searchInputId;\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding() @Input() id = `bit-multi-select-${nextId++}`;\n\n  /**Implemented as part of BitFormFieldControl */\n  @HostBinding(\"attr.required\")\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  /**Implemented as part of BitFormFieldControl */\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  /**Implemented as part of BitFormFieldControl */\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl?.errors)[0];\n    return [key, this.ngControl?.errors[key]];\n  }\n\n  private findSelectedOption(items: Option<T>[], value: T): Option<T> | undefined {\n    return items.find((item) => item.value === value);\n  }\n}\n","import { DIALOG_DATA, DialogConfig, DialogRef } from \"@angular/cdk/dialog\";\nimport { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { combineLatest, of, shareReplay, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/abstractions/organization-user/responses\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CollectionView } from \"@bitwarden/common/src/models/view/collection.view\";\nimport { BitValidators, DialogService } from \"@bitwarden/components\";\n\nimport {\n  CollectionAdminService,\n  CollectionAdminView,\n  GroupService,\n  GroupView,\n} from \"../../../core\";\nimport {\n  AccessItemType,\n  AccessItemValue,\n  AccessItemView,\n  convertToPermission,\n  convertToSelectionView,\n  PermissionMode,\n} from \"../access-selector\";\n\nexport enum CollectionDialogTabType {\n  Info = 0,\n  Access = 1,\n}\n\nexport interface CollectionDialogParams {\n  collectionId?: string;\n  organizationId: string;\n  initialTab?: CollectionDialogTabType;\n  parentCollectionId?: string;\n}\n\nexport enum CollectionDialogResult {\n  Saved = \"saved\",\n  Canceled = \"canceled\",\n  Deleted = \"deleted\",\n}\n\n@Component({\n  selector: \"app-collection-dialog\",\n  templateUrl: \"collection-dialog.component.html\",\n})\nexport class CollectionDialogComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  protected tabIndex: CollectionDialogTabType;\n  protected loading = true;\n  protected organization?: Organization;\n  protected collection?: CollectionView;\n  protected nestOptions: CollectionView[] = [];\n  protected accessItems: AccessItemView[] = [];\n  protected deletedParentName: string | undefined;\n  protected formGroup = this.formBuilder.group({\n    name: [\"\", [Validators.required, BitValidators.forbiddenCharacters([\"/\"])]],\n    externalId: \"\",\n    parent: undefined as string | undefined,\n    access: [[] as AccessItemValue[]],\n  });\n  protected PermissionMode = PermissionMode;\n\n  constructor(\n    @Inject(DIALOG_DATA) private params: CollectionDialogParams,\n    private formBuilder: FormBuilder,\n    private dialogRef: DialogRef<CollectionDialogResult>,\n    private organizationService: OrganizationService,\n    private groupService: GroupService,\n    private collectionService: CollectionAdminService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationUserService: OrganizationUserService\n  ) {\n    this.tabIndex = params.initialTab ?? CollectionDialogTabType.Info;\n  }\n\n  ngOnInit() {\n    const organization$ = of(this.organizationService.get(this.params.organizationId)).pipe(\n      shareReplay({ refCount: true, bufferSize: 1 })\n    );\n    const groups$ = organization$.pipe(\n      switchMap((organization) => {\n        if (!organization.useGroups) {\n          return of([] as GroupView[]);\n        }\n\n        return this.groupService.getAll(this.params.organizationId);\n      })\n    );\n\n    combineLatest({\n      organization: organization$,\n      collections: this.collectionService.getAll(this.params.organizationId),\n      collectionDetails: this.params.collectionId\n        ? this.collectionService.get(this.params.organizationId, this.params.collectionId)\n        : of(null),\n      groups: groups$,\n      users: this.organizationUserService.getAllUsers(this.params.organizationId),\n    })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(({ organization, collections, collectionDetails, groups, users }) => {\n        this.organization = organization;\n        this.accessItems = [].concat(\n          groups.map(mapGroupToAccessItemView),\n          users.data.map(mapUserToAccessItemView)\n        );\n\n        if (this.params.collectionId) {\n          this.collection = collections.find((c) => c.id === this.collectionId);\n          this.nestOptions = collections.filter((c) => c.id !== this.collectionId);\n\n          if (!this.collection) {\n            throw new Error(\"Could not find collection to edit.\");\n          }\n\n          const { name, parent } = parseName(this.collection);\n          if (parent !== undefined && !this.nestOptions.find((c) => c.name === parent)) {\n            this.deletedParentName = parent;\n          }\n\n          const accessSelections = mapToAccessSelections(collectionDetails);\n          this.formGroup.patchValue({\n            name,\n            externalId: this.collection.externalId,\n            parent,\n            access: accessSelections,\n          });\n        } else {\n          this.nestOptions = collections;\n          const parent = collections.find((c) => c.id === this.params.parentCollectionId);\n          this.formGroup.patchValue({ parent: parent?.name ?? undefined });\n        }\n\n        this.loading = false;\n      });\n  }\n\n  protected get collectionId() {\n    return this.params.collectionId;\n  }\n\n  protected get editMode() {\n    return this.params.collectionId != undefined;\n  }\n\n  protected async cancel() {\n    this.close(CollectionDialogResult.Canceled);\n  }\n\n  protected submit = async () => {\n    this.formGroup.markAllAsTouched();\n\n    if (this.formGroup.invalid) {\n      if (this.tabIndex === CollectionDialogTabType.Access) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"fieldOnTabRequiresAttention\", this.i18nService.t(\"collectionInfo\"))\n        );\n      }\n      return;\n    }\n\n    const collectionView = new CollectionAdminView();\n    collectionView.id = this.params.collectionId;\n    collectionView.organizationId = this.params.organizationId;\n    collectionView.externalId = this.formGroup.controls.externalId.value;\n    collectionView.groups = this.formGroup.controls.access.value\n      .filter((v) => v.type === AccessItemType.Group)\n      .map(convertToSelectionView);\n    collectionView.users = this.formGroup.controls.access.value\n      .filter((v) => v.type === AccessItemType.Member)\n      .map(convertToSelectionView);\n\n    const parent = this.formGroup.controls.parent.value;\n    if (parent) {\n      collectionView.name = `${parent}/${this.formGroup.controls.name.value}`;\n    } else {\n      collectionView.name = this.formGroup.controls.name.value;\n    }\n\n    await this.collectionService.save(collectionView);\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\n        this.editMode ? \"editedCollectionId\" : \"createdCollectionId\",\n        collectionView.name\n      )\n    );\n\n    this.close(CollectionDialogResult.Saved);\n  };\n\n  protected delete = async () => {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      this.collection?.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed && this.params.collectionId) {\n      return false;\n    }\n\n    await this.collectionService.delete(this.params.organizationId, this.params.collectionId);\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"deletedCollectionId\", this.collection?.name)\n    );\n\n    this.close(CollectionDialogResult.Deleted);\n  };\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private close(result: CollectionDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n\nfunction parseName(collection: CollectionView) {\n  const nameParts = collection.name?.split(\"/\");\n  const name = nameParts[nameParts.length - 1];\n  const parent = nameParts.length > 1 ? nameParts.slice(0, -1).join(\"/\") : undefined;\n\n  return { name, parent };\n}\n\nfunction mapGroupToAccessItemView(group: GroupView): AccessItemView {\n  return {\n    id: group.id,\n    type: AccessItemType.Group,\n    listName: group.name,\n    labelName: group.name,\n    accessAllItems: group.accessAll,\n    readonly: group.accessAll,\n  };\n}\n\n// TODO: Use view when user apis are migrated to a service\nfunction mapUserToAccessItemView(user: OrganizationUserUserDetailsResponse): AccessItemView {\n  return {\n    id: user.id,\n    type: AccessItemType.Member,\n    email: user.email,\n    role: user.type,\n    listName: user.name?.length > 0 ? `${user.name} (${user.email})` : user.email,\n    labelName: user.name ?? user.email,\n    status: user.status,\n    accessAllItems: user.accessAll,\n    readonly: user.accessAll,\n  };\n}\n\nfunction mapToAccessSelections(collectionDetails: CollectionAdminView): AccessItemValue[] {\n  if (collectionDetails == undefined) {\n    return [];\n  }\n  return [].concat(\n    collectionDetails.groups.map<AccessItemValue>((selection) => ({\n      id: selection.id,\n      type: AccessItemType.Group,\n      permission: convertToPermission(selection),\n    })),\n    collectionDetails.users.map<AccessItemValue>((selection) => ({\n      id: selection.id,\n      type: AccessItemType.Member,\n      permission: convertToPermission(selection),\n    }))\n  );\n}\n\n/**\n * Strongly typed helper to open a CollectionDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport function openCollectionDialog(\n  dialogService: DialogService,\n  config: DialogConfig<CollectionDialogParams>\n) {\n  return dialogService.open<CollectionDialogResult, CollectionDialogParams>(\n    CollectionDialogComponent,\n    config\n  );\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <bit-dialog [disablePadding]=\"!loading\">\n    <span bitDialogTitle>\n      <ng-container *ngIf=\"editMode\">\n        {{ \"editCollection\" | i18n }}\n        <span class=\"tw-text-sm tw-normal-case tw-text-muted\" *ngIf=\"!loading\">{{\n          collection.name\n        }}</span>\n      </ng-container>\n      <ng-container *ngIf=\"!editMode\">\n        {{ \"newCollection\" | i18n }}\n      </ng-container>\n    </span>\n    <div bitDialogContent>\n      <ng-container *ngIf=\"loading\" #spinner>\n        <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" aria-hidden=\"true\"></i>\n      </ng-container>\n      <bit-tab-group *ngIf=\"!loading\" [(selectedIndex)]=\"tabIndex\">\n        <bit-tab label=\"{{ 'collectionInfo' | i18n }}\">\n          <bit-form-field>\n            <bit-label>{{ \"name\" | i18n }}</bit-label>\n            <input bitInput appAutofocus formControlName=\"name\" />\n          </bit-form-field>\n\n          <bit-form-field>\n            <bit-label>{{ \"externalId\" | i18n }}</bit-label>\n            <input bitInput formControlName=\"externalId\" />\n            <bit-hint>{{ \"externalIdDesc\" | i18n }}</bit-hint>\n          </bit-form-field>\n\n          <bit-form-field>\n            <bit-label>{{ \"nestCollectionUnder\" | i18n }}</bit-label>\n            <bit-select bitInput formControlName=\"parent\">\n              <bit-option [value]=\"undefined\" [label]=\"'noCollection' | i18n\"> </bit-option>\n              <bit-option\n                *ngIf=\"deletedParentName\"\n                disabled\n                icon=\"bwi-collection\"\n                [value]=\"deletedParentName\"\n                label=\"{{ deletedParentName }} ({{ 'deleted' | i18n }})\"\n              >\n              </bit-option>\n              <bit-option\n                *ngFor=\"let collection of nestOptions\"\n                icon=\"bwi-collection\"\n                [value]=\"collection.name\"\n                [label]=\"collection.name\"\n              >\n              </bit-option>\n            </bit-select>\n          </bit-form-field>\n        </bit-tab>\n        <bit-tab label=\"{{ 'access' | i18n }}\">\n          <bit-access-selector\n            *ngIf=\"organization.useGroups\"\n            [permissionMode]=\"PermissionMode.Edit\"\n            formControlName=\"access\"\n            [items]=\"accessItems\"\n            [columnHeader]=\"'groupAndMemberColumnHeader' | i18n\"\n            [selectorLabelText]=\"'selectGroupsAndMembers' | i18n\"\n            [selectorHelpText]=\"'userPermissionOverrideHelper' | i18n\"\n            [emptySelectionText]=\"'noMembersOrGroupsAdded' | i18n\"\n          ></bit-access-selector>\n          <bit-access-selector\n            *ngIf=\"!organization.useGroups\"\n            [permissionMode]=\"PermissionMode.Edit\"\n            formControlName=\"access\"\n            [items]=\"accessItems\"\n            [columnHeader]=\"'memberColumnHeader' | i18n\"\n            [selectorLabelText]=\"'selectMembers' | i18n\"\n            [emptySelectionText]=\"'noMembersAdded' | i18n\"\n          ></bit-access-selector>\n        </bit-tab>\n      </bit-tab-group>\n    </div>\n    <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n      <button type=\"submit\" bitButton bitFormButton buttonType=\"primary\" [disabled]=\"loading\">\n        {{ \"save\" | i18n }}\n      </button>\n      <button\n        type=\"button\"\n        bitButton\n        bitFormButton\n        buttonType=\"secondary\"\n        (click)=\"cancel()\"\n        [disabled]=\"loading\"\n      >\n        {{ \"cancel\" | i18n }}\n      </button>\n      <button\n        *ngIf=\"editMode && organization?.canDeleteAssignedCollections\"\n        type=\"button\"\n        bitIconButton=\"bwi-trash\"\n        buttonType=\"danger\"\n        class=\"tw-ml-auto\"\n        bitFormButton\n        [appA11yTitle]=\"'delete' | i18n\"\n        [bitAction]=\"delete\"\n        [disabled]=\"loading\"\n      ></button>\n    </div>\n  </bit-dialog>\n</form>\n","import { AbstractControl, FormControl, ValidationErrors, ValidatorFn } from \"@angular/forms\";\n\nexport function forbiddenCharacters(characters: string[]): ValidatorFn {\n  return (control: AbstractControl): ValidationErrors | null => {\n    if (!(control instanceof FormControl)) {\n      throw new Error(\"forbiddenCharacters only supports validating FormControls\");\n    }\n\n    if (control.value === null || control.value === undefined) {\n      return null;\n    }\n\n    const value = String(control.value);\n\n    for (const char of value) {\n      if (characters.includes(char)) {\n        return { forbiddenCharacters: { value: control.value, characters } };\n      }\n    }\n\n    return null;\n  };\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\n\nimport { OptionComponent } from \"./option.component\";\nimport { SelectComponent } from \"./select.component\";\n\n@NgModule({\n  imports: [CommonModule, NgSelectModule, FormsModule],\n  declarations: [SelectComponent, OptionComponent],\n  exports: [SelectComponent, OptionComponent],\n})\nexport class SelectModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SelectModule } from \"@bitwarden/components\";\n\nimport { SharedModule } from \"../../../../shared/shared.module\";\nimport { AccessSelectorModule } from \"../access-selector\";\n\nimport { CollectionDialogComponent } from \"./collection-dialog.component\";\n\n@NgModule({\n  imports: [SharedModule, AccessSelectorModule, SelectModule],\n  declarations: [CollectionDialogComponent],\n  exports: [CollectionDialogComponent],\n})\nexport class CollectionDialogModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared/shared.module\";\n\nimport { AccessSelectorModule } from \"./components/access-selector\";\nimport { CollectionDialogModule } from \"./components/collection-dialog\";\nimport { SearchInputComponent } from \"./components/search-input/search-input.component\";\n\n@NgModule({\n  imports: [SharedModule, CollectionDialogModule, AccessSelectorModule],\n  declarations: [SearchInputComponent],\n  exports: [SharedModule, CollectionDialogModule, AccessSelectorModule, SearchInputComponent],\n})\nexport class SharedOrganizationModule {}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HasPremiumGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private messagingService: MessagingService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    if (!userHasPremium) {\n      this.messagingService.send(\"premiumRequired\");\n    }\n\n    // Prevent trapping the user on the login page, since that's an awful UX flow\n    if (!userHasPremium && this.router.url === \"/login\") {\n      return this.router.createUrlTree([\"/\"]);\n    }\n\n    return userHasPremium;\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"dataBreachReport\" | i18n }}</h1>\n</div>\n<p>{{ \"breachDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"username\">{{ \"username\" | i18n }}</label>\n      <input\n        id=\"username\"\n        type=\"text\"\n        name=\"Username\"\n        class=\"form-control\"\n        [(ngModel)]=\"username\"\n        required\n      />\n      <small class=\"form-text text-muted\">{{ \"breachCheckUsernameEmail\" | i18n }}</small>\n    </div>\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"checkBreaches\" | i18n }}\n  </button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n  <p *ngIf=\"error\">{{ \"reportError\" | i18n }}...</p>\n  <ng-container *ngIf=\"!error\">\n    <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!breachedAccounts.length\">\n      {{ \"breachUsernameNotFound\" | i18n: checkedUsername }}\n    </app-callout>\n    <app-callout type=\"danger\" title=\"{{ 'breachFound' | i18n }}\" *ngIf=\"breachedAccounts.length\">\n      {{ \"breachUsernameFound\" | i18n: checkedUsername:breachedAccounts.length }}\n    </app-callout>\n    <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n      <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n        <div class=\"row\">\n          <div class=\"col-2 text-center\">\n            <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\" />\n          </div>\n          <div class=\"col-7\">\n            <h3 class=\"text-lg\">{{ a.title }}</h3>\n            <p [innerHTML]=\"a.description\"></p>\n            <p class=\"mb-1\">{{ \"compromisedData\" | i18n }}:</p>\n            <ul>\n              <li *ngFor=\"let d of a.dataClasses\">{{ d }}</li>\n            </ul>\n          </div>\n          <div class=\"col-3\">\n            <dl>\n              <dt>{{ \"website\" | i18n }}</dt>\n              <dd>{{ a.domain }}</dd>\n              <dt>{{ \"affectedUsers\" | i18n }}</dt>\n              <dd>{{ a.pwnCount | number }}</dd>\n              <dt>{{ \"breachOccurred\" | i18n }}</dt>\n              <dd>{{ a.breachDate | date: \"mediumDate\" }}</dd>\n              <dt>{{ \"breachReported\" | i18n }}</dt>\n              <dd>{{ a.addedDate | date: \"mediumDate\" }}</dd>\n            </dl>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </ng-container>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { BreachAccountResponse } from \"@bitwarden/common/models/response/breach-account.response\";\n\n@Component({\n  selector: \"app-breach-report\",\n  templateUrl: \"breach-report.component.html\",\n})\nexport class BreachReportComponent implements OnInit {\n  error = false;\n  username: string;\n  checkedUsername: string;\n  breachedAccounts: BreachAccountResponse[] = [];\n  formPromise: Promise<BreachAccountResponse[]>;\n\n  constructor(private auditService: AuditService, private stateService: StateService) {}\n\n  async ngOnInit() {\n    this.username = await this.stateService.getEmail();\n  }\n\n  async submit() {\n    this.error = false;\n    this.username = this.username.toLowerCase();\n    try {\n      this.formPromise = this.auditService.breachedAccounts(this.username);\n      this.breachedAccounts = await this.formPromise;\n    } catch {\n      this.error = true;\n    }\n    this.checkedUsername = this.username;\n  }\n}\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportBreach = svgIcon`\n  <svg width=\"58\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M39.569 74H13.007a7 7 0 0 1-7-7V31.077a7 7 0 0 1 7-7h19.101a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.912V67a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.576 69.055H18.015a7 7 0 0 1-7-7V26.132a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.576a7 7 0 0 1 2.013 4.911v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M50 63.698H23.439a7 7 0 0 1-7-7V20.775a7 7 0 0 1 7-7h19.1a7 7 0 0 1 4.988 2.088l7.46 7.575A7 7 0 0 1 57 28.35v28.348a7 7 0 0 1-7 7Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M44.648 13.599v3.95a8 8 0 0 0 8 8h4.518\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M23.533 37.736H49.49M23.533 46.802H49.49M23.533 42.269H49.49M23.533 55.456H49.49M23.533 50.923H49.49\" />\n    <path d=\"M1 16.483C1 7.944 8.013 1 16.69 1c8.678 0 15.691 6.944 15.691 15.483 0 8.54-7.013 15.484-15.69 15.484C8.012 31.967 1 25.023 1 16.484Z\" fill=\"#518FFF\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m16.562 7.979.1 11.538\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <ellipse rx=\"1.252\" ry=\"1.236\" transform=\"rotate(-.479 2802.219 -1964.476) skewX(.012)\" fill=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportExposedPasswords = svgIcon`\n  <svg width=\"101\" height=\"77\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.374 50.192a26.42 26.42 0 0 0 9.111 1.608c14.34 0 25.965-11.372 25.965-25.4 0-.337-.007-.673-.02-1.008h25.299v34.85H32.374v-10.05Z\" fill=\"currentColor\" />\n    <path d=\"M15.805 26.4c0 14.028 11.625 25.4 25.965 25.4s25.964-11.372 25.964-25.4C67.734 12.372 56.11 1 41.77 1 27.43 1 15.805 12.372 15.805 26.4Z\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M27.914 47.849a1 1 0 0 0-2 0h2Zm68.288-26.792a2.12 2.12 0 0 1 2.14 2.11h2c0-2.253-1.83-4.11-4.14-4.11v2Zm2.14 2.11v40.552h2V23.167h-2Zm0 40.552c0 1.172-.958 2.11-2.14 2.11v2c2.25 0 4.14-1.798 4.14-4.11h-2Zm-2.14 2.11H30.054v2h66.148v-2Zm-66.148 0a2.12 2.12 0 0 1-2.14-2.11h-2a4.12 4.12 0 0 0 4.14 4.11v-2Zm-2.14-2.11V47.85h-2v15.87h2Zm39.254-42.662h29.034v-2H67.168v2Z\" fill=\"#fff\" />\n    <path d=\"M67.203 25.56h25.64v34.85H32.487V50.011\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M47.343 76h31.571\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M57.557 66.83V76M67.771 66.83V76\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"m20.995 42.873-3.972 3.972-14.61 14.61a3.413 3.413 0 0 0 0 4.826v0a3.413 3.413 0 0 0 4.827 0l14.61-14.61 3.972-3.972\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M86.037 32.488H71.845M86.037 37.81H76.28M71.845 37.81h-6.652M86.037 43.132h-6.209M74.95 43.132H61.2M86.037 48.454H71.845M66.967 48.454h-7.54M86.037 53.776H66.08M61.201 53.776h-11.53M44.793 53.776h-7.096\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <rect width=\"40.801\" height=\"9.757\" rx=\"4\" transform=\"matrix(-1 0 0 1 61.201 14.748)\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M16.852 33.375h28.375a4 4 0 0 1 4 4v1.757a4 4 0 0 1-4 4H22.174M66.523 33.375h-3.539a4 4 0 0 0-4 4v3.761c0 1.102.894 1.996 1.996 1.996v0\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportInactiveTwoFactor = svgIcon`\n  <svg width=\"42\" height=\"75\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" d=\"M1 13.121h39.595v48.758H1z\" />\n    <rect x=\"1\" y=\"1\" width=\"39.595\" height=\"73\" rx=\"8\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" d=\"M12.344 8.091h16.907M18.907 67.424h3.025M31.503 32.515c-2.047-4.337-6.717-7.061-11.73-6.414a11.356 11.356 0 0 0-9.125 7.126M10.816 42.016c2.047 4.337 6.718 7.062 11.73 6.414 4.346-.562 7.8-3.51 9.213-7.358\" />\n    <path d=\"m33.584 29.293-1.295 4.625-4.625-1.295M8.523 44.725l1.441-4.581 4.582 1.441\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportReusedPasswords = svgIcon`\n  <svg width=\"102\" height=\"102\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M57.983 15.06a35.664 35.664 0 0 1 14.531 6.27c16.164 11.78 19.585 34.613 7.643 51a37.227 37.227 0 0 1-6.81 7.138m-32.842 6.697a35.708 35.708 0 0 1-11.239-5.495c-16.163-11.78-19.585-34.613-7.642-51a37.55 37.55 0 0 1 3.295-3.929\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M93.909 64.598H7.72c-.708 0-1.275-.662-1.275-1.49V40.273c0-.828.567-1.49 1.275-1.49H93.91c.708 0 1.275.663 1.275 1.49v22.837c.047.827-.567 1.49-1.275 1.49Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M21.532 52.186v-5.965M21.532 52.187l5.748-1.844M21.532 52.186l3.524 4.881M21.531 52.186l-3.47 4.881M21.532 52.187l-5.694-1.844M40.944 52.186v-5.965M40.944 52.187l5.694-1.844M40.944 52.187l3.525 4.88M40.944 52.187l-3.525 4.88M40.944 52.187l-5.694-1.844M54.849 57.337h11.294M74.21 57.337h11.295M41.75 83l.71 4.75-4.75.71M58.664 18.66 56 14.665 59.996 12\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportUnsecuredWebsites = svgIcon`\n  <svg width=\"113\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1.71 12.983h110.362v55.11a6 6 0 0 1-6 6H7.711a6 6 0 0 1-6-6v-55.11Z\" fill=\"currentColor\" />\n    <rect x=\"1\" y=\"1.073\" width=\"110.5\" height=\"73.454\" rx=\"9\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"M89.48 8.048V7.47M96.363 8.048V7.47M103.246 8.048V7.47\" stroke=\"#fff\" stroke-width=\"4\" stroke-linecap=\"round\" />\n    <path d=\"M0 12.983h111.217\" stroke=\"#fff\" stroke-width=\"2\" />\n    <path d=\"m93.236 44.384-18.42-11.026 2.93 21.266 5.582-5.237 4.27 6.46 2.98-1.971-4.26-6.446 6.918-3.046Z\" fill=\"#175DDC\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <rect width=\"96.673\" height=\"6.886\" rx=\"3.443\" transform=\"matrix(-1 0 0 1 104.373 18.721)\" stroke=\"#fff\" />\n  </svg>\n`;\n","import { svgIcon } from \"@bitwarden/components\";\n\nexport const ReportWeakPasswords = svgIcon`\n  <svg width=\"78\" height=\"78\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M66.493 64.415V77H9.979V64.324M9.979 44.065V32.106h56.514v12.148\" stroke=\"#fff\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path d=\"M75.44 64.852H2.085c-.603 0-1.085-.555-1.085-1.25V44.448c0-.694.482-1.25 1.085-1.25H75.44c.603 0 1.085.556 1.085 1.25v19.156c.04.694-.482 1.25-1.085 1.25Z\" fill=\"currentColor\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M13.84 54.56v-5.077M13.84 54.56l4.893-1.57M13.84 54.56l3 4.153M13.84 54.56l-2.954 4.153M13.84 54.56l-4.846-1.57M30.363 54.56v-5.077M30.363 54.56l4.846-1.57M30.363 54.56l3 4.153M30.363 54.56l-3 4.153M30.363 54.56l-4.846-1.57M42.197 59.042h9.506M58.57 59.042h9.507\" stroke=\"#fff\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path d=\"M20.863 31.364c-.274-5.285 0-15.817 1.093-18.863 1.276-3.554 6.233-10.826 15.856-11.482 4.83-.273 15.2 2.296 18.043 14.763\" stroke=\"#fff\" stroke-width=\"2\" />\n  </svg>\n`;\n","import { ReportBreach } from \"./icons/report-breach.icon\";\nimport { ReportExposedPasswords } from \"./icons/report-exposed-passwords.icon\";\nimport { ReportInactiveTwoFactor } from \"./icons/report-inactive-two-factor.icon\";\nimport { ReportReusedPasswords } from \"./icons/report-reused-passwords.icon\";\nimport { ReportUnsecuredWebsites } from \"./icons/report-unsecured-websites.icon\";\nimport { ReportWeakPasswords } from \"./icons/report-weak-passwords.icon\";\nimport { ReportEntry } from \"./shared\";\n\nexport enum ReportType {\n  ExposedPasswords = \"exposedPasswords\",\n  ReusedPasswords = \"reusedPasswords\",\n  WeakPasswords = \"weakPasswords\",\n  UnsecuredWebsites = \"unsecuredWebsites\",\n  Inactive2fa = \"inactive2fa\",\n  DataBreach = \"dataBreach\",\n}\n\ntype ReportWithoutVariant = Omit<ReportEntry, \"variant\">;\n\nexport const reports: Record<ReportType, ReportWithoutVariant> = {\n  [ReportType.ExposedPasswords]: {\n    title: \"exposedPasswordsReport\",\n    description: \"exposedPasswordsReportDesc\",\n    route: \"exposed-passwords-report\",\n    icon: ReportExposedPasswords,\n  },\n  [ReportType.ReusedPasswords]: {\n    title: \"reusedPasswordsReport\",\n    description: \"reusedPasswordsReportDesc\",\n    route: \"reused-passwords-report\",\n    icon: ReportReusedPasswords,\n  },\n  [ReportType.WeakPasswords]: {\n    title: \"weakPasswordsReport\",\n    description: \"weakPasswordsReportDesc\",\n    route: \"weak-passwords-report\",\n    icon: ReportWeakPasswords,\n  },\n  [ReportType.UnsecuredWebsites]: {\n    title: \"unsecuredWebsitesReport\",\n    description: \"unsecuredWebsitesReportDesc\",\n    route: \"unsecured-websites-report\",\n    icon: ReportUnsecuredWebsites,\n  },\n  [ReportType.Inactive2fa]: {\n    title: \"inactive2faReport\",\n    description: \"inactive2faReportDesc\",\n    route: \"inactive-two-factor-report\",\n    icon: ReportInactiveTwoFactor,\n  },\n  [ReportType.DataBreach]: {\n    title: \"dataBreachReport\",\n    description: \"breachDesc\",\n    route: \"breach-report\",\n    icon: ReportBreach,\n  },\n};\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared/shared.module\";\n\nimport { ReportCardComponent } from \"./report-card/report-card.component\";\nimport { ReportListComponent } from \"./report-list/report-list.component\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule],\n  declarations: [ReportCardComponent, ReportListComponent],\n  exports: [ReportCardComponent, ReportListComponent],\n})\nexport class ReportsSharedModule {}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\nimport { reports, ReportType } from \"../reports\";\nimport { ReportEntry, ReportVariant } from \"../shared\";\n\n@Component({\n  selector: \"app-reports-home\",\n  templateUrl: \"reports-home.component.html\",\n})\nexport class ReportsHomeComponent implements OnInit {\n  reports: ReportEntry[];\n\n  constructor(private stateService: StateService) {}\n\n  async ngOnInit(): Promise<void> {\n    const userHasPremium = await this.stateService.getCanAccessPremium();\n\n    const reportRequiresPremium = userHasPremium\n      ? ReportVariant.Enabled\n      : ReportVariant.RequiresPremium;\n\n    this.reports = [\n      {\n        ...reports[ReportType.ExposedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.ReusedPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.WeakPasswords],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.UnsecuredWebsites],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.Inactive2fa],\n        variant: reportRequiresPremium,\n      },\n      {\n        ...reports[ReportType.DataBreach],\n        variant: ReportVariant.Enabled,\n      },\n    ];\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"reports\" | i18n }}</h1>\n</div>\n\n<p>{{ \"reportsDesc\" | i18n }}</p>\n\n<app-report-list [reports]=\"reports\"></app-report-list>\n","<div class=\"container page-content\">\n  <router-outlet></router-outlet>\n\n  <div class=\"row mt-4\">\n    <div class=\"col\">\n      <a bitButton routerLink=\"./\" *ngIf=\"!homepage\">\n        <i class=\"bwi bwi-angle-left\" aria-hidden=\"true\"></i>\n        {{ \"backToReports\" | i18n }}\n      </a>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\nimport { filter } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-reports-layout\",\n  templateUrl: \"reports-layout.component.html\",\n})\nexport class ReportsLayoutComponent implements OnDestroy {\n  homepage = true;\n  subscription: Subscription;\n\n  constructor(router: Router) {\n    this.subscription = router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n      .subscribe((event) => {\n        this.homepage = (event as NavigationEnd).url == \"/reports\";\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/auth/guards/auth.guard\";\n\nimport { HasPremiumGuard } from \"../shared/guards/has-premium.guard\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: ReportsLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      { path: \"\", pathMatch: \"full\", component: ReportsHomeComponent, data: { homepage: true } },\n      {\n        path: \"breach-report\",\n        component: BreachReportComponent,\n        data: { titleId: \"dataBreachReport\" },\n      },\n      {\n        path: \"reused-passwords-report\",\n        component: ReusedPasswordsReportComponent,\n        data: { titleId: \"reusedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"unsecured-websites-report\",\n        component: UnsecuredWebsitesReportComponent,\n        data: { titleId: \"unsecuredWebsitesReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"weak-passwords-report\",\n        component: WeakPasswordsReportComponent,\n        data: { titleId: \"weakPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"exposed-passwords-report\",\n        component: ExposedPasswordsReportComponent,\n        data: { titleId: \"exposedPasswordsReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n      {\n        path: \"inactive-two-factor-report\",\n        component: InactiveTwoFactorReportComponent,\n        data: { titleId: \"inactive2faReport\" },\n        canActivate: [HasPremiumGuard],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ReportsRoutingModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BreachReportComponent } from \"./pages/breach-report.component\";\nimport { ExposedPasswordsReportComponent } from \"./pages/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent } from \"./pages/inactive-two-factor-report.component\";\nimport { ReportsHomeComponent } from \"./pages/reports-home.component\";\nimport { ReusedPasswordsReportComponent } from \"./pages/reused-passwords-report.component\";\nimport { UnsecuredWebsitesReportComponent } from \"./pages/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent } from \"./pages/weak-passwords-report.component\";\nimport { ReportsLayoutComponent } from \"./reports-layout.component\";\nimport { ReportsRoutingModule } from \"./reports-routing.module\";\nimport { ReportsSharedModule } from \"./shared\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule, ReportsSharedModule, ReportsRoutingModule],\n  declarations: [\n    BreachReportComponent,\n    ExposedPasswordsReportComponent,\n    InactiveTwoFactorReportComponent,\n    ReportsLayoutComponent,\n    ReportsHomeComponent,\n    ReusedPasswordsReportComponent,\n    UnsecuredWebsitesReportComponent,\n    WeakPasswordsReportComponent,\n    WeakPasswordsReportComponent,\n  ],\n})\nexport class ReportsModule {}\n","import { Directive, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PasswordRepromptService } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/vault/enums/cipher-reprompt-type\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\n\nimport { AddEditComponent } from \"../../vault/individual-vault/add-edit.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"../../vault/org-vault/add-edit.component\";\n\n@Directive()\nexport class CipherReportComponent {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n\n  loading = false;\n  hasLoaded = false;\n  ciphers: CipherView[] = [];\n  organization: Organization;\n\n  constructor(\n    private modalService: ModalService,\n    protected messagingService: MessagingService,\n    public requiresPaid: boolean,\n    protected passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async load() {\n    this.loading = true;\n    await this.setCiphers();\n    this.loading = false;\n    this.hasLoaded = true;\n  }\n\n  async selectCipher(cipher: CipherView) {\n    if (!(await this.repromptCipher(cipher))) {\n      return;\n    }\n\n    const type = this.organization != null ? OrgAddEditComponent : AddEditComponent;\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      type,\n      this.cipherAddEditModalRef,\n      (comp: OrgAddEditComponent | AddEditComponent) => {\n        if (this.organization != null) {\n          (comp as OrgAddEditComponent).organization = this.organization;\n          comp.organizationId = this.organization.id;\n        }\n\n        comp.cipherId = cipher == null ? null : cipher.id;\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n\n  protected async checkAccess(): Promise<boolean> {\n    if (this.organization != null) {\n      // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n      // since all paid plans include useTotp\n      if (this.requiresPaid && !this.organization.useTotp) {\n        this.messagingService.send(\"upgradeOrganization\", { organizationId: this.organization.id });\n        return false;\n      }\n    }\n    return true;\n  }\n\n  protected async setCiphers() {\n    this.ciphers = [];\n  }\n\n  protected async repromptCipher(c: CipherView) {\n    return (\n      c.reprompt === CipherRepromptType.None ||\n      (await this.passwordRepromptService.showPasswordPrompt())\n    );\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"exposedPasswordsReport\" | i18n }}</h1>\n</div>\n<p>{{ \"exposedPasswordsReportDesc\" | i18n }}</p>\n<button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"loading\" (click)=\"load()\">\n  {{ \"checkExposedPasswords\" | i18n }}\n</button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noExposedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'exposedPasswordsFound' | i18n }}\" [useAlertRole]=\"true\">\n      {{ \"exposedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"exposedXTimes\" | i18n: (exposedPasswordMap.get(c.id) | number) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-exposed-passwords-report\",\n  templateUrl: \"exposed-passwords-report.component.html\",\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  exposedPasswordMap = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected auditService: AuditService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  ngOnInit() {\n    this.checkAccess();\n  }\n\n  async load() {\n    if (await this.checkAccess()) {\n      super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const exposedPasswordCiphers: CipherView[] = [];\n    const promises: Promise<void>[] = [];\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n        if (exposedCount > 0) {\n          exposedPasswordCiphers.push(c);\n          this.exposedPasswordMap.set(c.id, exposedCount);\n        }\n      });\n      promises.push(promise);\n    });\n    await Promise.all(promises);\n    this.ciphers = exposedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"inactive2faReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"inactive2faReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noInactive2fa\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'inactive2faFound' | i18n }}\">\n      {{ \"inactive2faFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <a\n              bitBadge\n              href=\"{{ cipherDocs.get(c.id) }}\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              *ngIf=\"cipherDocs.has(c.id)\"\n            >\n              {{ \"instructions\" | i18n }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-inactive-two-factor-report\",\n  templateUrl: \"inactive-two-factor-report.component.html\",\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n  services = new Map<string, string>();\n  cipherDocs = new Map<string, string>();\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    private logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    try {\n      await this.load2fa();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (this.services.size > 0) {\n      const allCiphers = await this.getAllCiphers();\n      const inactive2faCiphers: CipherView[] = [];\n      const promises: Promise<void>[] = [];\n      const docs = new Map<string, string>();\n      allCiphers.forEach((c) => {\n        if (\n          c.type !== CipherType.Login ||\n          (c.login.totp != null && c.login.totp !== \"\") ||\n          !c.login.hasUris ||\n          c.isDeleted\n        ) {\n          return;\n        }\n        for (let i = 0; i < c.login.uris.length; i++) {\n          const u = c.login.uris[i];\n          if (u.uri != null && u.uri !== \"\") {\n            const uri = u.uri.replace(\"www.\", \"\");\n            const domain = Utils.getDomain(uri);\n            if (domain != null && this.services.has(domain)) {\n              if (this.services.get(domain) != null) {\n                docs.set(c.id, this.services.get(domain));\n              }\n              inactive2faCiphers.push(c);\n            }\n          }\n        }\n      });\n      await Promise.all(promises);\n      this.ciphers = inactive2faCiphers;\n      this.cipherDocs = docs;\n    }\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  private async load2fa() {\n    if (this.services.size > 0) {\n      return;\n    }\n    const response = await fetch(new Request(\"https://api.2fa.directory/v3/totp.json\"));\n    if (response.status !== 200) {\n      throw new Error();\n    }\n    const responseJson = await response.json();\n    for (const service of responseJson) {\n      const serviceData = service[1];\n      if (serviceData.domain == null) {\n        continue;\n      }\n      if (serviceData.documentation == null) {\n        continue;\n      }\n      if (serviceData[\"additional-domains\"] != null) {\n        for (const additionalDomain of serviceData[\"additional-domains\"]) {\n          this.services.set(additionalDomain, serviceData.documentation);\n        }\n      }\n      this.services.set(serviceData.domain, serviceData.documentation);\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"reusedPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"reusedPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noReusedPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'reusedPasswordsFound' | i18n }}\">\n      {{ \"reusedPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge badgeType=\"warning\">\n              {{ \"reusedXTimes\" | i18n: passwordUseMap.get(c.login.password) }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-reused-passwords-report\",\n  templateUrl: \"reused-passwords-report.component.html\",\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordUseMap: Map<string, number>;\n\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const ciphersWithPasswords: CipherView[] = [];\n    this.passwordUseMap = new Map<string, number>();\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      ciphersWithPasswords.push(c);\n      if (this.passwordUseMap.has(c.login.password)) {\n        this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n      } else {\n        this.passwordUseMap.set(c.login.password, 1);\n      }\n    });\n    const reusedPasswordCiphers = ciphersWithPasswords.filter(\n      (c) =>\n        this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1\n    );\n    this.ciphers = reusedPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from an organization view\n    return true;\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"unsecuredWebsitesReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"unsecuredWebsitesReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noUnsecuredWebsites\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'unsecuredWebsitesFound' | i18n }}\">\n      {{ \"unsecuredWebsitesFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-unsecured-websites-report\",\n  templateUrl: \"unsecured-websites-report.component.html\",\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n  constructor(\n    protected cipherService: CipherService,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const unsecuredCiphers = allCiphers.filter((c) => {\n      if (c.type !== CipherType.Login || !c.login.hasUris || c.isDeleted) {\n        return false;\n      }\n      return c.login.uris.some((u) => u.uri != null && u.uri.indexOf(\"http://\") === 0);\n    });\n    this.ciphers = unsecuredCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n}\n","<div class=\"page-header\">\n  <h1>\n    {{ \"weakPasswordsReport\" | i18n }}\n    <small *ngIf=\"hasLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<p>{{ \"weakPasswordsReportDesc\" | i18n }}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n  <app-callout type=\"success\" title=\"{{ 'goodNews' | i18n }}\" *ngIf=\"!ciphers.length\">\n    {{ \"noWeakPasswords\" | i18n }}\n  </app-callout>\n  <ng-container *ngIf=\"ciphers.length\">\n    <app-callout type=\"danger\" title=\"{{ 'weakPasswordsFound' | i18n }}\">\n      {{ \"weakPasswordsFoundDesc\" | i18n: (ciphers.length | number) }}\n    </app-callout>\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <ng-container *ngIf=\"!organization || canManageCipher(c); else cantManage\">\n              <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n                c.name\n              }}</a>\n            </ng-container>\n            <ng-template #cantManage>\n              <span>{{ c.name }}</span>\n            </ng-template>\n            <ng-container *ngIf=\"!organization && c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"text-right\">\n            <span bitBadge [badgeType]=\"passwordStrengthMap.get(c.id)[1]\">\n              {{ passwordStrengthMap.get(c.id)[0] | i18n }}\n            </span>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\nimport { BadgeTypes } from \"@bitwarden/components\";\n\nimport { CipherReportComponent } from \"./cipher-report.component\";\n\n@Component({\n  selector: \"app-weak-passwords-report\",\n  templateUrl: \"weak-passwords-report.component.html\",\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n  passwordStrengthMap = new Map<string, [string, BadgeTypes]>();\n\n  private passwordStrengthCache = new Map<string, number>();\n\n  constructor(\n    protected cipherService: CipherService,\n    protected passwordGenerationService: PasswordGenerationServiceAbstraction,\n    modalService: ModalService,\n    messagingService: MessagingService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(modalService, messagingService, true, passwordRepromptService);\n  }\n\n  async ngOnInit() {\n    if (await this.checkAccess()) {\n      await super.load();\n    }\n  }\n\n  async setCiphers() {\n    const allCiphers = await this.getAllCiphers();\n    const weakPasswordCiphers: CipherView[] = [];\n    const isUserNameNotEmpty = (c: CipherView): boolean => {\n      return c.login.username != null && c.login.username.trim() !== \"\";\n    };\n    const getCacheKey = (c: CipherView): string => {\n      return c.login.password + \"_____\" + (isUserNameNotEmpty(c) ? c.login.username : \"\");\n    };\n\n    allCiphers.forEach((c) => {\n      if (\n        c.type !== CipherType.Login ||\n        c.login.password == null ||\n        c.login.password === \"\" ||\n        c.isDeleted\n      ) {\n        return;\n      }\n      const hasUserName = isUserNameNotEmpty(c);\n      const cacheKey = getCacheKey(c);\n      if (!this.passwordStrengthCache.has(cacheKey)) {\n        let userInput: string[] = [];\n        if (hasUserName) {\n          const atPosition = c.login.username.indexOf(\"@\");\n          if (atPosition > -1) {\n            userInput = userInput\n              .concat(\n                c.login.username\n                  .substr(0, atPosition)\n                  .trim()\n                  .toLowerCase()\n                  .split(/[^A-Za-z0-9]/)\n              )\n              .filter((i) => i.length >= 3);\n          } else {\n            userInput = c.login.username\n              .trim()\n              .toLowerCase()\n              .split(/[^A-Za-z0-9]/)\n              .filter((i) => i.length >= 3);\n          }\n        }\n        const result = this.passwordGenerationService.passwordStrength(\n          c.login.password,\n          userInput.length > 0 ? userInput : null\n        );\n        this.passwordStrengthCache.set(cacheKey, result.score);\n      }\n      const score = this.passwordStrengthCache.get(cacheKey);\n      if (score != null && score <= 2) {\n        this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n        weakPasswordCiphers.push(c);\n      }\n    });\n    weakPasswordCiphers.sort((a, b) => {\n      return (\n        this.passwordStrengthCache.get(getCacheKey(a)) -\n        this.passwordStrengthCache.get(getCacheKey(b))\n      );\n    });\n    this.ciphers = weakPasswordCiphers;\n  }\n\n  protected getAllCiphers(): Promise<CipherView[]> {\n    return this.cipherService.getAllDecrypted();\n  }\n\n  protected canManageCipher(c: CipherView): boolean {\n    // this will only ever be false from the org view;\n    return true;\n  }\n\n  private scoreKey(score: number): [string, BadgeTypes] {\n    switch (score) {\n      case 4:\n        return [\"strong\", \"success\"];\n      case 3:\n        return [\"good\", \"primary\"];\n      case 2:\n        return [\"weak\", \"warning\"];\n      default:\n        return [\"veryWeak\", \"danger\"];\n    }\n  }\n}\n","export enum ReportVariant {\n  Enabled = \"Enabled\",\n  RequiresPremium = \"RequiresPremium\",\n  RequiresUpgrade = \"RequiresUpgrade\",\n}\n","<a\n  class=\"tw-block tw-h-full tw-max-w-72 tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 !tw-text-main tw-transition-all hover:tw-scale-105 hover:tw-no-underline focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2\"\n  [routerLink]=\"route\"\n>\n  <div class=\"tw-relative\">\n    <div\n      class=\"tw-flex tw-h-28 tw-bg-background-alt2 tw-text-center tw-text-primary-300\"\n      [ngClass]=\"{ 'tw-grayscale': disabled }\"\n    >\n      <div class=\"tw-m-auto\"><bit-icon [icon]=\"icon\" aria-hidden=\"true\"></bit-icon></div>\n    </div>\n    <div class=\"tw-p-5\" [ngClass]=\"{ 'tw-grayscale': disabled }\">\n      <h3 class=\"tw-mb-4 tw-text-xl tw-font-bold\">{{ title }}</h3>\n      <p class=\"tw-mb-0\">{{ description }}</p>\n    </div>\n    <span\n      bitBadge\n      badgeType=\"success\"\n      class=\"tw-absolute tw-left-2 tw-top-2 tw-leading-none\"\n      *ngIf=\"disabled\"\n    >\n      <ng-container *ngIf=\"requiresPremium\">{{ \"premium\" | i18n }}</ng-container>\n      <ng-container *ngIf=\"!requiresPremium\">{{ \"upgrade\" | i18n }}</ng-container>\n    </span>\n  </div>\n</a>\n","import { Component, Input } from \"@angular/core\";\n\nimport { Icon } from \"@bitwarden/components\";\n\nimport { ReportVariant } from \"../models/report-variant\";\n\n@Component({\n  selector: \"app-report-card\",\n  templateUrl: \"report-card.component.html\",\n})\nexport class ReportCardComponent {\n  @Input() title: string;\n  @Input() description: string;\n  @Input() route: string;\n  @Input() icon: Icon;\n  @Input() variant: ReportVariant;\n\n  protected get disabled() {\n    return this.variant != ReportVariant.Enabled;\n  }\n\n  protected get requiresPremium() {\n    return this.variant == ReportVariant.RequiresPremium;\n  }\n}\n","<div class=\"tw-inline-grid tw-grid-cols-3 tw-gap-4\">\n  <div *ngFor=\"let report of reports\">\n    <app-report-card\n      [title]=\"report.title | i18n\"\n      [description]=\"report.description | i18n\"\n      [route]=\"report.route\"\n      [variant]=\"report.variant\"\n      [icon]=\"report.icon\"\n    ></app-report-card>\n  </div>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\nimport { ReportEntry } from \"../models/report-entry\";\n\n@Component({\n  selector: \"app-report-list\",\n  templateUrl: \"report-list.component.html\",\n})\nexport class ReportListComponent {\n  @Input() reports: ReportEntry[];\n}\n","export class StorageRequest {\n  storageGbAdjustment: number;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ (add ? \"addStorage\" : \"removeStorage\") | i18n }}</h3>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"storageAdjustment\">{{\n          (add ? \"gbStorageAdd\" : \"gbStorageRemove\") | i18n\n        }}</label>\n        <input\n          id=\"storageAdjustment\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"StroageGbAdjustment\"\n          [(ngModel)]=\"storageAdjustment\"\n          min=\"0\"\n          max=\"99\"\n          step=\"1\"\n          required\n        />\n      </div>\n    </div>\n    <div *ngIf=\"add\" class=\"mb-3\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ storageAdjustment || 0 }} GB &times;\n      {{ storageGbPrice | currency: \"$\" }} = {{ adjustedStorageTotal | currency: \"$\" }} /{{\n        interval | i18n\n      }}\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n    <small class=\"d-block text-muted mt-3\">\n      {{ (add ? \"storageAddNote\" : \"storageRemoveNote\") | i18n }}\n    </small>\n  </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StorageRequest } from \"@bitwarden/common/models/request/storage.request\";\nimport { PaymentResponse } from \"@bitwarden/common/models/response/payment.response\";\n\nimport { PaymentComponent } from \"./payment.component\";\n\n@Component({\n  selector: \"app-adjust-storage\",\n  templateUrl: \"adjust-storage.component.html\",\n})\nexport class AdjustStorageComponent {\n  @Input() storageGbPrice = 0;\n  @Input() add = true;\n  @Input() organizationId: string;\n  @Input() interval = \"year\";\n  @Output() onAdjusted = new EventEmitter<number>();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n  storageAdjustment = 0;\n  formPromise: Promise<PaymentResponse | void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new StorageRequest();\n      request.storageGbAdjustment = this.storageAdjustment;\n      if (!this.add) {\n        request.storageGbAdjustment *= -1;\n      }\n\n      let paymentFailed = false;\n      const action = async () => {\n        let response: Promise<PaymentResponse>;\n        if (this.organizationId == null) {\n          response = this.formPromise = this.apiService.postAccountStorage(request);\n        } else {\n          response = this.formPromise = this.organizationApiService.updateStorage(\n            this.organizationId,\n            request\n          );\n        }\n        const result = await response;\n        if (result != null && result.paymentIntentClientSecret != null) {\n          try {\n            await this.paymentComponent.handleStripeCardPayment(\n              result.paymentIntentClientSecret,\n              null\n            );\n          } catch {\n            paymentFailed = true;\n          }\n        }\n      };\n      this.formPromise = action();\n      await this.formPromise;\n      this.onAdjusted.emit(this.storageAdjustment);\n      if (paymentFailed) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          null,\n          this.i18nService.t(\"couldNotChargeCardPayInvoice\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"../billing\"], { relativeTo: this.activatedRoute });\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"adjustedStorage\", request.storageGbAdjustment.toString())\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  get adjustedStorageTotal(): number {\n    return this.storageGbPrice * this.storageAdjustment;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"apiKeyTitle\">{{ apiKeyTitle | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ apiKeyDescription | i18n }}</p>\n        <app-user-verification\n          [(ngModel)]=\"masterPassword\"\n          ngDefaultControl\n          name=\"secret\"\n          *ngIf=\"!clientSecret\"\n        >\n        </app-user-verification>\n\n        <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{ apiKeyWarning | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          title=\"{{ 'oauth2ClientCredentials' | i18n }}\"\n          icon=\"bwi bwi-key\"\n          *ngIf=\"clientSecret\"\n        >\n          <p class=\"mb-1\">\n            <strong>client_id:</strong><br />\n            <code>{{ clientId }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>client_secret:</strong><br />\n            <code>{{ clientSecret }}</code>\n          </p>\n          <p class=\"mb-1\">\n            <strong>scope:</strong><br />\n            <code>{{ scope }}</code>\n          </p>\n          <p class=\"mb-0\">\n            <strong>grant_type:</strong><br />\n            <code>{{ grantType }}</code>\n          </p>\n        </app-callout>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!clientSecret\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (isRotation ? \"rotateApiKey\" : \"viewApiKey\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/auth/models/request/secret-verification.request\";\nimport { ApiKeyResponse } from \"@bitwarden/common/auth/models/response/api-key.response\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-api-key\",\n  templateUrl: \"api-key.component.html\",\n})\nexport class ApiKeyComponent {\n  keyType: string;\n  isRotation: boolean;\n  postKey: (entityId: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  entityId: string;\n  scope: string;\n  grantType: string;\n  apiKeyTitle: string;\n  apiKeyWarning: string;\n  apiKeyDescription: string;\n\n  masterPassword: Verification;\n  formPromise: Promise<ApiKeyResponse>;\n  clientId: string;\n  clientSecret: string;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.postKey(this.entityId, request));\n      const response = await this.formPromise;\n      this.clientSecret = response.apiKey;\n      this.clientId = `${this.keyType}.${this.entityId}`;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export enum TransactionType {\n  Charge = 0,\n  Credit = 1,\n  PromotionalCredit = 2,\n  ReferralCredit = 3,\n  Refund = 4,\n}\n","<h2 class=\"mt-3\">{{ \"invoices\" | i18n }}</h2>\n<p *ngIf=\"!invoices || !invoices.length\">{{ \"noInvoices\" | i18n }}</p>\n<table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n  <tbody>\n    <tr *ngFor=\"let i of invoices\">\n      <td>{{ i.date | date: \"mediumDate\" }}</td>\n      <td>\n        <a\n          href=\"{{ i.pdfUrl }}\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          class=\"mr-2\"\n          appA11yTitle=\"{{ 'downloadInvoice' | i18n }}\"\n        >\n          <i class=\"bwi bwi-file-pdf\" aria-hidden=\"true\"></i\n        ></a>\n        <a href=\"{{ i.url }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ 'viewInvoice' | i18n }}\">\n          {{ \"invoiceNumber\" | i18n: i.number }}</a\n        >\n      </td>\n      <td>{{ i.amount | currency: \"$\" }}</td>\n      <td>\n        <span *ngIf=\"i.paid\">\n          <i class=\"bwi bwi-check text-success\" aria-hidden=\"true\"></i>\n          {{ \"paid\" | i18n }}\n        </span>\n        <span *ngIf=\"!i.paid\">\n          <i class=\"bwi bwi-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n          {{ \"unpaid\" | i18n }}\n        </span>\n      </td>\n    </tr>\n  </tbody>\n</table>\n<h2 class=\"spaced-header\">{{ \"transactions\" | i18n }}</h2>\n<p *ngIf=\"!transactions || !transactions.length\">{{ \"noTransactions\" | i18n }}</p>\n<table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n  <tbody>\n    <tr *ngFor=\"let t of transactions\">\n      <td>{{ t.createdDate | date: \"mediumDate\" }}</td>\n      <td>\n        <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n          {{ \"chargeNoun\" | i18n }}\n        </span>\n        <span *ngIf=\"t.type === transactionType.Refund\">{{ \"refundNoun\" | i18n }}</span>\n      </td>\n      <td>\n        <i\n          class=\"bwi bwi-fw\"\n          *ngIf=\"t.paymentMethodType\"\n          aria-hidden=\"true\"\n          [ngClass]=\"paymentMethodClasses(t.paymentMethodType)\"\n        ></i>\n        {{ t.details }}\n      </td>\n      <td\n        [ngClass]=\"{ 'text-strike': t.refunded }\"\n        title=\"{{ (t.refunded ? 'refunded' : '') | i18n }}\"\n      >\n        {{ t.amount | currency: \"$\" }}\n      </td>\n    </tr>\n  </tbody>\n</table>\n<small class=\"text-muted\">* {{ \"chargesStatement\" | i18n: \"BITWARDEN\" }}</small>\n","import { Component, Input } from \"@angular/core\";\n\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { TransactionType } from \"@bitwarden/common/enums/transactionType\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billing-history.response\";\n\n@Component({\n  selector: \"app-billing-history\",\n  templateUrl: \"billing-history.component.html\",\n})\nexport class BillingHistoryComponent {\n  @Input()\n  billing: BillingHistoryResponse;\n\n  paymentMethodType = PaymentMethodType;\n  transactionType = TransactionType;\n\n  get invoices() {\n    return this.billing != null ? this.billing.invoices : null;\n  }\n\n  get transactions() {\n    return this.billing != null ? this.billing.transactions : null;\n  }\n\n  paymentMethodClasses(type: PaymentMethodType) {\n    switch (type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n      case PaymentMethodType.WireTransfer:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.BitPay:\n        return [\"bwi-bitcoin text-warning\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\nimport { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationCreateRequest {\n  name: string;\n  businessName: string;\n  billingEmail: string;\n  planType: PlanType;\n  key: string;\n  keys: OrganizationKeysRequest;\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n  additionalSeats: number;\n  maxAutoscaleSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  collectionName: string;\n  taxIdNumber: string;\n  billingAddressLine1: string;\n  billingAddressLine2: string;\n  billingAddressCity: string;\n  billingAddressState: string;\n  billingAddressPostalCode: string;\n  billingAddressCountry: string;\n}\n","import { PlanType } from \"../../enums/planType\";\n\nimport { OrganizationKeysRequest } from \"./organization-keys.request\";\n\nexport class OrganizationUpgradeRequest {\n  businessName: string;\n  planType: PlanType;\n  additionalSeats: number;\n  additionalStorageGb: number;\n  premiumAccessAddon: boolean;\n  billingAddressCountry: string;\n  billingAddressPostalCode: string;\n  keys: OrganizationKeysRequest;\n}\n","import { OrganizationCreateRequest } from \"../organization-create.request\";\n\nexport class ProviderOrganizationCreateRequest {\n  constructor(\n    public clientOwnerEmail: string,\n    public organizationCreateRequest: OrganizationCreateRequest\n  ) {}\n}\n","<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n  <p>{{ \"uploadLicenseFileOrg\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_organization_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n  </form>\n</ng-container>\n<form\n  #form\n  [formGroup]=\"formGroup\"\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n  *ngIf=\"!loading && !selfHosted && this.plans\"\n  class=\"tw-pt-6\"\n>\n  <app-org-info\n    (changedBusinessOwned)=\"changedOwnedBusiness()\"\n    [formGroup]=\"formGroup\"\n    [createOrganization]=\"createOrganization\"\n    [isProvider]=\"!!providerId\"\n    [acceptingSponsorship]=\"acceptingSponsorship\"\n  ></app-org-info>\n  <h2 class=\"mt-5\">{{ \"chooseYourPlan\" | i18n }}</h2>\n  <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"product\"\n      id=\"product{{ selectableProduct.product }}\"\n      [value]=\"selectableProduct.product\"\n      formControlName=\"product\"\n      (change)=\"changedProduct()\"\n    />\n    <label class=\"form-check-label\" for=\"product{{ selectableProduct.product }}\">\n      {{ selectableProduct.nameLocalizationKey | i18n }}\n      <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n: \"1\" }}</small>\n      <ng-container\n        *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\"\n      >\n        <small>• {{ \"includeAllTeamsFeatures\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasSso\">• {{ \"includeSsoAuthentication\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasPolicies\"\n          >• {{ \"includeEnterprisePolicies\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-container>\n      <ng-template #fullFeatureList>\n        <small *ngIf=\"selectableProduct.product == productTypes.Free\"\n          >• {{ \"limitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxUsers }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxUsers\">• {{ \"addShareUnlimitedUsers\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.maxCollections\"\n          >• {{ \"limitedCollections\" | i18n: selectableProduct.maxCollections }}</small\n        >\n        <small *ngIf=\"selectableProduct.maxAdditionalSeats\"\n          >• {{ \"addShareLimitedUsers\" | i18n: selectableProduct.maxAdditionalSeats }}</small\n        >\n        <small *ngIf=\"!selectableProduct.maxCollections\"\n          >• {{ \"createUnlimitedCollections\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.baseStorageGb\"\n          >• {{ \"gbEncryptedFileStorage\" | i18n: selectableProduct.baseStorageGb + \"GB\" }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasGroups\">• {{ \"controlAccessWithGroups\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasApi\">• {{ \"trackAuditLogs\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.hasDirectory\"\n          >• {{ \"syncUsersFromDirectory\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.hasSelfHost\">• {{ \"onPremHostingOptional\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.usersGetPremium\">• {{ \"usersGetPremium\" | i18n }}</small>\n        <small *ngIf=\"selectableProduct.product != productTypes.Free\"\n          >• {{ \"priorityCustomerSupport\" | i18n }}</small\n        >\n        <small *ngIf=\"selectableProduct.trialPeriodDays && createOrganization\"\n          >•\n          {{ \"xDayFreeTrial\" | i18n: selectableProduct.trialPeriodDays }}\n        </small>\n      </ng-template>\n      <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n        <ng-container *ngIf=\"selectableProduct.basePrice && !acceptingSponsorship\">\n          {{ selectableProduct.basePrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }},\n          {{ \"includesXUsers\" | i18n: selectableProduct.baseSeats }}\n          <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n            {{ (\"additionalUsers\" | i18n).toLowerCase() }}\n            {{ selectableProduct.seatPrice / 12 | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </ng-container>\n        </ng-container>\n      </span>\n      <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n        {{ \"costPerUser\" | i18n: (selectableProduct.seatPrice / 12 | currency: \"$\") }} /{{\n          \"month\" | i18n\n        }}\n      </span>\n      <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{ \"freeForever\" | i18n }}</span>\n    </label>\n  </div>\n  <div *ngIf=\"formGroup.controls['product'].value !== productTypes.Free\">\n    <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n      <h2 class=\"mt-5\">{{ \"users\" | i18n }}</h2>\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <label for=\"additionalSeats\">{{ \"userSeats\" | i18n }}</label>\n          <input\n            id=\"additionalSeats\"\n            class=\"form-control\"\n            type=\"number\"\n            name=\"additionalSeats\"\n            formControlName=\"additionalSeats\"\n            placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n            required\n          />\n          <small class=\"text-muted form-text\">{{ \"userSeatsHowManyDesc\" | i18n }}</small>\n        </div>\n      </div>\n    </ng-container>\n    <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n    <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalSeats\">{{ \"additionalUserSeats\" | i18n }}</label>\n        <input\n          id=\"additionalSeats\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalSeats\"\n          formControlName=\"additionalSeats\"\n          placeholder=\"{{ 'userSeatsDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"userSeatsAdditionalDesc\"\n            | i18n: selectedPlan.baseSeats:(seatPriceMonthly(selectedPlan) | currency: \"$\")\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\">\n        <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n        <input\n          id=\"additionalStorage\"\n          class=\"form-control\"\n          type=\"number\"\n          name=\"additionalStorageGb\"\n          formControlName=\"additionalStorage\"\n          step=\"1\"\n          placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n        />\n        <small class=\"text-muted form-text\">{{\n          \"additionalStorageIntervalDesc\"\n            | i18n\n              : \"1 GB\"\n              : (additionalStoragePriceMonthly(selectedPlan) | currency: \"$\")\n              : (\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n        <div class=\"form-check\">\n          <input\n            id=\"premiumAccess\"\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            name=\"premiumAccessAddon\"\n            formControlName=\"premiumAccessAddon\"\n          />\n          <label for=\"premiumAccess\" class=\"form-check-label bold\">{{\n            \"premiumAccess\" | i18n\n          }}</label>\n        </div>\n        <small class=\"text-muted form-text\">{{\n          \"premiumAccessDesc\" | i18n: (3.33 | currency: \"$\"):(\"month\" | i18n)\n        }}</small>\n      </div>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n    <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"plan\"\n        id=\"interval{{ selectablePlan.type }}\"\n        [value]=\"selectablePlan.type\"\n        formControlName=\"plan\"\n      />\n      <label class=\"form-check-label\" for=\"interval{{ selectablePlan.type }}\">\n        <ng-container *ngIf=\"selectablePlan.isAnnual\">\n          {{ \"annually\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }}\n            =\n            <ng-container *ngIf=\"acceptingSponsorship; else notAcceptingSponsorship\">\n              <span style=\"text-decoration: line-through\">{{\n                selectablePlan.basePrice | currency: \"$\"\n              }}</span>\n              {{ \"freeWithSponsorship\" | i18n }}\n            </ng-container>\n            <ng-template #notAcceptingSponsorship>\n              {{ selectablePlan.basePrice | currency: \"$\" }}\n              /{{ \"year\" | i18n }}\n            </ng-template>\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} = {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{\n              \"year\" | i18n\n            }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb / 12 | currency: \"$\" }} &times; 12\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"year\" | i18n }}\n          </small>\n        </ng-container>\n        <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n          {{ \"monthly\" | i18n }}\n          <small *ngIf=\"selectablePlan.basePrice\">\n            {{ \"basePrice\" | i18n }}: {{ selectablePlan.basePrice | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }}\n            =\n            {{ selectablePlan.basePrice | currency: \"$\" }}\n            /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n            <span *ngIf=\"selectablePlan.baseSeats\">{{ \"additionalUsers\" | i18n }}:</span>\n            <span *ngIf=\"!selectablePlan.baseSeats\">{{ \"users\" | i18n }}:</span>\n            {{ formGroup.controls[\"additionalSeats\"].value || 0 }} &times;\n            {{ selectablePlan.seatPrice | currency: \"$\" }} {{ \"monthAbbr\" | i18n }} =\n            {{ seatTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n          <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n            {{ \"additionalStorageGb\" | i18n }}:\n            {{ formGroup.controls[\"additionalStorage\"].value || 0 }} &times;\n            {{ selectablePlan.additionalStoragePricePerGb | currency: \"$\" }}\n            {{ \"monthAbbr\" | i18n }} =\n            {{ additionalStorageTotal(selectablePlan) | currency: \"$\" }} /{{ \"month\" | i18n }}\n          </small>\n        </ng-container>\n      </label>\n    </div>\n    <hr class=\"my-3\" />\n    <h2 class=\"spaced-header mb-4\">\n      {{ (createOrganization ? \"paymentInformation\" : \"billingInformation\") | i18n }}\n    </h2>\n    <small class=\"text-muted font-italic mb-3 d-block\">\n      {{ paymentDesc }}\n    </small>\n    <app-payment *ngIf=\"createOrganization\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    <div id=\"price\" class=\"my-4\">\n      <div class=\"text-muted text-sm\">\n        {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n        <br />\n        <ng-container>\n          {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n        </ng-container>\n      </div>\n      <hr class=\"my-1 col-3 ml-0\" />\n      <p class=\"text-lg\">\n        <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{\n          selectedPlanInterval | i18n\n        }}\n      </p>\n    </div>\n    <ng-container *ngIf=\"!createOrganization\">\n      <app-payment [showMethods]=\"false\"></app-payment>\n    </ng-container>\n  </div>\n  <div *ngIf=\"singleOrgPolicyBlock\" class=\"mt-4\">\n    <app-callout [type]=\"'error'\">{{ \"singleOrgBlockCreateMessage\" | i18n }}</app-callout>\n  </div>\n  <div class=\"mt-4\">\n    <button\n      type=\"submit\"\n      buttonType=\"primary\"\n      bitButton\n      [loading]=\"form.loading\"\n      [disabled]=\"!formGroup.valid\"\n    >\n      {{ \"submit\" | i18n }}\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { OrganizationCreateRequest } from \"@bitwarden/common/models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"@bitwarden/common/models/request/organization-keys.request\";\nimport { OrganizationUpgradeRequest } from \"@bitwarden/common/models/request/organization-upgrade.request\";\nimport { ProviderOrganizationCreateRequest } from \"@bitwarden/common/models/request/provider/provider-organization-create.request\";\nimport { PlanResponse } from \"@bitwarden/common/models/response/plan.response\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\ninterface OnSuccessArgs {\n  organizationId: string;\n}\n\n@Component({\n  selector: \"app-organization-plans\",\n  templateUrl: \"organization-plans.component.html\",\n})\nexport class OrganizationPlansComponent implements OnInit, OnDestroy {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n  @Input() organizationId: string;\n  @Input() showFree = true;\n  @Input() showCancel = false;\n  @Input() acceptingSponsorship = false;\n  @Input()\n  get product(): ProductType {\n    return this._product;\n  }\n  set product(product: ProductType) {\n    this._product = product;\n    this.formGroup?.controls?.product?.setValue(product);\n  }\n  private _product = ProductType.Free;\n\n  @Input()\n  get plan(): PlanType {\n    return this._plan;\n  }\n  set plan(plan: PlanType) {\n    this._plan = plan;\n    this.formGroup?.controls?.plan?.setValue(plan);\n  }\n  private _plan = PlanType.Free;\n  @Input() providerId?: string;\n  @Output() onSuccess = new EventEmitter<OnSuccessArgs>();\n  @Output() onCanceled = new EventEmitter<void>();\n  @Output() onTrialBillingSuccess = new EventEmitter();\n\n  loading = true;\n  selfHosted = false;\n  productTypes = ProductType;\n  formPromise: Promise<string>;\n  singleOrgPolicyAppliesToActiveUser = false;\n  isInTrialFlow = false;\n  discount = 0;\n\n  formGroup = this.formBuilder.group({\n    name: [\"\"],\n    billingEmail: [\"\", [Validators.email]],\n    businessOwned: [false],\n    premiumAccessAddon: [false],\n    additionalStorage: [0, [Validators.min(0), Validators.max(99)]],\n    additionalSeats: [0, [Validators.min(0), Validators.max(100000)]],\n    clientOwnerEmail: [\"\", [Validators.email]],\n    businessName: [\"\"],\n    plan: [this.plan],\n    product: [this.product],\n  });\n\n  plans: PlanResponse[];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private router: Router,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private organizationService: OrganizationService,\n    private logService: LogService,\n    private messagingService: MessagingService,\n    private formBuilder: UntypedFormBuilder,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    if (!this.selfHosted) {\n      const plans = await this.apiService.getPlans();\n      this.plans = plans.data;\n      if (this.product === ProductType.Enterprise || this.product === ProductType.Teams) {\n        this.formGroup.controls.businessOwned.setValue(true);\n      }\n    }\n\n    if (this.providerId) {\n      this.formGroup.controls.businessOwned.setValue(true);\n      this.changedOwnedBusiness();\n    }\n\n    if (!this.createOrganization || this.acceptingSponsorship) {\n      this.formGroup.controls.product.setValue(ProductType.Families);\n      this.changedProduct();\n    }\n\n    if (this.createOrganization) {\n      this.formGroup.controls.name.addValidators([Validators.required, Validators.maxLength(50)]);\n      this.formGroup.controls.billingEmail.addValidators(Validators.required);\n    }\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SingleOrg)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.singleOrgPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n      });\n\n    this.loading = false;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get singleOrgPolicyBlock() {\n    return this.singleOrgPolicyAppliesToActiveUser && this.providerId == null;\n  }\n\n  get createOrganization() {\n    return this.organizationId == null;\n  }\n\n  get selectedPlan() {\n    return this.plans.find((plan) => plan.type === this.formGroup.controls.plan.value);\n  }\n\n  get selectedPlanInterval() {\n    return this.selectedPlan.isAnnual ? \"year\" : \"month\";\n  }\n\n  get selectableProducts() {\n    let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n    if (this.formGroup.controls.businessOwned.value) {\n      validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n    }\n\n    if (!this.showFree) {\n      validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n    }\n\n    validPlans = validPlans.filter(\n      (plan) =>\n        !plan.legacyYear &&\n        !plan.disabled &&\n        (plan.isAnnual || plan.product === this.productTypes.Free)\n    );\n\n    if (this.acceptingSponsorship) {\n      const familyPlan = this.plans.find((plan) => plan.type === PlanType.FamiliesAnnually);\n      this.discount = familyPlan.basePrice;\n      validPlans = [familyPlan];\n    }\n\n    return validPlans;\n  }\n\n  get selectablePlans() {\n    return this.plans?.filter(\n      (plan) =>\n        !plan.legacyYear && !plan.disabled && plan.product === this.formGroup.controls.product.value\n    );\n  }\n\n  additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.additionalStoragePricePerGb;\n    }\n    return selectedPlan.additionalStoragePricePerGb / 12;\n  }\n\n  seatPriceMonthly(selectedPlan: PlanResponse) {\n    if (!selectedPlan.isAnnual) {\n      return selectedPlan.seatPrice;\n    }\n    return selectedPlan.seatPrice / 12;\n  }\n\n  additionalStorageTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalStorageOption) {\n      return 0;\n    }\n\n    return (\n      plan.additionalStoragePricePerGb *\n      Math.abs(this.formGroup.controls.additionalStorage.value || 0)\n    );\n  }\n\n  seatTotal(plan: PlanResponse): number {\n    if (!plan.hasAdditionalSeatsOption) {\n      return 0;\n    }\n\n    return plan.seatPrice * Math.abs(this.formGroup.controls.additionalSeats.value || 0);\n  }\n\n  get subtotal() {\n    let subTotal = this.selectedPlan.basePrice;\n    if (\n      this.selectedPlan.hasAdditionalSeatsOption &&\n      this.formGroup.controls.additionalSeats.value\n    ) {\n      subTotal += this.seatTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasAdditionalStorageOption &&\n      this.formGroup.controls.additionalStorage.value\n    ) {\n      subTotal += this.additionalStorageTotal(this.selectedPlan);\n    }\n    if (\n      this.selectedPlan.hasPremiumAccessOption &&\n      this.formGroup.controls.premiumAccessAddon.value\n    ) {\n      subTotal += this.selectedPlan.premiumAccessOptionPrice;\n    }\n    return subTotal - this.discount;\n  }\n\n  get freeTrial() {\n    return this.selectedPlan.trialPeriodDays != null;\n  }\n\n  get taxCharges() {\n    return this.taxComponent != null && this.taxComponent.taxRate != null\n      ? (this.taxComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total() {\n    return this.subtotal + this.taxCharges || 0;\n  }\n\n  get paymentDesc() {\n    if (this.acceptingSponsorship) {\n      return this.i18nService.t(\"paymentSponsored\");\n    } else if (this.freeTrial && this.createOrganization) {\n      return this.i18nService.t(\"paymentChargedWithTrial\");\n    } else {\n      return this.i18nService.t(\"paymentCharged\", this.i18nService.t(this.selectedPlanInterval));\n    }\n  }\n\n  changedProduct() {\n    this.formGroup.controls.plan.setValue(this.selectablePlans[0].type);\n    if (!this.selectedPlan.hasPremiumAccessOption) {\n      this.formGroup.controls.premiumAccessAddon.setValue(false);\n    }\n    if (!this.selectedPlan.hasAdditionalStorageOption) {\n      this.formGroup.controls.additionalStorage.setValue(0);\n    }\n    if (!this.selectedPlan.hasAdditionalSeatsOption) {\n      this.formGroup.controls.additionalSeats.setValue(0);\n    } else if (\n      !this.formGroup.controls.additionalSeats.value &&\n      !this.selectedPlan.baseSeats &&\n      this.selectedPlan.hasAdditionalSeatsOption\n    ) {\n      this.formGroup.controls.additionalSeats.setValue(1);\n    }\n  }\n\n  changedOwnedBusiness() {\n    if (!this.formGroup.controls.businessOwned.value || this.selectedPlan.canBeUsedByBusiness) {\n      return;\n    }\n    this.formGroup.controls.product.setValue(ProductType.Teams);\n    this.formGroup.controls.plan.setValue(PlanType.TeamsAnnually);\n    this.changedProduct();\n  }\n\n  changedCountry() {\n    this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== \"US\";\n    // Bank Account payments are only available for US customers\n    if (\n      this.paymentComponent.hideBank &&\n      this.paymentComponent.method === PaymentMethodType.BankAccount\n    ) {\n      this.paymentComponent.method = PaymentMethodType.Card;\n      this.paymentComponent.changeMethod();\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  async submit() {\n    if (this.singleOrgPolicyBlock) {\n      return;\n    }\n\n    try {\n      const doSubmit = async (): Promise<string> => {\n        let orgId: string = null;\n        if (this.createOrganization) {\n          const shareKey = await this.cryptoService.makeShareKey();\n          const key = shareKey[0].encryptedString;\n          const collection = await this.cryptoService.encrypt(\n            this.i18nService.t(\"defaultCollection\"),\n            shareKey[1]\n          );\n          const collectionCt = collection.encryptedString;\n          const orgKeys = await this.cryptoService.makeKeyPair(shareKey[1]);\n\n          if (this.selfHosted) {\n            orgId = await this.createSelfHosted(key, collectionCt, orgKeys);\n          } else {\n            orgId = await this.createCloudHosted(key, collectionCt, orgKeys, shareKey[1]);\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            this.i18nService.t(\"organizationCreated\"),\n            this.i18nService.t(\"organizationReadyToGo\")\n          );\n        } else {\n          orgId = await this.updateOrganization(orgId);\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"organizationUpgraded\")\n          );\n        }\n\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n\n        if (!this.acceptingSponsorship && !this.isInTrialFlow) {\n          this.router.navigate([\"/organizations/\" + orgId]);\n        }\n\n        if (this.isInTrialFlow) {\n          this.onTrialBillingSuccess.emit({\n            orgId: orgId,\n            subLabelText: this.billingSubLabelText(),\n          });\n        }\n\n        return orgId;\n      };\n\n      this.formPromise = doSubmit();\n      const organizationId = await this.formPromise;\n      this.onSuccess.emit({ organizationId: organizationId });\n      this.messagingService.send(\"organizationCreated\", organizationId);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async updateOrganization(orgId: string) {\n    const request = new OrganizationUpgradeRequest();\n    request.businessName = this.formGroup.controls.businessOwned.value\n      ? this.formGroup.controls.businessName.value\n      : null;\n    request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n    request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n    request.premiumAccessAddon =\n      this.selectedPlan.hasPremiumAccessOption && this.formGroup.controls.premiumAccessAddon.value;\n    request.planType = this.selectedPlan.type;\n    request.billingAddressCountry = this.taxComponent.taxInfo.country;\n    request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n\n    // Retrieve org info to backfill pub/priv key if necessary\n    const org = await this.organizationService.get(this.organizationId);\n    if (!org.hasPublicAndPrivateKeys) {\n      const orgShareKey = await this.cryptoService.getOrgKey(this.organizationId);\n      const orgKeys = await this.cryptoService.makeKeyPair(orgShareKey);\n      request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    }\n\n    const result = await this.organizationApiService.upgrade(this.organizationId, request);\n    if (!result.success && result.paymentIntentClientSecret != null) {\n      await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n    }\n    return this.organizationId;\n  }\n\n  private async createCloudHosted(\n    key: string,\n    collectionCt: string,\n    orgKeys: [string, EncString],\n    orgKey: SymmetricCryptoKey\n  ) {\n    const request = new OrganizationCreateRequest();\n    request.key = key;\n    request.collectionName = collectionCt;\n    request.name = this.formGroup.controls.name.value;\n    request.billingEmail = this.formGroup.controls.billingEmail.value;\n    request.keys = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n\n    if (this.selectedPlan.type === PlanType.Free) {\n      request.planType = PlanType.Free;\n    } else {\n      const tokenResult = await this.paymentComponent.createPaymentToken();\n\n      request.paymentToken = tokenResult[0];\n      request.paymentMethodType = tokenResult[1];\n      request.businessName = this.formGroup.controls.businessOwned.value\n        ? this.formGroup.controls.businessName.value\n        : null;\n      request.additionalSeats = this.formGroup.controls.additionalSeats.value;\n      request.additionalStorageGb = this.formGroup.controls.additionalStorage.value;\n      request.premiumAccessAddon =\n        this.selectedPlan.hasPremiumAccessOption &&\n        this.formGroup.controls.premiumAccessAddon.value;\n      request.planType = this.selectedPlan.type;\n      request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n      request.billingAddressCountry = this.taxComponent.taxInfo.country;\n      if (this.taxComponent.taxInfo.includeTaxId) {\n        request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n        request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n        request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n        request.billingAddressCity = this.taxComponent.taxInfo.city;\n        request.billingAddressState = this.taxComponent.taxInfo.state;\n      }\n    }\n\n    if (this.providerId) {\n      const providerRequest = new ProviderOrganizationCreateRequest(\n        this.formGroup.controls.clientOwnerEmail.value,\n        request\n      );\n      const providerKey = await this.cryptoService.getProviderKey(this.providerId);\n      providerRequest.organizationCreateRequest.key = (\n        await this.cryptoService.encrypt(orgKey.key, providerKey)\n      ).encryptedString;\n      const orgId = (\n        await this.apiService.postProviderCreateOrganization(this.providerId, providerRequest)\n      ).organizationId;\n\n      return orgId;\n    } else {\n      return (await this.organizationApiService.create(request)).id;\n    }\n  }\n\n  private async createSelfHosted(key: string, collectionCt: string, orgKeys: [string, EncString]) {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      throw new Error(this.i18nService.t(\"selectFile\"));\n    }\n\n    const fd = new FormData();\n    fd.append(\"license\", files[0]);\n    fd.append(\"key\", key);\n    fd.append(\"collectionName\", collectionCt);\n    const response = await this.organizationApiService.createLicense(fd);\n    const orgId = response.id;\n\n    await this.apiService.refreshIdentityToken();\n\n    // Org Keys live outside of the OrganizationLicense - add the keys to the org here\n    const request = new OrganizationKeysRequest(orgKeys[0], orgKeys[1].encryptedString);\n    await this.organizationApiService.updateKeys(orgId, request);\n\n    return orgId;\n  }\n\n  private billingSubLabelText(): string {\n    const selectedPlan = this.selectedPlan;\n    const price = selectedPlan.basePrice === 0 ? selectedPlan.seatPrice : selectedPlan.basePrice;\n    let text = \"\";\n\n    if (selectedPlan.isAnnual) {\n      text += `${this.i18nService.t(\"annual\")} ($${price}/${this.i18nService.t(\"yr\")})`;\n    } else {\n      text += `${this.i18nService.t(\"monthly\")} ($${price}/${this.i18nService.t(\"monthAbbr\")})`;\n    }\n\n    return text;\n  }\n}\n","export class VerifyBankRequest {\n  amount1: number;\n  amount2: number;\n}\n","export class BitPayInvoiceRequest {\n  userId: string;\n  organizationId: string;\n  credit: boolean;\n  amount: number;\n  returnUrl: string;\n  name: string;\n  email: string;\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">{{ \"addCredit\" | i18n }}</h3>\n    <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-paypal\"\n          [value]=\"paymentMethodType.PayPal\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-paypal\">\n          <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n        >\n      </div>\n      <div class=\"form-check form-check-inline\">\n        <input\n          class=\"form-check-input\"\n          type=\"radio\"\n          name=\"Method\"\n          id=\"credit-method-bitcoin\"\n          [value]=\"paymentMethodType.BitPay\"\n          [(ngModel)]=\"method\"\n        />\n        <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n          <i class=\"bwi bwi-fw bwi-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label\n        >\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <label for=\"creditAmount\">{{ \"amount\" | i18n }}</label>\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n            <input\n              id=\"creditAmount\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"CreditAmount\"\n              [(ngModel)]=\"creditAmount\"\n              (blur)=\"formatAmount()\"\n              required\n            />\n          </div>\n        </div>\n      </div>\n      <small class=\"form-text text-muted\">{{ \"creditDelayed\" | i18n }}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n<form #ppButtonForm action=\"{{ ppButtonFormAction }}\" method=\"post\" target=\"_top\">\n  <input type=\"hidden\" name=\"cmd\" value=\"_xclick\" />\n  <input type=\"hidden\" name=\"business\" value=\"{{ ppButtonBusinessId }}\" />\n  <input type=\"hidden\" name=\"button_subtype\" value=\"services\" />\n  <input type=\"hidden\" name=\"no_note\" value=\"1\" />\n  <input type=\"hidden\" name=\"no_shipping\" value=\"1\" />\n  <input type=\"hidden\" name=\"rm\" value=\"1\" />\n  <input type=\"hidden\" name=\"return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"cancel_return\" value=\"{{ returnUrl }}\" />\n  <input type=\"hidden\" name=\"currency_code\" value=\"USD\" />\n  <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\" />\n  <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\" />\n  <input type=\"hidden\" name=\"amount\" value=\"{{ creditAmount }}\" />\n  <input type=\"hidden\" name=\"custom\" value=\"{{ ppButtonCustomField }}\" />\n  <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\" />\n  <input type=\"hidden\" name=\"item_number\" value=\"{{ subject }}\" />\n</form>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PayPalConfig } from \"@bitwarden/common/abstractions/environment.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { BitPayInvoiceRequest } from \"@bitwarden/common/models/request/bit-pay-invoice.request\";\n\n@Component({\n  selector: \"app-add-credit\",\n  templateUrl: \"add-credit.component.html\",\n})\nexport class AddCreditComponent implements OnInit {\n  @Input() creditAmount: string;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.PayPal;\n  @Input() organizationId: string;\n  @Output() onAdded = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  @ViewChild(\"ppButtonForm\", { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n  paymentMethodType = PaymentMethodType;\n  ppButtonFormAction: string;\n  ppButtonBusinessId: string;\n  ppButtonCustomField: string;\n  ppLoading = false;\n  subject: string;\n  returnUrl: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private name: string;\n  private email: string;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    const payPalConfig = process.env.PAYPAL_CONFIG as PayPalConfig;\n    this.ppButtonFormAction = payPalConfig.buttonAction;\n    this.ppButtonBusinessId = payPalConfig.businessId;\n  }\n\n  async ngOnInit() {\n    if (this.organizationId != null) {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"20.00\";\n      }\n      this.ppButtonCustomField = \"organization_id:\" + this.organizationId;\n      const org = await this.organizationService.get(this.organizationId);\n      if (org != null) {\n        this.subject = org.name;\n        this.name = org.name;\n      }\n    } else {\n      if (this.creditAmount == null) {\n        this.creditAmount = \"10.00\";\n      }\n      this.userId = await this.stateService.getUserId();\n      this.subject = await this.stateService.getEmail();\n      this.email = this.subject;\n      this.ppButtonCustomField = \"user_id:\" + this.userId;\n    }\n    this.ppButtonCustomField += \",account_credit:1\";\n    this.returnUrl = window.location.href;\n  }\n\n  async submit() {\n    if (this.creditAmount == null || this.creditAmount === \"\") {\n      return;\n    }\n\n    if (this.method === PaymentMethodType.PayPal) {\n      this.ppButtonFormRef.nativeElement.submit();\n      this.ppLoading = true;\n      return;\n    }\n    if (this.method === PaymentMethodType.BitPay) {\n      try {\n        const req = new BitPayInvoiceRequest();\n        req.email = this.email;\n        req.name = this.name;\n        req.credit = true;\n        req.amount = this.creditAmountNumber;\n        req.organizationId = this.organizationId;\n        req.userId = this.userId;\n        req.returnUrl = this.returnUrl;\n        this.formPromise = this.apiService.postBitPayInvoice(req);\n        const bitPayUrl: string = await this.formPromise;\n        this.platformUtilsService.launchUri(bitPayUrl);\n      } catch (e) {\n        this.logService.error(e);\n      }\n      return;\n    }\n    try {\n      this.onAdded.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  formatAmount() {\n    try {\n      if (this.creditAmount != null && this.creditAmount !== \"\") {\n        const floatAmount = Math.abs(parseFloat(this.creditAmount));\n        if (floatAmount > 0) {\n          this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n            .toFixed(2)\n            .toString();\n          return;\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.creditAmount = \"\";\n  }\n\n  get creditAmountNumber(): number {\n    if (this.creditAmount != null && this.creditAmount !== \"\") {\n      try {\n        return parseFloat(this.creditAmount);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n    return null;\n  }\n}\n","import { PaymentMethodType } from \"../../enums/paymentMethodType\";\n\nimport { OrganizationTaxInfoUpdateRequest } from \"./organization-tax-info-update.request\";\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n  paymentMethodType: PaymentMethodType;\n  paymentToken: string;\n}\n","import { Component, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { PaymentRequest } from \"@bitwarden/common/models/request/payment.request\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-adjust-payment\",\n  templateUrl: \"adjust-payment.component.html\",\n})\nexport class AdjustPaymentComponent {\n  @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n  @Input() currentType?: PaymentMethodType;\n  @Input() organizationId: string;\n  @Output() onAdjusted = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  paymentMethodType = PaymentMethodType;\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    try {\n      const request = new PaymentRequest();\n      this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n        request.paymentToken = result[0];\n        request.paymentMethodType = result[1];\n        request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n        request.country = this.taxInfoComponent.taxInfo.country;\n        if (this.organizationId == null) {\n          return this.apiService.postAccountPayment(request);\n        } else {\n          request.taxId = this.taxInfoComponent.taxInfo.taxId;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          request.line1 = this.taxInfoComponent.taxInfo.line1;\n          request.line2 = this.taxInfoComponent.taxInfo.line2;\n          request.city = this.taxInfoComponent.taxInfo.city;\n          request.state = this.taxInfoComponent.taxInfo.state;\n          return this.organizationApiService.updatePayment(this.organizationId, request);\n        }\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedPaymentMethod\")\n      );\n      this.onAdjusted.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n\n  changeCountry() {\n    if (this.taxInfoComponent.taxInfo.country === \"US\") {\n      this.paymentComponent.hideBank = !this.organizationId;\n    } else {\n      this.paymentComponent.hideBank = true;\n      if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n        this.paymentComponent.method = PaymentMethodType.Card;\n        this.paymentComponent.changeMethod();\n      }\n    }\n  }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"card-body\">\n    <button type=\"button\" class=\"close\" appA11yTitle=\"{{ 'cancel' | i18n }}\" (click)=\"cancel()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h3 class=\"card-body-header\">\n      {{ (currentType != null ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n    </h3>\n    <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n    <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"submit\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</form>\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<div class=\"d-flex\" [ngClass]=\"headerClass\">\n  <h1>\n    {{ \"paymentMethod\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <h2>{{ (isCreditBalance ? \"accountCredit\" : \"accountBalance\") | i18n }}</h2>\n  <p class=\"text-lg\">\n    <strong>{{ creditOrBalance | currency: \"$\" }}</strong>\n  </p>\n  <p>{{ \"creditAppliedDesc\" | i18n }}</p>\n  <button bitButton buttonType=\"secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n    {{ \"addCredit\" | i18n }}\n  </button>\n  <app-add-credit\n    [organizationId]=\"organizationId\"\n    (onAdded)=\"closeAddCredit(true)\"\n    (onCanceled)=\"closeAddCredit(false)\"\n    *ngIf=\"showAddCredit\"\n  >\n  </app-add-credit>\n  <h2 class=\"spaced-header\">{{ \"paymentMethod\" | i18n }}</h2>\n  <p *ngIf=\"!paymentSource\">{{ \"noPaymentMethod\" | i18n }}</p>\n  <ng-container *ngIf=\"paymentSource\">\n    <app-callout\n      type=\"warning\"\n      title=\"{{ 'verifyBankAccount' | i18n }}\"\n      *ngIf=\"\n        forOrganization &&\n        paymentSource.type === paymentMethodType.BankAccount &&\n        paymentSource.needsVerification\n      \"\n    >\n      <p>{{ \"verifyBankAccountDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}</p>\n      <form\n        #verifyForm\n        class=\"form-inline\"\n        (ngSubmit)=\"verifyBank()\"\n        [formGroup]=\"verifyBankForm\"\n        [appApiAction]=\"verifyBankPromise\"\n        ngNativeValidate\n      >\n        <bit-form-field class=\"tw-mr-2 tw-w-40\">\n          <bit-label>{{ \"amountX\" | i18n: \"1\" }}</bit-label>\n          <input bitInput type=\"number\" step=\"1\" placeholder=\"xx\" formControlName=\"amount1\" />\n          <span bitPrefix>$0.</span>\n        </bit-form-field>\n        <bit-form-field class=\"tw-mr-2 tw-w-40\">\n          <bit-label>{{ \"amountX\" | i18n: \"2\" }}</bit-label>\n          <input bitInput type=\"number\" step=\"1\" placeholder=\"xx\" formControlName=\"amount2\" />\n          <span bitPrefix>$0.</span>\n        </bit-form-field>\n        <button\n          bitButton\n          buttonType=\"primary\"\n          type=\"submit\"\n          class=\"btn-submit\"\n          [disabled]=\"verifyForm.loading\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"verifyBankAccount\" | i18n }}</span>\n        </button>\n      </form>\n    </app-callout>\n    <p>\n      <i class=\"bwi bwi-fw\" [ngClass]=\"paymentSourceClasses\"></i>\n      <span *ngIf=\"paymentSourceInApp\">{{ \"inAppPurchase\" | i18n }}</span>\n      {{ paymentSource.description }}\n    </p>\n  </ng-container>\n  <button bitButton buttonType=\"secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n    {{ (paymentSource ? \"changePaymentMethod\" : \"addPaymentMethod\") | i18n }}\n  </button>\n  <app-adjust-payment\n    [organizationId]=\"organizationId\"\n    [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n    (onAdjusted)=\"closePayment(true)\"\n    (onCanceled)=\"closePayment(false)\"\n    *ngIf=\"showAdjustPayment\"\n  >\n  </app-adjust-payment>\n  <ng-container *ngIf=\"forOrganization\">\n    <h2 class=\"spaced-header\">{{ \"taxInformation\" | i18n }}</h2>\n    <p>{{ \"taxInformationDesc\" | i18n }}</p>\n    <div *ngIf=\"!org || loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </div>\n    <form\n      *ngIf=\"org && !loading\"\n      #formTax\n      (ngSubmit)=\"submitTaxInfo()\"\n      [appApiAction]=\"taxFormPromise\"\n      ngNativeValidate\n    >\n      <app-tax-info></app-tax-info>\n      <button\n        bitButton\n        buttonType=\"primary\"\n        type=\"submit\"\n        class=\"btn-submit\"\n        [disabled]=\"formTax.loading\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"save\" | i18n }}</span>\n      </button>\n    </form>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { FormBuilder, FormControl, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\nimport { VerifyBankRequest } from \"@bitwarden/common/models/request/verify-bank.request\";\nimport { BillingPaymentResponse } from \"@bitwarden/common/models/response/billing-payment.response\";\nimport { OrganizationResponse } from \"@bitwarden/common/models/response/organization.response\";\n\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-payment-method\",\n  templateUrl: \"payment-method.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class PaymentMethodComponent implements OnInit {\n  @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n  loading = false;\n  firstLoaded = false;\n  showAdjustPayment = false;\n  showAddCredit = false;\n  billing: BillingPaymentResponse;\n  org: OrganizationResponse;\n  paymentMethodType = PaymentMethodType;\n  organizationId: string;\n\n  verifyBankPromise: Promise<any>;\n  taxFormPromise: Promise<any>;\n\n  verifyBankForm = this.formBuilder.group({\n    amount1: new FormControl<number>(null, [\n      Validators.required,\n      Validators.max(99),\n      Validators.min(0),\n    ]),\n    amount2: new FormControl<number>(null, [\n      Validators.required,\n      Validators.max(99),\n      Validators.min(0),\n    ]),\n  });\n\n  constructor(\n    protected apiService: ApiService,\n    protected organizationApiService: OrganizationApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private router: Router,\n    private logService: LogService,\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      if (params.organizationId) {\n        this.organizationId = params.organizationId;\n      } else if (this.platformUtilsService.isSelfHost()) {\n        this.router.navigate([\"/settings/subscription\"]);\n        return;\n      }\n\n      await this.load();\n      this.firstLoaded = true;\n    });\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n\n    if (this.forOrganization) {\n      const billingPromise = this.organizationApiService.getBilling(this.organizationId);\n      const orgPromise = this.organizationApiService.get(this.organizationId);\n\n      [this.billing, this.org] = await Promise.all([billingPromise, orgPromise]);\n    } else {\n      this.billing = await this.apiService.getUserBillingPayment();\n    }\n\n    this.loading = false;\n  }\n\n  addCredit() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"addCredit\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAddCredit = true;\n  }\n\n  closeAddCredit(load: boolean) {\n    this.showAddCredit = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  changePayment() {\n    if (this.paymentSourceInApp) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(\"changePaymentMethod\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.showAdjustPayment = true;\n  }\n\n  closePayment(load: boolean) {\n    this.showAdjustPayment = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  async verifyBank() {\n    if (this.loading || !this.forOrganization) {\n      return;\n    }\n\n    try {\n      const request = new VerifyBankRequest();\n      request.amount1 = this.verifyBankForm.value.amount1;\n      request.amount2 = this.verifyBankForm.value.amount2;\n      this.verifyBankPromise = this.organizationApiService.verifyBank(this.organizationId, request);\n      await this.verifyBankPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"verifiedBankAccount\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async submitTaxInfo() {\n    this.taxFormPromise = this.taxInfo.submitTaxInfo();\n    await this.taxFormPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"taxInfoUpdated\"));\n  }\n\n  get isCreditBalance() {\n    return this.billing == null || this.billing.balance <= 0;\n  }\n\n  get creditOrBalance() {\n    return Math.abs(this.billing != null ? this.billing.balance : 0);\n  }\n\n  get paymentSource() {\n    return this.billing != null ? this.billing.paymentSource : null;\n  }\n\n  get forOrganization() {\n    return this.organizationId != null;\n  }\n\n  get headerClass() {\n    return this.forOrganization ? [\"page-header\"] : [\"tabbed-header\"];\n  }\n\n  get paymentSourceClasses() {\n    if (this.paymentSource == null) {\n      return [];\n    }\n    switch (this.paymentSource.type) {\n      case PaymentMethodType.Card:\n        return [\"bwi-credit-card\"];\n      case PaymentMethodType.BankAccount:\n        return [\"bwi-bank\"];\n      case PaymentMethodType.Check:\n        return [\"bwi-money\"];\n      case PaymentMethodType.AppleInApp:\n        return [\"bwi-apple text-muted\"];\n      case PaymentMethodType.GoogleInApp:\n        return [\"bwi-google text-muted\"];\n      case PaymentMethodType.PayPal:\n        return [\"bwi-paypal text-primary\"];\n      default:\n        return [];\n    }\n  }\n\n  get paymentSourceInApp() {\n    return (\n      this.paymentSource != null &&\n      (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n        this.paymentSource.type === PaymentMethodType.GoogleInApp)\n    );\n  }\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n  <div class=\"form-check form-check-inline mr-4\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-card\"\n      [value]=\"paymentMethodType.Card\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-card\">\n      <i class=\"bwi bwi-fw bwi-credit-card\" aria-hidden=\"true\"></i> {{ \"creditCard\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-bank\"\n      [value]=\"paymentMethodType.BankAccount\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-bank\">\n      <i class=\"bwi bwi-fw bwi-bank\" aria-hidden=\"true\"></i> {{ \"bankAccount\" | i18n }}</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-paypal\"\n      [value]=\"paymentMethodType.PayPal\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-paypal\">\n      <i class=\"bwi bwi-fw bwi-paypal\" aria-hidden=\"true\"></i> PayPal</label\n    >\n  </div>\n  <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      name=\"Method\"\n      id=\"method-credit\"\n      [value]=\"paymentMethodType.Credit\"\n      [(ngModel)]=\"method\"\n      (change)=\"changeMethod()\"\n    />\n    <label class=\"form-check-label\" for=\"method-credit\">\n      <i class=\"bwi bwi-fw bwi-dollar\" aria-hidden=\"true\"></i> {{ \"accountCredit\" | i18n }}</label\n    >\n  </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n  <div class=\"row\">\n    <div [ngClass]=\"trialFlow ? 'col-5' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-number-element\">{{ \"number\" | i18n }}</label>\n      <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div *ngIf=\"!trialFlow\" class=\"form-group col-8 d-flex align-items-end\">\n      <img\n        src=\"../../images/cards.png\"\n        alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n        width=\"323\"\n        height=\"32\"\n      />\n    </div>\n    <div [ngClass]=\"trialFlow ? 'col-3' : 'col-4'\" class=\"form-group\">\n      <label for=\"stripe-card-expiry-element\">{{ \"expiration\" | i18n }}</label>\n      <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n    <div class=\"form-group col-4\">\n      <div class=\"d-flex\">\n        <label for=\"stripe-card-cvc-element\">\n          {{ \"securityCode\" | i18n }}\n        </label>\n        <a\n          href=\"https://www.cvvnumber.com/cvv.html\"\n          tabindex=\"-1\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          class=\"ml-auto\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n      </div>\n      <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n  <app-callout type=\"warning\" title=\"{{ 'verifyBankAccount' | i18n }}\">\n    {{ \"verifyBankAccountInitialDesc\" | i18n }} {{ \"verifyBankAccountFailureWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"routing_number\">{{ \"routingNumber\" | i18n }}</label>\n      <input\n        id=\"routing_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"routing_number\"\n        [(ngModel)]=\"bank.routing_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_number\">{{ \"accountNumber\" | i18n }}</label>\n      <input\n        id=\"account_number\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_number\"\n        [(ngModel)]=\"bank.account_number\"\n        required\n        appInputVerbatim\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_name\">{{ \"accountHolderName\" | i18n }}</label>\n      <input\n        id=\"account_holder_name\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"account_holder_name\"\n        [(ngModel)]=\"bank.account_holder_name\"\n        required\n      />\n    </div>\n    <div class=\"form-group col-6\">\n      <label for=\"account_holder_type\">{{ \"bankAccountType\" | i18n }}</label>\n      <select\n        id=\"account_holder_type\"\n        class=\"form-control\"\n        name=\"account_holder_type\"\n        [(ngModel)]=\"bank.account_holder_type\"\n        required\n      >\n        <option value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option value=\"company\">{{ \"bankAccountTypeCompany\" | i18n }}</option>\n        <option value=\"individual\">{{ \"bankAccountTypeIndividual\" | i18n }}</option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n  <div class=\"mb-3\">\n    <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n    <small class=\"text-muted\">{{ \"paypalClickSubmit\" | i18n }}</small>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n  <app-callout type=\"note\">\n    {{ \"makeSureEnoughCredit\" | i18n }}\n  </app-callout>\n</ng-container>\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PaymentMethodType } from \"@bitwarden/common/enums/paymentMethodType\";\n\n@Component({\n  selector: \"app-payment\",\n  templateUrl: \"payment.component.html\",\n})\nexport class PaymentComponent implements OnInit, OnDestroy {\n  @Input() showMethods = true;\n  @Input() showOptions = true;\n  @Input() method = PaymentMethodType.Card;\n  @Input() hideBank = false;\n  @Input() hidePaypal = false;\n  @Input() hideCredit = false;\n  @Input() trialFlow = false;\n\n  private destroy$ = new Subject<void>();\n\n  bank: any = {\n    routing_number: null,\n    account_number: null,\n    account_holder_name: null,\n    account_holder_type: \"\",\n    currency: \"USD\",\n    country: \"US\",\n  };\n\n  paymentMethodType = PaymentMethodType;\n\n  private btScript: HTMLScriptElement;\n  private btInstance: any = null;\n  private stripeScript: HTMLScriptElement;\n  private stripe: any = null;\n  private stripeElements: any = null;\n  private stripeCardNumberElement: any = null;\n  private stripeCardExpiryElement: any = null;\n  private stripeCardCvcElement: any = null;\n  private StripeElementStyle: any;\n  private StripeElementClasses: any;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private themingService: AbstractThemingService\n  ) {\n    this.stripeScript = window.document.createElement(\"script\");\n    this.stripeScript.src = \"https://js.stripe.com/v3/?advancedFraudSignals=false\";\n    this.stripeScript.async = true;\n    this.stripeScript.onload = () => {\n      this.stripe = (window as any).Stripe(process.env.STRIPE_KEY);\n      this.stripeElements = this.stripe.elements();\n      this.setStripeElement();\n    };\n    this.btScript = window.document.createElement(\"script\");\n    this.btScript.src = `scripts/dropin.js?cache=${process.env.CACHE_TAG}`;\n    this.btScript.async = true;\n    this.StripeElementStyle = {\n      base: {\n        color: null,\n        fontFamily:\n          '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n          '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: \"14px\",\n        fontSmoothing: \"antialiased\",\n        \"::placeholder\": {\n          color: null,\n        },\n      },\n      invalid: {\n        color: null,\n      },\n    };\n    this.StripeElementClasses = {\n      focus: \"is-focused\",\n      empty: \"is-empty\",\n      invalid: \"is-invalid\",\n    };\n  }\n\n  async ngOnInit() {\n    if (!this.showOptions) {\n      this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n      this.hideBank = this.method !== PaymentMethodType.BankAccount;\n      this.hideCredit = this.method !== PaymentMethodType.Credit;\n    }\n    this.subscribeToTheme();\n    window.document.head.appendChild(this.stripeScript);\n    if (!this.hidePaypal) {\n      window.document.head.appendChild(this.btScript);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    window.document.head.removeChild(this.stripeScript);\n    window.setTimeout(() => {\n      Array.from(window.document.querySelectorAll(\"iframe\")).forEach((el) => {\n        if (el.src != null && el.src.indexOf(\"stripe\") > -1) {\n          try {\n            window.document.body.removeChild(el);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      });\n    }, 500);\n    if (!this.hidePaypal) {\n      window.document.head.removeChild(this.btScript);\n      window.setTimeout(() => {\n        Array.from(window.document.head.querySelectorAll(\"script\")).forEach((el) => {\n          if (el.src != null && el.src.indexOf(\"paypal\") > -1) {\n            try {\n              window.document.head.removeChild(el);\n            } catch (e) {\n              this.logService.error(e);\n            }\n          }\n        });\n        const btStylesheet = window.document.head.querySelector(\"#braintree-dropin-stylesheet\");\n        if (btStylesheet != null) {\n          try {\n            window.document.head.removeChild(btStylesheet);\n          } catch (e) {\n            this.logService.error(e);\n          }\n        }\n      }, 500);\n    }\n  }\n\n  changeMethod() {\n    this.btInstance = null;\n\n    if (this.method === PaymentMethodType.PayPal) {\n      window.setTimeout(() => {\n        (window as any).braintree.dropin.create(\n          {\n            authorization: process.env.BRAINTREE_KEY,\n            container: \"#bt-dropin-container\",\n            paymentOptionPriority: [\"paypal\"],\n            paypal: {\n              flow: \"vault\",\n              buttonStyle: {\n                label: \"pay\",\n                size: \"medium\",\n                shape: \"pill\",\n                color: \"blue\",\n                tagline: \"false\",\n              },\n            },\n          },\n          (createErr: any, instance: any) => {\n            if (createErr != null) {\n              // eslint-disable-next-line\n              console.error(createErr);\n              return;\n            }\n            this.btInstance = instance;\n          }\n        );\n      }, 250);\n    } else {\n      this.setStripeElement();\n    }\n  }\n\n  createPaymentToken(): Promise<[string, PaymentMethodType]> {\n    return new Promise((resolve, reject) => {\n      if (this.method === PaymentMethodType.Credit) {\n        resolve([null, this.method]);\n      } else if (this.method === PaymentMethodType.PayPal) {\n        this.btInstance\n          .requestPaymentMethod()\n          .then((payload: any) => {\n            resolve([payload.nonce, this.method]);\n          })\n          .catch((err: any) => {\n            reject(err.message);\n          });\n      } else if (\n        this.method === PaymentMethodType.Card ||\n        this.method === PaymentMethodType.BankAccount\n      ) {\n        if (this.method === PaymentMethodType.Card) {\n          this.apiService\n            .postSetupPayment()\n            .then((clientSecret) =>\n              this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n            )\n            .then((result: any) => {\n              if (result.error) {\n                reject(result.error.message);\n              } else if (result.setupIntent && result.setupIntent.status === \"succeeded\") {\n                resolve([result.setupIntent.payment_method, this.method]);\n              } else {\n                reject();\n              }\n            });\n        } else {\n          this.stripe.createToken(\"bank_account\", this.bank).then((result: any) => {\n            if (result.error) {\n              reject(result.error.message);\n            } else if (result.token && result.token.id != null) {\n              resolve([result.token.id, this.method]);\n            } else {\n              reject();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n    return new Promise<void>((resolve, reject) => {\n      if (this.showMethods && this.stripeCardNumberElement == null) {\n        reject();\n        return;\n      }\n      const handleCardPayment = () =>\n        this.showMethods\n          ? this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement)\n          : this.stripe.handleCardSetup(clientSecret);\n      return handleCardPayment().then(async (result: any) => {\n        if (result.error) {\n          reject(result.error.message);\n        } else if (result.paymentIntent && result.paymentIntent.status === \"succeeded\") {\n          if (successCallback != null) {\n            await successCallback();\n          }\n          resolve();\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n\n  private setStripeElement() {\n    window.setTimeout(() => {\n      if (this.showMethods && this.method === PaymentMethodType.Card) {\n        if (this.stripeCardNumberElement == null) {\n          this.stripeCardNumberElement = this.stripeElements.create(\"cardNumber\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        if (this.stripeCardExpiryElement == null) {\n          this.stripeCardExpiryElement = this.stripeElements.create(\"cardExpiry\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n          });\n        }\n        if (this.stripeCardCvcElement == null) {\n          this.stripeCardCvcElement = this.stripeElements.create(\"cardCvc\", {\n            style: this.StripeElementStyle,\n            classes: this.StripeElementClasses,\n            placeholder: \"\",\n          });\n        }\n        this.stripeCardNumberElement.mount(\"#stripe-card-number-element\");\n        this.stripeCardExpiryElement.mount(\"#stripe-card-expiry-element\");\n        this.stripeCardCvcElement.mount(\"#stripe-card-cvc-element\");\n      }\n    }, 50);\n  }\n\n  private subscribeToTheme() {\n    this.themingService.theme$.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      const style = getComputedStyle(document.documentElement);\n      this.StripeElementStyle.base.color = `rgb(${style.getPropertyValue(\"--color-text-main\")})`;\n      this.StripeElementStyle.base[\"::placeholder\"].color = `rgb(${style.getPropertyValue(\n        \"--color-text-muted\"\n      )})`;\n      this.StripeElementStyle.invalid.color = `rgb(${style.getPropertyValue(\"--color-text-main\")})`;\n      this.StripeElementStyle.invalid.borderColor = `rgb(${style.getPropertyValue(\n        \"--color-danger-500\"\n      )})`;\n    });\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-purge-vault\",\n  templateUrl: \"purge-vault.component.html\",\n})\nexport class PurgeVaultComponent {\n  @Input() organizationId?: string = null;\n\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private router: Router,\n    private logService: LogService,\n    private syncService: SyncService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postPurgeCiphers(request, this.organizationId));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"vaultPurged\"));\n      this.syncService.fullSync(true);\n      if (this.organizationId != null) {\n        this.router.navigate([\"organizations\", this.organizationId, \"vault\"]);\n      } else {\n        this.router.navigate([\"vault\"]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"purgeVaultTitle\">{{ \"purgeVault\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ (organizationId ? \"purgeOrgVaultDesc\" : \"purgeVaultDesc\") | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"purgeVaultWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"purgeVault\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<div class=\"row\">\n  <div [ngClass]=\"trialFlow ? 'col-7' : 'col-6'\">\n    <div class=\"form-group\">\n      <label for=\"addressCountry\">{{ \"country\" | i18n }}</label>\n      <select\n        id=\"addressCountry\"\n        class=\"form-control\"\n        [(ngModel)]=\"taxInfo.country\"\n        required\n        name=\"addressCountry\"\n        autocomplete=\"country\"\n        (change)=\"changeCountry()\"\n      >\n        <option value=\"\">-- Select --</option>\n        <option value=\"US\">United States</option>\n        <option value=\"CN\">China</option>\n        <option value=\"FR\">France</option>\n        <option value=\"DE\">Germany</option>\n        <option value=\"CA\">Canada</option>\n        <option value=\"GB\">United Kingdom</option>\n        <option value=\"AU\">Australia</option>\n        <option value=\"IN\">India</option>\n        <option value=\"-\" disabled></option>\n        <option value=\"AF\">Afghanistan</option>\n        <option value=\"AX\">Åland Islands</option>\n        <option value=\"AL\">Albania</option>\n        <option value=\"DZ\">Algeria</option>\n        <option value=\"AS\">American Samoa</option>\n        <option value=\"AD\">Andorra</option>\n        <option value=\"AO\">Angola</option>\n        <option value=\"AI\">Anguilla</option>\n        <option value=\"AQ\">Antarctica</option>\n        <option value=\"AG\">Antigua and Barbuda</option>\n        <option value=\"AR\">Argentina</option>\n        <option value=\"AM\">Armenia</option>\n        <option value=\"AW\">Aruba</option>\n        <option value=\"AT\">Austria</option>\n        <option value=\"AZ\">Azerbaijan</option>\n        <option value=\"BS\">Bahamas</option>\n        <option value=\"BH\">Bahrain</option>\n        <option value=\"BD\">Bangladesh</option>\n        <option value=\"BB\">Barbados</option>\n        <option value=\"BY\">Belarus</option>\n        <option value=\"BE\">Belgium</option>\n        <option value=\"BZ\">Belize</option>\n        <option value=\"BJ\">Benin</option>\n        <option value=\"BM\">Bermuda</option>\n        <option value=\"BT\">Bhutan</option>\n        <option value=\"BO\">Bolivia, Plurinational State of</option>\n        <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n        <option value=\"BA\">Bosnia and Herzegovina</option>\n        <option value=\"BW\">Botswana</option>\n        <option value=\"BV\">Bouvet Island</option>\n        <option value=\"BR\">Brazil</option>\n        <option value=\"IO\">British Indian Ocean Territory</option>\n        <option value=\"BN\">Brunei Darussalam</option>\n        <option value=\"BG\">Bulgaria</option>\n        <option value=\"BF\">Burkina Faso</option>\n        <option value=\"BI\">Burundi</option>\n        <option value=\"KH\">Cambodia</option>\n        <option value=\"CM\">Cameroon</option>\n        <option value=\"CV\">Cape Verde</option>\n        <option value=\"KY\">Cayman Islands</option>\n        <option value=\"CF\">Central African Republic</option>\n        <option value=\"TD\">Chad</option>\n        <option value=\"CL\">Chile</option>\n        <option value=\"CX\">Christmas Island</option>\n        <option value=\"CC\">Cocos (Keeling) Islands</option>\n        <option value=\"CO\">Colombia</option>\n        <option value=\"KM\">Comoros</option>\n        <option value=\"CG\">Congo</option>\n        <option value=\"CD\">Congo, the Democratic Republic of the</option>\n        <option value=\"CK\">Cook Islands</option>\n        <option value=\"CR\">Costa Rica</option>\n        <option value=\"CI\">Côte d'Ivoire</option>\n        <option value=\"HR\">Croatia</option>\n        <option value=\"CU\">Cuba</option>\n        <option value=\"CW\">Curaçao</option>\n        <option value=\"CY\">Cyprus</option>\n        <option value=\"CZ\">Czech Republic</option>\n        <option value=\"DK\">Denmark</option>\n        <option value=\"DJ\">Djibouti</option>\n        <option value=\"DM\">Dominica</option>\n        <option value=\"DO\">Dominican Republic</option>\n        <option value=\"EC\">Ecuador</option>\n        <option value=\"EG\">Egypt</option>\n        <option value=\"SV\">El Salvador</option>\n        <option value=\"GQ\">Equatorial Guinea</option>\n        <option value=\"ER\">Eritrea</option>\n        <option value=\"EE\">Estonia</option>\n        <option value=\"ET\">Ethiopia</option>\n        <option value=\"FK\">Falkland Islands (Malvinas)</option>\n        <option value=\"FO\">Faroe Islands</option>\n        <option value=\"FJ\">Fiji</option>\n        <option value=\"FI\">Finland</option>\n        <option value=\"GF\">French Guiana</option>\n        <option value=\"PF\">French Polynesia</option>\n        <option value=\"TF\">French Southern Territories</option>\n        <option value=\"GA\">Gabon</option>\n        <option value=\"GM\">Gambia</option>\n        <option value=\"GE\">Georgia</option>\n        <option value=\"GH\">Ghana</option>\n        <option value=\"GI\">Gibraltar</option>\n        <option value=\"GR\">Greece</option>\n        <option value=\"GL\">Greenland</option>\n        <option value=\"GD\">Grenada</option>\n        <option value=\"GP\">Guadeloupe</option>\n        <option value=\"GU\">Guam</option>\n        <option value=\"GT\">Guatemala</option>\n        <option value=\"GG\">Guernsey</option>\n        <option value=\"GN\">Guinea</option>\n        <option value=\"GW\">Guinea-Bissau</option>\n        <option value=\"GY\">Guyana</option>\n        <option value=\"HT\">Haiti</option>\n        <option value=\"HM\">Heard Island and McDonald Islands</option>\n        <option value=\"VA\">Holy See (Vatican City State)</option>\n        <option value=\"HN\">Honduras</option>\n        <option value=\"HK\">Hong Kong</option>\n        <option value=\"HU\">Hungary</option>\n        <option value=\"IS\">Iceland</option>\n        <option value=\"ID\">Indonesia</option>\n        <option value=\"IR\">Iran, Islamic Republic of</option>\n        <option value=\"IQ\">Iraq</option>\n        <option value=\"IE\">Ireland</option>\n        <option value=\"IM\">Isle of Man</option>\n        <option value=\"IL\">Israel</option>\n        <option value=\"IT\">Italy</option>\n        <option value=\"JM\">Jamaica</option>\n        <option value=\"JP\">Japan</option>\n        <option value=\"JE\">Jersey</option>\n        <option value=\"JO\">Jordan</option>\n        <option value=\"KZ\">Kazakhstan</option>\n        <option value=\"KE\">Kenya</option>\n        <option value=\"KI\">Kiribati</option>\n        <option value=\"KP\">Korea, Democratic People's Republic of</option>\n        <option value=\"KR\">Korea, Republic of</option>\n        <option value=\"KW\">Kuwait</option>\n        <option value=\"KG\">Kyrgyzstan</option>\n        <option value=\"LA\">Lao People's Democratic Republic</option>\n        <option value=\"LV\">Latvia</option>\n        <option value=\"LB\">Lebanon</option>\n        <option value=\"LS\">Lesotho</option>\n        <option value=\"LR\">Liberia</option>\n        <option value=\"LY\">Libya</option>\n        <option value=\"LI\">Liechtenstein</option>\n        <option value=\"LT\">Lithuania</option>\n        <option value=\"LU\">Luxembourg</option>\n        <option value=\"MO\">Macao</option>\n        <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n        <option value=\"MG\">Madagascar</option>\n        <option value=\"MW\">Malawi</option>\n        <option value=\"MY\">Malaysia</option>\n        <option value=\"MV\">Maldives</option>\n        <option value=\"ML\">Mali</option>\n        <option value=\"MT\">Malta</option>\n        <option value=\"MH\">Marshall Islands</option>\n        <option value=\"MQ\">Martinique</option>\n        <option value=\"MR\">Mauritania</option>\n        <option value=\"MU\">Mauritius</option>\n        <option value=\"YT\">Mayotte</option>\n        <option value=\"MX\">Mexico</option>\n        <option value=\"FM\">Micronesia, Federated States of</option>\n        <option value=\"MD\">Moldova, Republic of</option>\n        <option value=\"MC\">Monaco</option>\n        <option value=\"MN\">Mongolia</option>\n        <option value=\"ME\">Montenegro</option>\n        <option value=\"MS\">Montserrat</option>\n        <option value=\"MA\">Morocco</option>\n        <option value=\"MZ\">Mozambique</option>\n        <option value=\"MM\">Myanmar</option>\n        <option value=\"NA\">Namibia</option>\n        <option value=\"NR\">Nauru</option>\n        <option value=\"NP\">Nepal</option>\n        <option value=\"NL\">Netherlands</option>\n        <option value=\"NC\">New Caledonia</option>\n        <option value=\"NZ\">New Zealand</option>\n        <option value=\"NI\">Nicaragua</option>\n        <option value=\"NE\">Niger</option>\n        <option value=\"NG\">Nigeria</option>\n        <option value=\"NU\">Niue</option>\n        <option value=\"NF\">Norfolk Island</option>\n        <option value=\"MP\">Northern Mariana Islands</option>\n        <option value=\"NO\">Norway</option>\n        <option value=\"OM\">Oman</option>\n        <option value=\"PK\">Pakistan</option>\n        <option value=\"PW\">Palau</option>\n        <option value=\"PS\">Palestinian Territory, Occupied</option>\n        <option value=\"PA\">Panama</option>\n        <option value=\"PG\">Papua New Guinea</option>\n        <option value=\"PY\">Paraguay</option>\n        <option value=\"PE\">Peru</option>\n        <option value=\"PH\">Philippines</option>\n        <option value=\"PN\">Pitcairn</option>\n        <option value=\"PL\">Poland</option>\n        <option value=\"PT\">Portugal</option>\n        <option value=\"PR\">Puerto Rico</option>\n        <option value=\"QA\">Qatar</option>\n        <option value=\"RE\">Réunion</option>\n        <option value=\"RO\">Romania</option>\n        <option value=\"RU\">Russian Federation</option>\n        <option value=\"RW\">Rwanda</option>\n        <option value=\"BL\">Saint Barthélemy</option>\n        <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n        <option value=\"KN\">Saint Kitts and Nevis</option>\n        <option value=\"LC\">Saint Lucia</option>\n        <option value=\"MF\">Saint Martin (French part)</option>\n        <option value=\"PM\">Saint Pierre and Miquelon</option>\n        <option value=\"VC\">Saint Vincent and the Grenadines</option>\n        <option value=\"WS\">Samoa</option>\n        <option value=\"SM\">San Marino</option>\n        <option value=\"ST\">Sao Tome and Principe</option>\n        <option value=\"SA\">Saudi Arabia</option>\n        <option value=\"SN\">Senegal</option>\n        <option value=\"RS\">Serbia</option>\n        <option value=\"SC\">Seychelles</option>\n        <option value=\"SL\">Sierra Leone</option>\n        <option value=\"SG\">Singapore</option>\n        <option value=\"SX\">Sint Maarten (Dutch part)</option>\n        <option value=\"SK\">Slovakia</option>\n        <option value=\"SI\">Slovenia</option>\n        <option value=\"SB\">Solomon Islands</option>\n        <option value=\"SO\">Somalia</option>\n        <option value=\"ZA\">South Africa</option>\n        <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n        <option value=\"SS\">South Sudan</option>\n        <option value=\"ES\">Spain</option>\n        <option value=\"LK\">Sri Lanka</option>\n        <option value=\"SD\">Sudan</option>\n        <option value=\"SR\">Suriname</option>\n        <option value=\"SJ\">Svalbard and Jan Mayen</option>\n        <option value=\"SZ\">Swaziland</option>\n        <option value=\"SE\">Sweden</option>\n        <option value=\"CH\">Switzerland</option>\n        <option value=\"SY\">Syrian Arab Republic</option>\n        <option value=\"TW\">Taiwan</option>\n        <option value=\"TJ\">Tajikistan</option>\n        <option value=\"TZ\">Tanzania, United Republic of</option>\n        <option value=\"TH\">Thailand</option>\n        <option value=\"TL\">Timor-Leste</option>\n        <option value=\"TG\">Togo</option>\n        <option value=\"TK\">Tokelau</option>\n        <option value=\"TO\">Tonga</option>\n        <option value=\"TT\">Trinidad and Tobago</option>\n        <option value=\"TN\">Tunisia</option>\n        <option value=\"TR\">Turkey</option>\n        <option value=\"TM\">Turkmenistan</option>\n        <option value=\"TC\">Turks and Caicos Islands</option>\n        <option value=\"TV\">Tuvalu</option>\n        <option value=\"UG\">Uganda</option>\n        <option value=\"UA\">Ukraine</option>\n        <option value=\"AE\">United Arab Emirates</option>\n        <option value=\"UM\">United States Minor Outlying Islands</option>\n        <option value=\"UY\">Uruguay</option>\n        <option value=\"UZ\">Uzbekistan</option>\n        <option value=\"VU\">Vanuatu</option>\n        <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n        <option value=\"VN\">Viet Nam</option>\n        <option value=\"VG\">Virgin Islands, British</option>\n        <option value=\"VI\">Virgin Islands, U.S.</option>\n        <option value=\"WF\">Wallis and Futuna</option>\n        <option value=\"EH\">Western Sahara</option>\n        <option value=\"YE\">Yemen</option>\n        <option value=\"ZM\">Zambia</option>\n        <option value=\"ZW\">Zimbabwe</option>\n      </select>\n    </div>\n  </div>\n  <div [ngClass]=\"trialFlow ? 'col-5' : 'col-3'\">\n    <div class=\"form-group\">\n      <label for=\"addressPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n      <input\n        id=\"addressPostalCode\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressPostalCode\"\n        [(ngModel)]=\"taxInfo.postalCode\"\n        [required]=\"taxInfo.country === 'US'\"\n        autocomplete=\"postal-code\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n    <div class=\"form-group form-check\">\n      <input\n        class=\"form-check-input\"\n        id=\"addressIncludeTaxId\"\n        name=\"addressIncludeTaxId\"\n        type=\"checkbox\"\n        [(ngModel)]=\"taxInfo.includeTaxId\"\n      />\n      <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{ \"includeVAT\" | i18n }}</label>\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"taxId\">{{ \"taxIdNumber\" | i18n }}</label>\n      <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\" />\n    </div>\n  </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine1\">{{ \"address1\" | i18n }}</label>\n      <input\n        id=\"addressLine1\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine1\"\n        [(ngModel)]=\"taxInfo.line1\"\n        autocomplete=\"address-line1\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressLine2\">{{ \"address2\" | i18n }}</label>\n      <input\n        id=\"addressLine2\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressLine2\"\n        [(ngModel)]=\"taxInfo.line2\"\n        autocomplete=\"address-line2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressCity\">{{ \"cityTown\" | i18n }}</label>\n      <input\n        id=\"addressCity\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressCity\"\n        [(ngModel)]=\"taxInfo.city\"\n        autocomplete=\"address-level2\"\n      />\n    </div>\n  </div>\n  <div class=\"col-6\">\n    <div class=\"form-group\">\n      <label for=\"addressState\">{{ \"stateProvince\" | i18n }}</label>\n      <input\n        id=\"addressState\"\n        class=\"form-control\"\n        type=\"text\"\n        name=\"addressState\"\n        [(ngModel)]=\"taxInfo.state\"\n        autocomplete=\"address-level1\"\n      />\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationTaxInfoUpdateRequest } from \"@bitwarden/common/models/request/organization-tax-info-update.request\";\nimport { TaxInfoUpdateRequest } from \"@bitwarden/common/models/request/tax-info-update.request\";\nimport { TaxInfoResponse } from \"@bitwarden/common/models/response/tax-info.response\";\nimport { TaxRateResponse } from \"@bitwarden/common/models/response/tax-rate.response\";\n\ntype TaxInfoView = Omit<TaxInfoResponse, \"taxIdType\"> & {\n  includeTaxId: boolean;\n  [key: string]: unknown;\n};\n\n@Component({\n  selector: \"app-tax-info\",\n  templateUrl: \"tax-info.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TaxInfoComponent {\n  @Input() trialFlow = false;\n  @Output() onCountryChanged = new EventEmitter();\n\n  loading = true;\n  organizationId: string;\n  taxInfo: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  taxRates: TaxRateResponse[];\n\n  private pristine: TaxInfoView = {\n    taxId: null,\n    line1: null,\n    line2: null,\n    city: null,\n    state: null,\n    postalCode: null,\n    country: \"US\",\n    includeTaxId: false,\n  };\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      if (this.organizationId) {\n        try {\n          const taxInfo = await this.organizationApiService.getTaxInfo(this.organizationId);\n          if (taxInfo) {\n            this.taxInfo.taxId = taxInfo.taxId;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.line1 = taxInfo.line1;\n            this.taxInfo.line2 = taxInfo.line2;\n            this.taxInfo.city = taxInfo.city;\n            this.taxInfo.state = taxInfo.state;\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n            this.taxInfo.includeTaxId =\n              this.taxInfo.country !== \"US\" &&\n              (!!taxInfo.taxId ||\n                !!taxInfo.line1 ||\n                !!taxInfo.line2 ||\n                !!taxInfo.city ||\n                !!taxInfo.state);\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      } else {\n        try {\n          const taxInfo = await this.apiService.getTaxInfo();\n          if (taxInfo) {\n            this.taxInfo.postalCode = taxInfo.postalCode;\n            this.taxInfo.country = taxInfo.country || \"US\";\n          }\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.pristine = Object.assign({}, this.taxInfo);\n      // If not the default (US) then trigger onCountryChanged\n      if (this.taxInfo.country !== \"US\") {\n        this.onCountryChanged.emit();\n      }\n    });\n\n    try {\n      const taxRates = await this.apiService.getTaxRates();\n      if (taxRates) {\n        this.taxRates = taxRates.data;\n      }\n    } catch (e) {\n      this.logService.error(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  get taxRate() {\n    if (this.taxRates != null) {\n      const localTaxRate = this.taxRates.find(\n        (x) => x.country === this.taxInfo.country && x.postalCode === this.taxInfo.postalCode\n      );\n      return localTaxRate?.rate ?? null;\n    }\n  }\n\n  getTaxInfoRequest(): TaxInfoUpdateRequest {\n    if (this.organizationId) {\n      const request = new OrganizationTaxInfoUpdateRequest();\n      request.taxId = this.taxInfo.taxId;\n      request.state = this.taxInfo.state;\n      request.line1 = this.taxInfo.line1;\n      request.line2 = this.taxInfo.line2;\n      request.city = this.taxInfo.city;\n      request.state = this.taxInfo.state;\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    } else {\n      const request = new TaxInfoUpdateRequest();\n      request.postalCode = this.taxInfo.postalCode;\n      request.country = this.taxInfo.country;\n      return request;\n    }\n  }\n\n  submitTaxInfo(): Promise<any> {\n    if (!this.hasChanged()) {\n      return new Promise<void>((resolve) => {\n        resolve();\n      });\n    }\n    const request = this.getTaxInfoRequest();\n    return this.organizationId\n      ? this.organizationApiService.updateTaxInfo(\n          this.organizationId,\n          request as OrganizationTaxInfoUpdateRequest\n        )\n      : this.apiService.putTaxInfo(request);\n  }\n\n  changeCountry() {\n    if (this.taxInfo.country === \"US\") {\n      this.taxInfo.includeTaxId = false;\n      this.taxInfo.taxId = null;\n      this.taxInfo.line1 = null;\n      this.taxInfo.line2 = null;\n      this.taxInfo.city = null;\n      this.taxInfo.state = null;\n    }\n    this.onCountryChanged.emit();\n  }\n\n  private hasChanged(): boolean {\n    for (const key in this.taxInfo) {\n      // eslint-disable-next-line\n      if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"form-group\">\n    <label for=\"file\" class=\"sr-only\">{{ \"licenseFile\" | i18n }}</label>\n    <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n    <small class=\"form-text text-muted\">{{\n      \"licenseFileDesc\"\n        | i18n\n          : (!organizationId\n              ? \"bitwarden_premium_license.json\"\n              : \"bitwarden_organization_license.json\")\n    }}</small>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"submit\" | i18n }}</span>\n  </button>\n  <button *ngIf=\"showCancel\" type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-update-license\",\n  templateUrl: \"update-license.component.html\",\n})\nexport class UpdateLicenseComponent {\n  @Input() organizationId: string;\n  @Input() showCancel = true;\n  @Output() onUpdated = new EventEmitter();\n  @Output() onCanceled = new EventEmitter();\n\n  formPromise: Promise<void>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async submit() {\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    try {\n      const fd = new FormData();\n      fd.append(\"license\", files[0]);\n\n      let updatePromise: Promise<void | unknown> = null;\n      if (this.organizationId == null) {\n        updatePromise = this.apiService.postAccountLicense(fd);\n      } else {\n        updatePromise = this.organizationApiService.updateLicense(this.organizationId, fd);\n      }\n\n      this.formPromise = updatePromise.then(() => {\n        return this.apiService.refreshIdentityToken();\n      });\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"licenseUploadSuccess\")\n      );\n      this.onUpdated.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  cancel() {\n    this.onCanceled.emit();\n  }\n}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { I18nPipe } from \"@bitwarden/angular/pipes/i18n.pipe\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { ProductSwitcherContentComponent } from \"./product-switcher-content.component\";\nimport { ProductSwitcherComponent } from \"./product-switcher.component\";\n\n@NgModule({\n  imports: [SharedModule, A11yModule, RouterModule],\n  declarations: [ProductSwitcherComponent, ProductSwitcherContentComponent],\n  exports: [ProductSwitcherComponent],\n  providers: [I18nPipe],\n})\nexport class ProductSwitcherModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { ChangeKdfConfirmationComponent } from \"./change-kdf-confirmation.component\";\nimport { ChangeKdfComponent } from \"./change-kdf.component\";\n\n@NgModule({\n  imports: [CommonModule, SharedModule],\n  declarations: [ChangeKdfComponent, ChangeKdfConfirmationComponent],\n  exports: [ChangeKdfComponent, ChangeKdfConfirmationComponent],\n})\nexport class ChangeKdfModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { AcceptEmergencyComponent } from \"../../auth/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"../../auth/accept-organization.component\";\nimport { HintComponent } from \"../../auth/hint.component\";\nimport { LockComponent } from \"../../auth/lock.component\";\nimport { RecoverDeleteComponent } from \"../../auth/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"../../auth/recover-two-factor.component\";\nimport { RegisterFormModule } from \"../../auth/register-form/register-form.module\";\nimport { RemovePasswordComponent } from \"../../auth/remove-password.component\";\nimport { SetPasswordComponent } from \"../../auth/set-password.component\";\nimport { DeauthorizeSessionsComponent } from \"../../auth/settings/deauthorize-sessions.component\";\nimport { EmergencyAccessAddEditComponent } from \"../../auth/settings/emergency-access/emergency-access-add-edit.component\";\nimport { EmergencyAccessAttachmentsComponent } from \"../../auth/settings/emergency-access/emergency-access-attachments.component\";\nimport { EmergencyAccessConfirmComponent } from \"../../auth/settings/emergency-access/emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"../../auth/settings/emergency-access/emergency-access-takeover.component\";\nimport { EmergencyAccessViewComponent } from \"../../auth/settings/emergency-access/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"../../auth/settings/emergency-access/emergency-access.component\";\nimport { EmergencyAddEditComponent } from \"../../auth/settings/emergency-access/emergency-add-edit.component\";\nimport { TwoFactorAuthenticatorComponent } from \"../../auth/settings/two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"../../auth/settings/two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"../../auth/settings/two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"../../auth/settings/two-factor-recovery.component\";\nimport { TwoFactorSetupComponent } from \"../../auth/settings/two-factor-setup.component\";\nimport { TwoFactorVerifyComponent } from \"../../auth/settings/two-factor-verify.component\";\nimport { TwoFactorWebAuthnComponent } from \"../../auth/settings/two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"../../auth/settings/two-factor-yubikey.component\";\nimport { VerifyEmailComponent } from \"../../auth/settings/verify-email.component\";\nimport { SsoComponent } from \"../../auth/sso.component\";\nimport { TwoFactorOptionsComponent } from \"../../auth/two-factor-options.component\";\nimport { TwoFactorComponent } from \"../../auth/two-factor.component\";\nimport { UpdatePasswordComponent } from \"../../auth/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"../../auth/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"../../auth/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"../../auth/verify-recover-delete.component\";\nimport { DynamicAvatarComponent } from \"../components/dynamic-avatar.component\";\nimport { OrganizationSwitcherComponent } from \"../components/organization-switcher.component\";\nimport { SelectableAvatarComponent } from \"../components/selectable-avatar.component\";\nimport { UserVerificationPromptComponent } from \"../components/user-verification-prompt.component\";\nimport { UserVerificationComponent } from \"../components/user-verification.component\";\nimport { FooterComponent } from \"../layouts/footer.component\";\nimport { FrontendLayoutComponent } from \"../layouts/frontend-layout.component\";\nimport { NavbarComponent } from \"../layouts/navbar.component\";\nimport { ProductSwitcherModule } from \"../layouts/product-switcher/product-switcher.module\";\nimport { UserLayoutComponent } from \"../layouts/user-layout.component\";\nimport { OrganizationCreateModule } from \"../organizations/create/organization-create.module\";\nimport { OrganizationLayoutComponent } from \"../organizations/layouts/organization-layout.component\";\nimport { CollectionsComponent as OrgManageCollectionsComponent } from \"../organizations/manage/collections.component\";\nimport { EntityEventsComponent as OrgEntityEventsComponent } from \"../organizations/manage/entity-events.component\";\nimport { EventsComponent as OrgEventsComponent } from \"../organizations/manage/events.component\";\nimport { ManageComponent as OrgManageComponent } from \"../organizations/manage/manage.component\";\nimport { UserConfirmComponent as OrgUserConfirmComponent } from \"../organizations/manage/user-confirm.component\";\nimport { AcceptFamilySponsorshipComponent } from \"../organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"../organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent } from \"../organizations/tools/exposed-passwords-report.component\";\nimport { InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent } from \"../organizations/tools/inactive-two-factor-report.component\";\nimport { ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent } from \"../organizations/tools/reused-passwords-report.component\";\nimport { ToolsComponent as OrgToolsComponent } from \"../organizations/tools/tools.component\";\nimport { UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent } from \"../organizations/tools/unsecured-websites-report.component\";\nimport { WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent } from \"../organizations/tools/weak-passwords-report.component\";\nimport { CollectionsComponent as OrgCollectionsComponent } from \"../organizations/vault/collections.component\";\nimport { ProvidersComponent } from \"../providers/providers.component\";\nimport { AccessComponent } from \"../send/access.component\";\nimport { AddEditComponent as SendAddEditComponent } from \"../send/add-edit.component\";\nimport { EffluxDatesComponent as SendEffluxDatesComponent } from \"../send/efflux-dates.component\";\nimport { SendComponent } from \"../send/send.component\";\nimport { AccountComponent } from \"../settings/account.component\";\nimport { AddCreditComponent } from \"../settings/add-credit.component\";\nimport { AdjustPaymentComponent } from \"../settings/adjust-payment.component\";\nimport { AdjustStorageComponent } from \"../settings/adjust-storage.component\";\nimport { ApiKeyComponent } from \"../settings/api-key.component\";\nimport { BillingHistoryViewComponent } from \"../settings/billing-history-view.component\";\nimport { BillingHistoryComponent } from \"../settings/billing-history.component\";\nimport { BillingSyncKeyComponent } from \"../settings/billing-sync-key.component\";\nimport { ChangeAvatarComponent } from \"../settings/change-avatar.component\";\nimport { ChangeEmailComponent } from \"../settings/change-email.component\";\nimport { ChangeKdfModule } from \"../settings/change-kdf/change-kdf.module\";\nimport { ChangePasswordComponent } from \"../settings/change-password.component\";\nimport { CreateOrganizationComponent } from \"../settings/create-organization.component\";\nimport { DeleteAccountComponent } from \"../settings/delete-account.component\";\nimport { DomainRulesComponent } from \"../settings/domain-rules.component\";\nimport { LowKdfComponent } from \"../settings/low-kdf.component\";\nimport { OrganizationPlansComponent } from \"../settings/organization-plans.component\";\nimport { PaymentMethodComponent } from \"../settings/payment-method.component\";\nimport { PaymentComponent } from \"../settings/payment.component\";\nimport { PreferencesComponent } from \"../settings/preferences.component\";\nimport { PremiumComponent } from \"../settings/premium.component\";\nimport { ProfileComponent } from \"../settings/profile.component\";\nimport { PurgeVaultComponent } from \"../settings/purge-vault.component\";\nimport { SecurityKeysComponent } from \"../settings/security-keys.component\";\nimport { SecurityComponent } from \"../settings/security.component\";\nimport { SettingsComponent } from \"../settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"../settings/sponsored-families.component\";\nimport { SponsoringOrgRowComponent } from \"../settings/sponsoring-org-row.component\";\nimport { SubscriptionComponent } from \"../settings/subscription.component\";\nimport { TaxInfoComponent } from \"../settings/tax-info.component\";\nimport { UpdateKeyComponent } from \"../settings/update-key.component\";\nimport { UpdateLicenseComponent } from \"../settings/update-license.component\";\nimport { UserSubscriptionComponent } from \"../settings/user-subscription.component\";\nimport { VaultTimeoutInputComponent } from \"../settings/vault-timeout-input.component\";\nimport { GeneratorComponent } from \"../tools/generator.component\";\nimport { PasswordGeneratorHistoryComponent } from \"../tools/password-generator-history.component\";\nimport { ToolsComponent } from \"../tools/tools.component\";\nimport { PasswordRepromptComponent } from \"../vault/components/password-reprompt.component\";\nimport { PremiumBadgeComponent } from \"../vault/components/premium-badge.component\";\nimport { AddEditCustomFieldsComponent } from \"../vault/individual-vault/add-edit-custom-fields.component\";\nimport { AddEditComponent } from \"../vault/individual-vault/add-edit.component\";\nimport { AttachmentsComponent } from \"../vault/individual-vault/attachments.component\";\nimport { CollectionsComponent } from \"../vault/individual-vault/collections.component\";\nimport { FolderAddEditComponent } from \"../vault/individual-vault/folder-add-edit.component\";\nimport { ShareComponent } from \"../vault/individual-vault/share.component\";\nimport { AddEditComponent as OrgAddEditComponent } from \"../vault/org-vault/add-edit.component\";\nimport { AttachmentsComponent as OrgAttachmentsComponent } from \"../vault/org-vault/attachments.component\";\n\nimport { SharedModule } from \"./shared.module\";\n\n// Please do not add to this list of declarations - we should refactor these into modules when doing so makes sense until there are none left.\n// If you are building new functionality, please create or extend a feature module instead.\n@NgModule({\n  imports: [\n    SharedModule,\n    OrganizationCreateModule,\n    RegisterFormModule,\n    ProductSwitcherModule,\n    ChangeKdfModule,\n  ],\n  declarations: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptFamilySponsorshipComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    BillingSyncKeyComponent,\n    ChangeEmailComponent,\n    ChangePasswordComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DomainRulesComponent,\n    DynamicAvatarComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    NavbarComponent,\n    OrganizationSwitcherComponent,\n    OrgAddEditComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrgAttachmentsComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgToolsComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserConfirmComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordRepromptComponent,\n    UserVerificationPromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ChangeAvatarComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RemovePasswordComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SelectableAvatarComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    BillingHistoryComponent,\n    BillingHistoryViewComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n    LowKdfComponent,\n  ],\n  exports: [\n    PremiumBadgeComponent,\n    AcceptEmergencyComponent,\n    AcceptOrganizationComponent,\n    AccessComponent,\n    AccountComponent,\n    AddCreditComponent,\n    AddEditComponent,\n    AddEditCustomFieldsComponent,\n    AddEditCustomFieldsComponent,\n    AdjustPaymentComponent,\n    AdjustStorageComponent,\n    ApiKeyComponent,\n    AttachmentsComponent,\n    ChangeEmailComponent,\n    ChangePasswordComponent,\n    CollectionsComponent,\n    CreateOrganizationComponent,\n    DeauthorizeSessionsComponent,\n    DeleteAccountComponent,\n    DomainRulesComponent,\n    DynamicAvatarComponent,\n    EmergencyAccessAddEditComponent,\n    EmergencyAccessAttachmentsComponent,\n    EmergencyAccessComponent,\n    EmergencyAccessConfirmComponent,\n    EmergencyAccessTakeoverComponent,\n    EmergencyAccessViewComponent,\n    EmergencyAddEditComponent,\n    FamiliesForEnterpriseSetupComponent,\n    FolderAddEditComponent,\n    FooterComponent,\n    FrontendLayoutComponent,\n    HintComponent,\n    LockComponent,\n    NavbarComponent,\n    OrganizationSwitcherComponent,\n    OrgAddEditComponent,\n    OrganizationLayoutComponent,\n    OrganizationPlansComponent,\n    OrgAttachmentsComponent,\n    OrgCollectionsComponent,\n    OrgEntityEventsComponent,\n    OrgEventsComponent,\n    OrgExposedPasswordsReportComponent,\n    OrgInactiveTwoFactorReportComponent,\n    OrgManageCollectionsComponent,\n    OrgManageComponent,\n    OrgReusedPasswordsReportComponent,\n    OrgToolsComponent,\n    OrgUnsecuredWebsitesReportComponent,\n    OrgUserConfirmComponent,\n    OrgWeakPasswordsReportComponent,\n    GeneratorComponent,\n    PasswordGeneratorHistoryComponent,\n    PasswordRepromptComponent,\n    PaymentComponent,\n    PaymentMethodComponent,\n    PreferencesComponent,\n    PremiumBadgeComponent,\n    PremiumComponent,\n    ProfileComponent,\n    ChangeAvatarComponent,\n    ProvidersComponent,\n    PurgeVaultComponent,\n    RecoverDeleteComponent,\n    RecoverTwoFactorComponent,\n    RemovePasswordComponent,\n    SecurityComponent,\n    SecurityKeysComponent,\n    SelectableAvatarComponent,\n    SendAddEditComponent,\n    SendComponent,\n    SendEffluxDatesComponent,\n    SetPasswordComponent,\n    SettingsComponent,\n    ShareComponent,\n    SponsoredFamiliesComponent,\n    SponsoringOrgRowComponent,\n    SsoComponent,\n    SubscriptionComponent,\n    TaxInfoComponent,\n    ToolsComponent,\n    TwoFactorAuthenticatorComponent,\n    TwoFactorComponent,\n    TwoFactorDuoComponent,\n    TwoFactorEmailComponent,\n    TwoFactorOptionsComponent,\n    TwoFactorRecoveryComponent,\n    TwoFactorSetupComponent,\n    TwoFactorVerifyComponent,\n    TwoFactorWebAuthnComponent,\n    TwoFactorYubiKeyComponent,\n    UpdateKeyComponent,\n    UpdateLicenseComponent,\n    UpdatePasswordComponent,\n    UpdateTempPasswordComponent,\n    BillingHistoryComponent,\n    BillingHistoryViewComponent,\n    UserLayoutComponent,\n    UserSubscriptionComponent,\n    UserVerificationComponent,\n    VaultTimeoutInputComponent,\n    VerifyEmailComponent,\n    VerifyEmailTokenComponent,\n    VerifyRecoverDeleteComponent,\n    LowKdfComponent,\n  ],\n})\nexport class LooseComponentsModule {}\n","import { animate, state, style, transition, trigger } from \"@angular/animations\";\nimport { CommonModule } from \"@angular/common\";\nimport { Component, ModuleWithProviders, NgModule } from \"@angular/core\";\nimport {\n  DefaultNoComponentGlobalConfig,\n  GlobalConfig,\n  Toast as BaseToast,\n  ToastPackage,\n  ToastrService,\n  TOAST_CONFIG,\n} from \"ngx-toastr\";\n\n@Component({\n  selector: \"[toast-component2]\",\n  template: `\n    <button\n      *ngIf=\"options.closeButton\"\n      (click)=\"remove()\"\n      type=\"button\"\n      class=\"toast-close-button\"\n      aria-label=\"Close\"\n    >\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <div class=\"icon\">\n      <i></i>\n    </div>\n    <div>\n      <div *ngIf=\"title\" [class]=\"options.titleClass\" [attr.aria-label]=\"title\">\n        {{ title }} <ng-container *ngIf=\"duplicatesCount\">[{{ duplicatesCount + 1 }}]</ng-container>\n      </div>\n      <div\n        *ngIf=\"message && options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [innerHTML]=\"message\"\n      ></div>\n      <div\n        *ngIf=\"message && !options.enableHtml\"\n        role=\"alertdialog\"\n        aria-live=\"polite\"\n        [class]=\"options.messageClass\"\n        [attr.aria-label]=\"message\"\n      >\n        {{ message }}\n      </div>\n    </div>\n    <div *ngIf=\"options.progressBar\">\n      <div class=\"toast-progress\" [style.width]=\"width + '%'\"></div>\n    </div>\n  `,\n  animations: [\n    trigger(\"flyInOut\", [\n      state(\"inactive\", style({ opacity: 0 })),\n      state(\"active\", style({ opacity: 1 })),\n      state(\"removed\", style({ opacity: 0 })),\n      transition(\"inactive => active\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n      transition(\"active => removed\", animate(\"{{ easeTime }}ms {{ easing }}\")),\n    ]),\n  ],\n  preserveWhitespaces: false,\n})\nexport class BitwardenToast extends BaseToast {\n  constructor(protected toastrService: ToastrService, public toastPackage: ToastPackage) {\n    super(toastrService, toastPackage);\n  }\n}\n\nexport const BitwardenToastGlobalConfig: GlobalConfig = {\n  ...DefaultNoComponentGlobalConfig,\n  toastComponent: BitwardenToast,\n};\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitwardenToast],\n  exports: [BitwardenToast],\n})\nexport class BitwardenToastModule {\n  static forRoot(config: Partial<GlobalConfig> = {}): ModuleWithProviders<BitwardenToastModule> {\n    return {\n      ngModule: BitwardenToastModule,\n      providers: [\n        {\n          provide: TOAST_CONFIG,\n          useValue: {\n            default: BitwardenToastGlobalConfig,\n            config: config,\n          },\n        },\n      ],\n    };\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface CardRuleEntry {\n  cardLength: number;\n  blocks: number[];\n}\n\n// See https://baymard.com/checkout-usability/credit-card-patterns for\n// all possible credit card spacing patterns. For now, we just handle\n// the below.\nconst numberFormats: Record<string, CardRuleEntry[]> = {\n  Visa: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Mastercard: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  Maestro: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 13, blocks: [4, 4, 5] },\n    { cardLength: 15, blocks: [4, 6, 5] },\n    { cardLength: 19, blocks: [4, 4, 4, 4, 3] },\n  ],\n  Discover: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  \"Diners Club\": [{ cardLength: 14, blocks: [4, 6, 4] }],\n  JCB: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n  UnionPay: [\n    { cardLength: 16, blocks: [4, 4, 4, 4] },\n    { cardLength: 19, blocks: [6, 13] },\n  ],\n  Amex: [{ cardLength: 15, blocks: [4, 6, 5] }],\n  Other: [{ cardLength: 16, blocks: [4, 4, 4, 4] }],\n};\n\n@Pipe({ name: \"creditCardNumber\" })\nexport class CreditCardNumberPipe implements PipeTransform {\n  transform(creditCardNumber: string, brand: string): string {\n    let rules = numberFormats[brand];\n\n    if (rules == null) {\n      rules = numberFormats[\"Other\"];\n    }\n\n    const cardLength = creditCardNumber.length;\n\n    let matchingRule = rules.find((r) => r.cardLength == cardLength);\n    if (matchingRule == null) {\n      matchingRule = rules[0];\n    }\n\n    const blocks = matchingRule.blocks;\n\n    const chunks: string[] = [];\n    let total = 0;\n\n    blocks.forEach((c) => {\n      chunks.push(creditCardNumber.slice(total, total + c));\n      total += c;\n    });\n\n    // Append the remaining part\n    if (cardLength > total) {\n      chunks.push(creditCardNumber.slice(total));\n    }\n\n    return chunks.join(\" \");\n  }\n}\n","import { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { CalloutComponent } from \"./components/callout.component\";\nimport { ExportScopeCalloutComponent } from \"./components/export-scope-callout.component\";\nimport { BitwardenToastModule } from \"./components/toastr.component\";\nimport { A11yInvalidDirective } from \"./directives/a11y-invalid.directive\";\nimport { A11yTitleDirective } from \"./directives/a11y-title.directive\";\nimport { ApiActionDirective } from \"./directives/api-action.directive\";\nimport { AutofocusDirective } from \"./directives/autofocus.directive\";\nimport { BoxRowDirective } from \"./directives/box-row.directive\";\nimport { CopyClickDirective } from \"./directives/copy-click.directive\";\nimport { FallbackSrcDirective } from \"./directives/fallback-src.directive\";\nimport { InputStripSpacesDirective } from \"./directives/input-strip-spaces.directive\";\nimport { InputVerbatimDirective } from \"./directives/input-verbatim.directive\";\nimport { LaunchClickDirective } from \"./directives/launch-click.directive\";\nimport { NotPremiumDirective } from \"./directives/not-premium.directive\";\nimport { SelectCopyDirective } from \"./directives/select-copy.directive\";\nimport { StopClickDirective } from \"./directives/stop-click.directive\";\nimport { StopPropDirective } from \"./directives/stop-prop.directive\";\nimport { TrueFalseValueDirective } from \"./directives/true-false-value.directive\";\nimport { CreditCardNumberPipe } from \"./pipes/credit-card-number.pipe\";\nimport { EllipsisPipe } from \"./pipes/ellipsis.pipe\";\nimport { I18nPipe } from \"./pipes/i18n.pipe\";\nimport { SearchCiphersPipe } from \"./pipes/search-ciphers.pipe\";\nimport { SearchPipe } from \"./pipes/search.pipe\";\nimport { UserNamePipe } from \"./pipes/user-name.pipe\";\nimport { UserTypePipe } from \"./pipes/user-type.pipe\";\nimport { PasswordStrengthComponent } from \"./shared/components/password-strength/password-strength.component\";\nimport { IconComponent } from \"./vault/components/icon.component\";\n\n@NgModule({\n  imports: [\n    BitwardenToastModule.forRoot({\n      maxOpened: 5,\n      autoDismiss: true,\n      closeButton: true,\n    }),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BoxRowDirective,\n    CalloutComponent,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n    UserTypePipe,\n  ],\n  exports: [\n    A11yInvalidDirective,\n    A11yTitleDirective,\n    ApiActionDirective,\n    AutofocusDirective,\n    BitwardenToastModule,\n    BoxRowDirective,\n    CalloutComponent,\n    CreditCardNumberPipe,\n    EllipsisPipe,\n    ExportScopeCalloutComponent,\n    FallbackSrcDirective,\n    I18nPipe,\n    IconComponent,\n    InputStripSpacesDirective,\n    InputVerbatimDirective,\n    NotPremiumDirective,\n    SearchCiphersPipe,\n    SearchPipe,\n    SelectCopyDirective,\n    StopClickDirective,\n    StopPropDirective,\n    TrueFalseValueDirective,\n    CopyClickDirective,\n    LaunchClickDirective,\n    UserNamePipe,\n    PasswordStrengthComponent,\n    UserTypePipe,\n  ],\n  providers: [CreditCardNumberPipe, DatePipe, I18nPipe, SearchPipe, UserNamePipe, UserTypePipe],\n})\nexport class JslibModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { BitActionDirective } from \"./bit-action.directive\";\nimport { BitSubmitDirective } from \"./bit-submit.directive\";\nimport { BitFormButtonDirective } from \"./form-button.directive\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [BitActionDirective, BitFormButtonDirective, BitSubmitDirective],\n  exports: [BitActionDirective, BitFormButtonDirective, BitSubmitDirective],\n})\nexport class AsyncActionsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AvatarComponent } from \"./avatar.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AvatarComponent],\n  declarations: [AvatarComponent],\n})\nexport class AvatarModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { BadgeModule } from \"../badge\";\nimport { SharedModule } from \"../shared\";\n\nimport { BadgeListComponent } from \"./badge-list.component\";\n\n@NgModule({\n  imports: [SharedModule, BadgeModule],\n  exports: [BadgeListComponent],\n  declarations: [BadgeListComponent],\n})\nexport class BadgeListModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonComponent } from \"./button.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ButtonComponent],\n  declarations: [ButtonComponent],\n})\nexport class ButtonModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CalloutComponent } from \"./callout.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [CalloutComponent],\n  declarations: [CalloutComponent],\n})\nexport class CalloutModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ColorPasswordComponent } from \"./color-password.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [ColorPasswordComponent],\n  declarations: [ColorPasswordComponent],\n})\nexport class ColorPasswordModule {}\n","import { DialogModule as CdkDialogModule } from \"@angular/cdk/dialog\";\nimport { NgModule } from \"@angular/core\";\n\nimport { ButtonModule } from \"../button\";\nimport { IconButtonModule } from \"../icon-button\";\nimport { SharedModule } from \"../shared\";\n\nimport { DialogService } from \"./dialog.service\";\nimport { DialogComponent } from \"./dialog/dialog.component\";\nimport { DialogCloseDirective } from \"./directives/dialog-close.directive\";\nimport { DialogTitleContainerDirective } from \"./directives/dialog-title-container.directive\";\nimport { SimpleConfigurableDialogComponent } from \"./simple-configurable-dialog/simple-configurable-dialog.component\";\nimport { IconDirective, SimpleDialogComponent } from \"./simple-dialog/simple-dialog.component\";\n\n@NgModule({\n  imports: [SharedModule, IconButtonModule, CdkDialogModule, ButtonModule],\n  declarations: [\n    DialogCloseDirective,\n    DialogTitleContainerDirective,\n    DialogComponent,\n    SimpleDialogComponent,\n    SimpleConfigurableDialogComponent,\n    IconDirective,\n  ],\n  exports: [\n    CdkDialogModule,\n    DialogComponent,\n    SimpleDialogComponent,\n    DialogCloseDirective,\n    IconDirective,\n  ],\n  providers: [DialogService],\n})\nexport class DialogModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconComponent } from \"./icon.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconComponent],\n  exports: [BitIconComponent],\n})\nexport class IconModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { CellDirective } from \"./cell.directive\";\nimport { RowDirective } from \"./row.directive\";\nimport { SortableComponent } from \"./sortable.component\";\nimport { TableBodyDirective, TableComponent } from \"./table.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [\n    TableComponent,\n    CellDirective,\n    RowDirective,\n    SortableComponent,\n    TableBodyDirective,\n  ],\n  exports: [TableComponent, CellDirective, RowDirective, SortableComponent, TableBodyDirective],\n})\nexport class TableModule {}\n","import { PortalModule } from \"@angular/cdk/portal\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { TabHeaderComponent } from \"./shared/tab-header.component\";\nimport { TabListContainerDirective } from \"./shared/tab-list-container.directive\";\nimport { TabListItemDirective } from \"./shared/tab-list-item.directive\";\nimport { TabBodyComponent } from \"./tab-group/tab-body.component\";\nimport { TabGroupComponent } from \"./tab-group/tab-group.component\";\nimport { TabLabelDirective } from \"./tab-group/tab-label.directive\";\nimport { TabComponent } from \"./tab-group/tab.component\";\nimport { TabLinkComponent } from \"./tab-nav-bar/tab-link.component\";\nimport { TabNavBarComponent } from \"./tab-nav-bar/tab-nav-bar.component\";\n\n@NgModule({\n  imports: [CommonModule, RouterModule, PortalModule],\n  exports: [\n    TabGroupComponent,\n    TabComponent,\n    TabLabelDirective,\n    TabNavBarComponent,\n    TabLinkComponent,\n  ],\n  declarations: [\n    TabGroupComponent,\n    TabComponent,\n    TabLabelDirective,\n    TabListContainerDirective,\n    TabListItemDirective,\n    TabHeaderComponent,\n    TabNavBarComponent,\n    TabLinkComponent,\n    TabBodyComponent,\n  ],\n})\nexport class TabsModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeModule } from \"../badge\";\n\nimport { ToggleGroupComponent } from \"./toggle-group.component\";\nimport { ToggleComponent } from \"./toggle.component\";\n\n@NgModule({\n  imports: [CommonModule, BadgeModule],\n  exports: [ToggleGroupComponent, ToggleComponent],\n  declarations: [ToggleGroupComponent, ToggleComponent],\n})\nexport class ToggleGroupModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { TypographyDirective } from \"./typography.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [TypographyDirective],\n  declarations: [TypographyDirective],\n})\nexport class TypographyModule {}\n","import { registerLocaleData } from \"@angular/common\";\nimport localeAf from \"@angular/common/locales/af\";\nimport localeAr from \"@angular/common/locales/ar\";\nimport localeAz from \"@angular/common/locales/az\";\nimport localeBe from \"@angular/common/locales/be\";\nimport localeBg from \"@angular/common/locales/bg\";\nimport localeBn from \"@angular/common/locales/bn\";\nimport localeBs from \"@angular/common/locales/bs\";\nimport localeCa from \"@angular/common/locales/ca\";\nimport localeCs from \"@angular/common/locales/cs\";\nimport localeDa from \"@angular/common/locales/da\";\nimport localeDe from \"@angular/common/locales/de\";\nimport localeEl from \"@angular/common/locales/el\";\nimport localeEnGb from \"@angular/common/locales/en-GB\";\nimport localeEnIn from \"@angular/common/locales/en-IN\";\nimport localeEo from \"@angular/common/locales/eo\";\nimport localeEs from \"@angular/common/locales/es\";\nimport localeEt from \"@angular/common/locales/et\";\nimport localeEu from \"@angular/common/locales/eu\";\nimport localeFi from \"@angular/common/locales/fi\";\nimport localeFil from \"@angular/common/locales/fil\";\nimport localeFr from \"@angular/common/locales/fr\";\nimport localeHe from \"@angular/common/locales/he\";\nimport localeHi from \"@angular/common/locales/hi\";\nimport localeHr from \"@angular/common/locales/hr\";\nimport localeHu from \"@angular/common/locales/hu\";\nimport localeId from \"@angular/common/locales/id\";\nimport localeIt from \"@angular/common/locales/it\";\nimport localeJa from \"@angular/common/locales/ja\";\nimport localeKa from \"@angular/common/locales/ka\";\nimport localeKm from \"@angular/common/locales/km\";\nimport localeKn from \"@angular/common/locales/kn\";\nimport localeKo from \"@angular/common/locales/ko\";\nimport localeLv from \"@angular/common/locales/lv\";\nimport localeMl from \"@angular/common/locales/ml\";\nimport localeNb from \"@angular/common/locales/nb\";\nimport localeNl from \"@angular/common/locales/nl\";\nimport localeNn from \"@angular/common/locales/nn\";\nimport localePl from \"@angular/common/locales/pl\";\nimport localePtBr from \"@angular/common/locales/pt\";\nimport localePtPt from \"@angular/common/locales/pt-PT\";\nimport localeRo from \"@angular/common/locales/ro\";\nimport localeRu from \"@angular/common/locales/ru\";\nimport localeSi from \"@angular/common/locales/si\";\nimport localeSk from \"@angular/common/locales/sk\";\nimport localeSl from \"@angular/common/locales/sl\";\nimport localeSr from \"@angular/common/locales/sr\";\nimport localeSv from \"@angular/common/locales/sv\";\nimport localeTr from \"@angular/common/locales/tr\";\nimport localeUk from \"@angular/common/locales/uk\";\nimport localeVi from \"@angular/common/locales/vi\";\nimport localeZhCn from \"@angular/common/locales/zh-Hans\";\nimport localeZhTw from \"@angular/common/locales/zh-Hant\";\n\nregisterLocaleData(localeAf, \"af\");\nregisterLocaleData(localeAr, \"ar\");\nregisterLocaleData(localeAz, \"az\");\nregisterLocaleData(localeBe, \"be\");\nregisterLocaleData(localeBg, \"bg\");\nregisterLocaleData(localeBn, \"bn\");\nregisterLocaleData(localeBs, \"bs\");\nregisterLocaleData(localeCa, \"ca\");\nregisterLocaleData(localeCs, \"cs\");\nregisterLocaleData(localeDa, \"da\");\nregisterLocaleData(localeDe, \"de\");\nregisterLocaleData(localeEl, \"el\");\nregisterLocaleData(localeEnGb, \"en-GB\");\nregisterLocaleData(localeEnIn, \"en-IN\");\nregisterLocaleData(localeEo, \"eo\");\nregisterLocaleData(localeEs, \"es\");\nregisterLocaleData(localeEt, \"et\");\nregisterLocaleData(localeEu, \"eu\");\nregisterLocaleData(localeFi, \"fi\");\nregisterLocaleData(localeFil, \"fil\");\nregisterLocaleData(localeFr, \"fr\");\nregisterLocaleData(localeHe, \"he\");\nregisterLocaleData(localeHi, \"hi\");\nregisterLocaleData(localeHr, \"hr\");\nregisterLocaleData(localeHu, \"hu\");\nregisterLocaleData(localeId, \"id\");\nregisterLocaleData(localeIt, \"it\");\nregisterLocaleData(localeJa, \"ja\");\nregisterLocaleData(localeKa, \"ka\");\nregisterLocaleData(localeKm, \"km\");\nregisterLocaleData(localeKn, \"kn\");\nregisterLocaleData(localeKo, \"ko\");\nregisterLocaleData(localeLv, \"lv\");\nregisterLocaleData(localeMl, \"ml\");\nregisterLocaleData(localeNb, \"nb\");\nregisterLocaleData(localeNl, \"nl\");\nregisterLocaleData(localeNn, \"nn\");\nregisterLocaleData(localePl, \"pl\");\nregisterLocaleData(localePtBr, \"pt-BR\");\nregisterLocaleData(localePtPt, \"pt-PT\");\nregisterLocaleData(localeRo, \"ro\");\nregisterLocaleData(localeRu, \"ru\");\nregisterLocaleData(localeSi, \"si\");\nregisterLocaleData(localeSk, \"sk\");\nregisterLocaleData(localeSl, \"sl\");\nregisterLocaleData(localeSr, \"sr\");\nregisterLocaleData(localeSv, \"sv\");\nregisterLocaleData(localeTr, \"tr\");\nregisterLocaleData(localeUk, \"uk\");\nregisterLocaleData(localeVi, \"vi\");\nregisterLocaleData(localeZhCn, \"zh-CN\");\nregisterLocaleData(localeZhTw, \"zh-TW\");\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { CommonModule, DatePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule } from \"@angular/router\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { JslibModule } from \"@bitwarden/angular/jslib.module\";\nimport {\n  AsyncActionsModule,\n  AvatarModule,\n  BadgeListModule,\n  BadgeModule,\n  ButtonModule,\n  CalloutModule,\n  CheckboxModule,\n  ColorPasswordModule,\n  DialogModule,\n  FormFieldModule,\n  IconButtonModule,\n  IconModule,\n  LinkModule,\n  MenuModule,\n  MultiSelectModule,\n  RadioButtonModule,\n  TableModule,\n  TabsModule,\n  ToggleGroupModule,\n  TypographyModule,\n} from \"@bitwarden/components\";\n\n// Register the locales for the application\nimport \"./locales\";\n\n/**\n * This NgModule should contain the most basic shared directives, pipes, and components. They\n * should be widely used by other modules to be considered for adding to this module. If in doubt\n * do not add to this module.\n *\n * See: https://angular.io/guide/module-types#shared-ngmodules\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule,\n    RouterModule,\n    ToastrModule,\n    JslibModule,\n\n    // Component library modules\n    // Only add components that are used almost everywhere in the application\n    AsyncActionsModule,\n    AvatarModule,\n    BadgeListModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    CheckboxModule,\n    ColorPasswordModule,\n    DialogModule,\n    FormFieldModule,\n    IconButtonModule,\n    IconModule,\n    LinkModule,\n    MenuModule,\n    MultiSelectModule,\n    RadioButtonModule,\n    TableModule,\n    TabsModule,\n    ToggleGroupModule,\n    TypographyModule,\n\n    // Web specific\n  ],\n  exports: [\n    CommonModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule,\n    RouterModule,\n    ToastrModule,\n    JslibModule,\n\n    // Component library\n    AsyncActionsModule,\n    AvatarModule,\n    BadgeListModule,\n    BadgeModule,\n    ButtonModule,\n    CalloutModule,\n    CheckboxModule,\n    ColorPasswordModule,\n    DialogModule,\n    FormFieldModule,\n    IconButtonModule,\n    IconModule,\n    LinkModule,\n    MenuModule,\n    MultiSelectModule,\n    RadioButtonModule,\n    TableModule,\n    TabsModule,\n    ToggleGroupModule,\n    TypographyModule,\n\n    // Web specific\n  ],\n  providers: [DatePipe],\n  bootstrap: [],\n})\nexport class SharedModule {}\n","import { Directive, OnInit, TemplateRef, ViewContainerRef } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n/**\n * Hides the element if the user has premium.\n */\n@Directive({\n  selector: \"[appNotPremium]\",\n})\nexport class NotPremiumDirective implements OnInit {\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    const premium = await this.stateService.getCanAccessPremium();\n\n    if (premium) {\n      this.viewContainer.clear();\n    } else {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\n\n@Component({\n  selector: \"app-premium-badge\",\n  template: `\n    <button type=\"button\" *appNotPremium bitBadge badgeType=\"success\" (click)=\"premiumRequired()\">\n      {{ \"premium\" | i18n }}\n    </button>\n  `,\n})\nexport class PremiumBadgeComponent {\n  constructor(private messagingService: MessagingService) {}\n\n  premiumRequired() {\n    this.messagingService.send(\"premiumRequired\");\n  }\n}\n","import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\nimport { Directive, Input, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { FieldType } from \"@bitwarden/common/enums/fieldType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\nimport { FieldView } from \"@bitwarden/common/vault/models/view/field.view\";\n\n@Directive()\nexport class AddEditCustomFieldsComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  @Input() thisCipherType: CipherType;\n  @Input() editMode: boolean;\n\n  addFieldType: FieldType = FieldType.Text;\n  addFieldTypeOptions: any[];\n  addFieldLinkedTypeOption: any;\n  linkedFieldOptions: any[] = [];\n\n  cipherType = CipherType;\n  fieldType = FieldType;\n  eventType = EventType;\n\n  constructor(\n    private i18nService: I18nService,\n    private eventCollectionService: EventCollectionService\n  ) {\n    this.addFieldTypeOptions = [\n      { name: i18nService.t(\"cfTypeText\"), value: FieldType.Text },\n      { name: i18nService.t(\"cfTypeHidden\"), value: FieldType.Hidden },\n      { name: i18nService.t(\"cfTypeBoolean\"), value: FieldType.Boolean },\n    ];\n    this.addFieldLinkedTypeOption = {\n      name: this.i18nService.t(\"cfTypeLinked\"),\n      value: FieldType.Linked,\n    };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.thisCipherType != null) {\n      this.setLinkedFieldOptions();\n\n      if (!changes.thisCipherType.firstChange) {\n        this.resetCipherLinkedFields();\n      }\n    }\n  }\n\n  addField() {\n    if (this.cipher.fields == null) {\n      this.cipher.fields = [];\n    }\n\n    const f = new FieldView();\n    f.type = this.addFieldType;\n    f.newField = true;\n\n    if (f.type === FieldType.Linked) {\n      f.linkedId = this.linkedFieldOptions[0].value;\n    }\n\n    this.cipher.fields.push(f);\n  }\n\n  removeField(field: FieldView) {\n    const i = this.cipher.fields.indexOf(field);\n    if (i > -1) {\n      this.cipher.fields.splice(i, 1);\n    }\n  }\n\n  toggleFieldValue(field: FieldView) {\n    const f = field as any;\n    f.showValue = !f.showValue;\n    if (this.editMode && f.showValue) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledHiddenFieldVisible,\n        this.cipher.id\n      );\n    }\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n  }\n\n  private setLinkedFieldOptions() {\n    if (this.cipher.linkedFieldOptions == null) {\n      return;\n    }\n\n    const options: any = [];\n    this.cipher.linkedFieldOptions.forEach((linkedFieldOption, id) =>\n      options.push({ name: this.i18nService.t(linkedFieldOption.i18nKey), value: id })\n    );\n    this.linkedFieldOptions = options.sort(Utils.getSortFunction(this.i18nService, \"name\"));\n  }\n\n  private resetCipherLinkedFields() {\n    if (this.cipher.fields == null || this.cipher.fields.length === 0) {\n      return;\n    }\n\n    // Delete any Linked custom fields if the item type does not support them\n    if (this.cipher.linkedFieldOptions == null) {\n      this.cipher.fields = this.cipher.fields.filter((f) => f.type !== FieldType.Linked);\n      return;\n    }\n\n    this.cipher.fields\n      .filter((f) => f.type === FieldType.Linked)\n      .forEach((f) => (f.linkedId = this.linkedFieldOptions[0].value));\n  }\n}\n","import { Directive, ElementRef, forwardRef, HostListener, Input, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n  selector: \"input[type=checkbox][appTrueFalseValue]\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TrueFalseValueDirective),\n      multi: true,\n    },\n  ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n  @Input() trueValue: boolean | string = true;\n  @Input() falseValue: boolean | string = false;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener(\"change\", [\"$event\"])\n  onHostChange(ev: any) {\n    this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n  }\n\n  writeValue(obj: any): void {\n    if (obj === this.trueValue) {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", true);\n    } else {\n      this.renderer.setProperty(this.elementRef.nativeElement, \"checked\", false);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    /* nothing */\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    /* nothing */\n  }\n\n  private propagateChange = (_: any) => {\n    /* nothing */\n  };\n}\n","<ng-container>\n  <h3 class=\"mt-4\">{{ \"customFields\" | i18n }}</h3>\n  <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n    <div\n      role=\"group\"\n      class=\"row\"\n      cdkDrag\n      *ngFor=\"let f of cipher.fields; let i = index; trackBy: trackByFunction\"\n      attr.aria-label=\"{{ f.name }}\"\n    >\n      <div class=\"col-5 form-group\">\n        <div class=\"d-flex\">\n          <label for=\"fieldName{{ i }}\">{{ \"name\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/custom-fields/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <input\n          id=\"fieldName{{ i }}\"\n          type=\"text\"\n          name=\"Field.Name{{ i }}\"\n          [(ngModel)]=\"f.name\"\n          class=\"form-control\"\n          appInputVerbatim\n          [disabled]=\"cipher.isDeleted || viewOnly\"\n          [readonly]=\"!cipher.edit && editMode\"\n        />\n      </div>\n      <div class=\"col-7 form-group\">\n        <label for=\"fieldValue{{ i }}\">{{ \"value\" | i18n }}</label>\n        <div class=\"d-flex align-items-center\">\n          <!-- Text -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              appInputVerbatim\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              [readonly]=\"!cipher.edit && editMode\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', 'Field')\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Hidden -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n            <input\n              id=\"fieldValue{{ i }}\"\n              type=\"{{ f.showValue ? 'text' : 'password' }}\"\n              name=\"Field.Value{{ i }}\"\n              [(ngModel)]=\"f.value\"\n              class=\"form-control text-monospace\"\n              appInputVerbatim\n              autocomplete=\"new-password\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.viewPassword && !f.newField)\"\n              [readonly]=\"!cipher.edit && editMode\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n            <div class=\"input-group-append\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"toggleFieldValue(f)\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !f.showValue, 'bwi-eye-slash': f.showValue }\"\n                >\n                </i>\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                appA11yTitle=\"{{ 'copyValue' | i18n }}\"\n                (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                [disabled]=\"!cipher.viewPassword && !f.newField\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </div>\n          <!-- Linked -->\n          <div class=\"input-group\" *ngIf=\"f.type === fieldType.Linked\">\n            <select\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              class=\"form-control\"\n              [(ngModel)]=\"f.linkedId\"\n              *ngIf=\"f.type === fieldType.Linked && cipher.linkedFieldOptions != null\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            >\n              <option *ngFor=\"let o of linkedFieldOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"flex-fill\">\n            <!-- Boolean -->\n            <input\n              id=\"fieldValue{{ i }}\"\n              name=\"Field.Value{{ i }}\"\n              type=\"checkbox\"\n              [(ngModel)]=\"f.value\"\n              *ngIf=\"f.type === fieldType.Boolean\"\n              appTrueFalseValue\n              trueValue=\"true\"\n              falseValue=\"false\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              attr.aria-describedby=\"fieldName{{ i }}\"\n            />\n          </div>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-danger ml-2\"\n            (click)=\"removeField(f)\"\n            appA11yTitle=\"{{ 'remove' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-link text-muted cursor-move\"\n            appA11yTitle=\"{{ 'dragToSort' | i18n }}\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-hamburger bwi-lg\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- Add new custom field -->\n  <a\n    href=\"#\"\n    appStopClick\n    (click)=\"addField()\"\n    class=\"d-inline-block mb-2\"\n    *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n  >\n    <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomField\" | i18n }}\n  </a>\n  <div class=\"row\" *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\">\n    <div class=\"col-5\">\n      <label for=\"addFieldType\" class=\"sr-only\">{{ \"type\" | i18n }}</label>\n      <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n        <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        <option\n          *ngIf=\"cipher.linkedFieldOptions != null\"\n          [ngValue]=\"addFieldLinkedTypeOption.value\"\n        >\n          {{ addFieldLinkedTypeOption.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { AddEditCustomFieldsComponent as BaseAddEditCustomFieldsComponent } from \"@bitwarden/angular/vault/components/add-edit-custom-fields.component\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Component({\n  selector: \"app-vault-add-edit-custom-fields\",\n  templateUrl: \"add-edit-custom-fields.component.html\",\n})\nexport class AddEditCustomFieldsComponent extends BaseAddEditCustomFieldsComponent {\n  @Input() viewOnly: boolean;\n  @Input() copy: (value: string, typeI18nKey: string, aType: string) => void;\n\n  constructor(i18nService: I18nService, eventCollectionService: EventCollectionService) {\n    super(i18nService, eventCollectionService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Observable, Subject, takeUntil, concatMap } from \"rxjs\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SecureNoteType } from \"@bitwarden/common/enums/secureNoteType\";\nimport { UriMatchType } from \"@bitwarden/common/enums/uriMatchType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/vault/abstractions/folder/folder.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/vault/enums/cipher-reprompt-type\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\nimport { Cipher } from \"@bitwarden/common/vault/models/domain/cipher\";\nimport { CardView } from \"@bitwarden/common/vault/models/view/card.view\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\nimport { FolderView } from \"@bitwarden/common/vault/models/view/folder.view\";\nimport { IdentityView } from \"@bitwarden/common/vault/models/view/identity.view\";\nimport { LoginUriView } from \"@bitwarden/common/vault/models/view/login-uri.view\";\nimport { LoginView } from \"@bitwarden/common/vault/models/view/login.view\";\nimport { SecureNoteView } from \"@bitwarden/common/vault/models/view/secure-note.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() cloneMode = false;\n  @Input() folderId: string = null;\n  @Input() cipherId: string;\n  @Input() type: CipherType;\n  @Input() collectionIds: string[];\n  @Input() organizationId: string = null;\n  @Output() onSavedCipher = new EventEmitter<CipherView>();\n  @Output() onDeletedCipher = new EventEmitter<CipherView>();\n  @Output() onRestoredCipher = new EventEmitter<CipherView>();\n  @Output() onCancelled = new EventEmitter<CipherView>();\n  @Output() onEditAttachments = new EventEmitter<CipherView>();\n  @Output() onShareCipher = new EventEmitter<CipherView>();\n  @Output() onEditCollections = new EventEmitter<CipherView>();\n  @Output() onGeneratePassword = new EventEmitter();\n  @Output() onGenerateUsername = new EventEmitter();\n\n  editMode = false;\n  cipher: CipherView;\n  folders$: Observable<FolderView[]>;\n  collections: CollectionView[] = [];\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  restorePromise: Promise<any>;\n  checkPasswordPromise: Promise<number>;\n  showPassword = false;\n  showCardNumber = false;\n  showCardCode = false;\n  cipherType = CipherType;\n  typeOptions: any[];\n  cardBrandOptions: any[];\n  cardExpMonthOptions: any[];\n  identityTitleOptions: any[];\n  uriMatchOptions: any[];\n  ownershipOptions: any[] = [];\n  autofillOnPageLoadOptions: any[];\n  currentDate = new Date();\n  allowPersonal = true;\n  reprompt = false;\n  canUseReprompt = true;\n  organization: Organization;\n\n  protected componentName = \"\";\n  protected destroy$ = new Subject<void>();\n  protected writeableCollections: CollectionView[];\n  private personalOwnershipPolicyAppliesToActiveUser: boolean;\n  private previousCipherId: string;\n\n  constructor(\n    protected cipherService: CipherService,\n    protected folderService: FolderService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected auditService: AuditService,\n    protected stateService: StateService,\n    protected collectionService: CollectionService,\n    protected messagingService: MessagingService,\n    protected eventCollectionService: EventCollectionService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected passwordRepromptService: PasswordRepromptService,\n    private organizationService: OrganizationService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"typeLogin\"), value: CipherType.Login },\n      { name: i18nService.t(\"typeCard\"), value: CipherType.Card },\n      { name: i18nService.t(\"typeIdentity\"), value: CipherType.Identity },\n      { name: i18nService.t(\"typeSecureNote\"), value: CipherType.SecureNote },\n    ];\n    this.cardBrandOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"Visa\", value: \"Visa\" },\n      { name: \"Mastercard\", value: \"Mastercard\" },\n      { name: \"American Express\", value: \"Amex\" },\n      { name: \"Discover\", value: \"Discover\" },\n      { name: \"Diners Club\", value: \"Diners Club\" },\n      { name: \"JCB\", value: \"JCB\" },\n      { name: \"Maestro\", value: \"Maestro\" },\n      { name: \"UnionPay\", value: \"UnionPay\" },\n      { name: \"RuPay\", value: \"RuPay\" },\n      { name: i18nService.t(\"other\"), value: \"Other\" },\n    ];\n    this.cardExpMonthOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: \"01 - \" + i18nService.t(\"january\"), value: \"1\" },\n      { name: \"02 - \" + i18nService.t(\"february\"), value: \"2\" },\n      { name: \"03 - \" + i18nService.t(\"march\"), value: \"3\" },\n      { name: \"04 - \" + i18nService.t(\"april\"), value: \"4\" },\n      { name: \"05 - \" + i18nService.t(\"may\"), value: \"5\" },\n      { name: \"06 - \" + i18nService.t(\"june\"), value: \"6\" },\n      { name: \"07 - \" + i18nService.t(\"july\"), value: \"7\" },\n      { name: \"08 - \" + i18nService.t(\"august\"), value: \"8\" },\n      { name: \"09 - \" + i18nService.t(\"september\"), value: \"9\" },\n      { name: \"10 - \" + i18nService.t(\"october\"), value: \"10\" },\n      { name: \"11 - \" + i18nService.t(\"november\"), value: \"11\" },\n      { name: \"12 - \" + i18nService.t(\"december\"), value: \"12\" },\n    ];\n    this.identityTitleOptions = [\n      { name: \"-- \" + i18nService.t(\"select\") + \" --\", value: null },\n      { name: i18nService.t(\"mr\"), value: i18nService.t(\"mr\") },\n      { name: i18nService.t(\"mrs\"), value: i18nService.t(\"mrs\") },\n      { name: i18nService.t(\"ms\"), value: i18nService.t(\"ms\") },\n      { name: i18nService.t(\"mx\"), value: i18nService.t(\"mx\") },\n      { name: i18nService.t(\"dr\"), value: i18nService.t(\"dr\") },\n    ];\n    this.uriMatchOptions = [\n      { name: i18nService.t(\"defaultMatchDetection\"), value: null },\n      { name: i18nService.t(\"baseDomain\"), value: UriMatchType.Domain },\n      { name: i18nService.t(\"host\"), value: UriMatchType.Host },\n      { name: i18nService.t(\"startsWith\"), value: UriMatchType.StartsWith },\n      { name: i18nService.t(\"regEx\"), value: UriMatchType.RegularExpression },\n      { name: i18nService.t(\"exact\"), value: UriMatchType.Exact },\n      { name: i18nService.t(\"never\"), value: UriMatchType.Never },\n    ];\n    this.autofillOnPageLoadOptions = [\n      { name: i18nService.t(\"autoFillOnPageLoadUseDefault\"), value: null },\n      { name: i18nService.t(\"autoFillOnPageLoadYes\"), value: true },\n      { name: i18nService.t(\"autoFillOnPageLoadNo\"), value: false },\n    ];\n  }\n\n  async ngOnInit() {\n    this.writeableCollections = await this.loadCollections();\n    this.canUseReprompt = await this.passwordRepromptService.enabled();\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.PersonalOwnership)\n      .pipe(\n        concatMap(async (policyAppliesToActiveUser) => {\n          this.personalOwnershipPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n          await this.init();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async init() {\n    if (this.ownershipOptions.length) {\n      this.ownershipOptions = [];\n    }\n    if (this.personalOwnershipPolicyAppliesToActiveUser) {\n      this.allowPersonal = false;\n    } else {\n      const myEmail = await this.stateService.getEmail();\n      this.ownershipOptions.push({ name: myEmail, value: null });\n    }\n\n    const orgs = await this.organizationService.getAll();\n    orgs\n      .filter(isNotProviderUser)\n      .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n      .forEach((o) => {\n        if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n          this.ownershipOptions.push({ name: o.name, value: o.id });\n        }\n      });\n    if (!this.allowPersonal && this.organizationId == undefined) {\n      this.organizationId = this.defaultOwnerId;\n    }\n  }\n\n  async load() {\n    this.editMode = this.cipherId != null;\n    if (this.editMode) {\n      this.editMode = true;\n      if (this.cloneMode) {\n        this.cloneMode = true;\n        this.title = this.i18nService.t(\"addItem\");\n      } else {\n        this.title = this.i18nService.t(\"editItem\");\n      }\n    } else {\n      this.title = this.i18nService.t(\"addItem\");\n    }\n\n    const loadedAddEditCipherInfo = await this.loadAddEditCipherInfo();\n\n    if (this.cipher == null) {\n      if (this.editMode) {\n        const cipher = await this.loadCipher();\n        this.cipher = await cipher.decrypt();\n\n        // Adjust Cipher Name if Cloning\n        if (this.cloneMode) {\n          this.cipher.name += \" - \" + this.i18nService.t(\"clone\");\n          // If not allowing personal ownership, update cipher's org Id to prompt downstream changes\n          if (this.cipher.organizationId == null && !this.allowPersonal) {\n            this.cipher.organizationId = this.organizationId;\n          }\n        }\n      } else {\n        this.cipher = new CipherView();\n        this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n        this.cipher.folderId = this.folderId;\n        this.cipher.type = this.type == null ? CipherType.Login : this.type;\n        this.cipher.login = new LoginView();\n        this.cipher.login.uris = [new LoginUriView()];\n        this.cipher.card = new CardView();\n        this.cipher.identity = new IdentityView();\n        this.cipher.secureNote = new SecureNoteView();\n        this.cipher.secureNote.type = SecureNoteType.Generic;\n        this.cipher.reprompt = CipherRepromptType.None;\n      }\n    }\n\n    if (this.cipher != null && (!this.editMode || loadedAddEditCipherInfo || this.cloneMode)) {\n      await this.organizationChanged();\n      if (\n        this.collectionIds != null &&\n        this.collectionIds.length > 0 &&\n        this.collections.length > 0\n      ) {\n        this.collections.forEach((c) => {\n          if (this.collectionIds.indexOf(c.id) > -1) {\n            (c as any).checked = true;\n          }\n        });\n      }\n    }\n\n    this.folders$ = this.folderService.folderViews$;\n\n    if (this.editMode && this.previousCipherId !== this.cipherId) {\n      this.eventCollectionService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n    }\n    this.previousCipherId = this.cipherId;\n    this.reprompt = this.cipher.reprompt !== CipherRepromptType.None;\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.cipher.isDeleted) {\n      return this.restore();\n    }\n\n    if (this.cipher.name == null || this.cipher.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      !this.allowPersonal &&\n      this.cipher.organizationId == null\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"personalOwnershipSubmitError\")\n      );\n      return false;\n    }\n\n    if (\n      (!this.editMode || this.cloneMode) &&\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.uris != null &&\n      this.cipher.login.uris.length === 1 &&\n      (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === \"\")\n    ) {\n      this.cipher.login.uris = null;\n    }\n\n    // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n    if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n      this.cipher.collectionIds =\n        this.collections == null\n          ? []\n          : this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n    }\n\n    // Clear current Cipher Id to trigger \"Add\" cipher flow\n    if (this.cloneMode) {\n      this.cipher.id = null;\n    }\n\n    const cipher = await this.encryptCipher();\n    try {\n      this.formPromise = this.saveCipher(cipher);\n      await this.formPromise;\n      this.cipher.id = cipher.id;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode && !this.cloneMode ? \"editedItem\" : \"addedItem\")\n      );\n      this.onSavedCipher.emit(this.cipher);\n      this.messagingService.send(this.editMode && !this.cloneMode ? \"editedCipher\" : \"addedCipher\");\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  addUri() {\n    if (this.cipher.type !== CipherType.Login) {\n      return;\n    }\n\n    if (this.cipher.login.uris == null) {\n      this.cipher.login.uris = [];\n    }\n\n    this.cipher.login.uris.push(new LoginUriView());\n  }\n\n  removeUri(uri: LoginUriView) {\n    if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n      return;\n    }\n\n    const i = this.cipher.login.uris.indexOf(uri);\n    if (i > -1) {\n      this.cipher.login.uris.splice(i, 1);\n    }\n  }\n\n  getCardExpMonthDisplay() {\n    return this.cardExpMonthOptions.find((x) => x.value == this.cipher.card.expMonth)?.name;\n  }\n\n  trackByFunction(index: number, item: any) {\n    return index;\n  }\n\n  cancel() {\n    this.onCancelled.emit(this.cipher);\n  }\n\n  attachments() {\n    this.onEditAttachments.emit(this.cipher);\n  }\n\n  share() {\n    this.onShareCipher.emit(this.cipher);\n  }\n\n  editCollections() {\n    this.onEditCollections.emit(this.cipher);\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        this.cipher.isDeleted ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(\"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.deleteCipher();\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.cipher.isDeleted ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.onDeletedCipher.emit(this.cipher);\n      this.messagingService.send(\n        this.cipher.isDeleted ? \"permanentlyDeletedCipher\" : \"deletedCipher\"\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async restore(): Promise<boolean> {\n    if (!this.cipher.isDeleted) {\n      return false;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.restorePromise = this.restoreCipher();\n      await this.restorePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.onRestoredCipher.emit(this.cipher);\n      this.messagingService.send(\"restoredCipher\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  async generateUsername(): Promise<boolean> {\n    if (this.cipher.login?.username?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwriteUsernameConfirmation\"),\n        this.i18nService.t(\"overwriteUsername\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGenerateUsername.emit();\n    return true;\n  }\n\n  async generatePassword(): Promise<boolean> {\n    if (this.cipher.login?.password?.length) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"overwritePasswordConfirmation\"),\n        this.i18nService.t(\"overwritePassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\")\n      );\n      if (!confirmed) {\n        return false;\n      }\n    }\n\n    this.onGeneratePassword.emit();\n    return true;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"loginPassword\").focus();\n    if (this.editMode && this.showPassword) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledPasswordVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  async toggleCardNumber() {\n    this.showCardNumber = !this.showCardNumber;\n    if (this.showCardNumber) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledCardNumberVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  toggleCardCode() {\n    this.showCardCode = !this.showCardCode;\n    document.getElementById(\"cardCode\").focus();\n    if (this.editMode && this.showCardCode) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledCardCodeVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  toggleUriOptions(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n  }\n\n  loginUriMatchChanged(uri: LoginUriView) {\n    const u = uri as any;\n    u.showOptions = u.showOptions == null ? true : u.showOptions;\n  }\n\n  async organizationChanged() {\n    if (this.writeableCollections != null) {\n      this.writeableCollections.forEach((c) => ((c as any).checked = false));\n    }\n    if (this.cipher.organizationId != null) {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.cipher.organizationId\n      );\n      const org = await this.organizationService.get(this.cipher.organizationId);\n      if (org != null) {\n        this.cipher.organizationUseTotp = org.useTotp;\n      }\n    } else {\n      this.collections = [];\n    }\n  }\n\n  async checkPassword() {\n    if (this.checkPasswordPromise != null) {\n      return;\n    }\n\n    if (\n      this.cipher.login == null ||\n      this.cipher.login.password == null ||\n      this.cipher.login.password === \"\"\n    ) {\n      return;\n    }\n\n    this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n    const matches = await this.checkPasswordPromise;\n    this.checkPasswordPromise = null;\n\n    if (matches > 0) {\n      this.platformUtilsService.showToast(\n        \"warning\",\n        null,\n        this.i18nService.t(\"passwordExposed\", matches.toString())\n      );\n    } else {\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"passwordSafe\"));\n    }\n  }\n\n  repromptChanged() {\n    this.reprompt = !this.reprompt;\n    if (this.reprompt) {\n      this.cipher.reprompt = CipherRepromptType.Password;\n    } else {\n      this.cipher.reprompt = CipherRepromptType.None;\n    }\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter((c) => !c.readOnly);\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected encryptCipher() {\n    return this.cipherService.encrypt(this.cipher);\n  }\n\n  protected saveCipher(cipher: Cipher) {\n    return this.cipher.id == null\n      ? this.cipherService.createWithServer(cipher)\n      : this.cipherService.updateWithServer(cipher);\n  }\n\n  protected deleteCipher() {\n    return this.cipher.isDeleted\n      ? this.cipherService.deleteWithServer(this.cipher.id)\n      : this.cipherService.softDeleteWithServer(this.cipher.id);\n  }\n\n  protected restoreCipher() {\n    return this.cipherService.restoreWithServer(this.cipher.id);\n  }\n\n  get defaultOwnerId(): string | null {\n    return this.ownershipOptions[0].value;\n  }\n\n  async loadAddEditCipherInfo(): Promise<boolean> {\n    const addEditCipherInfo: any = await this.stateService.getAddEditCipherInfo();\n    const loadedSavedInfo = addEditCipherInfo != null;\n\n    if (loadedSavedInfo) {\n      this.cipher = addEditCipherInfo.cipher;\n      this.collectionIds = addEditCipherInfo.collectionIds;\n\n      if (!this.editMode && !this.allowPersonal && this.cipher.organizationId == null) {\n        // This is a new cipher and personal ownership isn't allowed, so we need to set the default owner\n        this.cipher.organizationId = this.defaultOwnerId;\n      }\n    }\n\n    await this.stateService.setAddEditCipherInfo(null);\n\n    return loadedSavedInfo;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"cipherAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"cipher\">\n        <app-callout type=\"info\" *ngIf=\"allowOwnershipAssignment() && !allowPersonal\">\n          {{ \"personalOwnershipPolicyInEffect\" | i18n }}\n        </app-callout>\n        <div class=\"row\" *ngIf=\"!editMode && !viewOnly\">\n          <div class=\"col-6 form-group\">\n            <label for=\"type\">{{ \"whatTypeOfItem\" | i18n }}</label>\n            <select\n              id=\"type\"\n              name=\"Type\"\n              [(ngModel)]=\"cipher.type\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted\"\n              appAutofocus\n            >\n              <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"cipher.name\"\n              required\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n              [readonly]=\"!cipher.edit && editMode\"\n            />\n          </div>\n          <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n            <label for=\"folder\">{{ \"folder\" | i18n }}</label>\n            <select\n              id=\"folder\"\n              name=\"FolderId\"\n              [(ngModel)]=\"cipher.folderId\"\n              class=\"form-control\"\n              [disabled]=\"cipher.isDeleted || viewOnly\"\n            >\n              <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n            </select>\n          </div>\n        </div>\n        <!-- Login -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"loginUsername\">{{ \"username\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginUsername\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Login.Username\"\n                  [(ngModel)]=\"cipher.login.username\"\n                  appInputVerbatim\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyUsername' | i18n }}\"\n                    (click)=\"copy(cipher.login.username, 'username', 'Username')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-6 form-group\">\n              <div class=\"d-flex\">\n                <label for=\"loginPassword\">{{ \"password\" | i18n }}</label>\n                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted && !viewOnly\">\n                  <a\n                    href=\"#\"\n                    class=\"d-block mr-2 bwi-icon-above-input\"\n                    appStopClick\n                    appA11yTitle=\"{{ 'generatePassword' | i18n }}\"\n                    (click)=\"generatePassword()\"\n                    *ngIf=\"cipher.viewPassword && !(!cipher.edit && editMode)\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-generate\" aria-hidden=\"true\"></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    #checkPasswordBtn\n                    appStopClick\n                    appA11yTitle=\"{{ 'checkPassword' | i18n }}\"\n                    (click)=\"checkPassword()\"\n                    [appApiAction]=\"checkPasswordPromise\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-check-circle\"\n                      [hidden]=\"$any(checkPasswordBtn).loading\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <i\n                      class=\"bwi bwi-lg bwi-fw bwi-spinner bwi-spin\"\n                      aria-hidden=\"true\"\n                      [hidden]=\"!$any(checkPasswordBtn).loading\"\n                      title=\"{{ 'loading' | i18n }}\"\n                    ></i>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"d-block bwi-icon-above-input\"\n                    appStopClick\n                    [appA11yTitle]=\"'toggleCharacterCount' | i18n\"\n                    (click)=\"togglePasswordCount()\"\n                    *ngIf=\"cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-fw bwi-numbered-list\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n              </div>\n              <div class=\"input-group\">\n                <input\n                  id=\"loginPassword\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Login.Password\"\n                  [(ngModel)]=\"cipher.login.password\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePassword()\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                    (click)=\"copy(cipher.login.password, 'password', 'Password')\"\n                    [disabled]=\"!cipher.viewPassword\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"showPasswordCount\" class=\"tw-mb-4\">\n            <label>{{ \"passwordCharacterCount\" | i18n }}</label>\n            <div class=\"tw-flex tw-justify-between\">\n              <bit-color-password\n                [password]=\"cipher.login.password\"\n                [showCount]=\"true\"\n              ></bit-color-password>\n              <button type=\"button\" bitLink (click)=\"togglePasswordCount()\">\n                {{ \"hide\" | i18n }}\n              </button>\n            </div>\n          </div>\n          <div class=\"tw-flex tw-flex-row\">\n            <div class=\"tw-mb-4 tw-w-1/2\">\n              <label for=\"loginTotp\">{{ \"authenticatorKeyTotp\" | i18n }}</label>\n              <input\n                id=\"loginTotp\"\n                type=\"{{ cipher.viewPassword ? 'text' : 'password' }}\"\n                name=\"Login.Totp\"\n                class=\"form-control text-monospace\"\n                [(ngModel)]=\"cipher.login.totp\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || !cipher.viewPassword || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"tw-mb-4 tw-ml-4 tw-flex tw-w-1/2 tw-items-end\" [ngClass]=\"{ low: totpLow }\">\n              <div\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n                *ngIf=\"!cipher.login.totp || !totpCode\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec tw-text-muted\">15</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle-muted inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        opacity=\"0.25\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': 40 }\"\n                      ></circle>\n                      <circle\n                        class=\"totp-circle-muted outer\"\n                        opacity=\"0.25\"\n                        r=\"14\"\n                        cy=\"16\"\n                        cx=\"16\"\n                      ></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mr-3 tw-ml-2 tw-text-muted\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >--- ---</span\n                >\n                <i class=\"bwi bwi-lg bwi-clone tw-text-muted\" aria-hidden=\"true\"></i>\n              </div>\n              <div class=\"tw-pb-2\" *ngIf=\"!cipher.login.totp || !totpCode\">\n                <app-premium-badge\n                  *ngIf=\"!organization && !cipher.organizationId\"\n                  class=\"ml-3\"\n                ></app-premium-badge>\n                <a\n                  href=\"#\"\n                  appStopClick\n                  bitBadge\n                  badgeType=\"primary\"\n                  class=\"tw-ml-4\"\n                  (click)=\"upgradeOrganization()\"\n                  *ngIf=\"\n                    (organization && !organization.useTotp) ||\n                    (!organization &&\n                      !canAccessPremium &&\n                      cipher.organizationId &&\n                      !cipher.organizationUseTotp)\n                  \"\n                >\n                  {{ \"upgrade\" | i18n }}\n                </a>\n              </div>\n              <div\n                *ngIf=\"cipher.login.totp && totpCode\"\n                class=\"totp tw-flex tw-flex-row tw-items-center\"\n              >\n                <span class=\"totp-countdown\">\n                  <span class=\"totp-sec\">{{ totpSec }}</span>\n                  <svg>\n                    <g>\n                      <circle\n                        class=\"totp-circle inner\"\n                        r=\"12.6\"\n                        cy=\"16\"\n                        cx=\"16\"\n                        [ngStyle]=\"{ 'stroke-dashoffset.px': totpDash }\"\n                      ></circle>\n                      <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                    </g>\n                  </svg>\n                </span>\n                <span\n                  class=\"totp-code tw-mx-2 tw-mt-1\"\n                  title=\"{{ 'verificationCodeTotp' | i18n }}\"\n                  >{{ totpCodeFormatted }}</span\n                >\n                <button\n                  type=\"button\"\n                  class=\"tw-items-center tw-border-none tw-bg-transparent tw-text-primary-500\"\n                  appA11yTitle=\"{{ 'copyVerificationCode' | i18n }}\"\n                  (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\"\n                >\n                  <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"cipher.login.hasUris\">\n            <div\n              role=\"group\"\n              class=\"row\"\n              *ngFor=\"let u of cipher.login.uris; let i = index; trackBy: trackByFunction\"\n              attr.aria-label=\"{{ 'uriPosition' | i18n: i + 1 }}\"\n            >\n              <div class=\"col-7 form-group\">\n                <label for=\"loginUri{{ i }}\">{{ \"uriPosition\" | i18n: i + 1 }}</label>\n                <div class=\"input-group\">\n                  <input\n                    class=\"form-control\"\n                    id=\"loginUri{{ i }}\"\n                    type=\"text\"\n                    name=\"Login.Uris[{{ i }}].Uri\"\n                    [(ngModel)]=\"u.uri\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                    placeholder=\"{{ 'ex' | i18n }} https://google.com\"\n                    appInputVerbatim\n                  />\n                  <div class=\"input-group-append\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'launch' | i18n }}\"\n                      (click)=\"launch(u)\"\n                      [disabled]=\"!u.canLaunch\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-share-square\" aria-hidden=\"true\"></i>\n                    </button>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-secondary\"\n                      appA11yTitle=\"{{ 'copyUri' | i18n }}\"\n                      (click)=\"copy(u.uri, 'uri', 'URI')\"\n                    >\n                      <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-5 form-group\">\n                <div class=\"d-flex\">\n                  <label for=\"loginUriMatch{{ i }}\">\n                    {{ \"matchDetection\" | i18n }}\n                  </label>\n                  <a\n                    class=\"ml-auto\"\n                    href=\"https://bitwarden.com/help/uri-match-detection/\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                    appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n                  >\n                    <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n                  </a>\n                </div>\n                <div class=\"d-flex\">\n                  <select\n                    class=\"form-control overflow-hidden\"\n                    id=\"loginUriMatch{{ i }}\"\n                    name=\"Login.Uris[{{ i }}].Match\"\n                    [(ngModel)]=\"u.match\"\n                    (change)=\"loginUriMatchChanged(u)\"\n                    [disabled]=\"cipher.isDeleted || viewOnly\"\n                  >\n                    <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">\n                      {{ o.name }}\n                    </option>\n                  </select>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link text-danger ml-2\"\n                    (click)=\"removeUri(u)\"\n                    appA11yTitle=\"{{ 'remove' | i18n }}\"\n                    *ngIf=\"!cipher.isDeleted && !viewOnly\"\n                  >\n                    <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n          <a\n            href=\"#\"\n            appStopClick\n            (click)=\"addUri()\"\n            class=\"d-inline-block mb-3\"\n            *ngIf=\"!cipher.isDeleted && !viewOnly && !(!cipher.edit && editMode)\"\n          >\n            <i class=\"bwi bwi-plus-circle bwi-fw\" aria-hidden=\"true\"></i> {{ \"newUri\" | i18n }}\n          </a>\n        </ng-container>\n        <!-- Card -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCardholderName\">{{ \"cardholderName\" | i18n }}</label>\n              <input\n                id=\"cardCardholderName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.CardCardholderName\"\n                [(ngModel)]=\"cipher.card.cardholderName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"cardBrand\">{{ \"brand\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardBrand\">\n                <select\n                  id=\"cardBrand\"\n                  class=\"form-control\"\n                  name=\"Card.Brand\"\n                  [(ngModel)]=\"cipher.card.brand\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyCardBrand>\n                <input\n                  id=\"cardBrand\"\n                  class=\"form-control\"\n                  name=\"Card.Brand\"\n                  type=\"text\"\n                  [readonly]=\"true\"\n                  [value]=\"cipher.card.brand\"\n                />\n              </ng-template>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardNumber\">{{ \"number\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardNumber\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardNumber ? 'text' : 'password' }}\"\n                  name=\"Card.Number\"\n                  [(ngModel)]=\"cipher.card.number\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardNumber()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{\n                        'bwi-eye': !showCardNumber,\n                        'bwi-eye-slash': showCardNumber\n                      }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'copyNumber' | i18n }}\"\n                    (click)=\"copy(cipher.card.number, 'number', 'Number')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpMonth\">{{ \"expirationMonth\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyCardExpMonth\">\n                <select\n                  id=\"cardExpMonth\"\n                  class=\"form-control\"\n                  name=\"Card.ExpMonth\"\n                  [(ngModel)]=\"cipher.card.expMonth\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyCardExpMonth>\n                <input\n                  id=\"cardExpMonth\"\n                  class=\"form-control\"\n                  type=\"text\"\n                  name=\"Card.ExpMonth\"\n                  [readonly]=\"true\"\n                  [value]=\"getCardExpMonthDisplay()\"\n                />\n              </ng-template>\n            </div>\n            <div class=\"col form-group\">\n              <label for=\"cardExpYear\">{{ \"expirationYear\" | i18n }}</label>\n              <input\n                id=\"cardExpYear\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Card.ExpYear\"\n                [(ngModel)]=\"cipher.card.expYear\"\n                placeholder=\"{{ 'ex' | i18n }} 2019\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"cardCode\">{{ \"securityCode\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"cardCode\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showCardCode ? 'text' : 'password' }}\"\n                  name=\"Card.Code\"\n                  [(ngModel)]=\"cipher.card.code\"\n                  appInputVerbatim\n                  autocomplete=\"new-password\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                  [readonly]=\"!cipher.edit && editMode\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"toggleCardCode()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showCardCode, 'bwi-eye-slash': showCardCode }\"\n                    ></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'securityCode' | i18n }}\"\n                    (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\"\n                  >\n                    <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <!-- Identity -->\n        <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idTitle\">{{ \"title\" | i18n }}</label>\n              <span *ngIf=\"!(!cipher.edit && editMode); else readonlyIdTitle\">\n                <select\n                  id=\"idTitle\"\n                  class=\"form-control\"\n                  name=\"Identity.Title\"\n                  [(ngModel)]=\"cipher.identity.title\"\n                  [disabled]=\"cipher.isDeleted || viewOnly\"\n                >\n                  <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">\n                    {{ o.name }}\n                  </option>\n                </select>\n              </span>\n              <ng-template #readonlyIdTitle>\n                <input\n                  id=\"idTitle\"\n                  class=\"form-control\"\n                  name=\"Identity.Title\"\n                  type=\"text\"\n                  [readonly]=\"true\"\n                  [value]=\"cipher.identity.title\"\n                />\n              </ng-template>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idFirstName\">{{ \"firstName\" | i18n }}</label>\n              <input\n                id=\"idFirstName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.FirstName\"\n                [(ngModel)]=\"cipher.identity.firstName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idMiddleName\">{{ \"middleName\" | i18n }}</label>\n              <input\n                id=\"idMiddleName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.MiddleName\"\n                [(ngModel)]=\"cipher.identity.middleName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLastName\">{{ \"lastName\" | i18n }}</label>\n              <input\n                id=\"idLastName\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LastName\"\n                [(ngModel)]=\"cipher.identity.lastName\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idUsername\">{{ \"username\" | i18n }}</label>\n              <input\n                id=\"idUsername\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Username\"\n                [(ngModel)]=\"cipher.identity.username\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idCompany\">{{ \"company\" | i18n }}</label>\n              <input\n                id=\"idCompany\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Company\"\n                [(ngModel)]=\"cipher.identity.company\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-4 form-group\">\n              <label for=\"idSsn\">{{ \"ssn\" | i18n }}</label>\n              <input\n                id=\"idSsn\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.SSN\"\n                [(ngModel)]=\"cipher.identity.ssn\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idPassportNumber\">{{ \"passportNumber\" | i18n }}</label>\n              <input\n                id=\"idPassportNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PassportNumber\"\n                [(ngModel)]=\"cipher.identity.passportNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-4 form-group\">\n              <label for=\"idLicenseNumber\">{{ \"licenseNumber\" | i18n }}</label>\n              <input\n                id=\"idLicenseNumber\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.LicenseNumber\"\n                [(ngModel)]=\"cipher.identity.licenseNumber\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idEmail\">{{ \"email\" | i18n }}</label>\n              <input\n                id=\"idEmail\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"email\"\n                name=\"Identity.Email\"\n                [(ngModel)]=\"cipher.identity.email\"\n                appInputVerbatim\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPhone\">{{ \"phone\" | i18n }}</label>\n              <input\n                id=\"idPhone\"\n                class=\"form-control\"\n                type=\"text\"\n                inputmode=\"tel\"\n                name=\"Identity.Phone\"\n                [(ngModel)]=\"cipher.identity.phone\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress1\">{{ \"address1\" | i18n }}</label>\n              <input\n                id=\"idAddress1\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address1\"\n                [(ngModel)]=\"cipher.identity.address1\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress2\">{{ \"address2\" | i18n }}</label>\n              <input\n                id=\"idAddress2\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address2\"\n                [(ngModel)]=\"cipher.identity.address2\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idAddress3\">{{ \"address3\" | i18n }}</label>\n              <input\n                id=\"idAddress3\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Address3\"\n                [(ngModel)]=\"cipher.identity.address3\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idCity\">{{ \"cityTown\" | i18n }}</label>\n              <input\n                id=\"idCity\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.City\"\n                [(ngModel)]=\"cipher.identity.city\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idState\">{{ \"stateProvince\" | i18n }}</label>\n              <input\n                id=\"idState\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.State\"\n                [(ngModel)]=\"cipher.identity.state\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n            <div class=\"col-6 form-group\">\n              <label for=\"idPostalCode\">{{ \"zipPostalCode\" | i18n }}</label>\n              <input\n                id=\"idPostalCode\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.PostalCode\"\n                [(ngModel)]=\"cipher.identity.postalCode\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"idCountry\">{{ \"country\" | i18n }}</label>\n              <input\n                id=\"idCountry\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"Identity.Country\"\n                [(ngModel)]=\"cipher.identity.country\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n                [readonly]=\"!cipher.edit && editMode\"\n              />\n            </div>\n          </div>\n        </ng-container>\n        <div class=\"form-group\">\n          <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n          <textarea\n            id=\"notes\"\n            name=\"Notes\"\n            rows=\"6\"\n            [(ngModel)]=\"cipher.notes\"\n            [disabled]=\"cipher.isDeleted || viewOnly\"\n            [readonly]=\"!cipher.edit && editMode\"\n            class=\"form-control\"\n          ></textarea>\n        </div>\n        <app-vault-add-edit-custom-fields\n          *ngIf=\"!(!cipher.hasFields && !cipher.edit && editMode)\"\n          [cipher]=\"cipher\"\n          [thisCipherType]=\"cipher.type\"\n          [viewOnly]=\"viewOnly\"\n          [copy]=\"copy.bind(this)\"\n          [editMode]=\"editMode\"\n        ></app-vault-add-edit-custom-fields>\n        <ng-container *ngIf=\"allowOwnershipAssignment()\">\n          <h3 class=\"mt-4\">{{ \"ownership\" | i18n }}</h3>\n          <div class=\"row\">\n            <div class=\"col-5\">\n              <label for=\"organizationId\">{{ \"whoOwnsThisItem\" | i18n }}</label>\n              <select\n                id=\"organizationId\"\n                class=\"form-control\"\n                name=\"OrganizationId\"\n                [(ngModel)]=\"cipher.organizationId\"\n                (change)=\"organizationChanged()\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              >\n                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n              </select>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n          <h3 class=\"mt-4\">{{ \"collections\" | i18n }}</h3>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <ng-container *ngIf=\"collections && collections.length\">\n            <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"$any(c).checked\"\n                id=\"collection-{{ i }}\"\n                name=\"Collection[{{ i }}].Checked\"\n                [disabled]=\"cipher.isDeleted || viewOnly\"\n              />\n              <label class=\"form-check-label\" for=\"collection-{{ i }}\">{{ c.name }}</label>\n            </div>\n          </ng-container>\n        </ng-container>\n        <ng-container *ngIf=\"editMode\">\n          <div class=\"small text-muted mt-4\">\n            <div>\n              <b class=\"font-weight-semibold\">{{ \"dateUpdated\" | i18n }}:</b>\n              {{ cipher.revisionDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"cipher.creationDate\">\n              <b class=\"font-weight-semibold\">{{ \"dateCreated\" | i18n }}:</b>\n              {{ cipher.creationDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"showRevisionDate\">\n              <b class=\"font-weight-semibold\">{{ \"datePasswordUpdated\" | i18n }}:</b>\n              {{ cipher.passwordRevisionDisplayDate | date: \"medium\" }}\n            </div>\n            <div *ngIf=\"hasPasswordHistory\">\n              <b class=\"font-weight-semibold\">{{ \"passwordHistory\" | i18n }}:</b>\n              <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{ 'view' | i18n }}\">\n                {{ cipher.passwordHistory.length }}\n              </a>\n            </div>\n            <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n              <div *ngFor=\"let ph of cipher.passwordHistory\">\n                {{ ph.lastUsedDate | date: \"short\" }} -\n                <bit-color-password [password]=\"ph.password\"></bit-color-password>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"canUseReprompt\">\n          <h3 class=\"mt-4\">{{ \"options\" | i18n }}</h3>\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [ngModel]=\"reprompt\"\n              (change)=\"repromptChanged()\"\n              id=\"passwordPrompt\"\n              name=\"passwordPrompt\"\n              [disabled]=\"cipher.isDeleted || viewOnly || (!cipher.edit && editMode)\"\n            />\n            <label class=\"form-check-label\" for=\"passwordPrompt\">{{\n              \"passwordPrompt\" | i18n\n            }}</label>\n            <a\n              target=\"_blank\"\n              rel=\"noopener\"\n              appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n              href=\"https://bitwarden.com/help/managing-items/#protect-individual-items\"\n            >\n              <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n            </a>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ (cipher?.isDeleted ? \"restore\" : \"save\") | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ (viewOnly ? \"close\" : \"cancel\") | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"cipher && !viewOnly\">\n          <button\n            *ngIf=\"!organization && !cipher.isDeleted\"\n            type=\"button\"\n            (click)=\"toggleFavorite()\"\n            class=\"btn btn-link\"\n            appA11yTitle=\"{{ (cipher.favorite ? 'unfavorite' : 'favorite') | i18n }}\"\n          >\n            <i\n              class=\"bwi bwi-lg\"\n              [ngClass]=\"{ 'bwi-star-f': cipher.favorite, 'bwi-star': !cipher.favorite }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ (cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n }}\"\n            *ngIf=\"editMode && !cloneMode && !(!cipher.edit && editMode)\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/vault/components/add-edit.component\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/vault/abstractions/folder/folder.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\nimport { LoginUriView } from \"@bitwarden/common/vault/models/view/login-uri.view\";\n\n@Component({\n  selector: \"app-vault-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent implements OnInit, OnDestroy {\n  canAccessPremium: boolean;\n  totpCode: string;\n  totpCodeFormatted: string;\n  totpDash: number;\n  totpSec: number;\n  totpLow: boolean;\n  showRevisionDate = false;\n  hasPasswordHistory = false;\n  viewingPasswordHistory = false;\n  viewOnly = false;\n  showPasswordCount = false;\n\n  protected totpInterval: number;\n  protected override componentName = \"app-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    protected totpService: TotpService,\n    protected passwordGenerationService: PasswordGenerationServiceAbstraction,\n    protected messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    protected policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      logService,\n      passwordRepromptService,\n      organizationService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n    // remove when all the title for all clients are updated to New Item\n    if (this.cloneMode || !this.editMode) {\n      this.title = this.i18nService.t(\"newItem\");\n    }\n    this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n    this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n    this.cleanUp();\n\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (this.showTotp()) {\n      await this.totpUpdateCode();\n      const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n      await this.totpTick(interval);\n\n      this.totpInterval = window.setInterval(async () => {\n        await this.totpTick(interval);\n      }, 1000);\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  toggleFavorite() {\n    this.cipher.favorite = !this.cipher.favorite;\n  }\n\n  togglePassword() {\n    super.togglePassword();\n\n    // Hide password count when password is hidden to be safe\n    if (!this.showPassword && this.showPasswordCount) {\n      this.togglePasswordCount();\n    }\n  }\n\n  togglePasswordCount() {\n    this.showPasswordCount = !this.showPasswordCount;\n\n    if (this.editMode && this.showPasswordCount) {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledPasswordVisible,\n        this.cipherId\n      );\n    }\n  }\n\n  launch(uri: LoginUriView) {\n    if (!uri.canLaunch) {\n      return;\n    }\n\n    this.platformUtilsService.launchUri(uri.launchUri);\n  }\n\n  copy(value: string, typeI18nKey: string, aType: string) {\n    if (value == null) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (this.editMode) {\n      if (typeI18nKey === \"password\") {\n        this.eventCollectionService.collect(\n          EventType.Cipher_ClientToggledHiddenFieldVisible,\n          this.cipherId\n        );\n      } else if (typeI18nKey === \"securityCode\") {\n        this.eventCollectionService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n      } else if (aType === \"H_Field\") {\n        this.eventCollectionService.collect(\n          EventType.Cipher_ClientCopiedHiddenField,\n          this.cipherId\n        );\n      }\n    }\n  }\n\n  async generatePassword(): Promise<boolean> {\n    const confirmed = await super.generatePassword();\n    if (confirmed) {\n      const options = (await this.passwordGenerationService.getOptions())?.[0] ?? {};\n      this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n    }\n    return confirmed;\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  upgradeOrganization() {\n    this.messagingService.send(\"upgradeOrganization\", {\n      organizationId: this.cipher.organizationId,\n    });\n  }\n\n  showGetPremium() {\n    if (this.canAccessPremium) {\n      return;\n    }\n    if (this.cipher.organizationUseTotp) {\n      this.upgradeOrganization();\n    } else {\n      this.premiumRequired();\n    }\n  }\n\n  viewHistory() {\n    this.viewingPasswordHistory = !this.viewingPasswordHistory;\n  }\n\n  protected cleanUp() {\n    if (this.totpInterval) {\n      window.clearInterval(this.totpInterval);\n    }\n  }\n\n  protected async totpUpdateCode() {\n    if (\n      this.cipher == null ||\n      this.cipher.type !== CipherType.Login ||\n      this.cipher.login.totp == null\n    ) {\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n      return;\n    }\n\n    this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n    if (this.totpCode != null) {\n      if (this.totpCode.length > 4) {\n        const half = Math.floor(this.totpCode.length / 2);\n        this.totpCodeFormatted =\n          this.totpCode.substring(0, half) + \" \" + this.totpCode.substring(half);\n      } else {\n        this.totpCodeFormatted = this.totpCode;\n      }\n    } else {\n      this.totpCodeFormatted = null;\n      if (this.totpInterval) {\n        window.clearInterval(this.totpInterval);\n      }\n    }\n  }\n\n  protected allowOwnershipAssignment() {\n    return (\n      (!this.editMode || this.cloneMode) &&\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    );\n  }\n\n  protected showTotp() {\n    return (\n      this.cipher.type === CipherType.Login &&\n      this.cipher.login.totp &&\n      this.organization?.planProductType != ProductType.Free &&\n      (this.cipher.organizationUseTotp || this.canAccessPremium)\n    );\n  }\n\n  private async totpTick(intervalSeconds: number) {\n    const epoch = Math.round(new Date().getTime() / 1000.0);\n    const mod = epoch % intervalSeconds;\n\n    this.totpSec = intervalSeconds - mod;\n    this.totpDash = +(Math.round(((78.6 / intervalSeconds) * mod + \"e+2\") as any) + \"e-2\");\n    this.totpLow = this.totpSec <= 7;\n    if (mod === 0) {\n      await this.totpUpdateCode();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/vault/abstractions/folder/folder.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { CipherData } from \"@bitwarden/common/vault/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/vault/models/domain/cipher\";\nimport { CipherCreateRequest } from \"@bitwarden/common/vault/models/request/cipher-create.request\";\nimport { CipherRequest } from \"@bitwarden/common/vault/models/request/cipher.request\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../individual-vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../individual-vault/add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  protected override componentName = \"app-org-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    private apiService: ApiService,\n    messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    policyService: PolicyService,\n    logService: LogService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  protected allowOwnershipAssignment() {\n    if (\n      this.ownershipOptions != null &&\n      (this.ownershipOptions.length > 1 || !this.allowPersonal)\n    ) {\n      if (this.organization != null) {\n        return this.cloneMode && this.organization.canEditAnyCollection;\n      } else {\n        return !this.editMode || this.cloneMode;\n      }\n    }\n    return false;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    const data = new CipherData(response);\n\n    data.edit = true;\n    const cipher = new Cipher(data);\n    this.originalCipher = cipher;\n    return cipher;\n  }\n\n  protected encryptCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.encryptCipher();\n    }\n    return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n  }\n\n  protected async saveCipher(cipher: Cipher) {\n    if (!this.organization.canEditAnyCollection || cipher.organizationId == null) {\n      return super.saveCipher(cipher);\n    }\n    if (this.editMode && !this.cloneMode) {\n      const request = new CipherRequest(cipher);\n      return this.apiService.putCipherAdmin(this.cipherId, request);\n    } else {\n      const request = new CipherCreateRequest(cipher);\n      return this.apiService.postCipherAdmin(request);\n    }\n  }\n\n  protected async deleteCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipher();\n    }\n    return this.cipher.isDeleted\n      ? this.apiService.deleteCipherAdmin(this.cipherId)\n      : this.apiService.putDeleteCipherAdmin(this.cipherId);\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../app/shared\";\n\nimport { RegisterFormComponent } from \"./register-form.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [RegisterFormComponent],\n  exports: [RegisterFormComponent],\n})\nexport class RegisterFormModule {}\n","import { TwoFactorProviderType } from \"../../enums/two-factor-provider-type\";\n\nimport { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorProviderRequest extends SecretVerificationRequest {\n  type: TwoFactorProviderType;\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\nimport { VerificationType } from \"@bitwarden/common/auth/enums/verification-type\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/auth/models/request/secret-verification.request\";\nimport { TwoFactorProviderRequest } from \"@bitwarden/common/auth/models/request/two-factor-provider.request\";\nimport { AuthResponseBase } from \"@bitwarden/common/auth/types/auth-response\";\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n  @Output() onUpdated = new EventEmitter<boolean>();\n\n  type: TwoFactorProviderType;\n  organizationId: string;\n  twoFactorProviderType = TwoFactorProviderType;\n  enabled = false;\n  authed = false;\n\n  protected hashedSecret: string;\n  protected verificationType: VerificationType;\n\n  constructor(\n    protected apiService: ApiService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected logService: LogService,\n    protected userVerificationService: UserVerificationService\n  ) {}\n\n  protected auth(authResponse: AuthResponseBase) {\n    this.hashedSecret = authResponse.secret;\n    this.verificationType = authResponse.verificationType;\n    this.authed = true;\n  }\n\n  protected async enable(enableFunction: () => Promise<void>) {\n    try {\n      await enableFunction();\n      this.onUpdated.emit(true);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async disable(promise: Promise<unknown>) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"twoStepDisableDesc\"),\n      this.i18nService.t(\"disable\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      const request = await this.buildRequestModel(TwoFactorProviderRequest);\n      request.type = this.type;\n      if (this.organizationId != null) {\n        promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n      } else {\n        promise = this.apiService.putTwoFactorDisable(request);\n      }\n      await promise;\n      this.enabled = false;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"twoStepDisabled\"));\n      this.onUpdated.emit(false);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async buildRequestModel<T extends SecretVerificationRequest>(\n    requestClass: new () => T\n  ) {\n    return this.userVerificationService.buildRequest(\n      {\n        secret: this.hashedSecret,\n        type: this.verificationType,\n      },\n      requestClass,\n      true\n    );\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorDuoRequest extends SecretVerificationRequest {\n  integrationKey: string;\n  secretKey: string;\n  host: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faDuoTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>Duo</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <strong>{{ \"twoFactorDuoIntegrationKey\" | i18n }}:</strong> {{ ikey }}\n            <br />\n            <strong>{{ \"twoFactorDuoSecretKey\" | i18n }}:</strong> {{ skey }}\n            <br />\n            <strong>{{ \"twoFactorDuoApiHostname\" | i18n }}:</strong> {{ host }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right ml-3 mfaType2\" alt=\"Duo logo\" />\n            <p>{{ \"twoFactorDuoDesc\" | i18n }}</p>\n            <div class=\"form-group\">\n              <label for=\"ikey\">{{ \"twoFactorDuoIntegrationKey\" | i18n }}</label>\n              <input\n                id=\"ikey\"\n                type=\"text\"\n                name=\"IntegrationKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"ikey\"\n                required\n                appInputVerbatim\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"skey\">{{ \"twoFactorDuoSecretKey\" | i18n }}</label>\n              <input\n                id=\"skey\"\n                type=\"password\"\n                name=\"SecretKey\"\n                class=\"form-control\"\n                [(ngModel)]=\"skey\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n            <div class=\"form-group\">\n              <label for=\"host\">{{ \"twoFactorDuoApiHostname\" | i18n }}</label>\n              <input\n                id=\"host\"\n                type=\"text\"\n                name=\"Host\"\n                class=\"form-control\"\n                [(ngModel)]=\"host\"\n                placeholder=\"{{ 'ex' | i18n }} api-xxxxxxxx.duosecurity.com\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\nimport { UpdateTwoFactorDuoRequest } from \"@bitwarden/common/auth/models/request/update-two-factor-duo.request\";\nimport { TwoFactorDuoResponse } from \"@bitwarden/common/auth/models/response/two-factor-duo.response\";\nimport { AuthResponse } from \"@bitwarden/common/auth/types/auth-response\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-duo\",\n  templateUrl: \"two-factor-duo.component.html\",\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Duo;\n  ikey: string;\n  skey: string;\n  host: string;\n  formPromise: Promise<TwoFactorDuoResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorDuoResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorDuoRequest);\n    request.integrationKey = this.ikey;\n    request.secretKey = this.skey;\n    request.host = this.host;\n\n    return super.enable(async () => {\n      if (this.organizationId != null) {\n        this.formPromise = this.apiService.putTwoFactorOrganizationDuo(\n          this.organizationId,\n          request\n        );\n      } else {\n        this.formPromise = this.apiService.putTwoFactorDuo(request);\n      }\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private processResponse(response: TwoFactorDuoResponse) {\n    this.ikey = response.integrationKey;\n    this.skey = response.secretKey;\n    this.host = response.host;\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorAuthenticatorRequest extends SecretVerificationRequest {\n  token: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"authenticatorAppTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"!enabled\">\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorDesc\" | i18n }}</p>\n            <p>\n              <strong>1. {{ \"twoStepAuthenticatorDownloadApp\" | i18n }}</strong>\n            </p>\n          </ng-container>\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              <p>{{ \"twoStepLoginProviderEnabled\" | i18n }}</p>\n              {{ \"twoStepAuthenticatorReaddDesc\" | i18n }}\n            </app-callout>\n            <img class=\"float-right mfaType0\" alt=\"Authenticator app logo\" />\n            <p>{{ \"twoStepAuthenticatorNeedApp\" | i18n }}</p>\n          </ng-container>\n          <ul class=\"bwi-ul\">\n            <li>\n              <i class=\"bwi bwi-li bwi-apple\"></i>{{ \"iosDevices\" | i18n }}:\n              <a\n                href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-android\"></i>{{ \"androidDevices\" | i18n }}:\n              <a\n                href=\"https://play.google.com/store/apps/details?id=com.authy.authy\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Authy</a\n              >\n            </li>\n            <li>\n              <i class=\"bwi bwi-li bwi-windows\"></i>{{ \"windowsDevices\" | i18n }}:\n              <a\n                href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                >Microsoft Authenticator</a\n              >\n            </li>\n          </ul>\n          <p>{{ \"twoStepAuthenticatorAppsRecommended\" | i18n }}</p>\n          <p *ngIf=\"!enabled\">\n            <strong>2. {{ \"twoStepAuthenticatorScanCode\" | i18n }}</strong>\n          </p>\n          <hr *ngIf=\"enabled\" />\n          <p class=\"text-center\" [ngClass]=\"{ 'mb-0': enabled }\">\n            <canvas id=\"qr\"></canvas><br />\n            <code appA11yTitle=\"{{ 'key' | i18n }}\">{{ key }}</code>\n          </p>\n          <ng-container *ngIf=\"!enabled\">\n            <label for=\"token\">3. {{ \"twoStepAuthenticatorEnterCode\" | i18n }}</label>\n            <input\n              id=\"token\"\n              type=\"text\"\n              name=\"Token\"\n              class=\"form-control\"\n              [(ngModel)]=\"token\"\n              required\n              appInputVerbatim\n            />\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"@bitwarden/common/auth/models/request/update-two-factor-authenticator.request\";\nimport { TwoFactorAuthenticatorResponse } from \"@bitwarden/common/auth/models/response/two-factor-authenticator.response\";\nimport { AuthResponse } from \"@bitwarden/common/auth/types/auth-response\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n// NOTE: There are additional options available but these are just the ones we are current using.\n// See: https://github.com/neocotic/qrious#examples\ninterface QRiousOptions {\n  element: HTMLElement;\n  value: string;\n  size: number;\n}\n\ndeclare global {\n  interface Window {\n    QRious: new (options: QRiousOptions) => unknown;\n  }\n}\n\n@Component({\n  selector: \"app-two-factor-authenticator\",\n  templateUrl: \"two-factor-authenticator.component.html\",\n})\nexport class TwoFactorAuthenticatorComponent\n  extends TwoFactorBaseComponent\n  implements OnInit, OnDestroy\n{\n  type = TwoFactorProviderType.Authenticator;\n  key: string;\n  token: string;\n  formPromise: Promise<TwoFactorAuthenticatorResponse>;\n\n  private qrScript: HTMLScriptElement;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    userVerificationService: UserVerificationService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n    this.qrScript = window.document.createElement(\"script\");\n    this.qrScript.src = \"scripts/qrious.min.js\";\n    this.qrScript.async = true;\n  }\n\n  ngOnInit() {\n    window.document.body.appendChild(this.qrScript);\n  }\n\n  ngOnDestroy() {\n    window.document.body.removeChild(this.qrScript);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorAuthenticatorResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorAuthenticatorRequest);\n    request.token = this.token;\n    request.key = this.key;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorAuthenticatorResponse) {\n    this.token = null;\n    this.enabled = response.enabled;\n    this.key = response.key;\n    const email = await this.stateService.getEmail();\n    window.setTimeout(() => {\n      new window.QRious({\n        element: document.getElementById(\"qr\"),\n        value:\n          \"otpauth://totp/Vaultwarden:\" +\n          Utils.encodeRFC3986URIComponent(email) +\n          \"?secret=\" +\n          encodeURIComponent(this.key) +\n          \"&issuer=Vaultwarden\",\n        size: 160,\n      });\n    }, 100);\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorEmailRequest extends SecretVerificationRequest {\n  token: string;\n  email: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faEmailTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"emailTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <ng-container *ngIf=\"enabled\">\n            <app-callout type=\"success\" title=\"{{ 'enabled' | i18n }}\" icon=\"bwi bwi-check-circle\">\n              {{ \"twoStepLoginProviderEnabled\" | i18n }}\n            </app-callout>\n            <strong>{{ \"email\" | i18n }}:</strong> {{ email }}\n          </ng-container>\n          <ng-container *ngIf=\"!enabled\">\n            <p class=\"d-flex\">\n              <span class=\"mr-3\">{{ \"twoFactorEmailDesc\" | i18n }}</span>\n              <img class=\"float-right ml-auto mfaType1\" alt=\"Email logo\" />\n            </p>\n            <div class=\"form-group\">\n              <label for=\"email\">1. {{ \"twoFactorEmailEnterEmail\" | i18n }}</label>\n              <input\n                id=\"email\"\n                type=\"text\"\n                name=\"Email\"\n                class=\"form-control\"\n                [(ngModel)]=\"email\"\n                required\n                inputmode=\"email\"\n                appInputVerbatim=\"false\"\n              />\n            </div>\n            <div class=\"mb-3 d-flex\">\n              <button\n                #sendBtn\n                type=\"button\"\n                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\"\n                (click)=\"sendEmail()\"\n                [appApiAction]=\"emailPromise\"\n                [disabled]=\"$any(sendBtn).loading\"\n              >\n                <i\n                  class=\"bwi bwi-spinner bwi-spin\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span>{{ \"sendEmail\" | i18n }}</span>\n              </button>\n              <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                {{ \"verificationCodeEmailSent\" | i18n: sentEmail }}\n              </span>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"token\">2. {{ \"twoFactorEmailEnterCode\" | i18n }}</label>\n              <input\n                id=\"token\"\n                type=\"text\"\n                name=\"Token\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appInputVerbatim\n              />\n            </div>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!enabled\">{{ \"enable\" | i18n }}</span>\n            <span *ngIf=\"enabled\">{{ \"disable\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/auth/models/request/two-factor-email.request\";\nimport { UpdateTwoFactorEmailRequest } from \"@bitwarden/common/auth/models/request/update-two-factor-email.request\";\nimport { TwoFactorEmailResponse } from \"@bitwarden/common/auth/models/response/two-factor-email.response\";\nimport { AuthResponse } from \"@bitwarden/common/auth/types/auth-response\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\n@Component({\n  selector: \"app-two-factor-email\",\n  templateUrl: \"two-factor-email.component.html\",\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Email;\n  email: string;\n  token: string;\n  sentEmail: string;\n  formPromise: Promise<TwoFactorEmailResponse>;\n  emailPromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService,\n    private stateService: StateService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorEmailResponse>) {\n    super.auth(authResponse);\n    return this.processResponse(authResponse.response);\n  }\n\n  submit() {\n    if (this.enabled) {\n      return super.disable(this.formPromise);\n    } else {\n      return this.enable();\n    }\n  }\n\n  async sendEmail() {\n    try {\n      const request = await this.buildRequestModel(TwoFactorEmailRequest);\n      request.email = this.email;\n      this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n      await this.emailPromise;\n      this.sentEmail = this.email;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected async enable() {\n    const request = await this.buildRequestModel(UpdateTwoFactorEmailRequest);\n    request.email = this.email;\n    request.token = this.token;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorEmail(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  private async processResponse(response: TwoFactorEmailResponse) {\n    this.token = null;\n    this.email = response.email;\n    this.enabled = response.enabled;\n    if (!this.enabled && (this.email == null || this.email === \"\")) {\n      this.email = await this.stateService.getEmail();\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faRecoveryTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"recoveryCodeTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify [type]=\"type\" (onAuthed)=\"auth($event)\" *ngIf=\"!authed\">\n      </app-two-factor-verify>\n      <ng-container *ngIf=\"authed\">\n        <div class=\"modal-body text-center\">\n          <ng-container *ngIf=\"code\">\n            <p>{{ \"twoFactorRecoveryYourCode\" | i18n }}:</p>\n            <code class=\"text-lg\">{{ code }}</code>\n          </ng-container>\n          <ng-container *ngIf=\"!code\">\n            {{ \"twoFactorRecoveryNoCode\" | i18n }}\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\" *ngIf=\"code\">\n            {{ \"printCode\" | i18n }}\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\nimport { TwoFactorRecoverResponse } from \"@bitwarden/common/auth/models/response/two-factor-recover.response\";\n\n@Component({\n  selector: \"app-two-factor-recovery\",\n  templateUrl: \"two-factor-recovery.component.html\",\n})\nexport class TwoFactorRecoveryComponent {\n  type = -1;\n  code: string;\n  authed: boolean;\n  twoFactorProviderType = TwoFactorProviderType;\n\n  constructor(private i18nService: I18nService) {}\n\n  auth(authResponse: any) {\n    this.authed = true;\n    this.processResponse(authResponse.response);\n  }\n\n  print() {\n    const w = window.open();\n    w.document.write(\n      '<div style=\"font-size: 18px; text-align: center;\">' +\n        \"<p>\" +\n        this.i18nService.t(\"twoFactorRecoveryYourCode\") +\n        \":</p>\" +\n        \"<code style=\\\"font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;\\\">\" +\n        this.code +\n        \"</code></div>\" +\n        '<p style=\"text-align: center;\">' +\n        new Date() +\n        \"</p>\"\n    );\n    w.onafterprint = () => w.close();\n    w.print();\n  }\n\n  private formatString(s: string) {\n    if (s == null) {\n      return null;\n    }\n    return s\n      .replace(/(.{4})/g, \"$1 \")\n      .trim()\n      .toUpperCase();\n  }\n\n  private processResponse(response: TwoFactorRecoverResponse) {\n    this.code = this.formatString(response.code);\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorWebAuthnDeleteRequest extends SecretVerificationRequest {\n  id: number;\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorWebAuthnRequest extends SecretVerificationRequest {\n  deviceResponse: PublicKeyCredential;\n  name: string;\n  id: number;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faU2fTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>{{ \"webAuthnTitle\" | i18n }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorWebAuthnWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorWebAuthnSupportWeb\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right ml-5 mfaType7\" alt=\"FIDO2 WebAuthn logo'\" />\n          <ul class=\"bwi-ul\">\n            <li\n              *ngFor=\"let k of keys; let i = index\"\n              #removeKeyBtn\n              [appApiAction]=\"k.removePromise\"\n            >\n              <i class=\"bwi bwi-li bwi-key\"></i>\n              <strong *ngIf=\"!k.configured || !k.name\">{{ \"webAuthnkeyX\" | i18n: i + 1 }}</strong>\n              <strong *ngIf=\"k.configured && k.name\">{{ k.name }}</strong>\n              <ng-container *ngIf=\"k.configured && !$any(removeKeyBtn).loading\">\n                <ng-container *ngIf=\"k.migrated\">\n                  <span>{{ \"webAuthnMigrated\" | i18n }}</span>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                <i\n                  class=\"bwi bwi-spin bwi-spinner text-muted bwi-fw\"\n                  title=\"{{ 'loading' | i18n }}\"\n                  *ngIf=\"$any(removeKeyBtn).loading\"\n                  aria-hidden=\"true\"\n                ></i>\n                -\n                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{ \"remove\" | i18n }}</a>\n              </ng-container>\n            </li>\n          </ul>\n          <hr />\n          <p>{{ \"twoFactorWebAuthnAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorU2fGiveName\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fPlugInReadKey\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorU2fSaveForm\" | i18n }}</li>\n          </ol>\n          <div class=\"row\">\n            <div class=\"form-group col-6\">\n              <label for=\"name\">{{ \"name\" | i18n }}</label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"Name\"\n                class=\"form-control\"\n                [(ngModel)]=\"name\"\n                [disabled]=\"!keyIdAvailable\"\n              />\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            (click)=\"readKey()\"\n            class=\"btn btn-outline-secondary mr-2\"\n            [disabled]=\"$any(readKeyBtn).loading || webAuthnListening || !keyIdAvailable\"\n            #readKeyBtn\n            [appApiAction]=\"challengePromise\"\n          >\n            {{ \"readKey\" | i18n }}\n          </button>\n          <ng-container *ngIf=\"$any(readKeyBtn).loading\">\n            <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n          </ng-container>\n          <ng-container *ngIf=\"!$any(readKeyBtn).loading\">\n            <ng-container *ngIf=\"webAuthnListening\">\n              <i class=\"bwi bwi-spinner bwi-spin text-muted\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fWaiting\" | i18n }}...\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnResponse\">\n              <i class=\"bwi bwi-check-circle text-success\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fClickSave\" | i18n }}\n            </ng-container>\n            <ng-container *ngIf=\"webAuthnError\">\n              <i class=\"bwi bwi-exclamation-triangle text-danger\" aria-hidden=\"true\"></i>\n              {{ \"twoFactorU2fProblemReadingTryAgain\" | i18n }}\n            </ng-container>\n          </ng-container>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            [disabled]=\"form.loading || !webAuthnResponse\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              *ngIf=\"form.loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span *ngIf=\"!form.loading\">{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [disabled]=\"$any(disableBtn).loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/auth/models/request/secret-verification.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"@bitwarden/common/auth/models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"@bitwarden/common/auth/models/request/update-two-factor-web-authn.request\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"@bitwarden/common/auth/models/response/two-factor-web-authn.response\";\nimport { AuthResponse } from \"@bitwarden/common/auth/types/auth-response\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  id: number;\n  name: string;\n  configured: boolean;\n  migrated?: boolean;\n  removePromise: Promise<TwoFactorWebAuthnResponse> | null;\n}\n\n@Component({\n  selector: \"app-two-factor-webauthn\",\n  templateUrl: \"two-factor-webauthn.component.html\",\n})\nexport class TwoFactorWebAuthnComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.WebAuthn;\n  name: string;\n  keys: Key[];\n  keyIdAvailable: number = null;\n  keysConfiguredCount = 0;\n  webAuthnError: boolean;\n  webAuthnListening: boolean;\n  webAuthnResponse: PublicKeyCredential;\n  challengePromise: Promise<ChallengeResponse>;\n  formPromise: Promise<TwoFactorWebAuthnResponse>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorWebAuthnResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    if (this.webAuthnResponse == null || this.keyIdAvailable == null) {\n      // Should never happen.\n      return Promise.reject();\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnRequest);\n    request.deviceResponse = this.webAuthnResponse;\n    request.id = this.keyIdAvailable;\n    request.name = this.name;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorWebAuthn(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n    });\n  }\n\n  disable() {\n    return super.disable(this.formPromise);\n  }\n\n  async remove(key: Key) {\n    if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n      return;\n    }\n    const name = key.name != null ? key.name : this.i18nService.t(\"webAuthnkeyX\", key.id as any);\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeU2fConfirmation\"),\n      name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    const request = await this.buildRequestModel(UpdateTwoFactorWebAuthnDeleteRequest);\n    request.id = key.id;\n    try {\n      key.removePromise = this.apiService.deleteTwoFactorWebAuthn(request);\n      const response = await key.removePromise;\n      key.removePromise = null;\n      await this.processResponse(response);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async readKey() {\n    if (this.keyIdAvailable == null) {\n      return;\n    }\n    const request = await this.buildRequestModel(SecretVerificationRequest);\n    try {\n      this.challengePromise = this.apiService.getTwoFactorWebAuthnChallenge(request);\n      const challenge = await this.challengePromise;\n      this.readDevice(challenge);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private readDevice(webAuthnChallenge: ChallengeResponse) {\n    // eslint-disable-next-line\n    console.log(\"listening for key...\");\n    this.resetWebAuthn(true);\n\n    navigator.credentials\n      .create({\n        publicKey: webAuthnChallenge,\n      })\n      .then((data: PublicKeyCredential) => {\n        this.ngZone.run(() => {\n          this.webAuthnListening = false;\n          this.webAuthnResponse = data;\n        });\n      })\n      .catch((err) => {\n        // eslint-disable-next-line\n        console.error(err);\n        this.resetWebAuthn(false);\n        // TODO: Should we display the actual error?\n        this.webAuthnError = true;\n      });\n  }\n\n  private resetWebAuthn(listening = false) {\n    this.webAuthnResponse = null;\n    this.webAuthnError = false;\n    this.webAuthnListening = listening;\n  }\n\n  private processResponse(response: TwoFactorWebAuthnResponse) {\n    this.resetWebAuthn();\n    this.keys = [];\n    this.keyIdAvailable = null;\n    this.name = null;\n    this.keysConfiguredCount = 0;\n    for (let i = 1; i <= 5; i++) {\n      if (response.keys != null) {\n        const key = response.keys.filter((k) => k.id === i);\n        if (key.length > 0) {\n          this.keysConfiguredCount++;\n          this.keys.push({\n            id: i,\n            name: key[0].name,\n            configured: true,\n            migrated: key[0].migrated,\n            removePromise: null,\n          });\n          continue;\n        }\n      }\n      this.keys.push({ id: i, name: null, configured: false, removePromise: null });\n      if (this.keyIdAvailable == null) {\n        this.keyIdAvailable = i;\n      }\n    }\n    this.enabled = response.enabled;\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class UpdateTwoFactorYubioOtpRequest extends SecretVerificationRequest {\n  key1: string;\n  key2: string;\n  key3: string;\n  key4: string;\n  key5: string;\n  nfc: boolean;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n          {{ \"twoStepLogin\" | i18n }}\n          <small>YubiKey</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <app-two-factor-verify\n        [organizationId]=\"organizationId\"\n        [type]=\"type\"\n        (onAuthed)=\"auth($any($event))\"\n        *ngIf=\"!authed\"\n      >\n      </app-two-factor-verify>\n      <form\n        #form\n        (ngSubmit)=\"submit()\"\n        [appApiAction]=\"formPromise\"\n        ngNativeValidate\n        *ngIf=\"authed\"\n        autocomplete=\"off\"\n      >\n        <div class=\"modal-body\">\n          <app-callout\n            type=\"success\"\n            title=\"{{ 'enabled' | i18n }}\"\n            icon=\"bwi bwi-check-circle\"\n            *ngIf=\"enabled\"\n          >\n            {{ \"twoStepLoginProviderEnabled\" | i18n }}\n          </app-callout>\n          <app-callout type=\"warning\">\n            <p>{{ \"twoFactorYubikeyWarning\" | i18n }}</p>\n            <ul class=\"mb-0\">\n              <li>{{ \"twoFactorYubikeySupportUsb\" | i18n }}</li>\n              <li>{{ \"twoFactorYubikeySupportMobile\" | i18n }}</li>\n            </ul>\n          </app-callout>\n          <img class=\"float-right mfaType3\" alt=\"YubiKey OTP security key logo\" />\n          <p>{{ \"twoFactorYubikeyAdd\" | i18n }}:</p>\n          <ol>\n            <li>{{ \"twoFactorYubikeyPlugIn\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySelectKey\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeyTouchButton\" | i18n }}</li>\n            <li>{{ \"twoFactorYubikeySaveForm\" | i18n }}</li>\n          </ol>\n          <hr />\n          <div class=\"row\">\n            <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n              <label for=\"key{{ i + 1 }}\">{{ \"yubikeyX\" | i18n: i + 1 }}</label>\n              <input\n                id=\"key{{ i + 1 }}\"\n                type=\"password\"\n                name=\"Key{{ i + 1 }}\"\n                class=\"form-control\"\n                [(ngModel)]=\"k.key\"\n                *ngIf=\"!k.existingKey\"\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                <span class=\"mr-2\">{{ k.existingKey }}</span>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link text-danger ml-auto\"\n                  (click)=\"remove(k)\"\n                  appA11yTitle=\"{{ 'remove' | i18n }}\"\n                >\n                  <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n          <strong class=\"d-block mb-2\">{{ \"nfcSupport\" | i18n }}</strong>\n          <div class=\"form-check\">\n            <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\" />\n            <label class=\"form-check-label\" for=\"nfc\">{{\n              \"twoFactorYubikeySupportsNfc\" | i18n\n            }}</label>\n          </div>\n          <small class=\"form-text text-muted\">{{ \"twoFactorYubikeySupportsNfcDesc\" | i18n }}</small>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <button\n            #disableBtn\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-submit\"\n            [appApiAction]=\"disablePromise\"\n            [disabled]=\"$any(disableBtn).loading\"\n            (click)=\"disable()\"\n            *ngIf=\"enabled\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"disableAllKeys\" | i18n }}</span>\n          </button>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"close\" | i18n }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"@bitwarden/common/auth/models/request/update-two-factor-yubio-otp.request\";\nimport { TwoFactorYubiKeyResponse } from \"@bitwarden/common/auth/models/response/two-factor-yubi-key.response\";\nimport { AuthResponse } from \"@bitwarden/common/auth/types/auth-response\";\n\nimport { TwoFactorBaseComponent } from \"./two-factor-base.component\";\n\ninterface Key {\n  key: string;\n  existingKey: string;\n}\n\n@Component({\n  selector: \"app-two-factor-yubikey\",\n  templateUrl: \"two-factor-yubikey.component.html\",\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n  type = TwoFactorProviderType.Yubikey;\n  keys: Key[];\n  nfc = false;\n\n  formPromise: Promise<TwoFactorYubiKeyResponse>;\n  disablePromise: Promise<unknown>;\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(apiService, i18nService, platformUtilsService, logService, userVerificationService);\n  }\n\n  auth(authResponse: AuthResponse<TwoFactorYubiKeyResponse>) {\n    super.auth(authResponse);\n    this.processResponse(authResponse.response);\n  }\n\n  async submit() {\n    const request = await this.buildRequestModel(UpdateTwoFactorYubioOtpRequest);\n    request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n    request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n    request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n    request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n    request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n    request.nfc = this.nfc;\n\n    return super.enable(async () => {\n      this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n      const response = await this.formPromise;\n      await this.processResponse(response);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"yubikeysUpdated\"));\n    });\n  }\n\n  disable() {\n    return super.disable(this.disablePromise);\n  }\n\n  remove(key: Key) {\n    key.existingKey = null;\n    key.key = null;\n  }\n\n  private processResponse(response: TwoFactorYubiKeyResponse) {\n    this.enabled = response.enabled;\n    this.keys = [\n      { key: response.key1, existingKey: this.padRight(response.key1) },\n      { key: response.key2, existingKey: this.padRight(response.key2) },\n      { key: response.key3, existingKey: this.padRight(response.key3) },\n      { key: response.key4, existingKey: this.padRight(response.key4) },\n      { key: response.key5, existingKey: this.padRight(response.key5) },\n    ];\n    this.nfc = response.nfc || !response.enabled;\n  }\n\n  private padRight(str: string, character = \"•\", size = 44) {\n    if (str == null || character == null || str.length >= size) {\n      return str;\n    }\n    const max = (size - str.length) / character.length;\n    for (let i = 0; i < max; i++) {\n      str += character;\n    }\n    return str;\n  }\n}\n","import { Component, OnDestroy, OnInit, Type, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\nimport { TwoFactorProviders } from \"@bitwarden/common/auth/services/two-factor.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\n\nimport { TwoFactorAuthenticatorComponent } from \"./two-factor-authenticator.component\";\nimport { TwoFactorDuoComponent } from \"./two-factor-duo.component\";\nimport { TwoFactorEmailComponent } from \"./two-factor-email.component\";\nimport { TwoFactorRecoveryComponent } from \"./two-factor-recovery.component\";\nimport { TwoFactorWebAuthnComponent } from \"./two-factor-webauthn.component\";\nimport { TwoFactorYubiKeyComponent } from \"./two-factor-yubikey.component\";\n\n@Component({\n  selector: \"app-two-factor-setup\",\n  templateUrl: \"two-factor-setup.component.html\",\n})\nexport class TwoFactorSetupComponent implements OnInit, OnDestroy {\n  @ViewChild(\"recoveryTemplate\", { read: ViewContainerRef, static: true })\n  recoveryModalRef: ViewContainerRef;\n  @ViewChild(\"authenticatorTemplate\", { read: ViewContainerRef, static: true })\n  authenticatorModalRef: ViewContainerRef;\n  @ViewChild(\"yubikeyTemplate\", { read: ViewContainerRef, static: true })\n  yubikeyModalRef: ViewContainerRef;\n  @ViewChild(\"duoTemplate\", { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n  @ViewChild(\"emailTemplate\", { read: ViewContainerRef, static: true })\n  emailModalRef: ViewContainerRef;\n  @ViewChild(\"webAuthnTemplate\", { read: ViewContainerRef, static: true })\n  webAuthnModalRef: ViewContainerRef;\n\n  organizationId: string;\n  providers: any[] = [];\n  canAccessPremium: boolean;\n  showPolicyWarning = false;\n  loading = true;\n  modal: ModalRef;\n  formPromise: Promise<any>;\n\n  tabbedHeader = true;\n\n  private destroy$ = new Subject<void>();\n  private twoFactorAuthPolicyAppliesToActiveUser: boolean;\n\n  constructor(\n    protected apiService: ApiService,\n    protected modalService: ModalService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n\n    for (const key in TwoFactorProviders) {\n      // eslint-disable-next-line\n      if (!TwoFactorProviders.hasOwnProperty(key)) {\n        continue;\n      }\n\n      const p = (TwoFactorProviders as any)[key];\n      if (this.filterProvider(p.type)) {\n        continue;\n      }\n\n      this.providers.push({\n        type: p.type,\n        name: p.name,\n        description: p.description,\n        enabled: false,\n        premium: p.premium,\n        sort: p.sort,\n      });\n    }\n\n    this.providers.sort((a: any, b: any) => a.sort - b.sort);\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.TwoFactorAuthentication)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.twoFactorAuthPolicyAppliesToActiveUser = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load() {\n    this.loading = true;\n    const providerList = await this.getTwoFactorProviders();\n    providerList.data.forEach((p) => {\n      this.providers.forEach((p2) => {\n        if (p.type === p2.type) {\n          p2.enabled = p.enabled;\n        }\n      });\n    });\n    this.evaluatePolicies();\n    this.loading = false;\n  }\n\n  async manage(type: TwoFactorProviderType) {\n    switch (type) {\n      case TwoFactorProviderType.Authenticator: {\n        const authComp = await this.openModal(\n          this.authenticatorModalRef,\n          TwoFactorAuthenticatorComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        authComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Yubikey: {\n        const yubiComp = await this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        yubiComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Duo: {\n        const duoComp = await this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        duoComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Duo);\n        });\n        break;\n      }\n      case TwoFactorProviderType.Email: {\n        const emailComp = await this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        emailComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.Email);\n        });\n        break;\n      }\n      case TwoFactorProviderType.WebAuthn: {\n        const webAuthnComp = await this.openModal(\n          this.webAuthnModalRef,\n          TwoFactorWebAuthnComponent\n        );\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        webAuthnComp.onUpdated.subscribe((enabled: boolean) => {\n          this.updateStatus(enabled, TwoFactorProviderType.WebAuthn);\n        });\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  recoveryCode() {\n    this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  protected getTwoFactorProviders() {\n    return this.apiService.getTwoFactorProviders();\n  }\n\n  protected filterProvider(type: TwoFactorProviderType) {\n    return type === TwoFactorProviderType.OrganizationDuo;\n  }\n\n  protected async openModal<T>(ref: ViewContainerRef, type: Type<T>): Promise<T> {\n    const [modal, childComponent] = await this.modalService.openViewRef(type, ref);\n    this.modal = modal;\n\n    return childComponent;\n  }\n\n  protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n    if (!enabled && this.modal != null) {\n      this.modal.close();\n    }\n    this.providers.forEach((p) => {\n      if (p.type === type) {\n        p.enabled = enabled;\n      }\n    });\n    this.evaluatePolicies();\n  }\n\n  private async evaluatePolicies() {\n    if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n      this.showPolicyWarning = this.twoFactorAuthPolicyAppliesToActiveUser;\n    } else {\n      this.showPolicyWarning = false;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\nimport { VerificationType } from \"@bitwarden/common/auth/enums/verification-type\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/auth/models/request/secret-verification.request\";\nimport { AuthResponse } from \"@bitwarden/common/auth/types/auth-response\";\nimport { TwoFactorResponse } from \"@bitwarden/common/auth/types/two-factor-response\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-two-factor-verify\",\n  templateUrl: \"two-factor-verify.component.html\",\n})\nexport class TwoFactorVerifyComponent {\n  @Input() type: TwoFactorProviderType;\n  @Input() organizationId: string;\n  @Output() onAuthed = new EventEmitter<AuthResponse<TwoFactorResponse>>();\n\n  secret: Verification;\n  formPromise: Promise<TwoFactorResponse>;\n\n  constructor(\n    private apiService: ApiService,\n    private logService: LogService,\n    private userVerificationService: UserVerificationService\n  ) {}\n\n  async submit() {\n    let hashedSecret: string;\n\n    try {\n      this.formPromise = this.userVerificationService.buildRequest(this.secret).then((request) => {\n        hashedSecret =\n          this.secret.type === VerificationType.MasterPassword\n            ? request.masterPasswordHash\n            : request.otp;\n        return this.apiCall(request);\n      });\n\n      const response = await this.formPromise;\n      this.onAuthed.emit({\n        response: response,\n        secret: hashedSecret,\n        verificationType: this.secret.type,\n      });\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private apiCall(request: SecretVerificationRequest): Promise<TwoFactorResponse> {\n    switch (this.type) {\n      case -1 as TwoFactorProviderType:\n        return this.apiService.getTwoFactorRecover(request);\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        if (this.organizationId != null) {\n          return this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n        } else {\n          return this.apiService.getTwoFactorDuo(request);\n        }\n      case TwoFactorProviderType.Email:\n        return this.apiService.getTwoFactorEmail(request);\n      case TwoFactorProviderType.WebAuthn:\n        return this.apiService.getTwoFactorWebAuthn(request);\n      case TwoFactorProviderType.Authenticator:\n        return this.apiService.getTwoFactorAuthenticator(request);\n      case TwoFactorProviderType.Yubikey:\n        return this.apiService.getTwoFactorYubiKey(request);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <div class=\"modal-body\">\n    <p>{{ \"twoStepLoginAuthDesc\" | i18n }}</p>\n    <app-user-verification [(ngModel)]=\"secret\" ngDefaultControl name=\"secret\">\n    </app-user-verification>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"continue\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n      {{ \"close\" | i18n }}\n    </button>\n  </div>\n</form>\n","import { DOCUMENT } from \"@angular/common\";\nimport { Component, Inject, NgZone, OnDestroy, OnInit, SecurityContext } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport * as jq from \"jquery\";\nimport { IndividualConfig, ToastrService } from \"ngx-toastr\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport Swal from \"sweetalert2\";\n\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EventUploadService } from \"@bitwarden/common/abstractions/event/event-upload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { NotificationsService } from \"@bitwarden/common/abstractions/notifications.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SettingsService } from \"@bitwarden/common/abstractions/settings.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/auth/abstractions/key-connector.service\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { InternalFolderService } from \"@bitwarden/common/vault/abstractions/folder/folder.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\nimport { PolicyListService, RouterService } from \"./core\";\nimport {\n  DisableSendPolicy,\n  MasterPasswordPolicy,\n  PasswordGeneratorPolicy,\n  PersonalOwnershipPolicy,\n  RequireSsoPolicy,\n  ResetPasswordPolicy,\n  SendOptionsPolicy,\n  SingleOrgPolicy,\n  TwoFactorAuthenticationPolicy,\n} from \"./organizations/policies\";\n\nconst BroadcasterSubscriptionId = \"AppComponent\";\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"app.component.html\",\n})\nexport class AppComponent implements OnDestroy, OnInit {\n  private lastActivity: number = null;\n  private idleTimer: number = null;\n  private isIdle = false;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private broadcasterService: BroadcasterService,\n    private folderService: InternalFolderService,\n    private settingsService: SettingsService,\n    private syncService: SyncService,\n    private passwordGenerationService: PasswordGenerationServiceAbstraction,\n    private cipherService: CipherService,\n    private authService: AuthService,\n    private router: Router,\n    private toastrService: ToastrService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private ngZone: NgZone,\n    private vaultTimeoutService: VaultTimeoutService,\n    private cryptoService: CryptoService,\n    private collectionService: CollectionService,\n    private sanitizer: DomSanitizer,\n    private searchService: SearchService,\n    private notificationsService: NotificationsService,\n    private routerService: RouterService,\n    private stateService: StateService,\n    private eventUploadService: EventUploadService,\n    private policyService: InternalPolicyService,\n    protected policyListService: PolicyListService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  ngOnInit() {\n    this.i18nService.locale$.pipe(takeUntil(this.destroy$)).subscribe((locale) => {\n      this.document.documentElement.lang = locale;\n    });\n\n    this.ngZone.runOutsideAngular(() => {\n      window.onmousemove = () => this.recordActivity();\n      window.onmousedown = () => this.recordActivity();\n      window.ontouchstart = () => this.recordActivity();\n      window.onclick = () => this.recordActivity();\n      window.onscroll = () => this.recordActivity();\n      window.onkeypress = () => this.recordActivity();\n    });\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"loggedIn\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"loggedOut\":\n            this.routerService.setPreviousUrl(null);\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"unlocked\":\n            this.notificationsService.updateConnection(false);\n            break;\n          case \"authBlocked\":\n            this.routerService.setPreviousUrl(message.url);\n            this.router.navigate([\"/\"]);\n            break;\n          case \"logout\":\n            this.logOut(!!message.expired, message.redirect);\n            break;\n          case \"lockVault\":\n            await this.vaultTimeoutService.lock();\n            break;\n          case \"locked\":\n            this.notificationsService.updateConnection(false);\n            this.router.navigate([\"lock\"]);\n            break;\n          case \"lockedUrl\":\n            this.routerService.setPreviousUrl(message.url);\n            break;\n          case \"syncStarted\":\n            break;\n          case \"syncCompleted\":\n            break;\n          case \"upgradeOrganization\": {\n            const upgradeConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"upgradeOrganizationDesc\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"upgradeOrganization\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (upgradeConfirmed) {\n              this.router.navigate([\n                \"organizations\",\n                message.organizationId,\n                \"settings\",\n                \"billing\",\n              ]);\n            }\n            break;\n          }\n          case \"premiumRequired\": {\n            const premiumConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"premiumRequiredDesc\"),\n              this.i18nService.t(\"premiumRequired\"),\n              this.i18nService.t(\"upgrade\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (premiumConfirmed) {\n              this.router.navigate([\"settings/subscription/premium\"]);\n            }\n            break;\n          }\n          case \"emailVerificationRequired\": {\n            const emailVerificationConfirmed = await this.platformUtilsService.showDialog(\n              this.i18nService.t(\"emailVerificationRequiredDesc\"),\n              this.i18nService.t(\"emailVerificationRequired\"),\n              this.i18nService.t(\"learnMore\"),\n              this.i18nService.t(\"cancel\")\n            );\n            if (emailVerificationConfirmed) {\n              this.platformUtilsService.launchUri(\n                \"https://bitwarden.com/help/create-bitwarden-account/\"\n              );\n            }\n            break;\n          }\n          case \"showToast\":\n            if (typeof message.text === \"string\" && typeof crypto.subtle === 'undefined') {\n              message.title=\"This browser requires HTTPS to use the web vault\";\n              message.text=\"Check the Vaultwarden wiki for details on how to enable it\";\n            }\n            this.showToast(message);\n            break;\n          case \"setFullWidth\":\n            this.setFullWidth();\n            break;\n          case \"convertAccountToKeyConnector\":\n            this.router.navigate([\"/remove-password\"]);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    this.router.events.pipe(takeUntil(this.destroy$)).subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        const modals = Array.from(document.querySelectorAll(\".modal\"));\n        for (const modal of modals) {\n          (jq(modal) as any).modal(\"hide\");\n        }\n\n        if (document.querySelector(\".swal-modal\") != null) {\n          Swal.close(undefined);\n        }\n      }\n    });\n\n    this.policyListService.addPolicies([\n      new TwoFactorAuthenticationPolicy(),\n      new MasterPasswordPolicy(),\n      new ResetPasswordPolicy(),\n      new PasswordGeneratorPolicy(),\n      new SingleOrgPolicy(),\n      new RequireSsoPolicy(),\n      new PersonalOwnershipPolicy(),\n      new DisableSendPolicy(),\n      new SendOptionsPolicy(),\n    ]);\n\n    this.setFullWidth();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private async logOut(expired: boolean, redirect = true) {\n    await this.eventUploadService.uploadEvents();\n    const userId = await this.stateService.getUserId();\n    await Promise.all([\n      this.syncService.setLastSync(new Date(0)),\n      this.cryptoService.clearKeys(),\n      this.settingsService.clear(userId),\n      this.cipherService.clear(userId),\n      this.folderService.clear(userId),\n      this.collectionService.clear(userId),\n      this.policyService.clear(userId),\n      this.passwordGenerationService.clear(),\n      this.keyConnectorService.clear(),\n    ]);\n\n    this.searchService.clearIndex();\n    this.authService.logOut(async () => {\n      if (expired) {\n        this.platformUtilsService.showToast(\n          \"warning\",\n          this.i18nService.t(\"loggedOut\"),\n          this.i18nService.t(\"loginExpired\")\n        );\n      }\n\n      await this.stateService.clean({ userId: userId });\n      Swal.close();\n      if (redirect) {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  private async recordActivity() {\n    const now = new Date().getTime();\n    if (this.lastActivity != null && now - this.lastActivity < 250) {\n      return;\n    }\n\n    this.lastActivity = now;\n    this.stateService.setLastActive(now);\n    // Idle states\n    if (this.isIdle) {\n      this.isIdle = false;\n      this.idleStateChanged();\n    }\n    if (this.idleTimer != null) {\n      window.clearTimeout(this.idleTimer);\n      this.idleTimer = null;\n    }\n    this.idleTimer = window.setTimeout(() => {\n      if (!this.isIdle) {\n        this.isIdle = true;\n        this.idleStateChanged();\n      }\n    }, IdleTimeout);\n  }\n\n  private showToast(msg: any) {\n    let message = \"\";\n\n    const options: Partial<IndividualConfig> = {};\n\n    if (typeof msg.text === \"string\") {\n      message = msg.text;\n    } else if (msg.text.length === 1) {\n      message = msg.text[0];\n    } else {\n      msg.text.forEach(\n        (t: string) =>\n          (message += \"<p>\" + this.sanitizer.sanitize(SecurityContext.HTML, t) + \"</p>\")\n      );\n      options.enableHtml = true;\n    }\n    if (msg.options != null) {\n      if (msg.options.trustedHtml === true) {\n        options.enableHtml = true;\n      }\n      if (msg.options.timeout != null && msg.options.timeout > 0) {\n        options.timeOut = msg.options.timeout;\n      }\n    }\n\n    this.toastrService.show(message, msg.title, options, \"toast-\" + msg.type);\n  }\n\n  private idleStateChanged() {\n    if (this.isIdle) {\n      this.notificationsService.disconnectFromInactivity();\n    } else {\n      this.notificationsService.reconnectFromActivity();\n    }\n  }\n\n  private async setFullWidth() {\n    const enableFullWidth = await this.stateService.getEnableFullWidth();\n    if (enableFullWidth) {\n      document.body.classList.add(\"full-width\");\n    } else {\n      document.body.classList.remove(\"full-width\");\n    }\n  }\n}\n","<router-outlet></router-outlet>\n","export class EmergencyAccessAcceptRequest {\n  token: string;\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Directive()\nexport abstract class BaseAcceptComponent implements OnInit {\n  loading = true;\n  authed = false;\n  email: string;\n  actionPromise: Promise<any>;\n\n  protected requiredParameters: string[] = [];\n  protected failedShortMessage = \"inviteAcceptFailedShort\";\n  protected failedMessage = \"inviteAcceptFailed\";\n\n  constructor(\n    protected router: Router,\n    protected platformUtilService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService\n  ) {}\n\n  abstract authedHandler(qParams: Params): Promise<void>;\n  abstract unauthedHandler(qParams: Params): Promise<void>;\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      let error = this.requiredParameters.some((e) => qParams?.[e] == null || qParams[e] === \"\");\n      let errorMessage: string = null;\n      if (!error) {\n        this.authed = await this.stateService.getIsAuthenticated();\n        this.email = qParams.email;\n\n        if (this.authed) {\n          try {\n            await this.authedHandler(qParams);\n          } catch (e) {\n            error = true;\n            errorMessage = e.message;\n          }\n        } else {\n          await this.unauthedHandler(qParams);\n        }\n      }\n\n      if (error) {\n        const message =\n          errorMessage != null\n            ? this.i18nService.t(this.failedShortMessage, errorMessage)\n            : this.i18nService.t(this.failedMessage);\n        this.platformUtilService.showToast(\"error\", null, message, { timeout: 10000 });\n        this.router.navigate([\"/\"]);\n      }\n\n      this.loading = false;\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"emergencyAccess\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ name }}\n          </p>\n          <p>{{ \"acceptEmergencyAccess\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessAcceptRequest } from \"@bitwarden/common/auth/models/request/emergency-access-accept.request\";\n\nimport { BaseAcceptComponent } from \"../app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-emergency\",\n  templateUrl: \"accept-emergency.component.html\",\n})\nexport class AcceptEmergencyComponent extends BaseAcceptComponent {\n  name: string;\n\n  protected requiredParameters: string[] = [\"id\", \"name\", \"email\", \"token\"];\n  protected failedShortMessage = \"emergencyInviteAcceptFailedShort\";\n  protected failedMessage = \"emergencyInviteAcceptFailed\";\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    private apiService: ApiService,\n    stateService: StateService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const request = new EmergencyAccessAcceptRequest();\n    request.token = qParams.token;\n    this.actionPromise = this.apiService.postEmergencyAccessAccept(qParams.id, request);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"emergencyInviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    this.name = qParams.name;\n    if (this.name != null) {\n      // Fix URL encoding of space issue with Angular\n      this.name = this.name.replace(/\\+/g, \" \");\n    }\n  }\n}\n","export class OrganizationUserAcceptRequest {\n  token: string;\n  // Used to auto-enroll in master password reset\n  resetPasswordKey: string;\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img src=\"../../images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"joinOrganization\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p class=\"text-center\">\n            {{ orgName }}\n            <strong class=\"d-block mt-2\">{{ email }}</strong>\n          </p>\n          <p>{{ \"joinOrganizationDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <a\n              routerLink=\"/login\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block\"\n            >\n              {{ \"logIn\" | i18n }}\n            </a>\n            <a\n              routerLink=\"/register\"\n              [queryParams]=\"{ email: email }\"\n              class=\"btn btn-primary btn-block ml-2 mt-0\"\n            >\n              {{ \"createAccount\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserAcceptRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\nimport { BaseAcceptComponent } from \"../app/common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-organization\",\n  templateUrl: \"accept-organization.component.html\",\n})\nexport class AcceptOrganizationComponent extends BaseAcceptComponent {\n  orgName: string;\n\n  protected requiredParameters: string[] = [\"organizationId\", \"organizationUserId\", \"token\"];\n\n  constructor(\n    router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    private cryptoService: CryptoService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService,\n    private messagingService: MessagingService\n  ) {\n    super(router, platformUtilsService, i18nService, route, stateService);\n  }\n\n  async authedHandler(qParams: Params): Promise<void> {\n    const needsReAuth = (await this.stateService.getOrganizationInvitation()) != null;\n    if (!needsReAuth) {\n      // Accepting an org invite requires authentication from a logged out state\n      this.messagingService.send(\"logout\", { redirect: false });\n      await this.prepareOrganizationInvitation(qParams);\n      return;\n    }\n\n    // User has already logged in and passed the Master Password policy check\n    this.actionPromise = this.prepareAcceptRequest(qParams).then(async (request) => {\n      await this.organizationUserService.postOrganizationUserAccept(\n        qParams.organizationId,\n        qParams.organizationUserId,\n        request\n      );\n    });\n\n    await this.stateService.setOrganizationInvitation(null);\n    await this.actionPromise;\n    this.platformUtilService.showToast(\n      \"success\",\n      this.i18nService.t(\"inviteAccepted\"),\n      this.i18nService.t(\"inviteAcceptedDesc\"),\n      { timeout: 10000 }\n    );\n\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async unauthedHandler(qParams: Params): Promise<void> {\n    await this.prepareOrganizationInvitation(qParams);\n  }\n\n  private async prepareAcceptRequest(qParams: Params): Promise<OrganizationUserAcceptRequest> {\n    const request = new OrganizationUserAcceptRequest();\n    request.token = qParams.token;\n\n    if (await this.performResetPasswordAutoEnroll(qParams)) {\n      const response = await this.organizationApiService.getKeys(qParams.organizationId);\n\n      if (response == null) {\n        throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n      }\n\n      const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n      // RSA Encrypt user's encKey.key with organization public key\n      const encKey = await this.cryptoService.getEncKey();\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Add reset password key to accept request\n      request.resetPasswordKey = encryptedKey.encryptedString;\n    }\n    return request;\n  }\n\n  private async performResetPasswordAutoEnroll(qParams: Params): Promise<boolean> {\n    let policyList: Policy[] = null;\n    try {\n      const policies = await this.policyApiService.getPoliciesByToken(\n        qParams.organizationId,\n        qParams.token,\n        qParams.email,\n        qParams.organizationUserId\n      );\n      policyList = this.policyService.mapPoliciesFromToken(policies);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    if (policyList != null) {\n      const result = this.policyService.getResetPasswordPolicyOptions(\n        policyList,\n        qParams.organizationId\n      );\n      // Return true if policy enabled and auto-enroll enabled\n      return result[1] && result[0].autoEnrollEnabled;\n    }\n\n    return false;\n  }\n\n  private async prepareOrganizationInvitation(qParams: Params): Promise<void> {\n    this.orgName = qParams.organizationName;\n    if (this.orgName != null) {\n      // Fix URL encoding of space issue with Angular\n      this.orgName = this.orgName.replace(/\\+/g, \" \");\n    }\n    await this.stateService.setOrganizationInvitation(qParams);\n  }\n}\n","export class PasswordHintRequest {\n  email: string;\n\n  constructor(email: string) {\n    this.email = email;\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { LoginService } from \"@bitwarden/common/auth/abstractions/login.service\";\nimport { PasswordHintRequest } from \"@bitwarden/common/auth/models/request/password-hint.request\";\n\n@Directive()\nexport class HintComponent implements OnInit {\n  email = \"\";\n  formPromise: Promise<any>;\n\n  protected successRoute = \"login\";\n  protected onSuccessfulSubmit: () => void;\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private loginService: LoginService\n  ) {}\n\n  ngOnInit(): void {\n    this.email = this.loginService.getEmail() ?? \"\";\n  }\n\n  async submit() {\n    if (this.email == null || this.email === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"emailRequired\")\n      );\n      return;\n    }\n    if (this.email.indexOf(\"@\") === -1) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidEmail\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"masterPassSent\"));\n      if (this.onSuccessfulSubmit != null) {\n        this.onSuccessfulSubmit();\n      } else if (this.router != null) {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { HintComponent as BaseHintComponent } from \"@bitwarden/angular/auth/components/hint.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { LoginService } from \"@bitwarden/common/auth/abstractions/login.service\";\n\n@Component({\n  selector: \"app-hint\",\n  templateUrl: \"hint.component.html\",\n})\nexport class HintComponent extends BaseHintComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService,\n    loginService: LoginService\n  ) {\n    super(router, i18nService, apiService, platformUtilsService, logService, loginService);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"passwordHint\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n            <small class=\"form-text text-muted\">{{ \"enterEmailToGetHint\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span [hidden]=\"form.loading\">{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject } from \"rxjs\";\nimport { concatMap, take, takeUntil } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/auth/abstractions/key-connector.service\";\nimport { SecretVerificationRequest } from \"@bitwarden/common/auth/models/request/secret-verification.request\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { KeySuffixOptions } from \"@bitwarden/common/enums/keySuffixOptions\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\n\n@Directive()\nexport class LockComponent implements OnInit, OnDestroy {\n  masterPassword = \"\";\n  pin = \"\";\n  showPassword = false;\n  email: string;\n  pinLock = false;\n  webVaultHostname = \"\";\n  formPromise: Promise<any>;\n  supportsBiometric: boolean;\n  biometricLock: boolean;\n  biometricText: string;\n  hideInput: boolean;\n\n  protected successRoute = \"vault\";\n  protected onSuccessfulSubmit: () => Promise<void>;\n\n  private invalidPinAttempts = 0;\n  private pinSet: [boolean, boolean];\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected messagingService: MessagingService,\n    protected cryptoService: CryptoService,\n    protected vaultTimeoutService: VaultTimeoutService,\n    protected vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected apiService: ApiService,\n    protected logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    protected ngZone: NgZone\n  ) {}\n\n  async ngOnInit() {\n    this.stateService.activeAccount$\n      .pipe(\n        concatMap(async () => {\n          await this.load();\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (this.pinLock) {\n      return await this.handlePinRequiredUnlock();\n    }\n\n    await this.handleMasterPasswordRequiredUnlock();\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  async unlockBiometric(): Promise<boolean> {\n    if (!this.biometricLock) {\n      return;\n    }\n\n    const success = (await this.cryptoService.getKey(KeySuffixOptions.Biometric)) != null;\n\n    if (success) {\n      await this.doContinue();\n    }\n\n    return success;\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    const input = document.getElementById(this.pinLock ? \"pin\" : \"masterPassword\");\n    if (this.ngZone.isStable) {\n      input.focus();\n    } else {\n      this.ngZone.onStable.pipe(take(1)).subscribe(() => input.focus());\n    }\n  }\n\n  private async handlePinRequiredUnlock() {\n    if (this.pin == null || this.pin === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"pinRequired\")\n      );\n      return;\n    }\n\n    return await this.doUnlockWithPin();\n  }\n\n  private async doUnlockWithPin() {\n    let failed = true;\n    try {\n      const kdf = await this.stateService.getKdfType();\n      const kdfConfig = await this.stateService.getKdfConfig();\n      if (this.pinSet[0]) {\n        const key = await this.cryptoService.makeKeyFromPin(\n          this.pin,\n          this.email,\n          kdf,\n          kdfConfig,\n          await this.stateService.getDecryptedPinProtected()\n        );\n        const encKey = await this.cryptoService.getEncKey(key);\n        const protectedPin = await this.stateService.getProtectedPin();\n        const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n        failed = decPin !== this.pin;\n        if (!failed) {\n          await this.setKeyAndContinue(key);\n        }\n      } else {\n        const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfConfig);\n        failed = false;\n        await this.setKeyAndContinue(key);\n      }\n    } catch {\n      failed = true;\n    }\n\n    if (failed) {\n      this.invalidPinAttempts++;\n      if (this.invalidPinAttempts >= 5) {\n        this.messagingService.send(\"logout\");\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidPin\")\n      );\n    }\n  }\n\n  private async handleMasterPasswordRequiredUnlock() {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n    await this.doUnlockWithMasterPassword();\n  }\n\n  private async doUnlockWithMasterPassword() {\n    const kdf = await this.stateService.getKdfType();\n    const kdfConfig = await this.stateService.getKdfConfig();\n\n    const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfConfig);\n    const storedKeyHash = await this.cryptoService.getKeyHash();\n\n    let passwordValid = false;\n\n    if (storedKeyHash != null) {\n      passwordValid = await this.cryptoService.compareAndUpdateKeyHash(this.masterPassword, key);\n    } else {\n      const request = new SecretVerificationRequest();\n      const serverKeyHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        key,\n        HashPurpose.ServerAuthorization\n      );\n      request.masterPasswordHash = serverKeyHash;\n      try {\n        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n        await this.formPromise;\n        passwordValid = true;\n        const localKeyHash = await this.cryptoService.hashPassword(\n          this.masterPassword,\n          key,\n          HashPurpose.LocalAuthorization\n        );\n        await this.cryptoService.setKeyHash(localKeyHash);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (!passwordValid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"invalidMasterPassword\")\n      );\n      return;\n    }\n\n    if (this.pinSet[0]) {\n      const protectedPin = await this.stateService.getProtectedPin();\n      const encKey = await this.cryptoService.getEncKey(key);\n      const decPin = await this.cryptoService.decryptToUtf8(new EncString(protectedPin), encKey);\n      const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfConfig);\n      await this.stateService.setDecryptedPinProtected(\n        await this.cryptoService.encrypt(key.key, pinKey)\n      );\n    }\n    await this.setKeyAndContinue(key);\n  }\n  private async setKeyAndContinue(key: SymmetricCryptoKey) {\n    await this.cryptoService.setKey(key);\n    await this.doContinue();\n  }\n\n  private async doContinue() {\n    await this.stateService.setEverBeenUnlocked(true);\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    this.messagingService.send(\"unlocked\");\n    if (this.onSuccessfulSubmit != null) {\n      await this.onSuccessfulSubmit();\n    } else if (this.router != null) {\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  private async load() {\n    this.pinSet = await this.vaultTimeoutSettingsService.isPinLockSet();\n    this.pinLock =\n      (this.pinSet[0] && (await this.stateService.getDecryptedPinProtected()) != null) ||\n      this.pinSet[1];\n    this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n    this.biometricLock =\n      (await this.vaultTimeoutSettingsService.isBiometricLockSet()) &&\n      ((await this.cryptoService.hasKeyStored(KeySuffixOptions.Biometric)) ||\n        !this.platformUtilsService.supportsSecureStorage());\n    this.biometricText = await this.stateService.getBiometricText();\n    this.email = await this.stateService.getEmail();\n    const usesKeyConnector = await this.keyConnectorService.getUsesKeyConnector();\n    this.hideInput = usesKeyConnector && !this.pinLock;\n\n    // Users with key connector and without biometric or pin has no MP to unlock using\n    if (usesKeyConnector && !(this.biometricLock || this.pinLock)) {\n      await this.vaultTimeoutService.logOut();\n    }\n\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n    const vaultUrl =\n      webVaultUrl === \"https://vault.bitwarden.com\" ? \"https://bitwarden.com\" : webVaultUrl;\n    this.webVaultHostname = Utils.getHostname(vaultUrl);\n  }\n}\n","import { Component, NgZone } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LockComponent as BaseLockComponent } from \"@bitwarden/angular/auth/components/lock.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeout.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/auth/abstractions/key-connector.service\";\n\nimport { RouterService } from \"../app/core\";\n\n@Component({\n  selector: \"app-lock\",\n  templateUrl: \"lock.component.html\",\n})\nexport class LockComponent extends BaseLockComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    messagingService: MessagingService,\n    cryptoService: CryptoService,\n    vaultTimeoutService: VaultTimeoutService,\n    vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    environmentService: EnvironmentService,\n    private routerService: RouterService,\n    stateService: StateService,\n    apiService: ApiService,\n    logService: LogService,\n    keyConnectorService: KeyConnectorService,\n    ngZone: NgZone\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      messagingService,\n      cryptoService,\n      vaultTimeoutService,\n      vaultTimeoutSettingsService,\n      environmentService,\n      stateService,\n      apiService,\n      logService,\n      keyConnectorService,\n      ngZone\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.onSuccessfulSubmit = async () => {\n      const previousUrl = this.routerService.getPreviousUrl();\n      if (previousUrl && previousUrl !== \"/\" && previousUrl.indexOf(\"lock\") === -1) {\n        this.successRoute = previousUrl;\n      }\n      this.router.navigateByUrl(this.successRoute);\n    };\n  }\n}\n","export enum AuthRequestType {\n  AuthenticateAndUnlock = 0,\n  Unlock = 1,\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"text-center mb-4\">\n        <i class=\"bwi bwi-lock bwi-4x text-muted\" aria-hidden=\"true\"></i>\n      </p>\n      <p class=\"lead text-center mx-4 mb-4\">{{ \"yourVaultIsLocked\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPassword\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPassword\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appAutofocus\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword()\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n            <small class=\"text-muted form-text\">\n              {{ \"loggedInAsEmailOn\" | i18n: email:webVaultHostname }}\n            </small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-unlock\" aria-hidden=\"true\"></i> {{ \"unlock\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { AuthenticationType } from \"../../enums/authentication-type\";\nimport { TokenTwoFactorRequest } from \"../request/identity-token/token-two-factor.request\";\n\nexport class PasswordLogInCredentials {\n  readonly type = AuthenticationType.Password;\n\n  constructor(\n    public email: string,\n    public masterPassword: string,\n    public captchaToken?: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class SsoLogInCredentials {\n  readonly type = AuthenticationType.Sso;\n\n  constructor(\n    public code: string,\n    public codeVerifier: string,\n    public redirectUrl: string,\n    public orgId: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n\nexport class UserApiLogInCredentials {\n  readonly type = AuthenticationType.UserApi;\n\n  constructor(public clientId: string, public clientSecret: string) {}\n}\n\nexport class PasswordlessLogInCredentials {\n  readonly type = AuthenticationType.Passwordless;\n\n  constructor(\n    public email: string,\n    public accessCode: string,\n    public authRequestId: string,\n    public decKey: SymmetricCryptoKey,\n    public localPasswordHash: string,\n    public twoFactor?: TokenTwoFactorRequest\n  ) {}\n}\n","import { AuthRequestType } from \"../../enums/auth-request-type\";\n\nexport class PasswordlessCreateAuthRequest {\n  constructor(\n    readonly email: string,\n    readonly deviceIdentifier: string,\n    readonly publicKey: string,\n    readonly type: AuthRequestType,\n    readonly accessCode: string,\n    readonly fingerprintPhrase: string\n  ) {}\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { IFrameComponent } from \"../misc/iframe_component\";\n\nexport class CaptchaIFrame extends IFrameComponent {\n  constructor(\n    win: Window,\n    webVaultUrl: string,\n    private i18nService: I18nService,\n    successCallback: (message: string) => any,\n    errorCallback: (message: string) => any,\n    infoCallback: (message: string) => any\n  ) {\n    super(\n      win,\n      webVaultUrl,\n      \"captcha-connector.html\",\n      \"hcaptcha_iframe\",\n      successCallback,\n      errorCallback,\n      (message: string) => {\n        const parsedMessage = JSON.parse(message);\n        if (typeof parsedMessage !== \"string\") {\n          this.iframe.height = parsedMessage.height.toString();\n          this.iframe.width = parsedMessage.width.toString();\n        } else {\n          infoCallback(parsedMessage);\n        }\n      }\n    );\n  }\n\n  init(siteKey: string): void {\n    super.initComponent(\n      this.createParams({ siteKey: siteKey, locale: this.i18nService.translationLocale }, 1)\n    );\n  }\n}\n","export abstract class IFrameComponent {\n  iframe: HTMLIFrameElement;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    protected webVaultUrl: string,\n    private path: string,\n    private iframeId: string,\n    public successCallback?: (message: string) => any,\n    public errorCallback?: (message: string) => any,\n    public infoCallback?: (message: string) => any\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  protected createParams(data: any, version: number) {\n    return new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      v: version.toString(),\n    });\n  }\n\n  protected initComponent(params: URLSearchParams): void {\n    this.connectorLink.href = `${this.webVaultUrl}/${this.path}?${params}`;\n    this.iframe = this.win.document.getElementById(this.iframeId) as HTMLIFrameElement;\n    this.iframe.src = this.connectorLink.href;\n\n    this.win.addEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, Input } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CaptchaIFrame } from \"@bitwarden/common/auth/captcha-iframe\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive()\nexport abstract class CaptchaProtectedComponent {\n  @Input() captchaSiteKey: string = null;\n  captchaToken: string = null;\n  captcha: CaptchaIFrame;\n\n  constructor(\n    protected environmentService: EnvironmentService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async setupCaptcha() {\n    const webVaultUrl = this.environmentService.getWebVaultUrl();\n\n    this.captcha = new CaptchaIFrame(\n      window,\n      webVaultUrl,\n      this.i18nService,\n      (token: string) => {\n        this.captchaToken = token;\n      },\n      (error: string) => {\n        this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n      },\n      (info: string) => {\n        this.platformUtilsService.showToast(\"info\", this.i18nService.t(\"info\"), info);\n      }\n    );\n  }\n\n  showCaptcha() {\n    return !Utils.isNullOrWhitespace(this.captchaSiteKey);\n  }\n\n  protected handleCaptchaRequired(response: { captchaSiteKey: string }): boolean {\n    if (Utils.isNullOrWhitespace(response.captchaSiteKey)) {\n      return false;\n    }\n\n    this.captchaSiteKey = response.captchaSiteKey;\n    this.captcha.init(response.captchaSiteKey);\n    return true;\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { AnonymousHubService } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { LoginService } from \"@bitwarden/common/auth/abstractions/login.service\";\nimport { AuthRequestType } from \"@bitwarden/common/auth/enums/auth-request-type\";\nimport { PasswordlessLogInCredentials } from \"@bitwarden/common/auth/models/domain/log-in-credentials\";\nimport { PasswordlessCreateAuthRequest } from \"@bitwarden/common/auth/models/request/passwordless-create-auth.request\";\nimport { AuthRequestResponse } from \"@bitwarden/common/auth/models/response/auth-request.response\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\n\nimport { CaptchaProtectedComponent } from \"./captcha-protected.component\";\n\n@Directive()\nexport class LoginWithDeviceComponent\n  extends CaptchaProtectedComponent\n  implements OnInit, OnDestroy\n{\n  private destroy$ = new Subject<void>();\n  email: string;\n  showResendNotification = false;\n  passwordlessRequest: PasswordlessCreateAuthRequest;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  private resendTimeout = 12000;\n  private authRequestKeyPair: [publicKey: ArrayBuffer, privateKey: ArrayBuffer];\n\n  constructor(\n    protected router: Router,\n    private cryptoService: CryptoService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private appIdService: AppIdService,\n    private passwordGenerationService: PasswordGenerationServiceAbstraction,\n    private apiService: ApiService,\n    private authService: AuthService,\n    private logService: LogService,\n    environmentService: EnvironmentService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    private anonymousHubService: AnonymousHubService,\n    private validationService: ValidationService,\n    private stateService: StateService,\n    private loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n\n    const navigation = this.router.getCurrentNavigation();\n    if (navigation) {\n      this.email = this.loginService.getEmail();\n    }\n\n    //gets signalR push notification\n    this.authService\n      .getPushNotifcationObs$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((id) => {\n        this.confirmResponse(id);\n      });\n  }\n\n  async ngOnInit() {\n    if (!this.email) {\n      this.router.navigate([\"/login\"]);\n      return;\n    }\n\n    this.startPasswordlessLogin();\n  }\n\n  async startPasswordlessLogin() {\n    this.showResendNotification = false;\n\n    try {\n      await this.buildAuthRequest();\n      const reqResponse = await this.apiService.postAuthRequest(this.passwordlessRequest);\n\n      if (reqResponse.id) {\n        this.anonymousHubService.createHubConnection(reqResponse.id);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    setTimeout(() => {\n      this.showResendNotification = true;\n    }, this.resendTimeout);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.anonymousHubService.stopHubConnection();\n  }\n\n  private async confirmResponse(requestId: string) {\n    try {\n      const response = await this.apiService.getAuthResponse(\n        requestId,\n        this.passwordlessRequest.accessCode\n      );\n\n      if (!response.requestApproved) {\n        return;\n      }\n\n      const credentials = await this.buildLoginCredntials(requestId, response);\n      const loginResponse = await this.authService.logIn(credentials);\n\n      if (loginResponse.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (loginResponse.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        await this.setRememberEmailValues();\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (error) {\n      if (error instanceof ErrorResponse) {\n        this.router.navigate([\"/login\"]);\n        this.validationService.showError(error);\n        return;\n      }\n\n      this.logService.error(error);\n    }\n  }\n\n  async setRememberEmailValues() {\n    const rememberEmail = this.loginService.getRememberEmail();\n    const rememberedEmail = this.loginService.getEmail();\n    await this.stateService.setRememberedEmail(rememberEmail ? rememberedEmail : null);\n    this.loginService.clearValues();\n  }\n\n  private async buildAuthRequest() {\n    this.authRequestKeyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n    const fingerprint = await (\n      await this.cryptoService.getFingerprint(this.email, this.authRequestKeyPair[0])\n    ).join(\"-\");\n    const deviceIdentifier = await this.appIdService.getAppId();\n    const publicKey = Utils.fromBufferToB64(this.authRequestKeyPair[0]);\n    const accessCode = await this.passwordGenerationService.generatePassword({ length: 25 });\n\n    this.passwordlessRequest = new PasswordlessCreateAuthRequest(\n      this.email,\n      deviceIdentifier,\n      publicKey,\n      AuthRequestType.AuthenticateAndUnlock,\n      accessCode,\n      fingerprint\n    );\n  }\n\n  private async buildLoginCredntials(\n    requestId: string,\n    response: AuthRequestResponse\n  ): Promise<PasswordlessLogInCredentials> {\n    const decKey = await this.cryptoService.rsaDecrypt(response.key, this.authRequestKeyPair[1]);\n    const decMasterPasswordHash = await this.cryptoService.rsaDecrypt(\n      response.masterPasswordHash,\n      this.authRequestKeyPair[1]\n    );\n    const key = new SymmetricCryptoKey(decKey);\n    const localHashedPassword = Utils.fromBufferToUtf8(decMasterPasswordHash);\n\n    return new PasswordlessLogInCredentials(\n      this.email,\n      this.passwordlessRequest.accessCode,\n      requestId,\n      key,\n      localHashedPassword\n    );\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable tailwindcss/no-custom-classname -->\n<div\n  class=\"tw-mx-auto tw-mt-5 tw-flex tw-max-w-lg tw-flex-col tw-items-center tw-justify-center tw-p-8\"\n>\n  <div>\n    <img class=\"logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"tw-mx-4 tw-mt-3 tw-mb-4 tw-text-center tw-text-xl\">\n      {{ \"loginOrCreateNewAccount\" | i18n }}\n    </p>\n\n    <div\n      class=\"tw-mt-3 tw-rounded-md tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-6\"\n    >\n      <h2 class=\"tw-mb-6 tw-text-xl tw-font-semibold\">{{ \"logInInitiated\" | i18n }}</h2>\n\n      <div class=\"tw-text-light\">\n        <p class=\"tw-mb-6\">{{ \"notificationSentDevice\" | i18n }}</p>\n\n        <p class=\"tw-mb-6\">\n          {{ \"fingerprintMatchInfo\" | i18n }}\n        </p>\n      </div>\n\n      <div class=\"tw-mb-6\">\n        <h4 class=\"tw-font-semibold\">{{ \"fingerprintPhraseHeader\" | i18n }}</h4>\n        <p>\n          <code>{{ passwordlessRequest?.fingerprintPhrase }}</code>\n        </p>\n      </div>\n\n      <div class=\"tw-my-10\" *ngIf=\"showResendNotification\">\n        <a [routerLink]=\"[]\" disabled=\"true\" (click)=\"startPasswordlessLogin()\">{{\n          \"resendNotification\" | i18n\n        }}</a>\n      </div>\n\n      <hr />\n\n      <div class=\"tw-text-light tw-mt-3\">\n        {{ \"loginWithDeviceEnabledInfo\" | i18n }}\n        <a routerLink=\"/login\">{{ \"viewAllLoginOptions\" | i18n }}</a>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { LoginWithDeviceComponent as BaseLoginWithDeviceComponent } from \"@bitwarden/angular/auth/components/login-with-device.component\";\nimport { AnonymousHubService } from \"@bitwarden/common/abstractions/anonymousHub.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { LoginService } from \"@bitwarden/common/auth/abstractions/login.service\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\n\nimport { StateService } from \"../../app/core\";\n\n@Component({\n  selector: \"app-login-with-device\",\n  templateUrl: \"login-with-device.component.html\",\n})\nexport class LoginWithDeviceComponent\n  extends BaseLoginWithDeviceComponent\n  implements OnInit, OnDestroy\n{\n  constructor(\n    router: Router,\n    cryptoService: CryptoService,\n    cryptoFunctionService: CryptoFunctionService,\n    appIdService: AppIdService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    apiService: ApiService,\n    authService: AuthService,\n    logService: LogService,\n    environmentService: EnvironmentService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    anonymousHubService: AnonymousHubService,\n    validationService: ValidationService,\n    stateService: StateService,\n    loginService: LoginService\n  ) {\n    super(\n      router,\n      cryptoService,\n      cryptoFunctionService,\n      appIdService,\n      passwordGenerationService,\n      apiService,\n      authService,\n      logService,\n      environmentService,\n      i18nService,\n      platformUtilsService,\n      anonymousHubService,\n      validationService,\n      stateService,\n      loginService\n    );\n  }\n}\n","import { Directive, NgZone, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { take } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { LoginService } from \"@bitwarden/common/auth/abstractions/login.service\";\nimport { AuthResult } from \"@bitwarden/common/auth/models/domain/auth-result\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/auth/models/domain/log-in-credentials\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\n\nimport { CaptchaProtectedComponent } from \"./captcha-protected.component\";\n\n@Directive()\nexport class LoginComponent extends CaptchaProtectedComponent implements OnInit {\n  showPassword = false;\n  formPromise: Promise<AuthResult>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n  selfHosted = false;\n  showLoginWithDevice: boolean;\n  validatedEmail = false;\n  paramEmailSet = false;\n\n  formGroup = this.formBuilder.group({\n    email: [\"\", [Validators.required, Validators.email]],\n    masterPassword: [\"\", [Validators.required, Validators.minLength(8)]],\n    rememberEmail: [false],\n  });\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"vault\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n\n  get loggedEmail() {\n    return this.formGroup.value.email;\n  }\n\n  constructor(\n    protected apiService: ApiService,\n    protected appIdService: AppIdService,\n    protected authService: AuthService,\n    protected router: Router,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    protected stateService: StateService,\n    environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationServiceAbstraction,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected ngZone: NgZone,\n    protected formBuilder: FormBuilder,\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected route: ActivatedRoute,\n    protected loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  get selfHostedDomain() {\n    return this.environmentService.hasBaseUrl() ? this.environmentService.getWebVaultUrl() : null;\n  }\n\n  async ngOnInit() {\n    this.route?.queryParams.subscribe((params) => {\n      if (params != null) {\n        const queryParamsEmail = params[\"email\"];\n        if (queryParamsEmail != null && queryParamsEmail.indexOf(\"@\") > -1) {\n          this.formGroup.get(\"email\").setValue(queryParamsEmail);\n          this.loginService.setEmail(queryParamsEmail);\n          this.paramEmailSet = true;\n        }\n      }\n    });\n    let email = this.loginService.getEmail();\n\n    if (email == null || email === \"\") {\n      email = await this.stateService.getRememberedEmail();\n    }\n\n    if (!this.paramEmailSet) {\n      this.formGroup.get(\"email\")?.setValue(email ?? \"\");\n    }\n    let rememberEmail = this.loginService.getRememberEmail();\n    if (rememberEmail == null) {\n      rememberEmail = (await this.stateService.getRememberedEmail()) != null;\n    }\n    this.formGroup.get(\"rememberEmail\")?.setValue(rememberEmail);\n  }\n\n  async submit(showToast = true) {\n    const data = this.formGroup.value;\n\n    await this.setupCaptcha();\n\n    this.formGroup.markAllAsTouched();\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return;\n    }\n\n    //desktop, browser; This should be removed once all clients use reactive forms\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return;\n    }\n\n    try {\n      const credentials = new PasswordLogInCredentials(\n        data.email,\n        data.masterPassword,\n        this.captchaToken,\n        null\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      this.setFormValues();\n      await this.loginService.saveEmailSettings();\n      if (this.handleCaptchaRequired(response)) {\n        return;\n      } else if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute]);\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n    if (this.ngZone.isStable) {\n      document.getElementById(\"masterPassword\").focus();\n    } else {\n      this.ngZone.onStable\n        .pipe(take(1))\n        .subscribe(() => document.getElementById(\"masterPassword\").focus());\n    }\n  }\n\n  async startPasswordlessLogin() {\n    this.formGroup.get(\"masterPassword\")?.clearValidators();\n    this.formGroup.get(\"masterPassword\")?.updateValueAndValidity();\n\n    if (!this.formGroup.valid) {\n      return;\n    }\n\n    this.setFormValues();\n    this.router.navigate([\"/login-with-device\"]);\n  }\n\n  async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n    await this.saveEmailSettings();\n    // Generate necessary sso params\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n    const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n    const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, \"sha256\");\n    const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n    // Save sso params\n    await this.stateService.setSsoState(state);\n    await this.stateService.setSsoCodeVerifier(ssoCodeVerifier);\n\n    // Build URI\n    const webUrl = this.environmentService.getWebVaultUrl();\n\n    // Launch browser\n    this.platformUtilsService.launchUri(\n      webUrl +\n        \"/#/sso?clientId=\" +\n        clientId +\n        \"&redirectUri=\" +\n        encodeURIComponent(ssoRedirectUri) +\n        \"&state=\" +\n        state +\n        \"&codeChallenge=\" +\n        codeChallenge +\n        \"&email=\" +\n        encodeURIComponent(this.formGroup.controls.email.value)\n    );\n  }\n\n  async validateEmail() {\n    this.formGroup.controls.email.markAsTouched();\n    const emailInvalid = this.formGroup.get(\"email\").invalid;\n    if (!emailInvalid) {\n      this.toggleValidateEmail(true);\n      await this.getLoginWithDevice(this.loggedEmail);\n    }\n  }\n\n  toggleValidateEmail(value: boolean) {\n    this.validatedEmail = value;\n    if (!value) {\n      // Reset master password only when going from validated to not validated (not you btn press)\n      // so that autofill can work properly\n      this.formGroup.controls.masterPassword.reset();\n    }\n  }\n\n  setFormValues() {\n    this.loginService.setEmail(this.formGroup.value.email);\n    this.loginService.setRememberEmail(this.formGroup.value.rememberEmail);\n  }\n\n  async saveEmailSettings() {\n    this.setFormValues();\n    await this.loginService.saveEmailSettings();\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  async getLoginWithDevice(email: string) {\n    try {\n      const deviceIdentifier = await this.appIdService.getAppId();\n      const res = await this.apiService.getKnownDevice(email, deviceIdentifier);\n      //ensure the application is not self-hosted\n      this.showLoginWithDevice = res && !this.selfHosted;\n    } catch (e) {\n      this.showLoginWithDevice = false;\n    }\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div\n    class=\"tw-mx-auto tw-mt-5 tw-flex tw-max-w-lg tw-flex-col tw-items-center tw-justify-center tw-p-8\"\n  >\n    <div>\n      <img class=\"logo logo-themed\" alt=\"Bitwarden\" />\n      <p class=\"tw-mx-4 tw-mt-3 tw-mb-4 tw-text-center tw-text-xl\">\n        {{ \"loginOrCreateNewAccount\" | i18n }}\n      </p>\n      <div\n        class=\"tw-mt-3 tw-rounded-md tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-6\"\n      >\n        <ng-container *ngIf=\"!validatedEmail\">\n          <div class=\"tw-mb-3\">\n            <bit-form-field>\n              <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n              <input\n                id=\"login_input_email\"\n                bitInput\n                type=\"email\"\n                formControlName=\"email\"\n                appAutofocus\n                (keyup.enter)=\"validateEmail()\"\n              />\n            </bit-form-field>\n          </div>\n\n          <div class=\"tw-mb-3 tw-flex tw-items-start\">\n            <bit-form-control class=\"tw-mb-0\">\n              <input type=\"checkbox\" bitCheckbox formControlName=\"rememberEmail\" />\n              <bit-label>{{ \"rememberEmail\" | i18n }}</bit-label>\n            </bit-form-control>\n          </div>\n\n          <div class=\"tw-mb-3\">\n            <button\n              bitButton\n              type=\"button\"\n              buttonType=\"primary\"\n              class=\"tw-w-full\"\n              [disabled]=\"form.loading\"\n              (click)=\"validateEmail()\"\n            >\n              <span> {{ \"continue\" | i18n }} </span>\n            </button>\n          </div>\n\n          <hr />\n\n          <p class=\"tw-m-0 tw-text-sm\">\n            {{ \"newAroundHere\" | i18n }}\n            <!--mousedown event is used over click because it prevents the validation from firing  -->\n            <a routerLink=\"/register\" (mousedown)=\"goToRegister()\">{{ \"createAccount\" | i18n }}</a>\n          </p>\n        </ng-container>\n\n        <div [ngClass]=\"{ 'tw-hidden': !validatedEmail }\">\n          <div class=\"tw-mb-6 tw-h-28\">\n            <bit-form-field class=\"!tw-mb-1\">\n              <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n              <input\n                id=\"login_input_master-password\"\n                type=\"password\"\n                bitInput\n                formControlName=\"masterPassword\"\n                appAutofocus\n              />\n              <button type=\"button\" bitSuffix bitIconButton bitPasswordInputToggle></button>\n            </bit-form-field>\n            <a\n              class=\"-tw-mt-2\"\n              routerLink=\"/hint\"\n              (mousedown)=\"goToHint()\"\n              (click)=\"setFormValues()\"\n              >{{ \"getMasterPasswordHint\" | i18n }}</a\n            >\n          </div>\n\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n\n          <div class=\"tw-mb-3 tw-flex tw-space-x-4\">\n            <button\n              bitButton\n              buttonType=\"primary\"\n              type=\"submit\"\n              [block]=\"true\"\n              [loading]=\"form.loading\"\n            >\n              <span> {{ \"loginWithMasterPassword\" | i18n }} </span>\n            </button>\n          </div>\n\n          <div class=\"tw-mb-3\" *ngIf=\"showLoginWithDevice && showPasswordless\">\n            <button\n              bitButton\n              type=\"button\"\n              [block]=\"true\"\n              buttonType=\"secondary\"\n              (click)=\"startPasswordlessLogin()\"\n            >\n              <span> <i class=\"bwi bwi-mobile\"></i> {{ \"loginWithDevice\" | i18n }} </span>\n            </button>\n          </div>\n\n          <div class=\"tw-mb-3\">\n            <a\n              routerLink=\"/sso\"\n              [queryParams]=\"{ email: formGroup.value.email }\"\n              (click)=\"saveEmailSettings()\"\n              bitButton\n              buttonType=\"secondary\"\n              class=\"tw-w-full\"\n            >\n              <i class=\"bwi bwi-provider tw-mr-2\"></i>\n              {{ \"enterpriseSingleSignOn\" | i18n }}\n            </a>\n          </div>\n\n          <hr />\n\n          <div class=\"tw-m-0 tw-text-sm\">\n            <p class=\"tw-mb-1\">{{ \"loggingInAs\" | i18n }} {{ loggedEmail }}</p>\n            <a [routerLink]=\"[]\" (click)=\"toggleValidateEmail(false)\">{{ \"notYou\" | i18n }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { LoginComponent as BaseLoginComponent } from \"@bitwarden/angular/auth/components/login.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { InternalPolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { LoginService } from \"@bitwarden/common/auth/abstractions/login.service\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\n\nimport { RouterService, StateService } from \"../../app/core\";\nimport { flagEnabled } from \"../../utils/flags\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"login.component.html\",\n})\nexport class LoginComponent extends BaseLoginComponent implements OnInit, OnDestroy {\n  showResetPasswordAutoEnrollWarning = false;\n  enforcedPasswordPolicyOptions: MasterPasswordPolicyOptions;\n  policies: ListResponse<PolicyResponse>;\n  showPasswordless = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    apiService: ApiService,\n    appIdService: AppIdService,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    cryptoFunctionService: CryptoFunctionService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: InternalPolicyService,\n    logService: LogService,\n    ngZone: NgZone,\n    protected stateService: StateService,\n    private messagingService: MessagingService,\n    private routerService: RouterService,\n    formBuilder: FormBuilder,\n    formValidationErrorService: FormValidationErrorsService,\n    loginService: LoginService\n  ) {\n    super(\n      apiService,\n      appIdService,\n      authService,\n      router,\n      platformUtilsService,\n      i18nService,\n      stateService,\n      environmentService,\n      passwordGenerationService,\n      cryptoFunctionService,\n      logService,\n      ngZone,\n      formBuilder,\n      formValidationErrorService,\n      route,\n      loginService\n    );\n    this.onSuccessfulLogin = async () => {\n      this.messagingService.send(\"setFullWidth\");\n    };\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    this.showPasswordless = flagEnabled(\"showPasswordless\");\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.premium != null) {\n        this.routerService.setPreviousUrl(\"/settings/premium\");\n      } else if (qParams.org != null) {\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      if (qParams.sponsorshipToken != null) {\n        const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n          queryParams: { token: qParams.sponsorshipToken },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n      await super.ngOnInit();\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      let policyList: Policy[] = null;\n      try {\n        this.policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        policyList = this.policyService.mapPoliciesFromToken(this.policies);\n      } catch (e) {\n        this.logService.error(e);\n      }\n\n      if (policyList != null) {\n        const resetPasswordPolicy = this.policyService.getResetPasswordPolicyOptions(\n          policyList,\n          invite.organizationId\n        );\n        // Set to true if policy enabled and auto-enroll enabled\n        this.showResetPasswordAutoEnrollWarning =\n          resetPasswordPolicy[1] && resetPasswordPolicy[0].autoEnrollEnabled;\n\n        this.policyService\n          .masterPasswordPolicyOptions$(policyList)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe((enforcedPasswordPolicyOptions) => {\n            this.enforcedPasswordPolicyOptions = enforcedPasswordPolicyOptions;\n          });\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async goAfterLogIn() {\n    const masterPassword = this.formGroup.value.masterPassword;\n\n    // Check master password against policy\n    if (this.enforcedPasswordPolicyOptions != null) {\n      const strengthResult = this.passwordGenerationService.passwordStrength(\n        masterPassword,\n        this.getPasswordStrengthUserInput()\n      );\n      const masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n\n      // If invalid, save policies and require update\n      if (\n        !this.policyService.evaluateMasterPassword(\n          masterPasswordScore,\n          masterPassword,\n          this.enforcedPasswordPolicyOptions\n        )\n      ) {\n        const policiesData: { [id: string]: PolicyData } = {};\n        this.policies.data.map((p) => (policiesData[p.id] = new PolicyData(p)));\n        await this.policyService.replace(policiesData);\n        this.router.navigate([\"update-password\"]);\n        return;\n      }\n    }\n\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.loginService.clearValues();\n      this.router.navigate([this.successRoute]);\n    }\n  }\n\n  goToHint() {\n    this.setFormValues();\n    this.router.navigateByUrl(\"/hint\");\n  }\n\n  goToRegister() {\n    const email = this.formGroup.value.email;\n\n    if (email) {\n      this.router.navigate([\"/register\"], { queryParams: { email: email } });\n      return;\n    }\n\n    this.router.navigate([\"/register\"]);\n  }\n\n  async submit() {\n    const rememberEmail = this.formGroup.value.rememberEmail;\n\n    if (!rememberEmail) {\n      await this.stateService.setRememberedEmail(null);\n    }\n    await super.submit(false);\n  }\n\n  private getPasswordStrengthUserInput() {\n    const email = this.formGroup.value.email;\n    let userInput: string[] = [];\n    const atPosition = email.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    return userInput;\n  }\n}\n","export class DeleteRecoverRequest {\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { DeleteRecoverRequest } from \"@bitwarden/common/models/request/delete-recover.request\";\n\n@Component({\n  selector: \"app-recover-delete\",\n  templateUrl: \"recover-delete.component.html\",\n})\nexport class RecoverDeleteComponent {\n  email: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new DeleteRecoverRequest();\n      request.email = this.email.trim().toLowerCase();\n      this.formPromise = this.apiService.postAccountRecoverDelete(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deleteRecoverEmailSent\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>{{ \"deleteRecoverDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorRecoveryRequest extends SecretVerificationRequest {\n  recoveryCode: string;\n  email: string;\n}\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { TwoFactorRecoveryRequest } from \"@bitwarden/common/auth/models/request/two-factor-recovery.request\";\n\n@Component({\n  selector: \"app-recover-two-factor\",\n  templateUrl: \"recover-two-factor.component.html\",\n})\nexport class RecoverTwoFactorComponent {\n  email: string;\n  masterPassword: string;\n  recoveryCode: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private authService: AuthService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const request = new TwoFactorRecoveryRequest();\n      request.recoveryCode = this.recoveryCode.replace(/\\s/g, \"\").toLowerCase();\n      request.email = this.email.trim().toLowerCase();\n      const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n      this.formPromise = this.apiService.postTwoFactorRecover(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"twoStepRecoverDisabled\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"recoverAccountTwoStep\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <p>\n            {{ \"recoverAccountTwoStepDesc\" | i18n }}\n            <a\n              href=\"https://bitwarden.com/help/lost-two-step-device/\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              >{{ \"learnMore\" | i18n }}</a\n            >\n          </p>\n          <div class=\"form-group\">\n            <label for=\"email\">{{ \"emailAddress\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n              appAutofocus\n              inputmode=\"email\"\n              appInputVerbatim=\"false\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <input\n              id=\"masterPassword\"\n              type=\"password\"\n              name=\"MasterPassword\"\n              class=\"form-control\"\n              [(ngModel)]=\"masterPassword\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"recoveryCode\">{{ \"recoveryCodeTitle\" | i18n }}</label>\n            <input\n              id=\"recoveryCode\"\n              class=\"text-monospace form-control\"\n              type=\"text\"\n              name=\"RecoveryCode\"\n              [(ngModel)]=\"recoveryCode\"\n              required\n              appInputVerbatim\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"submit\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Directive, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/auth/abstractions/key-connector.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\n@Directive()\nexport class RemovePasswordComponent implements OnInit {\n  actionPromise: Promise<void | boolean>;\n  continuing = false;\n  leaving = false;\n\n  loading = true;\n  organization: Organization;\n  email: string;\n\n  constructor(\n    private router: Router,\n    private stateService: StateService,\n    private syncService: SyncService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private keyConnectorService: KeyConnectorService,\n    private organizationApiService: OrganizationApiServiceAbstraction\n  ) {}\n\n  async ngOnInit() {\n    this.organization = await this.keyConnectorService.getManagingOrganization();\n    this.email = await this.stateService.getEmail();\n    await this.syncService.fullSync(false);\n    this.loading = false;\n  }\n\n  async convert() {\n    this.continuing = true;\n    this.actionPromise = this.keyConnectorService.migrateUser();\n\n    try {\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedMasterPassword\")\n      );\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n    }\n  }\n\n  async leave() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      this.organization.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.leaving = true;\n      this.actionPromise = this.organizationApiService.leave(this.organization.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n      await this.keyConnectorService.removeConvertAccountRequired();\n      this.router.navigate([\"\"]);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e);\n    }\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"removeMasterPassword\" | i18n }}</p>\n      <hr />\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <p>{{ \"convertOrganizationEncryptionDesc\" | i18n: organization.name }}</p>\n\n          <button\n            type=\"button\"\n            class=\"btn btn-primary btn-block\"\n            (click)=\"convert()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"continuing\"\n            ></i>\n            {{ \"removeMasterPassword\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary btn-block\"\n            (click)=\"leave()\"\n            [disabled]=\"actionPromise\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n              *ngIf=\"leaving\"\n            ></i>\n            {{ \"leaveOrganization\" | i18n }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { RemovePasswordComponent as BaseRemovePasswordComponent } from \"@bitwarden/angular/auth/components/remove-password.component\";\n\n@Component({\n  selector: \"app-remove-password\",\n  templateUrl: \"remove-password.component.html\",\n})\nexport class RemovePasswordComponent extends BaseRemovePasswordComponent {}\n","import { SecretVerificationRequest } from \"../../../auth/models/request/secret-verification.request\";\n\nexport class OrganizationUserResetPasswordEnrollmentRequest extends SecretVerificationRequest {\n  resetPasswordKey: string;\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { KeysRequest } from \"../../../models/request/keys.request\";\n\nexport class SetPasswordRequest {\n  masterPasswordHash: string;\n  key: string;\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  kdf: KdfType;\n  kdfIterations: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n  orgIdentifier: string;\n\n  constructor(\n    masterPasswordHash: string,\n    key: string,\n    masterPasswordHint: string,\n    orgIdentifier: string,\n    keys: KeysRequest,\n    kdf: KdfType,\n    kdfIterations: number,\n    kdfMemory?: number,\n    kdfParallelism?: number\n  ) {\n    this.masterPasswordHash = masterPasswordHash;\n    this.key = key;\n    this.masterPasswordHint = masterPasswordHint;\n    this.kdf = kdf;\n    this.kdfIterations = kdfIterations;\n    this.kdfMemory = kdfMemory;\n    this.kdfParallelism = kdfParallelism;\n    this.orgIdentifier = orgIdentifier;\n    this.keys = keys;\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfConfig } from \"@bitwarden/common/auth/models/domain/kdf-config\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\n\nimport { PasswordColorText } from \"../../shared/components/password-strength/password-strength.component\";\n\n@Directive()\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  masterPassword: string;\n  masterPasswordRetype: string;\n  formPromise: Promise<any>;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  passwordStrengthResult: any;\n  color: string;\n  text: string;\n  leakedPassword: boolean;\n  minimumLength = Utils.minimumPasswordLength;\n\n  protected email: string;\n  protected kdf: KdfType;\n  protected kdfConfig: KdfConfig;\n\n  protected destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected messagingService: MessagingService,\n    protected passwordGenerationService: PasswordGenerationServiceAbstraction,\n    protected platformUtilsService: PlatformUtilsService,\n    protected policyService: PolicyService,\n    protected stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.email = await this.stateService.getEmail();\n    this.policyService\n      .masterPasswordPolicyOptions$()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (enforcedPasswordPolicyOptions) =>\n          (this.enforcedPolicyOptions ??= enforcedPasswordPolicyOptions)\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    const email = await this.stateService.getEmail();\n    if (this.kdf == null) {\n      this.kdf = await this.stateService.getKdfType();\n    }\n    if (this.kdfConfig == null) {\n      this.kdfConfig = await this.stateService.getKdfConfig();\n    }\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      email.trim().toLowerCase(),\n      this.kdf,\n      this.kdfConfig\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    let encKey: [SymmetricCryptoKey, EncString] = null;\n    const existingEncKey = await this.cryptoService.getEncKey();\n    if (existingEncKey == null) {\n      encKey = await this.cryptoService.makeEncKey(key);\n    } else {\n      encKey = await this.cryptoService.remakeEncKey(key);\n    }\n\n    await this.performSubmitActions(masterPasswordHash, key, encKey);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    // Override in sub-class\n    // Can be used for additional validation and/or other processes the should occur before changing passwords\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    // Override in sub-class\n  }\n\n  async strongPassword(): Promise<boolean> {\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n    if (this.masterPassword.length < this.minimumLength) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordMinimumlength\", this.minimumLength)\n      );\n      return false;\n    }\n    if (this.masterPassword !== this.masterPasswordRetype) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      );\n      return false;\n    }\n\n    const strengthResult = this.passwordStrengthResult;\n\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        strengthResult.score,\n        this.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return false;\n    }\n\n    const weakPassword = strengthResult != null && strengthResult.score < 3;\n\n    if (weakPassword && this.leakedPassword) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakAndBreachedMasterPasswordDesc\"),\n        this.i18nService.t(\"weakAndExposedMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return false;\n      }\n    } else {\n      if (weakPassword) {\n        const result = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"weakMasterPasswordDesc\"),\n          this.i18nService.t(\"weakMasterPassword\"),\n          this.i18nService.t(\"yes\"),\n          this.i18nService.t(\"no\"),\n          \"warning\"\n        );\n        if (!result) {\n          return false;\n        }\n      }\n      if (this.leakedPassword) {\n        const result = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"exposedMasterPasswordDesc\"),\n          this.i18nService.t(\"exposedMasterPassword\"),\n          this.i18nService.t(\"yes\"),\n          this.i18nService.t(\"no\"),\n          \"warning\"\n        );\n        if (!result) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  async logOut() {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"logOutConfirmation\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"logOut\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (confirmed) {\n      this.messagingService.send(\"logout\");\n    }\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SetPasswordRequest } from \"@bitwarden/common/auth/models/request/set-password.request\";\nimport { HashPurpose } from \"@bitwarden/common/enums/hashPurpose\";\nimport { DEFAULT_KDF_TYPE, DEFAULT_KDF_CONFIG } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"../auth/components/change-password.component\";\n\n@Directive()\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n  syncLoading = true;\n  showPassword = false;\n  hint = \"\";\n  identifier: string = null;\n  orgId: string;\n  resetPasswordAutoEnroll = false;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n  successRoute = \"vault\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    platformUtilsService: PlatformUtilsService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    protected router: Router,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    stateService: StateService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    this.syncLoading = false;\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    // Automatic Enrollment Detection\n    if (this.identifier != null) {\n      try {\n        const response = await this.organizationApiService.getAutoEnrollStatus(this.identifier);\n        this.orgId = response.id;\n        this.resetPasswordAutoEnroll = response.resetPasswordEnabled;\n        this.enforcedPolicyOptions =\n          await this.policyApiService.getMasterPasswordPoliciesForInvitedUsers(this.orgId);\n      } catch {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    }\n\n    super.ngOnInit();\n  }\n\n  async setupSubmitActions() {\n    this.kdf = DEFAULT_KDF_TYPE;\n    this.kdfConfig = DEFAULT_KDF_CONFIG;\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new SetPasswordRequest(\n      masterPasswordHash,\n      encKey[1].encryptedString,\n      this.hint,\n      this.identifier,\n      new KeysRequest(keys[0], keys[1].encryptedString),\n      this.kdf,\n      this.kdfConfig.iterations,\n      this.kdfConfig.memory,\n      this.kdfConfig.parallelism\n    );\n    try {\n      if (this.resetPasswordAutoEnroll) {\n        this.formPromise = this.apiService\n          .setPassword(request)\n          .then(async () => {\n            await this.onSetPasswordSuccess(key, encKey, keys);\n            return this.organizationApiService.getKeys(this.orgId);\n          })\n          .then(async (response) => {\n            if (response == null) {\n              throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n            }\n            const userId = await this.stateService.getUserId();\n            const publicKey = Utils.fromB64ToArray(response.publicKey);\n\n            // RSA Encrypt user's encKey.key with organization public key\n            const userEncKey = await this.cryptoService.getEncKey();\n            const encryptedKey = await this.cryptoService.rsaEncrypt(\n              userEncKey.key,\n              publicKey.buffer\n            );\n\n            const resetRequest = new OrganizationUserResetPasswordEnrollmentRequest();\n            resetRequest.masterPasswordHash = masterPasswordHash;\n            resetRequest.resetPasswordKey = encryptedKey.encryptedString;\n\n            return this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n              this.orgId,\n              userId,\n              resetRequest\n            );\n          });\n      } else {\n        this.formPromise = this.apiService.setPassword(request).then(async () => {\n          await this.onSetPasswordSuccess(key, encKey, keys);\n        });\n      }\n\n      await this.formPromise;\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.router.navigate([this.successRoute]);\n      }\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  private async onSetPasswordSuccess(\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString],\n    keys: [string, EncString]\n  ) {\n    await this.stateService.setKdfType(this.kdf);\n    await this.stateService.setKdfConfig(this.kdfConfig);\n    await this.cryptoService.setKey(key);\n    await this.cryptoService.setEncKey(encKey[1].encryptedString);\n    await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n    const localKeyHash = await this.cryptoService.hashPassword(\n      this.masterPassword,\n      key,\n      HashPurpose.LocalAuthorization\n    );\n    await this.cryptoService.setKeyHash(localKeyHash);\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"setMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!syncLoading\">\n          <app-callout type=\"info\">{{ \"ssoCompleteRegistration\" | i18n }}</app-callout>\n          <app-callout\n            type=\"warning\"\n            title=\"{{ 'resetPasswordPolicyAutoEnroll' | i18n }}\"\n            *ngIf=\"resetPasswordAutoEnroll\"\n          >\n            {{ \"resetPasswordAutoEnrollInviteWarning\" | i18n }}\n          </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n            <small class=\"form-text text-muted\">{{ \"masterPassDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SetPasswordComponent as BaseSetPasswordComponent } from \"@bitwarden/angular/components/set-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-set-password\",\n  templateUrl: \"set-password.component.html\",\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    platformUtilsService: PlatformUtilsService,\n    policyApiService: PolicyApiServiceAbstraction,\n    policyService: PolicyService,\n    router: Router,\n    syncService: SyncService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    organizationApiService: OrganizationApiServiceAbstraction,\n    organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyApiService,\n      policyService,\n      router,\n      apiService,\n      syncService,\n      route,\n      stateService,\n      organizationApiService,\n      organizationUserService\n    );\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { Cipher } from \"@bitwarden/common/vault/models/domain/cipher\";\nimport { AttachmentView } from \"@bitwarden/common/vault/models/view/attachment.view\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Output() onUploadedAttachment = new EventEmitter();\n  @Output() onDeletedAttachment = new EventEmitter();\n  @Output() onReuploadedAttachment = new EventEmitter();\n\n  cipher: CipherView;\n  cipherDomain: Cipher;\n  hasUpdatedKey: boolean;\n  canAccessAttachments: boolean;\n  formPromise: Promise<any>;\n  deletePromises: { [id: string]: Promise<any> } = {};\n  reuploadPromises: { [id: string]: Promise<any> } = {};\n  emergencyAccessId?: string = null;\n  protected componentName = \"\";\n\n  constructor(\n    protected cipherService: CipherService,\n    protected i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected win: Window,\n    protected logService: LogService,\n    protected stateService: StateService,\n    protected fileDownloadService: FileDownloadService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit() {\n    if (!this.hasUpdatedKey) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"updateKey\")\n      );\n      return;\n    }\n\n    const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n    const files = fileEl.files;\n    if (files == null || files.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectFile\")\n      );\n      return;\n    }\n\n    if (files[0].size > 524288000) {\n      // 500 MB\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"maxFileSize\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.saveCipherAttachment(files[0]);\n      this.cipherDomain = await this.formPromise;\n      this.cipher = await this.cipherDomain.decrypt();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"attachmentSaved\"));\n      this.onUploadedAttachment.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    // reset file input\n    // ref: https://stackoverflow.com/a/20552042\n    fileEl.type = \"\";\n    fileEl.type = \"file\";\n    fileEl.value = \"\";\n  }\n\n  async delete(attachment: AttachmentView) {\n    if (this.deletePromises[attachment.id] != null) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteAttachmentConfirmation\"),\n      this.i18nService.t(\"deleteAttachment\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n      await this.deletePromises[attachment.id];\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedAttachment\"));\n      const i = this.cipher.attachments.indexOf(attachment);\n      if (i > -1) {\n        this.cipher.attachments.splice(i, 1);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.deletePromises[attachment.id] = null;\n    this.onDeletedAttachment.emit();\n  }\n\n  async download(attachment: AttachmentView) {\n    const a = attachment as any;\n    if (a.downloading) {\n      return;\n    }\n\n    if (!this.canAccessAttachments) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"premiumRequiredDesc\")\n      );\n      return;\n    }\n\n    let url: string;\n    try {\n      const attachmentDownloadResponse = await this.apiService.getAttachmentData(\n        this.cipher.id,\n        attachment.id,\n        this.emergencyAccessId\n      );\n      url = attachmentDownloadResponse.url;\n    } catch (e) {\n      if (e instanceof ErrorResponse && (e as ErrorResponse).statusCode === 404) {\n        url = attachment.url;\n      } else if (e instanceof ErrorResponse) {\n        throw new Error((e as ErrorResponse).getSingleMessage());\n      } else {\n        throw e;\n      }\n    }\n\n    a.downloading = true;\n    const response = await fetch(new Request(url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      a.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const key =\n        attachment.key != null\n          ? attachment.key\n          : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n      this.fileDownloadService.download({\n        fileName: attachment.fileName,\n        blobData: decBuf,\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    a.downloading = false;\n  }\n\n  protected async init() {\n    this.cipherDomain = await this.loadCipher();\n    this.cipher = await this.cipherDomain.decrypt();\n\n    this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n    if (!this.canAccessAttachments) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"premiumRequiredDesc\"),\n        this.i18nService.t(\"premiumRequired\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\")\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\"https://vault.bitwarden.com/#/?premium=purchase\");\n      }\n    } else if (!this.hasUpdatedKey) {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateKey\"),\n        this.i18nService.t(\"featureUnavailable\"),\n        this.i18nService.t(\"learnMore\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (confirmed) {\n        this.platformUtilsService.launchUri(\n          \"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        );\n      }\n    }\n  }\n\n  protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n    const a = attachment as any;\n    if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n      return;\n    }\n\n    try {\n      this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n        // 1. Download\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: \"no-store\" }));\n        if (response.status !== 200) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n          a.downloading = false;\n          return;\n        }\n\n        try {\n          // 2. Resave\n          const encBuf = await EncArrayBuffer.fromResponse(response);\n          const key =\n            attachment.key != null\n              ? attachment.key\n              : await this.cryptoService.getOrgKey(this.cipher.organizationId);\n          const decBuf = await this.cryptoService.decryptFromBytes(encBuf, key);\n          this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n            this.cipherDomain,\n            attachment.fileName,\n            decBuf,\n            admin\n          );\n          this.cipher = await this.cipherDomain.decrypt();\n\n          // 3. Delete old\n          this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n          await this.deletePromises[attachment.id];\n          const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n          if (foundAttachment.length > 0) {\n            const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n            if (i > -1) {\n              this.cipher.attachments.splice(i, 1);\n            }\n          }\n\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"attachmentSaved\")\n          );\n          this.onReuploadedAttachment.emit();\n        } catch (e) {\n          this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n        }\n\n        a.downloading = false;\n      });\n      await this.reuploadPromises[attachment.id];\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    // TODO: This should be removed but is needed since we re-use the same template\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"attachmentsTitle\">\n          {{ \"attachments\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n          <tbody>\n            <tr *ngFor=\"let a of cipher.attachments\">\n              <td class=\"table-list-icon\">\n                <i\n                  class=\"bwi bwi-fw bwi-lg bwi-file\"\n                  *ngIf=\"!$any(a).downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n                <i\n                  class=\"bwi bwi-spinner bwi-lg bwi-fw bwi-spin\"\n                  *ngIf=\"$any(a).downloading\"\n                  aria-hidden=\"true\"\n                ></i>\n              </td>\n              <td class=\"wrap\">\n                <div class=\"d-flex\">\n                  <a href=\"#\" appStopClick (click)=\"download(a)\">{{ a.fileName }}</a>\n                  <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                    <a\n                      href=\"https://bitwarden.com/help/attachments/#fixing-old-attachments\"\n                      target=\"_blank\"\n                      rel=\"noopener\"\n                    >\n                      <i\n                        class=\"bwi bwi-exclamation-triangle text-warning\"\n                        title=\"{{ 'attachmentFixDesc' | i18n }}\"\n                        aria-hidden=\"true\"\n                      ></i>\n                      <span class=\"sr-only\">{{ \"attachmentFixDesc\" | i18n }}</span></a\n                    >\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                      (click)=\"reupload(a)\"\n                      #reuploadBtn\n                      [appApiAction]=\"reuploadPromises[a.id]\"\n                      [disabled]=\"$any(reuploadBtn).loading\"\n                    >\n                      {{ \"fix\" | i18n }}\n                    </button>\n                  </div>\n                </div>\n                <small>{{ a.sizeName }}</small>\n              </td>\n              <td class=\"table-list-options\" *ngIf=\"!viewOnly\">\n                <button\n                  class=\"btn btn-outline-danger\"\n                  type=\"button\"\n                  appStopClick\n                  appA11yTitle=\"{{ 'delete' | i18n }}\"\n                  (click)=\"delete(a)\"\n                  #deleteBtn\n                  [appApiAction]=\"deletePromises[a.id]\"\n                  [disabled]=\"$any(deleteBtn).loading\"\n                >\n                  <i\n                    class=\"bwi bwi-trash bwi-lg bwi-fw\"\n                    [hidden]=\"$any(deleteBtn).loading\"\n                    aria-hidden=\"true\"\n                  ></i>\n                  <i\n                    class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n                    [hidden]=\"!$any(deleteBtn).loading\"\n                    title=\"{{ 'loading' | i18n }}\"\n                    aria-hidden=\"true\"\n                  ></i>\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <div *ngIf=\"!viewOnly\">\n          <h3>{{ \"newAttachment\" | i18n }}</h3>\n          <label for=\"file\" class=\"sr-only\">{{ \"file\" | i18n }}</label>\n          <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n          <small class=\"form-text text-muted\">{{ \"maxFileSize\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"form.loading\"\n          *ngIf=\"!viewOnly\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/vault/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { AttachmentView } from \"@bitwarden/common/vault/models/view/attachment.view\";\n\n@Component({\n  selector: \"emergency-access-attachments\",\n  templateUrl: \"../../../app/vault/individual-vault/attachments.component.html\",\n})\nexport class EmergencyAccessAttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = true;\n  canAccessAttachments = true;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async init() {\n    // Do nothing since cipher is already decoded\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return false;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password/\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/vault/abstractions/folder/folder.service.abstraction\";\nimport { PasswordRepromptService } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { Cipher } from \"@bitwarden/common/vault/models/domain/cipher\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"../../../app/vault/individual-vault/add-edit.component\";\n\n@Component({\n  selector: \"app-org-vault-add-edit\",\n  templateUrl: \"../../../app/vault/individual-vault/add-edit.component.html\",\n})\nexport class EmergencyAddEditComponent extends BaseAddEditComponent {\n  originalCipher: Cipher = null;\n  viewOnly = true;\n  protected override componentName = \"app-org-vault-add-edit\";\n\n  constructor(\n    cipherService: CipherService,\n    folderService: FolderService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    auditService: AuditService,\n    stateService: StateService,\n    collectionService: CollectionService,\n    totpService: TotpService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    messagingService: MessagingService,\n    eventCollectionService: EventCollectionService,\n    policyService: PolicyService,\n    passwordRepromptService: PasswordRepromptService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      cipherService,\n      folderService,\n      i18nService,\n      platformUtilsService,\n      auditService,\n      stateService,\n      collectionService,\n      totpService,\n      passwordGenerationService,\n      messagingService,\n      eventCollectionService,\n      policyService,\n      organizationService,\n      logService,\n      passwordRepromptService\n    );\n  }\n\n  async load() {\n    this.title = this.i18nService.t(\"viewItem\");\n  }\n\n  protected async loadCipher() {\n    return Promise.resolve(this.originalCipher);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"vault\" | i18n }}</h1>\n</div>\n<div class=\"mt-4\">\n  <ng-container *ngIf=\"ciphers.length\">\n    <table class=\"table table-hover table-list table-ciphers\">\n      <tbody>\n        <tr *ngFor=\"let c of ciphers\">\n          <td class=\"table-list-icon\">\n            <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n          </td>\n          <td class=\"reduced-lh wrap\">\n            <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{ 'editItem' | i18n }}\">{{\n              c.name\n            }}</a>\n            <ng-container *ngIf=\"c.organizationId\">\n              <i\n                class=\"bwi bwi-collection\"\n                appStopProp\n                title=\"{{ 'shared' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"shared\" | i18n }}</span>\n            </ng-container>\n            <ng-container *ngIf=\"c.hasAttachments\">\n              <i\n                class=\"bwi bwi-paperclip\"\n                appStopProp\n                title=\"{{ 'attachments' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            </ng-container>\n            <br />\n            <small>{{ c.subTitle }}</small>\n          </td>\n          <td class=\"table-list-options\">\n            <div class=\"dropdown\" appListDropdown *ngIf=\"c.hasAttachments\">\n              <button\n                class=\"btn btn-outline-secondary dropdown-toggle\"\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"viewAttachments(c)\">\n                  <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n                  {{ \"attachments\" | i18n }}\n                </a>\n              </div>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </ng-container>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #attachments></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EmergencyAccessViewResponse } from \"@bitwarden/common/auth/models/response/emergency-access.response\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { CipherData } from \"@bitwarden/common/vault/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/vault/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\n\nimport { EmergencyAccessAttachmentsComponent } from \"./emergency-access-attachments.component\";\nimport { EmergencyAddEditComponent } from \"./emergency-add-edit.component\";\n\n@Component({\n  selector: \"emergency-access-view\",\n  templateUrl: \"emergency-access-view.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessViewComponent implements OnInit {\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n\n  id: string;\n  ciphers: CipherView[] = [];\n  loaded = false;\n\n  constructor(\n    private cipherService: CipherService,\n    private cryptoService: CryptoService,\n    private modalService: ModalService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private apiService: ApiService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.params.subscribe((qParams) => {\n      if (qParams.id == null) {\n        return this.router.navigate([\"settings/emergency-access\"]);\n      }\n\n      this.id = qParams.id;\n\n      this.load();\n    });\n  }\n\n  async selectCipher(cipher: CipherView) {\n    // eslint-disable-next-line\n    const [_, childComponent] = await this.modalService.openViewRef(\n      EmergencyAddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = cipher == null ? null : cipher.id;\n        comp.cipher = cipher;\n      }\n    );\n\n    return childComponent;\n  }\n\n  async load() {\n    const response = await this.apiService.postEmergencyAccessView(this.id);\n    this.ciphers = await this.getAllCiphers(response);\n    this.loaded = true;\n  }\n\n  async viewAttachments(cipher: CipherView) {\n    await this.modalService.openViewRef(\n      EmergencyAccessAttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipher = cipher;\n        comp.emergencyAccessId = this.id;\n      }\n    );\n  }\n\n  protected async getAllCiphers(response: EmergencyAccessViewResponse): Promise<CipherView[]> {\n    const ciphers = response.ciphers;\n\n    const decCiphers: CipherView[] = [];\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(response.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    const promises: any[] = [];\n    ciphers.forEach((cipherResponse) => {\n      const cipherData = new CipherData(cipherResponse);\n      const cipher = new Cipher(cipherData);\n      promises.push(cipher.decrypt(oldEncKey).then((c) => decCiphers.push(c)));\n    });\n\n    await Promise.all(promises);\n    decCiphers.sort(this.cipherService.getLocaleSortingFunction());\n\n    return decCiphers;\n  }\n}\n","export enum EmergencyAccessStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  RecoveryInitiated = 3,\n  RecoveryApproved = 4,\n}\n","export enum EmergencyAccessType {\n  View = 0,\n  Takeover = 1,\n}\n","export class EmergencyAccessConfirmRequest {\n  key: string;\n}\n","import { EmergencyAccessType } from \"../../enums/emergency-access-type\";\n\nexport class EmergencyAccessInviteRequest {\n  email: string;\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n}\n","import { EmergencyAccessType } from \"../../enums/emergency-access-type\";\n\nexport class EmergencyAccessUpdateRequest {\n  type: EmergencyAccessType;\n  waitTimeDays: number;\n  keyEncrypted?: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          <app-premium-badge *ngIf=\"readOnly\"></app-premium-badge>\n          {{ title }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!loading\">\n        <ng-container *ngIf=\"!editMode\">\n          <p>{{ \"inviteEmergencyContactDesc\" | i18n }}</p>\n          <div class=\"form-group mb-4\">\n            <label for=\"email\">{{ \"email\" | i18n }}</label>\n            <input\n              id=\"email\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Email\"\n              [(ngModel)]=\"email\"\n              required\n            />\n          </div>\n        </ng-container>\n        <h3>\n          {{ \"userAccess\" | i18n }}\n          <a\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n            href=\"https://bitwarden.com/help/emergency-access/#user-access\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </h3>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeView\"\n            [value]=\"emergencyAccessType.View\"\n            [(ngModel)]=\"type\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeView\">\n            {{ \"view\" | i18n }}\n            <small>{{ \"viewDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"userType\"\n            id=\"emergencyTypeTakeover\"\n            [value]=\"emergencyAccessType.Takeover\"\n            [(ngModel)]=\"type\"\n            [disabled]=\"readOnly\"\n          />\n          <label class=\"form-check-label\" for=\"emergencyTypeTakeover\">\n            {{ \"takeover\" | i18n }}\n            <small>{{ \"takeoverDesc\" | i18n }}</small>\n          </label>\n        </div>\n        <div class=\"form-group col-6 mt-4\">\n          <label for=\"waitTime\">{{ \"waitTime\" | i18n }}</label>\n          <select\n            id=\"waitTime\"\n            name=\"waitTime\"\n            [(ngModel)]=\"waitTime\"\n            class=\"form-control\"\n            [disabled]=\"readOnly\"\n          >\n            <option *ngFor=\"let o of waitTimes\" [ngValue]=\"o.value\">{{ o.name }}</option>\n          </select>\n          <small class=\"text-muted\">{{ \"waitTimeDesc\" | i18n }}</small>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          buttonType=\"primary\"\n          bitButton\n          [loading]=\"loading || form.loading\"\n          [disabled]=\"readOnly\"\n        >\n          {{ \"save\" | i18n }}\n        </button>\n        <button bitButton buttonType=\"secondary\" type=\"button\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            bitButton\n            buttonType=\"danger\"\n            type=\"button\"\n            (click)=\"delete()\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EmergencyAccessType } from \"@bitwarden/common/auth/enums/emergency-access-type\";\nimport { EmergencyAccessInviteRequest } from \"@bitwarden/common/auth/models/request/emergency-access-invite.request\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/auth/models/request/emergency-access-update.request\";\n\n@Component({\n  selector: \"emergency-access-add-edit\",\n  templateUrl: \"emergency-access-add-edit.component.html\",\n})\nexport class EmergencyAccessAddEditComponent implements OnInit {\n  @Input() name: string;\n  @Input() emergencyAccessId: string;\n  @Output() onSaved = new EventEmitter();\n  @Output() onDeleted = new EventEmitter();\n\n  loading = true;\n  readOnly = false;\n  editMode = false;\n  title: string;\n  email: string;\n  type: EmergencyAccessType = EmergencyAccessType.View;\n\n  formPromise: Promise<any>;\n\n  emergencyAccessType = EmergencyAccessType;\n  waitTimes: { name: string; value: number }[];\n  waitTime: number;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.editMode = this.loading = this.emergencyAccessId != null;\n\n    this.waitTimes = [\n      { name: this.i18nService.t(\"oneDay\"), value: 1 },\n      { name: this.i18nService.t(\"days\", \"2\"), value: 2 },\n      { name: this.i18nService.t(\"days\", \"7\"), value: 7 },\n      { name: this.i18nService.t(\"days\", \"14\"), value: 14 },\n      { name: this.i18nService.t(\"days\", \"30\"), value: 30 },\n      { name: this.i18nService.t(\"days\", \"90\"), value: 90 },\n    ];\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editEmergencyContact\");\n      try {\n        const emergencyAccess = await this.apiService.getEmergencyAccess(this.emergencyAccessId);\n        this.type = emergencyAccess.type;\n        this.waitTime = emergencyAccess.waitTimeDays;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      this.title = this.i18nService.t(\"inviteEmergencyContact\");\n      this.waitTime = this.waitTimes[2].value;\n    }\n\n    this.loading = false;\n  }\n\n  async submit() {\n    try {\n      if (this.editMode) {\n        const request = new EmergencyAccessUpdateRequest();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.putEmergencyAccess(this.emergencyAccessId, request);\n      } else {\n        const request = new EmergencyAccessInviteRequest();\n        request.email = this.email.trim();\n        request.type = this.type;\n        request.waitTimeDays = this.waitTime;\n\n        this.formPromise = this.apiService.postEmergencyAccessInvite(request);\n      }\n\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedUserId\" : \"invitedUsers\", this.name)\n      );\n      this.onSaved.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async delete() {\n    this.onDeleted.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"confirmUserTitle\">\n          {{ \"confirmUser\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"fingerprintEnsureIntegrityVerify\" | i18n }}\n          <a href=\"https://bitwarden.com/help/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n            {{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <p>\n          <code>{{ fingerprint }}</code>\n        </p>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"dontAskAgain\"\n            name=\"DontAskAgain\"\n            [(ngModel)]=\"dontAskAgain\"\n          />\n          <label class=\"form-check-label\" for=\"dontAskAgain\">\n            {{ \"dontAskFingerprintAgain\" | i18n }}\n          </label>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"confirm\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"emergency-access-confirm\",\n  templateUrl: \"emergency-access-confirm.component.html\",\n})\nexport class EmergencyAccessConfirmComponent implements OnInit {\n  @Input() name: string;\n  @Input() userId: string;\n  @Input() emergencyAccessId: string;\n  @Input() formPromise: Promise<any>;\n  @Output() onConfirmed = new EventEmitter();\n\n  dontAskAgain = false;\n  loading = true;\n  fingerprint: string;\n\n  constructor(\n    private apiService: ApiService,\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    try {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n      if (publicKeyResponse != null) {\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        const fingerprint = await this.cryptoService.getFingerprint(this.userId, publicKey.buffer);\n        if (fingerprint != null) {\n          this.fingerprint = fingerprint.join(\"-\");\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.loading = false;\n  }\n\n  async submit() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.dontAskAgain) {\n      await this.stateService.setAutoConfirmFingerprints(true);\n    }\n\n    try {\n      this.onConfirmed.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","export class EmergencyAccessPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAddEditTitle\">\n          {{ \"takeover\" | i18n }}\n          <small class=\"text-muted\" *ngIf=\"name\">{{ name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n        <app-callout\n          type=\"info\"\n          [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n          *ngIf=\"enforcedPolicyOptions\"\n        >\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPassword\"\n                type=\"password\"\n                name=\"NewMasterPasswordHash\"\n                class=\"form-control mb-1\"\n                [(ngModel)]=\"masterPassword\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n              <app-password-strength\n                [password]=\"masterPassword\"\n                [email]=\"email\"\n                [showText]=\"true\"\n                (passwordStrengthResult)=\"getStrengthResult($event)\"\n              >\n              </app-password-strength>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <div class=\"form-group\">\n              <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"password\"\n                name=\"MasterPasswordRetype\"\n                class=\"form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { takeUntil } from \"rxjs\";\n\nimport { ChangePasswordComponent } from \"@bitwarden/angular/auth/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfConfig } from \"@bitwarden/common/auth/models/domain/kdf-config\";\nimport { EmergencyAccessPasswordRequest } from \"@bitwarden/common/auth/models/request/emergency-access-password.request\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { PolicyResponse } from \"@bitwarden/common/models/response/policy.response\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\n\n@Component({\n  selector: \"emergency-access-takeover\",\n  templateUrl: \"emergency-access-takeover.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessTakeoverComponent\n  extends ChangePasswordComponent\n  implements OnInit, OnDestroy\n{\n  @Output() onDone = new EventEmitter();\n  @Input() emergencyAccessId: string;\n  @Input() name: string;\n  @Input() email: string;\n  @Input() kdf: KdfType;\n  @Input() kdfIterations: number;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private apiService: ApiService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    const response = await this.apiService.getEmergencyGrantorPolicies(this.emergencyAccessId);\n    if (response.data != null && response.data.length > 0) {\n      const policies = response.data.map(\n        (policyResponse: PolicyResponse) => new Policy(new PolicyData(policyResponse))\n      );\n\n      this.policyService\n        .masterPasswordPolicyOptions$(policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPolicyOptions) => (this.enforcedPolicyOptions = enforcedPolicyOptions));\n    }\n  }\n\n  // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n  }\n\n  async submit() {\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    const takeoverResponse = await this.apiService.postEmergencyAccessTakeover(\n      this.emergencyAccessId\n    );\n\n    const oldKeyBuffer = await this.cryptoService.rsaDecrypt(takeoverResponse.keyEncrypted);\n    const oldEncKey = new SymmetricCryptoKey(oldKeyBuffer);\n\n    if (oldEncKey == null) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"unexpectedError\")\n      );\n      return;\n    }\n\n    const key = await this.cryptoService.makeKey(\n      this.masterPassword,\n      this.email,\n      takeoverResponse.kdf,\n      new KdfConfig(\n        takeoverResponse.kdfIterations,\n        takeoverResponse.kdfMemory,\n        takeoverResponse.kdfParallelism\n      )\n    );\n    const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n    const encKey = await this.cryptoService.remakeEncKey(key, oldEncKey);\n\n    const request = new EmergencyAccessPasswordRequest();\n    request.newMasterPasswordHash = masterPasswordHash;\n    request.key = encKey[1].encryptedString;\n\n    this.apiService.postEmergencyAccessPassword(this.emergencyAccessId, request);\n\n    try {\n      this.onDone.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<div class=\"page-header\">\n  <h1>{{ \"emergencyAccess\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"emergencyAccessDesc\" | i18n }}\n  <a href=\"https://bitwarden.com/help/emergency-access/\" target=\"_blank\" rel=\"noopener\">\n    {{ \"learnMore\" | i18n }}.\n  </a>\n</p>\n\n<p *ngIf=\"isOrganizationOwner\">\n  <b>{{ \"warning\" | i18n }}:</b> {{ \"emergencyAccessOwnerWarning\" | i18n }}\n</p>\n\n<div class=\"page-header d-flex\">\n  <h2>\n    {{ \"trustedEmergencyContacts\" | i18n }}\n    <app-premium-badge></app-premium-badge>\n  </h2>\n  <div class=\"ml-auto d-flex\">\n    <button\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      type=\"button\"\n      (click)=\"invite()\"\n      [disabled]=\"!canAccessPremium\"\n    >\n      <i aria-hidden=\"true\" class=\"bwi bwi-plus bwi-fw\"></i>\n      {{ \"addEmergencyContact\" | i18n }}\n    </button>\n  </div>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"trustedContacts && trustedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of trustedContacts; let i = index\">\n      <td width=\"30\">\n        <bit-avatar\n          [text]=\"c | userName\"\n          [id]=\"c.granteeId\"\n          [color]=\"c.avatarColor\"\n          size=\"small\"\n        ></bit-avatar>\n      </td>\n      <td>\n        <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.email }}</a>\n        <span\n          bitBadge\n          badgeType=\"secondary\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n          >{{ \"invited\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\">{{\n          \"emergencyAccessRecoveryApproved\" | i18n\n        }}</span>\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"trustedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #trustedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Invited\"\n            (click)=\"reinvite(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"resendInvitation\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n            (click)=\"confirm(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"confirm\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n            (click)=\"approve(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-check\" aria-hidden=\"true\"></i>\n            {{ \"approve\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryInitiated ||\n              c.status === emergencyAccessStatusType.RecoveryApproved\n            \"\n            (click)=\"reject(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"reject\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!trustedContacts || !trustedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noTrustedContacts\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<div class=\"page-header spaced-header\">\n  <h2>{{ \"designatedEmergencyContacts\" | i18n }}</h2>\n</div>\n\n<table class=\"table table-hover table-list mb-0\" *ngIf=\"grantedContacts && grantedContacts.length\">\n  <tbody>\n    <tr *ngFor=\"let c of grantedContacts; let i = index\">\n      <td width=\"30\">\n        <bit-avatar\n          [text]=\"c | userName\"\n          [id]=\"c.grantorId\"\n          [color]=\"c.avatarColor\"\n          size=\"small\"\n        ></bit-avatar>\n      </td>\n      <td>\n        <span>{{ c.email }}</span>\n        <span bitBadge *ngIf=\"c.status === emergencyAccessStatusType.Invited\">{{\n          \"invited\" | i18n\n        }}</span>\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.Accepted\"\n          >{{ \"accepted\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"warning\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryInitiated\"\n          >{{ \"emergencyAccessRecoveryInitiated\" | i18n }}</span\n        >\n        <span\n          bitBadge\n          badgeType=\"success\"\n          *ngIf=\"c.status === emergencyAccessStatusType.RecoveryApproved\"\n          >{{ \"emergencyAccessRecoveryApproved\" | i18n }}</span\n        >\n\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.View\">{{ \"view\" | i18n }}</span>\n        <span bitBadge *ngIf=\"c.type === emergencyAccessType.Takeover\">{{\n          \"takeover\" | i18n\n        }}</span>\n\n        <small class=\"text-muted d-block\" *ngIf=\"c.name\">{{ c.name }}</small>\n      </td>\n      <td class=\"table-list-options\">\n        <button\n          [bitMenuTriggerFor]=\"grantedContactOptions\"\n          class=\"tw-border-none tw-bg-transparent tw-text-main\"\n          type=\"button\"\n          appA11yTitle=\"{{ 'options' | i18n }}\"\n        >\n          <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu #grantedContactOptions>\n          <button\n            bitMenuItem\n            *ngIf=\"c.status === emergencyAccessStatusType.Confirmed\"\n            (click)=\"requestAccess(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-envelope\" aria-hidden=\"true\"></i>\n            {{ \"requestAccess\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.Takeover\n            \"\n            (click)=\"takeover(c)\"\n          >\n            <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n            {{ \"takeover\" | i18n }}\n          </button>\n          <button\n            bitMenuItem\n            *ngIf=\"\n              c.status === emergencyAccessStatusType.RecoveryApproved &&\n              c.type === emergencyAccessType.View\n            \"\n            [routerLink]=\"c.id\"\n          >\n            <i class=\"bwi bwi-fw bwi-eye\" aria-hidden=\"true\"></i>\n            {{ \"view\" | i18n }}\n          </button>\n          <button bitMenuItem (click)=\"remove(c)\">\n            <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n            {{ \"remove\" | i18n }}\n          </button>\n        </bit-menu>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ng-container *ngIf=\"!grantedContacts || !grantedContacts.length\">\n  <p *ngIf=\"loaded\">{{ \"noGrantedAccess\" | i18n }}</p>\n  <ng-container *ngIf=\"!loaded\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n</ng-container>\n\n<ng-template #addEdit></ng-template>\n<ng-template #takeoverTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { UserNamePipe } from \"@bitwarden/angular/pipes/user-name.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/auth/enums/emergency-access-status-type\";\nimport { EmergencyAccessType } from \"@bitwarden/common/auth/enums/emergency-access-type\";\nimport { EmergencyAccessConfirmRequest } from \"@bitwarden/common/auth/models/request/emergency-access-confirm.request\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n} from \"@bitwarden/common/auth/models/response/emergency-access.response\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nimport { EmergencyAccessAddEditComponent } from \"./emergency-access-add-edit.component\";\nimport { EmergencyAccessConfirmComponent } from \"./emergency-access-confirm.component\";\nimport { EmergencyAccessTakeoverComponent } from \"./emergency-access-takeover.component\";\n\n@Component({\n  selector: \"emergency-access\",\n  templateUrl: \"emergency-access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class EmergencyAccessComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"takeoverTemplate\", { read: ViewContainerRef, static: true })\n  takeoverModalRef: ViewContainerRef;\n  @ViewChild(\"confirmTemplate\", { read: ViewContainerRef, static: true })\n  confirmModalRef: ViewContainerRef;\n\n  loaded = false;\n  canAccessPremium: boolean;\n  trustedContacts: EmergencyAccessGranteeDetailsResponse[];\n  grantedContacts: EmergencyAccessGrantorDetailsResponse[];\n  emergencyAccessType = EmergencyAccessType;\n  emergencyAccessStatusType = EmergencyAccessStatusType;\n  actionPromise: Promise<any>;\n  isOrganizationOwner: boolean;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private userNamePipe: UserNamePipe,\n    private logService: LogService,\n    private stateService: StateService,\n    private organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const orgs = await this.organizationService.getAll();\n    this.isOrganizationOwner = orgs.some((o) => o.isOwner);\n    this.load();\n  }\n\n  async load() {\n    this.trustedContacts = (await this.apiService.getEmergencyAccessTrusted()).data;\n    this.grantedContacts = (await this.apiService.getEmergencyAccessGranted()).data;\n    this.loaded = true;\n  }\n\n  async premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n\n  async edit(details: EmergencyAccessGranteeDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessAddEditComponent,\n      this.addEditModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.emergencyAccessId = details?.id;\n        comp.readOnly = !this.canAccessPremium;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onSaved.subscribe(() => {\n          modal.close();\n          this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeleted.subscribe(() => {\n          modal.close();\n          this.remove(details);\n        });\n      }\n    );\n  }\n\n  invite() {\n    this.edit(null);\n  }\n\n  async reinvite(contact: EmergencyAccessGranteeDetailsResponse) {\n    if (this.actionPromise != null) {\n      return;\n    }\n    this.actionPromise = this.apiService.postEmergencyAccessReinvite(contact.id);\n    await this.actionPromise;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenReinvited\", contact.email)\n    );\n    this.actionPromise = null;\n  }\n\n  async confirm(contact: EmergencyAccessGranteeDetailsResponse) {\n    function updateUser() {\n      contact.status = EmergencyAccessStatusType.Confirmed;\n    }\n\n    if (this.actionPromise != null) {\n      return;\n    }\n\n    const autoConfirm = await this.stateService.getAutoConfirmFingerPrints();\n    if (autoConfirm == null || !autoConfirm) {\n      const [modal] = await this.modalService.openViewRef(\n        EmergencyAccessConfirmComponent,\n        this.confirmModalRef,\n        (comp) => {\n          comp.name = this.userNamePipe.transform(contact);\n          comp.emergencyAccessId = contact.id;\n          comp.userId = contact?.granteeId;\n          // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n          comp.onConfirmed.subscribe(async () => {\n            modal.close();\n\n            comp.formPromise = this.doConfirmation(contact);\n            await comp.formPromise;\n\n            updateUser();\n            this.platformUtilsService.showToast(\n              \"success\",\n              null,\n              this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n            );\n          });\n        }\n      );\n      return;\n    }\n\n    this.actionPromise = this.doConfirmation(contact);\n    await this.actionPromise;\n    updateUser();\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"hasBeenConfirmed\", this.userNamePipe.transform(contact))\n    );\n    this.actionPromise = null;\n  }\n\n  async remove(\n    details: EmergencyAccessGranteeDetailsResponse | EmergencyAccessGrantorDetailsResponse\n  ) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removeUserConfirmation\"),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteEmergencyAccess(details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"removedUserId\", this.userNamePipe.transform(details))\n      );\n\n      if (details instanceof EmergencyAccessGranteeDetailsResponse) {\n        this.removeGrantee(details);\n      } else {\n        this.removeGrantor(details);\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async requestAccess(details: EmergencyAccessGrantorDetailsResponse) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"requestAccessConfirmation\", details.waitTimeDays.toString()),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"requestAccess\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessInitiate(details.id);\n\n    details.status = EmergencyAccessStatusType.RecoveryInitiated;\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"requestSent\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async approve(details: EmergencyAccessGranteeDetailsResponse) {\n    const type = this.i18nService.t(\n      details.type === EmergencyAccessType.View ? \"view\" : \"takeover\"\n    );\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"approveAccessConfirmation\", this.userNamePipe.transform(details), type),\n      this.userNamePipe.transform(details),\n      this.i18nService.t(\"approve\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.apiService.postEmergencyAccessApprove(details.id);\n    details.status = EmergencyAccessStatusType.RecoveryApproved;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyApproved\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async reject(details: EmergencyAccessGranteeDetailsResponse) {\n    await this.apiService.postEmergencyAccessReject(details.id);\n    details.status = EmergencyAccessStatusType.Confirmed;\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"emergencyRejected\", this.userNamePipe.transform(details))\n    );\n  }\n\n  async takeover(details: EmergencyAccessGrantorDetailsResponse) {\n    const [modal] = await this.modalService.openViewRef(\n      EmergencyAccessTakeoverComponent,\n      this.takeoverModalRef,\n      (comp) => {\n        comp.name = this.userNamePipe.transform(details);\n        comp.email = details.email;\n        comp.emergencyAccessId = details != null ? details.id : null;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDone.subscribe(() => {\n          modal.close();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"passwordResetFor\", this.userNamePipe.transform(details))\n          );\n        });\n      }\n    );\n  }\n\n  private removeGrantee(details: EmergencyAccessGranteeDetailsResponse) {\n    const index = this.trustedContacts.indexOf(details);\n    if (index > -1) {\n      this.trustedContacts.splice(index, 1);\n    }\n  }\n\n  private removeGrantor(details: EmergencyAccessGrantorDetailsResponse) {\n    const index = this.grantedContacts.indexOf(details);\n    if (index > -1) {\n      this.grantedContacts.splice(index, 1);\n    }\n  }\n\n  // Encrypt the master password hash using the grantees public key, and send it to bitwarden for escrow.\n  private async doConfirmation(details: EmergencyAccessGranteeDetailsResponse) {\n    const encKey = await this.cryptoService.getEncKey();\n    const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n    const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n    try {\n      this.logService.debug(\n        \"User's fingerprint: \" +\n          (await this.cryptoService.getFingerprint(details.granteeId, publicKey.buffer)).join(\"-\")\n      );\n    } catch {\n      // Ignore errors since it's just a debug message\n    }\n\n    const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n    const request = new EmergencyAccessConfirmRequest();\n    request.key = encryptedKey.encryptedString;\n    await this.apiService.postEmergencyAccessConfirm(details.id, request);\n  }\n}\n","/**\n * Hypertext Transfer Protocol (HTTP) response status codes.\n *\n * @see {@link https://en.wikipedia.org/wiki/List_of_HTTP_status_codes}\n * src: https://gist.github.com/RWOverdijk/6cef816cfdf5722228e01cc05fd4b094\n */\nexport enum HttpStatusCode {\n  /**\n   * The server has received the request headers and the client should proceed to send the request body\n   * (in the case of a request for which a body needs to be sent; for example, a POST request).\n   * Sending a large request body to a server after a request has been rejected for inappropriate headers would be inefficient.\n   * To have a server check the request's headers, a client must send Expect: 100-continue as a header in its initial request\n   * and receive a 100 Continue status code in response before sending the body. The response 417 Expectation Failed indicates the request should not be continued.\n   */\n  Continue = 100,\n\n  /**\n   * The requester has asked the server to switch protocols and the server has agreed to do so.\n   */\n  SwitchingProtocols = 101,\n\n  /**\n   * A WebDAV request may contain many sub-requests involving file operations, requiring a long time to complete the request.\n   * This code indicates that the server has received and is processing the request, but no response is available yet.\n   * This prevents the client from timing out and assuming the request was lost.\n   */\n  Processing = 102,\n\n  // **********************************************************************************************************\n  //#region 200s - SUCCESS\n  // **********************************************************************************************************\n\n  /**\n   * Standard response for successful HTTP requests.\n   * The actual response will depend on the request method used.\n   * In a GET request, the response will contain an entity corresponding to the requested resource.\n   * In a POST request, the response will contain an entity describing or containing the result of the action.\n   */\n  Ok = 200,\n\n  /**\n   * The request has been fulfilled, resulting in the creation of a new resource.\n   */\n  Created = 201,\n\n  /**\n   * The request has been accepted for processing, but the processing has not been completed.\n   * The request might or might not be eventually acted upon, and may be disallowed when processing occurs.\n   */\n  Accepted = 202,\n\n  /**\n   * SINCE HTTP/1.1\n   * The server is a transforming proxy that received a 200 OK from its origin,\n   * but is returning a modified version of the origin's response.\n   */\n  NonAuthoritativeInformation = 203,\n\n  /**\n   * The server successfully processed the request and is not returning any content.\n   */\n  NoContent = 204,\n\n  /**\n   * The server successfully processed the request, but is not returning any content.\n   * Unlike a 204 response, this response requires that the requester reset the document view.\n   */\n  ResetContent = 205,\n\n  /**\n   * The server is delivering only part of the resource (byte serving) due to a range header sent by the client.\n   * The range header is used by HTTP clients to enable resuming of interrupted downloads,\n   * or split a download into multiple simultaneous streams.\n   */\n  PartialContent = 206,\n\n  /**\n   * The message body that follows is an XML message and can contain a number of separate response codes,\n   * depending on how many sub-requests were made.\n   */\n  MultiStatus = 207,\n\n  /**\n   * The members of a DAV binding have already been enumerated in a preceding part of the (multistatus) response,\n   * and are not being included again.\n   */\n  AlreadyReported = 208,\n\n  /**\n   * The server has fulfilled a request for the resource,\n   * and the response is a representation of the result of one or more instance-manipulations applied to the current instance.\n   */\n  ImUsed = 226,\n\n  // #endregion\n\n  // **********************************************************************************************************\n  //#region 300s - Redirections\n  // **********************************************************************************************************\n\n  /**\n   * Indicates multiple options for the resource from which the client may choose (via agent-driven content negotiation).\n   * For example, this code could be used to present multiple video format options,\n   * to list files with different filename extensions, or to suggest word-sense disambiguation.\n   */\n  MultipleChoices = 300,\n\n  /**\n   * This and all future requests should be directed to the given URI.\n   */\n  MovedPermanently = 301,\n\n  /**\n   * This is an example of industry practice contradicting the standard.\n   * The HTTP/1.0 specification (RFC 1945) required the client to perform a temporary redirect\n   * (the original describing phrase was \"Moved Temporarily\"), but popular browsers implemented 302\n   * with the functionality of a 303 See Other. Therefore, HTTP/1.1 added status codes 303 and 307\n   * to distinguish between the two behaviours. However, some Web applications and frameworks\n   * use the 302 status code as if it were the 303.\n   */\n  Found = 302,\n\n  /**\n   * SINCE HTTP/1.1\n   * The response to the request can be found under another URI using a GET method.\n   * When received in response to a POST (or PUT/DELETE), the client should presume that\n   * the server has received the data and should issue a redirect with a separate GET message.\n   */\n  SeeOther = 303,\n\n  /**\n   * Indicates that the resource has not been modified since the version specified by the request headers If-Modified-Since or If-None-Match.\n   * In such case, there is no need to retransmit the resource since the client still has a previously-downloaded copy.\n   */\n  NotModified = 304,\n\n  /**\n   * SINCE HTTP/1.1\n   * The requested resource is available only through a proxy, the address for which is provided in the response.\n   * Many HTTP clients (such as Mozilla and Internet Explorer) do not correctly handle responses with this status code, primarily for security reasons.\n   */\n  UseProxy = 305,\n\n  /**\n   * No longer used. Originally meant \"Subsequent requests should use the specified proxy.\"\n   */\n  SwitchProxy = 306,\n\n  /**\n   * SINCE HTTP/1.1\n   * In this case, the request should be repeated with another URI; however, future requests should still use the original URI.\n   * In contrast to how 302 was historically implemented, the request method is not allowed to be changed when reissuing the original request.\n   * For example, a POST request should be repeated using another POST request.\n   */\n  TemporaryRedirect = 307,\n\n  /**\n   * The request and all future requests should be repeated using another URI.\n   * 307 and 308 parallel the behaviors of 302 and 301, but do not allow the HTTP method to change.\n   * So, for example, submitting a form to a permanently redirected resource may continue smoothly.\n   */\n  PermanentRedirect = 308,\n\n  // #endregion\n\n  // **********************************************************************************************************\n  // #region - 400s - Client / User messed up\n  // **********************************************************************************************************\n\n  /**\n   * The server cannot or will not process the request due to an apparent client error\n   * (e.g., malformed request syntax, too large size, invalid request message framing, or deceptive request routing).\n   */\n  BadRequest = 400,\n\n  /**\n   * Similar to 403 Forbidden, but specifically for use when authentication is required and has failed or has not yet\n   * been provided. The response must include a WWW-Authenticate header field containing a challenge applicable to the\n   * requested resource. See Basic access authentication and Digest access authentication. 401 semantically means\n   * \"unauthenticated\",i.e. the user does not have the necessary credentials.\n   */\n  Unauthorized = 401,\n\n  /**\n   * Reserved for future use. The original intention was that this code might be used as part of some form of digital\n   * cash or micro payment scheme, but that has not happened, and this code is not usually used.\n   * Google Developers API uses this status if a particular developer has exceeded the daily limit on requests.\n   */\n  PaymentRequired = 402,\n\n  /**\n   * The request was valid, but the server is refusing action.\n   * The user might not have the necessary permissions for a resource.\n   */\n  Forbidden = 403,\n\n  /**\n   * The requested resource could not be found but may be available in the future.\n   * Subsequent requests by the client are permissible.\n   */\n  NotFound = 404,\n\n  /**\n   * A request method is not supported for the requested resource;\n   * for example, a GET request on a form that requires data to be presented via POST, or a PUT request on a read-only resource.\n   */\n  MethodNotAllowed = 405,\n\n  /**\n   * The requested resource is capable of generating only content not acceptable according to the Accept headers sent in the request.\n   */\n  NotAcceptable = 406,\n\n  /**\n   * The client must first authenticate itself with the proxy.\n   */\n  ProxyAuthenticationRequired = 407,\n\n  /**\n   * The server timed out waiting for the request.\n   * According to HTTP specifications:\n   * \"The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\"\n   */\n  RequestTimeout = 408,\n\n  /**\n   * Indicates that the request could not be processed because of conflict in the request,\n   * such as an edit conflict between multiple simultaneous updates.\n   */\n  Conflict = 409,\n\n  /**\n   * Indicates that the resource requested is no longer available and will not be available again.\n   * This should be used when a resource has been intentionally removed and the resource should be purged.\n   * Upon receiving a 410 status code, the client should not request the resource in the future.\n   * Clients such as search engines should remove the resource from their indices.\n   * Most use cases do not require clients and search engines to purge the resource, and a \"404 Not Found\" may be used instead.\n   */\n  Gone = 410,\n\n  /**\n   * The request did not specify the length of its content, which is required by the requested resource.\n   */\n  LengthRequired = 411,\n\n  /**\n   * The server does not meet one of the preconditions that the requester put on the request.\n   */\n  PreconditionFailed = 412,\n\n  /**\n   * The request is larger than the server is willing or able to process. Previously called \"Request Entity Too Large\".\n   */\n  PayloadTooLarge = 413,\n\n  /**\n   * The URI provided was too long for the server to process. Often the result of too much data being encoded as a query-string of a GET request,\n   * in which case it should be converted to a POST request.\n   * Called \"Request-URI Too Long\" previously.\n   */\n  UriTooLong = 414,\n\n  /**\n   * The request entity has a media type which the server or resource does not support.\n   * For example, the client uploads an image as image/svg+xml, but the server requires that images use a different format.\n   */\n  UnsupportedMediaType = 415,\n\n  /**\n   * The client has asked for a portion of the file (byte serving), but the server cannot supply that portion.\n   * For example, if the client asked for a part of the file that lies beyond the end of the file.\n   * Called \"Requested Range Not Satisfiable\" previously.\n   */\n  RangeNotSatisfiable = 416,\n\n  /**\n   * The server cannot meet the requirements of the Expect request-header field.\n   */\n  ExpectationFailed = 417,\n\n  /**\n   * This code was defined in 1998 as one of the traditional IETF April Fools' jokes, in RFC 2324, Hyper Text Coffee Pot Control Protocol,\n   * and is not expected to be implemented by actual HTTP servers. The RFC specifies this code should be returned by\n   * teapots requested to brew coffee. This HTTP status is used as an Easter egg in some websites, including Google.com.\n   */\n  IAmATeapot = 418,\n\n  /**\n   * The request was directed at a server that is not able to produce a response (for example because a connection reuse).\n   */\n  MisdirectedRequest = 421,\n\n  /**\n   * The request was well-formed but was unable to be followed due to semantic errors.\n   */\n  UnprocessableEntity = 422,\n\n  /**\n   * The resource that is being accessed is locked.\n   */\n  Locked = 423,\n\n  /**\n   * The request failed due to failure of a previous request (e.g., a PROPPATCH).\n   */\n  FailedDependency = 424,\n\n  /**\n   * The client should switch to a different protocol such as TLS/1.0, given in the Upgrade header field.\n   */\n  UpgradeRequired = 426,\n\n  /**\n   * The origin server requires the request to be conditional.\n   * Intended to prevent \"the 'lost update' problem, where a client\n   * GETs a resource's state, modifies it, and PUTs it back to the server,\n   * when meanwhile a third party has modified the state on the server, leading to a conflict.\"\n   */\n  PreconditionRequired = 428,\n\n  /**\n   * The user has sent too many requests in a given amount of time. Intended for use with rate-limiting schemes.\n   */\n  TooManyRequests = 429,\n\n  /**\n   * The server is unwilling to process the request because either an individual header field,\n   * or all the header fields collectively, are too large.\n   */\n  RequestHeaderFieldsTooLarge = 431,\n\n  /**\n   * A server operator has received a legal demand to deny access to a resource or to a set of resources\n   * that includes the requested resource. The code 451 was chosen as a reference to the novel Fahrenheit 451.\n   */\n  UnavailableForLegalReasons = 451,\n\n  // #endregion\n\n  // **********************************************************************************************************\n  // #region - 500s - Serve messed up\n  // **********************************************************************************************************\n\n  /**\n   * A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.\n   */\n  InternalServerError = 500,\n\n  /**\n   * The server either does not recognize the request method, or it lacks the ability to fulfill the request.\n   * Usually this implies future availability (e.g., a new feature of a web-service API).\n   */\n  NotImplemented = 501,\n\n  /**\n   * The server was acting as a gateway or proxy and received an invalid response from the upstream server.\n   */\n  BadGateway = 502,\n\n  /**\n   * The server is currently unavailable (because it is overloaded or down for maintenance).\n   * Generally, this is a temporary state.\n   */\n  ServiceUnavailable = 503,\n\n  /**\n   * The server was acting as a gateway or proxy and did not receive a timely response from the upstream server.\n   */\n  GatewayTimeout = 504,\n\n  /**\n   * The server does not support the HTTP protocol version used in the request\n   */\n  HttpVersionNotSupported = 505,\n\n  /**\n   * Transparent content negotiation for the request results in a circular reference.\n   */\n  VariantAlsoNegotiates = 506,\n\n  /**\n   * The server is unable to store the representation needed to complete the request.\n   */\n  InsufficientStorage = 507,\n\n  /**\n   * The server detected an infinite loop while processing the request.\n   */\n  LoopDetected = 508,\n\n  /**\n   * Further extensions to the request are required for the server to fulfill it.\n   */\n  NotExtended = 510,\n\n  /**\n   * The client needs to authenticate to gain network access.\n   * Intended for use by intercepting proxies used to control access to the network (e.g., \"captive portals\" used\n   * to require agreement to Terms of Service before granting full Internet access via a Wi-Fi hotspot).\n   */\n  NetworkAuthenticationRequired = 511,\n  // #endregion\n}\n","import { Directive } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { AuthResult } from \"@bitwarden/common/auth/models/domain/auth-result\";\nimport { SsoLogInCredentials } from \"@bitwarden/common/auth/models/domain/log-in-credentials\";\nimport { SsoPreValidateResponse } from \"@bitwarden/common/auth/models/response/sso-pre-validate.response\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\n\n@Directive()\nexport class SsoComponent {\n  identifier: string;\n  loggingIn = false;\n\n  formPromise: Promise<AuthResult>;\n  initiateSsoFormPromise: Promise<SsoPreValidateResponse>;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n  onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n  onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n  onSuccessfulLoginForceResetNavigate: () => Promise<any>;\n\n  protected twoFactorRoute = \"2fa\";\n  protected successRoute = \"lock\";\n  protected changePasswordRoute = \"set-password\";\n  protected forcePasswordResetRoute = \"update-temp-password\";\n  protected clientId: string;\n  protected redirectUri: string;\n  protected state: string;\n  protected codeChallenge: string;\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected route: ActivatedRoute,\n    protected stateService: StateService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected apiService: ApiService,\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected environmentService: EnvironmentService,\n    protected passwordGenerationService: PasswordGenerationServiceAbstraction,\n    protected logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.code != null && qParams.state != null) {\n        const codeVerifier = await this.stateService.getSsoCodeVerifier();\n        const state = await this.stateService.getSsoState();\n        await this.stateService.setSsoCodeVerifier(null);\n        await this.stateService.setSsoState(null);\n        if (\n          qParams.code != null &&\n          codeVerifier != null &&\n          state != null &&\n          this.checkState(state, qParams.state)\n        ) {\n          await this.logIn(\n            qParams.code,\n            codeVerifier,\n            this.getOrgIdentifierFromState(qParams.state)\n          );\n        }\n      } else if (\n        qParams.clientId != null &&\n        qParams.redirectUri != null &&\n        qParams.state != null &&\n        qParams.codeChallenge != null\n      ) {\n        this.redirectUri = qParams.redirectUri;\n        this.state = qParams.state;\n        this.codeChallenge = qParams.codeChallenge;\n        this.clientId = qParams.clientId;\n      }\n    });\n  }\n\n  async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n    if (this.identifier == null || this.identifier === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"ssoValidationFailed\"),\n        this.i18nService.t(\"ssoIdentifierRequired\")\n      );\n      return;\n    }\n\n    this.initiateSsoFormPromise = this.apiService.preValidateSso(this.identifier);\n    const response = await this.initiateSsoFormPromise;\n\n    const authorizeUrl = await this.buildAuthorizeUrl(\n      returnUri,\n      includeUserIdentifier,\n      response.token\n    );\n    this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n  }\n\n  protected async buildAuthorizeUrl(\n    returnUri?: string,\n    includeUserIdentifier?: boolean,\n    token?: string\n  ): Promise<string> {\n    let codeChallenge = this.codeChallenge;\n    let state = this.state;\n\n    const passwordOptions: any = {\n      type: \"password\",\n      length: 64,\n      uppercase: true,\n      lowercase: true,\n      numbers: true,\n      special: false,\n    };\n\n    if (codeChallenge == null) {\n      const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n      const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, \"sha256\");\n      codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n      await this.stateService.setSsoCodeVerifier(codeVerifier);\n    }\n\n    if (state == null) {\n      state = await this.passwordGenerationService.generatePassword(passwordOptions);\n      if (returnUri) {\n        state += `_returnUri='${returnUri}'`;\n      }\n    }\n\n    // Add Organization Identifier to state\n    state += `_identifier=${this.identifier}`;\n\n    // Save state (regardless of new or existing)\n    await this.stateService.setSsoState(state);\n\n    let authorizeUrl =\n      this.environmentService.getIdentityUrl() +\n      \"/connect/authorize?\" +\n      \"client_id=\" +\n      this.clientId +\n      \"&redirect_uri=\" +\n      encodeURIComponent(this.redirectUri) +\n      \"&\" +\n      \"response_type=code&scope=api offline_access&\" +\n      \"state=\" +\n      state +\n      \"&code_challenge=\" +\n      codeChallenge +\n      \"&\" +\n      \"code_challenge_method=S256&response_mode=query&\" +\n      \"domain_hint=\" +\n      encodeURIComponent(this.identifier) +\n      \"&ssoToken=\" +\n      encodeURIComponent(token);\n\n    if (includeUserIdentifier) {\n      const userIdentifier = await this.apiService.getSsoUserIdentifier();\n      authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n    }\n\n    return authorizeUrl;\n  }\n\n  private async logIn(code: string, codeVerifier: string, orgIdFromState: string) {\n    this.loggingIn = true;\n    try {\n      const credentials = new SsoLogInCredentials(\n        code,\n        codeVerifier,\n        this.redirectUri,\n        orgIdFromState\n      );\n      this.formPromise = this.authService.logIn(credentials);\n      const response = await this.formPromise;\n      if (response.requiresTwoFactor) {\n        if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n          this.onSuccessfulLoginTwoFactorNavigate();\n        } else {\n          this.router.navigate([this.twoFactorRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n              sso: \"true\",\n            },\n          });\n        }\n      } else if (response.resetMasterPassword) {\n        if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n          this.onSuccessfulLoginChangePasswordNavigate();\n        } else {\n          this.router.navigate([this.changePasswordRoute], {\n            queryParams: {\n              identifier: orgIdFromState,\n            },\n          });\n        }\n      } else if (response.forcePasswordReset) {\n        if (this.onSuccessfulLoginForceResetNavigate != null) {\n          this.onSuccessfulLoginForceResetNavigate();\n        } else {\n          this.router.navigate([this.forcePasswordResetRoute]);\n        }\n      } else {\n        const disableFavicon = await this.stateService.getDisableFavicon();\n        await this.stateService.setDisableFavicon(!!disableFavicon);\n        if (this.onSuccessfulLogin != null) {\n          this.onSuccessfulLogin();\n        }\n        if (this.onSuccessfulLoginNavigate != null) {\n          this.onSuccessfulLoginNavigate();\n        } else {\n          this.router.navigate([this.successRoute]);\n        }\n      }\n    } catch (e) {\n      this.logService.error(e);\n\n      // TODO: Key Connector Service should pass this error message to the logout callback instead of displaying here\n      if (e.message === \"Key Connector error\") {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"ssoKeyConnectorError\")\n        );\n      }\n    }\n    this.loggingIn = false;\n  }\n\n  private getOrgIdentifierFromState(state: string): string {\n    if (state === null || state === undefined) {\n      return null;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    return stateSplit.length > 1 ? stateSplit[1] : null;\n  }\n\n  private checkState(state: string, checkState: string): boolean {\n    if (state === null || state === undefined) {\n      return false;\n    }\n    if (checkState === null || checkState === undefined) {\n      return false;\n    }\n\n    const stateSplit = state.split(\"_identifier=\");\n    const checkStateSplit = checkState.split(\"_identifier=\");\n    return stateSplit[0] === checkStateSplit[0];\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  class=\"container\"\n  [appApiAction]=\"initiateSsoFormPromise\"\n  ngNativeValidate\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <img class=\"logo mb-2 logo-themed\" alt=\"Bitwarden\" />\n      <div class=\"card d-block mt-4\">\n        <div class=\"card-body\" *ngIf=\"loggingIn\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loggingIn\">\n          <p>{{ \"ssoLogInWithOrgIdentifier\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"identifier\">{{ \"ssoIdentifier\" | i18n }}</label>\n            <input\n              id=\"identifier\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Identifier\"\n              [(ngModel)]=\"identifier\"\n              required\n              appAutofocus\n            />\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span> <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"logIn\" | i18n }} </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { SsoComponent as BaseSsoComponent } from \"@bitwarden/angular/auth/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrgDomainApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization-domain/org-domain-api.service.abstraction\";\nimport { OrganizationDomainSsoDetailsResponse } from \"@bitwarden/common/abstractions/organization-domain/responses/organization-domain-sso-details.response\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { LoginService } from \"@bitwarden/common/auth/abstractions/login.service\";\nimport { HttpStatusCode } from \"@bitwarden/common/enums/http-status-code.enum\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\n\n@Component({\n  selector: \"app-sso\",\n  templateUrl: \"sso.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class SsoComponent extends BaseSsoComponent {\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    route: ActivatedRoute,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    cryptoFunctionService: CryptoFunctionService,\n    environmentService: EnvironmentService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    logService: LogService,\n    private orgDomainApiService: OrgDomainApiServiceAbstraction,\n    private loginService: LoginService,\n    private validationService: ValidationService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngOnInit() {\n    super.ngOnInit();\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.identifier != null) {\n        // SSO Org Identifier in query params takes precedence over claimed domains\n        this.identifier = qParams.identifier;\n      } else {\n        // Note: this flow is written for web but both browser and desktop\n        // redirect here on SSO button click.\n\n        // Check if email matches any claimed domains\n        if (qParams.email) {\n          // show loading spinner\n          this.loggingIn = true;\n          try {\n            const response: OrganizationDomainSsoDetailsResponse =\n              await this.orgDomainApiService.getClaimedOrgDomainByEmail(qParams.email);\n\n            if (response?.ssoAvailable) {\n              this.identifier = response.organizationIdentifier;\n              await this.submit();\n              return;\n            }\n          } catch (error) {\n            this.handleGetClaimedDomainByEmailError(error);\n          }\n\n          this.loggingIn = false;\n        }\n\n        // Fallback to state svc if domain is unclaimed\n        const storedIdentifier = await this.stateService.getSsoOrgIdentifier();\n        if (storedIdentifier != null) {\n          this.identifier = storedIdentifier;\n        }\n      }\n    });\n  }\n\n  private handleGetClaimedDomainByEmailError(error: any): void {\n    if (error instanceof ErrorResponse) {\n      const errorResponse: ErrorResponse = error as ErrorResponse;\n      switch (errorResponse.statusCode) {\n        case HttpStatusCode.NotFound:\n          if (errorResponse?.message?.includes(\"Claimed org domain not found\")) {\n            // Do nothing. This is a valid case.\n            return;\n          }\n          break;\n\n        default:\n          this.validationService.showError(errorResponse);\n          break;\n      }\n    }\n  }\n\n  async submit() {\n    await this.stateService.setSsoOrganizationIdentifier(this.identifier);\n    if (this.clientId === \"browser\") {\n      document.cookie = `ssoHandOffMessage=${this.i18nService.t(\"ssoHandOff\")};SameSite=strict`;\n    }\n    super.submit();\n  }\n}\n","import { I18nService } from \"../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../abstractions/platformUtils.service\";\n\nexport class WebAuthnIFrame {\n  private iframe: HTMLIFrameElement = null;\n  private connectorLink: HTMLAnchorElement;\n  private parseFunction = this.parseMessage.bind(this);\n\n  constructor(\n    private win: Window,\n    private webVaultUrl: string,\n    private webAuthnNewTab: boolean,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private successCallback: Function, // eslint-disable-line\n    private errorCallback: Function, // eslint-disable-line\n    private infoCallback: Function // eslint-disable-line\n  ) {\n    this.connectorLink = win.document.createElement(\"a\");\n  }\n\n  init(data: any): void {\n    const params = new URLSearchParams({\n      data: this.base64Encode(JSON.stringify(data)),\n      parent: encodeURIComponent(this.win.document.location.href),\n      btnText: encodeURIComponent(this.i18nService.t(\"webAuthnAuthenticate\")),\n      v: \"1\",\n    });\n\n    if (this.webAuthnNewTab) {\n      // Firefox fallback which opens the webauthn page in a new tab\n      params.append(\"locale\", this.i18nService.translationLocale);\n      this.platformUtilsService.launchUri(\n        `${this.webVaultUrl}/webauthn-fallback-connector.html?${params}`\n      );\n    } else {\n      this.connectorLink.href = `${this.webVaultUrl}/webauthn-connector.html?${params}`;\n      this.iframe = this.win.document.getElementById(\"webauthn_iframe\") as HTMLIFrameElement;\n      this.iframe.allow = \"publickey-credentials-get \" + new URL(this.webVaultUrl).origin;\n      this.iframe.src = this.connectorLink.href;\n\n      this.win.addEventListener(\"message\", this.parseFunction, false);\n    }\n  }\n\n  stop() {\n    this.sendMessage(\"stop\");\n  }\n\n  start() {\n    this.sendMessage(\"start\");\n  }\n\n  sendMessage(message: any) {\n    if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n      return;\n    }\n\n    this.iframe.contentWindow.postMessage(message, this.iframe.src);\n  }\n\n  base64Encode(str: string): string {\n    return btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n        return String.fromCharCode((\"0x\" + p1) as any);\n      })\n    );\n  }\n\n  cleanup() {\n    this.win.removeEventListener(\"message\", this.parseFunction, false);\n  }\n\n  private parseMessage(event: MessageEvent) {\n    if (!this.validMessage(event)) {\n      return;\n    }\n\n    const parts: string[] = event.data.split(\"|\");\n    if (parts[0] === \"success\" && this.successCallback) {\n      this.successCallback(parts[1]);\n    } else if (parts[0] === \"error\" && this.errorCallback) {\n      this.errorCallback(parts[1]);\n    } else if (parts[0] === \"info\" && this.infoCallback) {\n      this.infoCallback(parts[1]);\n    }\n  }\n\n  private validMessage(event: MessageEvent) {\n    if (\n      event.origin == null ||\n      event.origin === \"\" ||\n      event.origin !== (this.connectorLink as any).origin ||\n      event.data == null ||\n      typeof event.data !== \"string\"\n    ) {\n      return false;\n    }\n\n    return (\n      event.data.indexOf(\"success|\") === 0 ||\n      event.data.indexOf(\"error|\") === 0 ||\n      event.data.indexOf(\"info|\") === 0\n    );\n  }\n}\n","import { Directive, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport * as DuoWebSDK from \"duo_web_sdk\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { LoginService } from \"@bitwarden/common/auth/abstractions/login.service\";\nimport { TwoFactorService } from \"@bitwarden/common/auth/abstractions/two-factor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\nimport { AuthResult } from \"@bitwarden/common/auth/models/domain/auth-result\";\nimport { TokenTwoFactorRequest } from \"@bitwarden/common/auth/models/request/identity-token/token-two-factor.request\";\nimport { TwoFactorEmailRequest } from \"@bitwarden/common/auth/models/request/two-factor-email.request\";\nimport { TwoFactorProviders } from \"@bitwarden/common/auth/services/two-factor.service\";\nimport { WebAuthnIFrame } from \"@bitwarden/common/auth/webauthn-iframe\";\n\nimport { CaptchaProtectedComponent } from \"./captcha-protected.component\";\n\n@Directive()\nexport class TwoFactorComponent extends CaptchaProtectedComponent implements OnInit, OnDestroy {\n  token = \"\";\n  remember = false;\n  webAuthnReady = false;\n  webAuthnNewTab = false;\n  providers = TwoFactorProviders;\n  providerType = TwoFactorProviderType;\n  selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n  webAuthnSupported = false;\n  webAuthn: WebAuthnIFrame = null;\n  title = \"\";\n  twoFactorEmail: string = null;\n  formPromise: Promise<any>;\n  emailPromise: Promise<any>;\n  identifier: string = null;\n  onSuccessfulLogin: () => Promise<any>;\n  onSuccessfulLoginNavigate: () => Promise<any>;\n\n  get webAuthnAllow(): string {\n    return `publickey-credentials-get ${this.environmentService.getWebVaultUrl()}`;\n  }\n\n  protected loginRoute = \"login\";\n  protected successRoute = \"vault\";\n\n  constructor(\n    protected authService: AuthService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected apiService: ApiService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window,\n    protected environmentService: EnvironmentService,\n    protected stateService: StateService,\n    protected route: ActivatedRoute,\n    protected logService: LogService,\n    protected twoFactorService: TwoFactorService,\n    protected appIdService: AppIdService,\n    protected loginService: LoginService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.webAuthnSupported = this.platformUtilsService.supportsWebAuthn(win);\n  }\n\n  async ngOnInit() {\n    if (!this.authing || this.twoFactorService.getProviders() == null) {\n      this.router.navigate([this.loginRoute]);\n      return;\n    }\n\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      if (qParams.identifier != null) {\n        this.identifier = qParams.identifier;\n      }\n    });\n\n    if (this.needsLock) {\n      this.successRoute = \"lock\";\n    }\n\n    if (this.win != null && this.webAuthnSupported) {\n      const webVaultUrl = this.environmentService.getWebVaultUrl();\n      this.webAuthn = new WebAuthnIFrame(\n        this.win,\n        webVaultUrl,\n        this.webAuthnNewTab,\n        this.platformUtilsService,\n        this.i18nService,\n        (token: string) => {\n          this.token = token;\n          this.submit();\n        },\n        (error: string) => {\n          this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), error);\n        },\n        (info: string) => {\n          if (info === \"ready\") {\n            this.webAuthnReady = true;\n          }\n        }\n      );\n    }\n\n    this.selectedProviderType = this.twoFactorService.getDefaultProvider(this.webAuthnSupported);\n    await this.init();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupWebAuthn();\n    this.webAuthn = null;\n  }\n\n  async init() {\n    if (this.selectedProviderType == null) {\n      this.title = this.i18nService.t(\"loginUnavailable\");\n      return;\n    }\n\n    this.cleanupWebAuthn();\n    this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n    switch (this.selectedProviderType) {\n      case TwoFactorProviderType.WebAuthn:\n        if (!this.webAuthnNewTab) {\n          setTimeout(() => {\n            this.authWebAuthn();\n          }, 500);\n        }\n        break;\n      case TwoFactorProviderType.Duo:\n      case TwoFactorProviderType.OrganizationDuo:\n        setTimeout(() => {\n          DuoWebSDK.init({\n            iframe: undefined,\n            host: providerData.Host,\n            sig_request: providerData.Signature,\n            submit_callback: async (f: HTMLFormElement) => {\n              const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n              if (sig != null) {\n                this.token = sig.value;\n                await this.submit();\n              }\n            },\n          });\n        }, 0);\n        break;\n      case TwoFactorProviderType.Email:\n        this.twoFactorEmail = providerData.Email;\n        if (this.twoFactorService.getProviders().size > 1) {\n          await this.sendEmail(false);\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  async submit() {\n    await this.setupCaptcha();\n\n    if (this.token == null || this.token === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"verificationCodeRequired\")\n      );\n      return;\n    }\n\n    if (this.selectedProviderType === TwoFactorProviderType.WebAuthn) {\n      if (this.webAuthn != null) {\n        this.webAuthn.stop();\n      } else {\n        return;\n      }\n    } else if (\n      this.selectedProviderType === TwoFactorProviderType.Email ||\n      this.selectedProviderType === TwoFactorProviderType.Authenticator\n    ) {\n      this.token = this.token.replace(\" \", \"\").trim();\n    }\n\n    try {\n      await this.doSubmit();\n    } catch {\n      if (this.selectedProviderType === TwoFactorProviderType.WebAuthn && this.webAuthn != null) {\n        this.webAuthn.start();\n      }\n    }\n  }\n\n  async doSubmit() {\n    this.formPromise = this.authService.logInTwoFactor(\n      new TokenTwoFactorRequest(this.selectedProviderType, this.token, this.remember),\n      this.captchaToken\n    );\n    const response: AuthResult = await this.formPromise;\n    const disableFavicon = await this.stateService.getDisableFavicon();\n    await this.stateService.setDisableFavicon(!!disableFavicon);\n    if (this.handleCaptchaRequired(response)) {\n      return;\n    }\n    if (this.onSuccessfulLogin != null) {\n      this.loginService.clearValues();\n      this.onSuccessfulLogin();\n    }\n    if (response.resetMasterPassword) {\n      this.successRoute = \"set-password\";\n    }\n    if (response.forcePasswordReset) {\n      this.successRoute = \"update-temp-password\";\n    }\n    if (this.onSuccessfulLoginNavigate != null) {\n      this.loginService.clearValues();\n      this.onSuccessfulLoginNavigate();\n    } else {\n      this.loginService.clearValues();\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n\n  async sendEmail(doToast: boolean) {\n    if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n      return;\n    }\n\n    if (this.emailPromise != null) {\n      return;\n    }\n\n    try {\n      const request = new TwoFactorEmailRequest();\n      request.email = this.authService.email;\n      request.masterPasswordHash = this.authService.masterPasswordHash;\n      request.deviceIdentifier = await this.appIdService.getAppId();\n      request.authRequestAccessCode = this.authService.accessCode;\n      request.authRequestId = this.authService.authRequestId;\n      this.emailPromise = this.apiService.postTwoFactorEmail(request);\n      await this.emailPromise;\n      if (doToast) {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"verificationCodeEmailSent\", this.twoFactorEmail)\n        );\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.emailPromise = null;\n  }\n\n  authWebAuthn() {\n    const providerData = this.twoFactorService.getProviders().get(this.selectedProviderType);\n\n    if (!this.webAuthnSupported || this.webAuthn == null) {\n      return;\n    }\n\n    this.webAuthn.init(providerData);\n  }\n\n  private cleanupWebAuthn() {\n    if (this.webAuthn != null) {\n      this.webAuthn.stop();\n      this.webAuthn.cleanup();\n    }\n  }\n\n  get authing(): boolean {\n    return (\n      this.authService.authingWithPassword() ||\n      this.authService.authingWithSso() ||\n      this.authService.authingWithUserApiKey() ||\n      this.authService.authingWithPasswordless()\n    );\n  }\n\n  get needsLock(): boolean {\n    return this.authService.authingWithSso() || this.authService.authingWithUserApiKey();\n  }\n}\n","import { Directive, EventEmitter, OnInit, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/auth/abstractions/two-factor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n  @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n  @Output() onRecoverSelected = new EventEmitter();\n\n  providers: any[] = [];\n\n  constructor(\n    protected twoFactorService: TwoFactorService,\n    protected router: Router,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected win: Window\n  ) {}\n\n  ngOnInit() {\n    this.providers = this.twoFactorService.getSupportedProviders(this.win);\n  }\n\n  choose(p: any) {\n    this.onProviderSelected.emit(p.type);\n  }\n\n  recover() {\n    this.platformUtilsService.launchUri(\"https://bitwarden.com/help/lost-two-step-device/\");\n    this.onRecoverSelected.emit();\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{ \"twoStepOptions\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"list-group list-group-flush-2fa\">\n          <div *ngFor=\"let p of providers\" class=\"list-group-item list-group-item-action\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img [class]=\"'mfaType' + p.type\" [alt]=\"p.name + ' logo'\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ p.name }}</h3>\n                {{ p.description }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-describedby]=\"p.name\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"choose(p)\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n            <div class=\"two-factor-content\">\n              <div class=\"logo-col\">\n                <img class=\"recovery-code-img\" alt=\"rc logo\" />\n              </div>\n              <div class=\"text-col\">\n                <h3>{{ \"recoveryCodeTitle\" | i18n }}</h3>\n                {{ \"recoveryCodeDesc\" | i18n }}\n              </div>\n              <div class=\"btn-col\">\n                <button\n                  [attr.aria-descibedby]=\"'recoveryCodeTitle' | i18n\"\n                  type=\"button\"\n                  class=\"btn btn-outline-secondary btn-sm\"\n                  (click)=\"recover()\"\n                >\n                  {{ \"select\" | i18n }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent } from \"@bitwarden/angular/auth/components/two-factor-options.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TwoFactorService } from \"@bitwarden/common/auth/abstractions/two-factor.service\";\n\n@Component({\n  selector: \"app-two-factor-options\",\n  templateUrl: \"two-factor-options.component.html\",\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n  constructor(\n    twoFactorService: TwoFactorService,\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService\n  ) {\n    super(twoFactorService, router, i18nService, platformUtilsService, window);\n  }\n}\n","<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"container\"\n  ngNativeValidate\n  autocomplete=\"off\"\n>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div\n      class=\"col-5\"\n      [ngClass]=\"{\n        'col-9':\n          selectedProviderType === providerType.Duo ||\n          selectedProviderType === providerType.OrganizationDuo\n      }\"\n    >\n      <p class=\"lead text-center mb-4\">{{ title }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Email ||\n              selectedProviderType === providerType.Authenticator\n            \"\n          >\n            <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n              {{ \"enterVerificationCodeApp\" | i18n }}\n            </p>\n            <p *ngIf=\"selectedProviderType === providerType.Email\">\n              {{ \"enterVerificationCodeEmail\" | i18n: twoFactorEmail }}\n            </p>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"text\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                inputmode=\"tel\"\n                appInputVerbatim\n              />\n              <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                <a\n                  href=\"#\"\n                  appStopClick\n                  (click)=\"sendEmail(true)\"\n                  [appApiAction]=\"emailPromise\"\n                  *ngIf=\"selectedProviderType === providerType.Email\"\n                >\n                  {{ \"sendVerificationCodeEmailAgain\" | i18n }}\n                </a>\n              </small>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n            <p class=\"text-center\">{{ \"insertYubiKey\" | i18n }}</p>\n            <picture>\n              <source srcset=\"../../images/yubikey.avif\" type=\"image/avif\" />\n              <source srcset=\"../../images/yubikey.webp\" type=\"image/webp\" />\n              <img src=\"../../images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\" />\n            </picture>\n            <div class=\"form-group\">\n              <label for=\"code\" class=\"sr-only\">{{ \"verificationCode\" | i18n }}</label>\n              <input\n                id=\"code\"\n                type=\"password\"\n                name=\"Code\"\n                class=\"form-control\"\n                [(ngModel)]=\"token\"\n                required\n                appAutofocus\n                appInputVerbatim\n                autocomplete=\"new-password\"\n              />\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"selectedProviderType === providerType.WebAuthn\">\n            <div id=\"web-authn-frame\" class=\"mb-3\">\n              <iframe id=\"webauthn_iframe\" [attr.allow]=\"webAuthnAllow\"></iframe>\n            </div>\n          </ng-container>\n          <ng-container\n            *ngIf=\"\n              selectedProviderType === providerType.Duo ||\n              selectedProviderType === providerType.OrganizationDuo\n            \"\n          >\n            <div id=\"duo-frame\" class=\"mb-3\">\n              <iframe id=\"duo_iframe\"></iframe>\n            </div>\n          </ng-container>\n          <i\n            class=\"bwi bwi-spinner text-muted bwi-spin pull-right\"\n            title=\"{{ 'loading' | i18n }}\"\n            *ngIf=\"form.loading && selectedProviderType === providerType.WebAuthn\"\n            aria-hidden=\"true\"\n          ></i>\n          <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n            <input\n              id=\"remember\"\n              type=\"checkbox\"\n              name=\"Remember\"\n              class=\"form-check-input\"\n              [(ngModel)]=\"remember\"\n            />\n            <label for=\"remember\" class=\"form-check-label\">{{ \"rememberMe\" | i18n }}</label>\n          </div>\n          <ng-container *ngIf=\"selectedProviderType == null\">\n            <p>{{ \"noTwoStepProviders\" | i18n }}</p>\n            <p>{{ \"noTwoStepProviders2\" | i18n }}</p>\n          </ng-container>\n          <hr />\n          <div [hidden]=\"!showCaptcha()\">\n            <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n          </div>\n          <div class=\"d-flex mb-3\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n              *ngIf=\"\n                selectedProviderType != null &&\n                selectedProviderType !== providerType.Duo &&\n                selectedProviderType !== providerType.OrganizationDuo &&\n                selectedProviderType !== providerType.WebAuthn\n              \"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n          <div class=\"text-center\">\n            <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{\n              \"useAnotherTwoStepMethod\" | i18n\n            }}</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from \"@bitwarden/angular/auth/components/two-factor.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AppIdService } from \"@bitwarden/common/abstractions/appId.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { LoginService } from \"@bitwarden/common/auth/abstractions/login.service\";\nimport { TwoFactorService } from \"@bitwarden/common/auth/abstractions/two-factor.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\n\nimport { RouterService } from \"../app/core\";\n\nimport { TwoFactorOptionsComponent } from \"./two-factor-options.component\";\n\n@Component({\n  selector: \"app-two-factor\",\n  templateUrl: \"two-factor.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n  @ViewChild(\"twoFactorOptions\", { read: ViewContainerRef, static: true })\n  twoFactorOptionsModal: ViewContainerRef;\n\n  constructor(\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    apiService: ApiService,\n    platformUtilsService: PlatformUtilsService,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    private modalService: ModalService,\n    route: ActivatedRoute,\n    logService: LogService,\n    twoFactorService: TwoFactorService,\n    appIdService: AppIdService,\n    private routerService: RouterService,\n    loginService: LoginService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      apiService,\n      platformUtilsService,\n      window,\n      environmentService,\n      stateService,\n      route,\n      logService,\n      twoFactorService,\n      appIdService,\n      loginService\n    );\n    this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n  }\n\n  async anotherMethod() {\n    const [modal] = await this.modalService.openViewRef(\n      TwoFactorOptionsComponent,\n      this.twoFactorOptionsModal,\n      (comp) => {\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n          modal.close();\n          this.selectedProviderType = provider;\n          await this.init();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onRecoverSelected.subscribe(() => {\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async goAfterLogIn() {\n    this.loginService.clearValues();\n    const previousUrl = this.routerService.getPreviousUrl();\n    if (previousUrl) {\n      this.router.navigateByUrl(previousUrl);\n    } else {\n      this.router.navigate([this.successRoute], {\n        queryParams: {\n          identifier: this.identifier,\n        },\n      });\n    }\n  }\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class PasswordRequest extends SecretVerificationRequest {\n  newMasterPasswordHash: string;\n  masterPasswordHint: string;\n  key: string;\n}\n","import { Directive } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { VerificationType } from \"@bitwarden/common/auth/enums/verification-type\";\nimport { PasswordRequest } from \"@bitwarden/common/auth/models/request/password.request\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdatePasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n  currentMasterPassword: string;\n\n  onSuccessfulChangePassword: () => Promise<void>;\n\n  constructor(\n    protected router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private userVerificationService: UserVerificationService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async cancel() {\n    await this.stateService.setOrganizationInvitation(null);\n    this.router.navigate([\"/vault\"]);\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    const secret: Verification = {\n      type: VerificationType.MasterPassword,\n      secret: this.currentMasterPassword,\n    };\n    try {\n      await this.userVerificationService.verifyUser(secret);\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), e.message);\n      return false;\n    }\n\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfConfig = await this.stateService.getKdfConfig();\n    return true;\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create Request\n      const request = new PasswordRequest();\n      request.masterPasswordHash = await this.cryptoService.hashPassword(\n        this.currentMasterPassword,\n        null\n      );\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.key = encKey[1].encryptedString;\n\n      // Update user's password\n      this.apiService.postPassword(request);\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"masterPasswordInvalidWarning\" | i18n }} </app-callout>\n          <app-callout\n            type=\"info\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            *ngIf=\"enforcedPolicyOptions\"\n          ></app-callout>\n\n          <form\n            #form\n            (ngSubmit)=\"submit()\"\n            [appApiAction]=\"formPromise\"\n            ngNativeValidate\n            autocomplete=\"off\"\n          >\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"currentMasterPassword\"\n                    type=\"password\"\n                    name=\"MasterPasswordHash\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\"\n                    required\n                    appInputVerbatim\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"newMasterPassword\"\n                    type=\"password\"\n                    name=\"NewMasterPasswordHash\"\n                    class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                  <app-password-strength\n                    [password]=\"masterPassword\"\n                    [email]=\"email\"\n                    [showText]=\"true\"\n                    (passwordStrengthResult)=\"getStrengthResult($event)\"\n                  ></app-password-strength>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n                  <input\n                    id=\"masterPasswordRetype\"\n                    type=\"password\"\n                    name=\"MasterPasswordRetype\"\n                    class=\"form-control\"\n                    [(ngModel)]=\"masterPasswordRetype\"\n                    required\n                    appInputVerbatim\n                    autocomplete=\"new-password\"\n                  />\n                </div>\n              </div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n              <i\n                class=\"fa fa-spinner fa-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"changeMasterPassword\" | i18n }}</span>\n            </button>\n            <button (click)=\"cancel()\" type=\"button\" class=\"btn btn-outline-secondary\">\n              <span>{{ \"cancel\" | i18n }}</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { UpdatePasswordComponent as BaseUpdatePasswordComponent } from \"@bitwarden/angular/auth/components/update-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\n\n@Component({\n  selector: \"app-update-password\",\n  templateUrl: \"update-password.component.html\",\n})\nexport class UpdatePasswordComponent extends BaseUpdatePasswordComponent {\n  constructor(\n    router: Router,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    userVerificationService: UserVerificationService\n  ) {\n    super(\n      router,\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      userVerificationService,\n      logService\n    );\n  }\n}\n","import { OrganizationUserResetPasswordRequest } from \"../../../abstractions/organization-user/requests\";\n\nexport class UpdateTempPasswordRequest extends OrganizationUserResetPasswordRequest {\n  masterPasswordHint: string;\n}\n","import { Directive } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { UpdateTempPasswordRequest } from \"@bitwarden/common/auth/models/request/update-temp-password.request\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"./change-password.component\";\n\n@Directive()\nexport class UpdateTempPasswordComponent extends BaseChangePasswordComponent {\n  hint: string;\n  key: string;\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  showPassword = false;\n\n  onSuccessfulChangePassword: () => Promise<any>;\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    private apiService: ApiService,\n    stateService: StateService,\n    private syncService: SyncService,\n    private logService: LogService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    await this.syncService.fullSync(true);\n    super.ngOnInit();\n  }\n\n  togglePassword(confirmField: boolean) {\n    this.showPassword = !this.showPassword;\n    document.getElementById(confirmField ? \"masterPasswordRetype\" : \"masterPassword\").focus();\n  }\n\n  async setupSubmitActions(): Promise<boolean> {\n    this.email = await this.stateService.getEmail();\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfConfig = await this.stateService.getKdfConfig();\n    return true;\n  }\n\n  async submit() {\n    // Validation\n    if (!(await this.strongPassword())) {\n      return;\n    }\n\n    if (!(await this.setupSubmitActions())) {\n      return;\n    }\n\n    try {\n      // Create new key and hash new password\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.email.trim().toLowerCase(),\n        this.kdf,\n        this.kdfConfig\n      );\n      const newPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n\n      // Grab user's current enc key\n      const userEncKey = await this.cryptoService.getEncKey();\n\n      // Create new encKey for the User\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey, userEncKey);\n\n      await this.performSubmitActions(newPasswordHash, newKey, newEncKey);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async performSubmitActions(\n    masterPasswordHash: string,\n    key: SymmetricCryptoKey,\n    encKey: [SymmetricCryptoKey, EncString]\n  ) {\n    try {\n      // Create request\n      const request = new UpdateTempPasswordRequest();\n      request.key = encKey[1].encryptedString;\n      request.newMasterPasswordHash = masterPasswordHash;\n      request.masterPasswordHint = this.hint;\n\n      // Update user's password\n      this.formPromise = this.apiService.putUpdateTempPassword(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"updatedMasterPassword\")\n      );\n\n      if (this.onSuccessfulChangePassword != null) {\n        this.onSuccessfulChangePassword();\n      } else {\n        this.messagingService.send(\"logout\");\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-4\">\n      <p class=\"lead text-center mb-4\">{{ \"updateMasterPassword\" | i18n }}</p>\n      <div class=\"card d-block\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"updateMasterPasswordWarning\" | i18n }} </app-callout>\n          <div class=\"form-group\">\n            <app-callout\n              type=\"info\"\n              [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n              *ngIf=\"enforcedPolicyOptions\"\n            >\n            </app-callout>\n            <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <div class=\"w-100\">\n                <input\n                  id=\"masterPassword\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"MasterPasswordHash\"\n                  class=\"text-monospace form-control mb-1\"\n                  [(ngModel)]=\"masterPassword\"\n                  required\n                  appInputVerbatim\n                />\n                <app-password-strength\n                  [password]=\"masterPassword\"\n                  [email]=\"email\"\n                  [showText]=\"true\"\n                  (passwordStrengthResult)=\"getStrengthResult($event)\"\n                >\n                </app-password-strength>\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  class=\"ml-1 btn btn-link\"\n                  appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                  (click)=\"togglePassword(false)\"\n                >\n                  <i\n                    class=\"bwi bwi-lg\"\n                    aria-hidden=\"true\"\n                    [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                  ></i>\n                </button>\n                <div class=\"progress-bar invisible\"></div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"masterPasswordRetype\">{{ \"reTypeMasterPass\" | i18n }}</label>\n            <div class=\"d-flex\">\n              <input\n                id=\"masterPasswordRetype\"\n                type=\"{{ showPassword ? 'text' : 'password' }}\"\n                name=\"MasterPasswordRetype\"\n                class=\"text-monospace form-control\"\n                [(ngModel)]=\"masterPasswordRetype\"\n                required\n                appInputVerbatim\n              />\n              <button\n                type=\"button\"\n                class=\"ml-1 btn btn-link\"\n                appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                (click)=\"togglePassword(true)\"\n              >\n                <i\n                  class=\"bwi bwi-lg\"\n                  aria-hidden=\"true\"\n                  [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                ></i>\n              </button>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"hint\">{{ \"masterPassHint\" | i18n }}</label>\n            <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\" />\n            <small class=\"form-text text-muted\">{{ \"masterPassHintDesc\" | i18n }}</small>\n          </div>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span>{{ \"submit\" | i18n }}</span>\n            </button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-secondary btn-block ml-2 mt-0\"\n              (click)=\"logOut()\"\n            >\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","import { Component } from \"@angular/core\";\n\nimport { UpdateTempPasswordComponent as BaseUpdateTempPasswordComponent } from \"@bitwarden/angular/auth/components/update-temp-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-update-temp-password\",\n  templateUrl: \"update-temp-password.component.html\",\n})\nexport class UpdateTempPasswordComponent extends BaseUpdateTempPasswordComponent {\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    policyService: PolicyService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    apiService: ApiService,\n    logService: LogService,\n    stateService: StateService,\n    syncService: SyncService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      passwordGenerationService,\n      policyService,\n      cryptoService,\n      messagingService,\n      apiService,\n      stateService,\n      syncService,\n      logService\n    );\n  }\n}\n","export class VerifyEmailRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VerifyEmailRequest } from \"@bitwarden/common/models/request/verify-email.request\";\n\n@Component({\n  selector: \"app-verify-email-token\",\n  templateUrl: \"verify-email-token.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyEmailTokenComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null) {\n        try {\n          await this.apiService.postAccountVerifyEmailToken(\n            new VerifyEmailRequest(qParams.userId, qParams.token)\n          );\n          if (await this.stateService.getIsAuthenticated()) {\n            await this.apiService.refreshIdentityToken();\n          }\n          this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n          this.router.navigate([\"/\"]);\n          return;\n        } catch (e) {\n          this.logService.error(e);\n        }\n      }\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"emailVerifiedFailed\"));\n      this.router.navigate([\"/\"]);\n    });\n  }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","export class VerifyDeleteRecoverRequest {\n  userId: string;\n  token: string;\n\n  constructor(userId: string, token: string) {\n    this.userId = userId;\n    this.token = token;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { VerifyDeleteRecoverRequest } from \"@bitwarden/common/models/request/verify-delete-recover.request\";\n\n@Component({\n  selector: \"app-verify-recover-delete\",\n  templateUrl: \"verify-recover-delete.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class VerifyRecoverDeleteComponent implements OnInit {\n  email: string;\n  formPromise: Promise<any>;\n\n  private userId: string;\n  private token: string;\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private logService: LogService\n  ) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n        this.userId = qParams.userId;\n        this.token = qParams.token;\n        this.email = qParams.email;\n      } else {\n        this.router.navigate([\"/\"]);\n      }\n    });\n  }\n\n  async submit() {\n    try {\n      const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n      this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-md-center mt-5\">\n    <div class=\"col-5\">\n      <p class=\"lead text-center mb-4\">{{ \"deleteAccount\" | i18n }}</p>\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n          <p class=\"text-center\">\n            <strong>{{ email }}</strong>\n          </p>\n          <p>{{ \"deleteRecoverConfirmDesc\" | i18n }}</p>\n          <hr />\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-danger btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>{{ \"deleteAccount\" | i18n }}</span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n            <a routerLink=\"/login\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n              {{ \"cancel\" | i18n }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n","export class ReferenceEventRequest {\n  id: string;\n  layout: string;\n  flow: string;\n}\n","<ng-template>\n  <div\n    class=\"tw-inline-block tw-w-11/12 tw-pl-7\"\n    [ngClass]=\"{ 'tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300': applyBorder }\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { CdkStep } from \"@angular/cdk/stepper\";\nimport { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-vertical-step\",\n  templateUrl: \"vertical-step.component.html\",\n  providers: [{ provide: CdkStep, useExisting: VerticalStep }],\n})\nexport class VerticalStep extends CdkStep {\n  @Input() subLabel = \"\";\n  @Input() applyBorder = true;\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<!-- eslint-disable tailwindcss/no-custom-classname -->\n<div class=\"tw-m-2.5 tw-h-16 tw-text-center\">\n  <button\n    (click)=\"selectStep()\"\n    [disabled]=\"disabled\"\n    class=\"tw-flex tw-w-full tw-items-center tw-border-none tw-bg-transparent\"\n    [ngClass]=\"{\n      'hover:tw-bg-secondary-100': !disabled && step.editable\n    }\"\n    [attr.aria-expanded]=\"selected\"\n  >\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-font-bold tw-leading-9\"\n      *ngIf=\"!step.completed\"\n      [ngClass]=\"{\n        'tw-bg-primary-500 tw-text-contrast': selected,\n        'tw-bg-secondary-300 tw-text-main': !selected && !disabled && step.editable,\n        'tw-bg-transparent tw-text-muted': disabled\n      }\"\n    >\n      {{ stepNumber }}\n    </span>\n    <span\n      class=\"tw-mr-3.5 tw-w-9 tw-rounded-full tw-bg-primary-500 tw-font-bold tw-leading-9 tw-text-contrast\"\n      *ngIf=\"step.completed\"\n    >\n      <i class=\"bwi bwi-fw bwi-check tw-p-1\" aria-hidden=\"true\"></i>\n    </span>\n    <div\n      class=\"tw-txt-main tw-mt-3.5 tw-h-12 tw-text-left tw-leading-snug\"\n      [ngClass]=\"{\n        'tw-font-bold': selected\n      }\"\n    >\n      <p\n        class=\"main-label text tw-mb-1 tw-text-main\"\n        [ngClass]=\"{\n          'tw-mt-1': !step.subLabel\n        }\"\n      >\n        {{ step.label }}\n      </p>\n      <p class=\"sub-label small tw-text-muted\">{{ step.subLabel }}</p>\n    </div>\n  </button>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-step-content\",\n  templateUrl: \"vertical-step-content.component.html\",\n})\nexport class VerticalStepContentComponent {\n  @Output() onSelectStep = new EventEmitter<void>();\n\n  @Input() disabled = false;\n  @Input() selected = false;\n  @Input() step: VerticalStep;\n  @Input() stepNumber: number;\n\n  selectStep() {\n    this.onSelectStep.emit();\n  }\n}\n","<div>\n  <ul class=\"tw-flex tw-list-none tw-flex-col tw-flex-wrap tw-p-5\">\n    <li *ngFor=\"let step of steps; let i = index; let isLast = last\">\n      <app-vertical-step-content\n        [disabled]=\"isStepDisabled(i)\"\n        [selected]=\"selectedIndex === i\"\n        [step]=\"step\"\n        [stepNumber]=\"i + 1\"\n        (onSelectStep)=\"selectStepByIndex(i)\"\n      ></app-vertical-step-content>\n      <div\n        class=\"tw-inline-block tw-pl-7\"\n        *ngIf=\"selectedIndex === i\"\n        [ngTemplateOutlet]=\"selected ? selected.content : null\"\n      ></div>\n      <div\n        class=\"tw-ml-8 tw-h-6 tw-border-0 tw-border-l tw-border-solid tw-border-secondary-300\"\n        *ngIf=\"!isLast && !(selectedIndex === i)\"\n      ></div>\n    </li>\n  </ul>\n</div>\n","import { CdkStepper } from \"@angular/cdk/stepper\";\nimport { Component, Input, QueryList } from \"@angular/core\";\n\nimport { VerticalStep } from \"./vertical-step.component\";\n\n@Component({\n  selector: \"app-vertical-stepper\",\n  templateUrl: \"vertical-stepper.component.html\",\n  providers: [{ provide: CdkStepper, useExisting: VerticalStepperComponent }],\n})\nexport class VerticalStepperComponent extends CdkStepper {\n  readonly steps: QueryList<VerticalStep>;\n\n  @Input()\n  activeClass = \"active\";\n\n  isNextButtonHidden() {\n    return !(this.steps.length === this.selectedIndex + 1);\n  }\n\n  isStepDisabled(index: number) {\n    if (this.selectedIndex !== index) {\n      return this.selectedIndex === index - 1\n        ? !this.steps.find((_, i) => i == index - 1)?.completed\n        : true;\n    }\n    return false;\n  }\n\n  selectStepByIndex(index: number): void {\n    this.selectedIndex = index;\n  }\n}\n","import { CaptchaProtectedRequest } from \"../../auth/models/request/captcha-protected.request\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nimport { KeysRequest } from \"./keys.request\";\nimport { ReferenceEventRequest } from \"./reference-event.request\";\n\nexport class RegisterRequest implements CaptchaProtectedRequest {\n  masterPasswordHint: string;\n  keys: KeysRequest;\n  token: string;\n  organizationUserId: string;\n\n  constructor(\n    public email: string,\n    public name: string,\n    public masterPasswordHash: string,\n    masterPasswordHint: string,\n    public key: string,\n    public referenceData: ReferenceEventRequest,\n    public captchaResponse: string,\n    public kdf: KdfType,\n    public kdfIterations: number,\n    public kdfMemory?: number,\n    public kdfParallelism?: number\n  ) {\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { AbstractControl, UntypedFormGroup, ValidatorFn } from \"@angular/forms\";\n\nimport { FormGroupControls } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\n\nexport class InputsFieldMatch {\n  //check to ensure two fields do not have the same value\n  static validateInputsDoesntMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? {\n              inputsMatchError: {\n                message: errorMessage,\n              },\n            }\n          : null;\n      }\n\n      return null;\n    };\n  }\n\n  //check to ensure two fields have the same value\n  static validateInputsMatch(matchTo: string, errorMessage: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      if (control.parent && control.parent.controls) {\n        return control?.value === (control?.parent?.controls as FormGroupControls)[matchTo].value\n          ? null\n          : {\n              inputsDoesntMatchError: {\n                message: errorMessage,\n              },\n            };\n      }\n\n      return null;\n    };\n  }\n\n  //checks the formGroup if two fields have the same value and validation is controlled from either field\n  static validateFormInputsMatch(field: string, fieldMatchTo: string, errorMessage: string) {\n    return (formGroup: UntypedFormGroup) => {\n      const fieldCtrl = formGroup.controls[field];\n      const fieldMatchToCtrl = formGroup.controls[fieldMatchTo];\n\n      if (fieldCtrl.value !== fieldMatchToCtrl.value) {\n        fieldMatchToCtrl.setErrors({\n          inputsDoesntMatchError: {\n            message: errorMessage,\n          },\n        });\n      } else {\n        fieldMatchToCtrl.setErrors(null);\n      }\n    };\n  }\n}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { AbstractControl, UntypedFormBuilder, ValidatorFn, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport {\n  AllValidationErrors,\n  FormValidationErrorsService,\n} from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { PasswordLogInCredentials } from \"@bitwarden/common/auth/models/domain/log-in-credentials\";\nimport { RegisterResponse } from \"@bitwarden/common/auth/models/response/register.response\";\nimport { DEFAULT_KDF_CONFIG, DEFAULT_KDF_TYPE } from \"@bitwarden/common/enums/kdfType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { KeysRequest } from \"@bitwarden/common/models/request/keys.request\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\nimport { RegisterRequest } from \"@bitwarden/common/models/request/register.request\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\n\nimport { CaptchaProtectedComponent } from \"../auth/components/captcha-protected.component\";\nimport { PasswordColorText } from \"../shared/components/password-strength/password-strength.component\";\nimport { InputsFieldMatch } from \"../validators/inputsFieldMatch.validator\";\n\n@Directive()\nexport class RegisterComponent extends CaptchaProtectedComponent implements OnInit {\n  @Input() isInTrialFlow = false;\n  @Output() createdAccount = new EventEmitter<string>();\n\n  showPassword = false;\n  formPromise: Promise<RegisterResponse>;\n  referenceData: ReferenceEventRequest;\n  showTerms = false;\n  showErrorSummary = false;\n  passwordStrengthResult: any;\n  characterMinimumMessage: string;\n  minimumLength = Utils.minimumPasswordLength;\n  color: string;\n  text: string;\n\n  formGroup = this.formBuilder.group(\n    {\n      email: [\"\", [Validators.required, Validators.email]],\n      name: [\"\"],\n      masterPassword: [\"\", [Validators.required, Validators.minLength(this.minimumLength)]],\n      confirmMasterPassword: [\"\", [Validators.required, Validators.minLength(this.minimumLength)]],\n      hint: [\n        null,\n        [\n          InputsFieldMatch.validateInputsDoesntMatch(\n            \"masterPassword\",\n            this.i18nService.t(\"hintEqualsPassword\")\n          ),\n        ],\n      ],\n      checkForBreaches: [true],\n      acceptPolicies: [false, [this.acceptPoliciesValidation()]],\n    },\n    {\n      validator: InputsFieldMatch.validateFormInputsMatch(\n        \"masterPassword\",\n        \"confirmMasterPassword\",\n        this.i18nService.t(\"masterPassDoesntMatch\")\n      ),\n    }\n  );\n\n  protected successRoute = \"login\";\n\n  protected accountCreated = false;\n\n  protected captchaBypassToken: string = null;\n\n  constructor(\n    protected formValidationErrorService: FormValidationErrorsService,\n    protected formBuilder: UntypedFormBuilder,\n    protected authService: AuthService,\n    protected router: Router,\n    i18nService: I18nService,\n    protected cryptoService: CryptoService,\n    protected apiService: ApiService,\n    protected stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    protected passwordGenerationService: PasswordGenerationServiceAbstraction,\n    environmentService: EnvironmentService,\n    protected logService: LogService,\n    protected auditService: AuditService\n  ) {\n    super(environmentService, i18nService, platformUtilsService);\n    this.showTerms = false;\n    this.characterMinimumMessage = this.i18nService.t(\"characterMinimum\", this.minimumLength);\n  }\n\n  async ngOnInit() {\n    this.setupCaptcha();\n  }\n\n  async submit(showToast = true) {\n    if (typeof crypto.subtle === 'undefined') {\n      this.platformUtilsService.showToast(\n        \"error\",\n        \"This browser requires HTTPS to use the web vault\",\n        \"Check the Vaultwarden wiki for details on how to enable it\"\n      );\n      return;\n    }\n\n    let email = this.formGroup.value.email;\n    email = email.trim().toLowerCase();\n    let name = this.formGroup.value.name;\n    name = name === \"\" ? null : name; // Why do we do this?\n    const masterPassword = this.formGroup.value.masterPassword;\n    try {\n      if (!this.accountCreated) {\n        const registerResponse = await this.registerAccount(\n          await this.buildRegisterRequest(email, masterPassword, name),\n          showToast\n        );\n        if (!registerResponse.successful) {\n          return;\n        }\n        this.captchaBypassToken = registerResponse.captchaBypassToken;\n        this.accountCreated = true;\n      }\n      if (this.isInTrialFlow) {\n        if (!this.accountCreated) {\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"trialAccountCreated\")\n          );\n        }\n        const loginResponse = await this.logIn(email, masterPassword, this.captchaBypassToken);\n        if (loginResponse.captchaRequired) {\n          return;\n        }\n        this.createdAccount.emit(this.formGroup.value.email);\n      } else {\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"newAccountCreated\")\n        );\n        this.router.navigate([this.successRoute], { queryParams: { email: email } });\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  getStrengthResult(result: any) {\n    this.passwordStrengthResult = result;\n  }\n\n  getPasswordScoreText(event: PasswordColorText) {\n    this.color = event.color;\n    this.text = event.text;\n  }\n\n  private getErrorToastMessage() {\n    const error: AllValidationErrors = this.formValidationErrorService\n      .getFormValidationErrors(this.formGroup.controls)\n      .shift();\n\n    if (error) {\n      switch (error.errorName) {\n        case \"email\":\n          return this.i18nService.t(\"invalidEmail\");\n        case \"inputsDoesntMatchError\":\n          return this.i18nService.t(\"masterPassDoesntMatch\");\n        case \"inputsMatchError\":\n          return this.i18nService.t(\"hintEqualsPassword\");\n        case \"minlength\":\n          return this.i18nService.t(\"masterPasswordMinlength\", Utils.minimumPasswordLength);\n        default:\n          return this.i18nService.t(this.errorTag(error));\n      }\n    }\n\n    return;\n  }\n\n  private errorTag(error: AllValidationErrors): string {\n    const name = error.errorName.charAt(0).toUpperCase() + error.errorName.slice(1);\n    return `${error.controlName}${name}`;\n  }\n\n  //validation would be ignored on selfhosted\n  private acceptPoliciesValidation(): ValidatorFn {\n    return (control: AbstractControl) => {\n      const ctrlValue = control.value;\n\n      return !ctrlValue && this.showTerms ? { required: true } : null;\n    };\n  }\n\n  private async validateRegistration(showToast: boolean): Promise<{ isValid: boolean }> {\n    this.formGroup.markAllAsTouched();\n    this.showErrorSummary = true;\n\n    if (this.formGroup.get(\"acceptPolicies\").hasError(\"required\")) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"acceptPoliciesRequired\")\n      );\n      return { isValid: false };\n    }\n\n    //web\n    if (this.formGroup.invalid && !showToast) {\n      return { isValid: false };\n    }\n\n    //desktop, browser\n    if (this.formGroup.invalid && showToast) {\n      const errorText = this.getErrorToastMessage();\n      this.platformUtilsService.showToast(\"error\", this.i18nService.t(\"errorOccurred\"), errorText);\n      return { isValid: false };\n    }\n\n    const passwordWeak =\n      this.passwordStrengthResult != null && this.passwordStrengthResult.score < 3;\n    const passwordLeak =\n      this.formGroup.controls.checkForBreaches.value &&\n      (await this.auditService.passwordLeaked(this.formGroup.controls.masterPassword.value)) > 0;\n\n    if (passwordWeak && passwordLeak) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakAndBreachedMasterPasswordDesc\"),\n        this.i18nService.t(\"weakAndExposedMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    } else if (passwordWeak) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"weakMasterPasswordDesc\"),\n        this.i18nService.t(\"weakMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    } else if (passwordLeak) {\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"exposedMasterPasswordDesc\"),\n        this.i18nService.t(\"exposedMasterPassword\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        return { isValid: false };\n      }\n    }\n\n    return { isValid: true };\n  }\n\n  private async buildRegisterRequest(\n    email: string,\n    masterPassword: string,\n    name: string\n  ): Promise<RegisterRequest> {\n    const hint = this.formGroup.value.hint;\n    const kdf = DEFAULT_KDF_TYPE;\n    const kdfConfig = DEFAULT_KDF_CONFIG;\n    const key = await this.cryptoService.makeKey(masterPassword, email, kdf, kdfConfig);\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n    const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n    const request = new RegisterRequest(\n      email,\n      name,\n      hashedPassword,\n      hint,\n      encKey[1].encryptedString,\n      this.referenceData,\n      this.captchaToken,\n      kdf,\n      kdfConfig.iterations,\n      kdfConfig.memory,\n      kdfConfig.parallelism\n    );\n    request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n    const orgInvite = await this.stateService.getOrganizationInvitation();\n    if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n      request.token = orgInvite.token;\n      request.organizationUserId = orgInvite.organizationUserId;\n    }\n    return request;\n  }\n\n  private async registerAccount(\n    request: RegisterRequest,\n    showToast: boolean\n  ): Promise<{ successful: boolean; captchaBypassToken?: string }> {\n    if (!(await this.validateRegistration(showToast)).isValid) {\n      return { successful: false };\n    }\n    this.formPromise = this.apiService.postRegister(request);\n    try {\n      const response = await this.formPromise;\n      return { successful: true, captchaBypassToken: response.captchaBypassToken };\n    } catch (e) {\n      if (this.handleCaptchaRequired(e)) {\n        return { successful: false };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  private async logIn(\n    email: string,\n    masterPassword: string,\n    captchaBypassToken: string\n  ): Promise<{ captchaRequired: boolean }> {\n    const credentials = new PasswordLogInCredentials(\n      email,\n      masterPassword,\n      captchaBypassToken,\n      null\n    );\n    const loginResponse = await this.authService.logIn(credentials);\n    if (this.handleCaptchaRequired(loginResponse)) {\n      return { captchaRequired: true };\n    }\n    return { captchaRequired: false };\n  }\n}\n","import { Component, Input } from \"@angular/core\";\nimport { AbstractControl, UntypedFormGroup } from \"@angular/forms\";\n\n@Component({\n  selector: \"bit-error-summary\",\n  template: ` <ng-container *ngIf=\"errorCount > 0\">\n    <i class=\"bwi bwi-error\"></i> {{ \"fieldsNeedAttention\" | i18n: errorString }}\n  </ng-container>`,\n  host: {\n    class: \"tw-block tw-text-danger tw-mt-2\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorSummary {\n  @Input()\n  formGroup: UntypedFormGroup;\n\n  get errorCount(): number {\n    return this.getErrorCount(this.formGroup);\n  }\n\n  get errorString() {\n    return this.errorCount.toString();\n  }\n\n  private getErrorCount(form: UntypedFormGroup): number {\n    return Object.values(form.controls).reduce((acc: number, control: AbstractControl) => {\n      if (control instanceof UntypedFormGroup) {\n        return acc + this.getErrorCount(control);\n      }\n\n      if (control.errors == null) {\n        return acc;\n      }\n\n      if (!control.dirty && control.untouched) {\n        return acc;\n      }\n\n      return acc + Object.keys(control.errors).length;\n    }, 0);\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable tailwindcss/no-custom-classname -->\n<form\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  class=\"tw-container tw-mx-auto\"\n  [formGroup]=\"formGroup\"\n>\n  <div>\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"emailAddress\" | i18n }}</bit-label>\n        <input id=\"register-form_input_email\" bitInput type=\"email\" formControlName=\"email\" />\n        <bit-hint>{{ \"emailAddressDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"name\" | i18n }}</bit-label>\n        <input id=\"register-form_input_name\" bitInput type=\"text\" formControlName=\"name\" />\n        <bit-hint>{{ \"yourNameDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <app-callout\n        type=\"info\"\n        [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n        *ngIf=\"enforcedPolicyOptions\"\n      >\n      </app-callout>\n      <bit-form-field>\n        <bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_master-password\"\n          bitInput\n          type=\"password\"\n          formControlName=\"masterPassword\"\n        />\n        <button\n          type=\"button\"\n          bitSuffix\n          bitIconButton\n          bitPasswordInputToggle\n          [(toggled)]=\"showPassword\"\n        ></button>\n        <bit-hint>\n          <span class=\"tw-font-semibold\">{{ \"important\" | i18n }}</span>\n          {{ \"masterPassImportant\" | i18n }} {{ characterMinimumMessage }}\n        </bit-hint>\n      </bit-form-field>\n      <app-password-strength\n        [password]=\"formGroup.get('masterPassword')?.value\"\n        [email]=\"formGroup.get('email')?.value\"\n        [name]=\"formGroup.get('name')?.value\"\n        [showText]=\"true\"\n        (passwordStrengthResult)=\"getStrengthResult($event)\"\n      >\n      </app-password-strength>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"reTypeMasterPass\" | i18n }}</bit-label>\n        <input\n          id=\"register-form_input_confirm-master-password\"\n          bitInput\n          type=\"password\"\n          formControlName=\"confirmMasterPassword\"\n        />\n        <button\n          type=\"button\"\n          bitSuffix\n          bitIconButton\n          bitPasswordInputToggle\n          [(toggled)]=\"showPassword\"\n        ></button>\n      </bit-form-field>\n    </div>\n\n    <div class=\"tw-mb-3\">\n      <bit-form-field>\n        <bit-label>{{ \"masterPassHintLabel\" | i18n }}</bit-label>\n        <input id=\"register-form_input_hint\" bitInput type=\"text\" formControlName=\"hint\" />\n        <bit-hint>{{ \"masterPassHintDesc\" | i18n }}</bit-hint>\n      </bit-form-field>\n    </div>\n\n    <div [hidden]=\"!showCaptcha()\">\n      <iframe id=\"hcaptcha_iframe\" height=\"80\"></iframe>\n    </div>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          id=\"checkForBreaches\"\n          name=\"CheckBreach\"\n          formControlName=\"checkForBreaches\"\n        />\n        <label class=\"form-check-label\" for=\"checkForBreaches\">\n          {{ \"checkForBreaches\" | i18n }}\n        </label>\n      </div>\n    </div>\n    <div class=\"tw-mb-3 tw-flex tw-items-start\" *ngIf=\"showTerms\">\n      <div class=\"tw-flex tw-h-6 tw-items-center\">\n        <input\n          id=\"register-form_input_accept-policies\"\n          class=\"tw-border-gray-300 tw-w-4 tw-rounded tw-border\"\n          bitInput\n          type=\"checkbox\"\n          formControlName=\"acceptPolicies\"\n        />\n      </div>\n      <bit-label class=\"ml-2\">\n        {{ \"acceptPolicies\" | i18n }}<br />\n        <a href=\"https://bitwarden.com/terms/\" target=\"_blank\" rel=\"noopener\">{{\n          \"termsOfService\" | i18n\n        }}</a\n        >,\n        <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\" rel=\"noopener\">{{\n          \"privacyPolicy\" | i18n\n        }}</a>\n      </bit-label>\n    </div>\n\n    <hr />\n    <div class=\"tw-flex tw-space-x-2 tw-pt-2\">\n      <ng-container *ngIf=\"!accountCreated\">\n        <button\n          [block]=\"true\"\n          type=\"submit\"\n          buttonType=\"primary\"\n          bitButton\n          [loading]=\"form.loading\"\n        >\n          {{ \"createAccount\" | i18n }}\n        </button>\n        <a bitButton [block]=\"true\" buttonType=\"secondary\" routerLink=\"/login\">\n          <i class=\"bwi bwi-sign-in tw-mr-2\"></i>\n          {{ \"logIn\" | i18n }}\n        </a>\n      </ng-container>\n      <ng-container *ngIf=\"accountCreated\">\n        <button\n          [block]=\"true\"\n          type=\"submit\"\n          buttonType=\"primary\"\n          bitButton\n          [loading]=\"form.loading\"\n        >\n          {{ \"logIn\" | i18n }}\n        </button>\n      </ng-container>\n    </div>\n    <bit-error-summary *ngIf=\"showErrorSummary\" [formGroup]=\"formGroup\"></bit-error-summary>\n  </div>\n</form>\n","import { Component, Input } from \"@angular/core\";\nimport { UntypedFormBuilder } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { RegisterComponent as BaseRegisterComponent } from \"@bitwarden/angular/components/register.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { FormValidationErrorsService } from \"@bitwarden/common/abstractions/formValidationErrors.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\n\n@Component({\n  selector: \"app-register-form\",\n  templateUrl: \"./register-form.component.html\",\n})\nexport class RegisterFormComponent extends BaseRegisterComponent {\n  @Input() queryParamEmail: string;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() referenceDataValue: ReferenceEventRequest;\n\n  showErrorSummary = false;\n  characterMinimumMessage: string;\n\n  constructor(\n    formValidationErrorService: FormValidationErrorsService,\n    formBuilder: UntypedFormBuilder,\n    authService: AuthService,\n    router: Router,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    apiService: ApiService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    private policyService: PolicyService,\n    environmentService: EnvironmentService,\n    logService: LogService,\n    auditService: AuditService\n  ) {\n    super(\n      formValidationErrorService,\n      formBuilder,\n      authService,\n      router,\n      i18nService,\n      cryptoService,\n      apiService,\n      stateService,\n      platformUtilsService,\n      passwordGenerationService,\n      environmentService,\n      logService,\n      auditService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    this.referenceData = this.referenceDataValue;\n\n    if (this.queryParamEmail) {\n      this.formGroup.get(\"email\")?.setValue(this.queryParamEmail);\n    }\n\n    if (this.enforcedPolicyOptions != null && this.enforcedPolicyOptions.minLength > 0) {\n      this.characterMinimumMessage = \"\";\n    } else {\n      this.characterMinimumMessage = this.i18nService.t(\"characterMinimum\", this.minimumLength);\n    }\n  }\n\n  async submit() {\n    if (\n      this.enforcedPolicyOptions != null &&\n      !this.policyService.evaluateMasterPassword(\n        this.passwordStrengthResult.score,\n        this.formGroup.value.masterPassword,\n        this.enforcedPolicyOptions\n      )\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordPolicyRequirementsNotMet\")\n      );\n      return;\n    }\n\n    await super.submit(false);\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-forbes\",\n  templateUrl: \"logo-forbes.component.html\",\n})\nexport class LogoForbesComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/forbes-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"Forbes Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    “Bitwarden boasts the backing of some of the world's best security experts and an attractive,\n    easy-to-use interface”\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-us-news\",\n  templateUrl: \"logo-us-news.component.html\",\n})\nexport class LogoUSNewsComponent {}\n","<img\n  src=\"../../images/register-layout/usnews-360-badge.svg\"\n  class=\"tw-mx-auto tw-block tw-w-48\"\n  alt=\"US News 360 Reviews Best Password Manager\"\n/>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise-content\",\n  templateUrl: \"enterprise-content.component.html\",\n})\nexport class EnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams-content\",\n  templateUrl: \"teams-content.component.html\",\n})\nexport class TeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"app-trial-confirmation-details\",\n  templateUrl: \"confirmation-details.component.html\",\n})\nexport class ConfirmationDetailsComponent {\n  @Input() email: string;\n  @Input() orgLabel: string;\n}\n","<div class=\"tw-pl-6 tw-pb-6\">\n  <p class=\"tw-text-xl\">{{ \"trialThankYou\" | i18n: orgLabel }}</p>\n  <ul class=\"tw-list-disc\">\n    <li>\n      <p>\n        {{ \"trialConfirmationEmail\" | i18n }}\n        <span class=\"tw-font-bold\">{{ email }}</span\n        >.\n      </p>\n    </li>\n    <li>\n      <p>\n        {{ \"trialPaidInfoMessage\" | i18n: orgLabel }}\n      </p>\n    </li>\n  </ul>\n</div>\n","<form #form [formGroup]=\"formGroup\" [appApiAction]=\"formPromise\" (ngSubmit)=\"submit()\">\n  <div class=\"tw-container tw-mb-3\">\n    <div class=\"tw-mb-6\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"billingPlanLabel\" | i18n }}</h2>\n      <div class=\"tw-mb-1 tw-items-center\" *ngFor=\"let selectablePlan of selectablePlans\">\n        <label class=\"tw- tw-block tw-text-main\" for=\"interval{{ selectablePlan.type }}\">\n          <input\n            checked\n            class=\"tw-h-4 tw-w-4 tw-align-middle\"\n            id=\"interval{{ selectablePlan.type }}\"\n            name=\"plan\"\n            type=\"radio\"\n            [value]=\"selectablePlan.type\"\n            formControlName=\"plan\"\n          />\n          <ng-container *ngIf=\"selectablePlan.isAnnual\">\n            {{ \"annual\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"yr\" | i18n }}\n          </ng-container>\n          <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n            {{ \"monthly\" | i18n }} -\n            {{\n              (selectablePlan.basePrice === 0 ? selectablePlan.seatPrice : selectablePlan.basePrice)\n                | currency: \"$\"\n            }}\n            /{{ \"monthAbbr\" | i18n }}\n          </ng-container>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"tw-mb-4\">\n      <h2 class=\"tw-mb-3 tw-text-base tw-font-semibold\">{{ \"paymentType\" | i18n }}</h2>\n      <app-payment [hideCredit]=\"true\" [trialFlow]=\"true\"></app-payment>\n      <app-tax-info [trialFlow]=\"true\" (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n    </div>\n\n    <div class=\"tw-flex tw-space-x-2\">\n      <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n        {{ \"startTrial\" | i18n }}\n      </button>\n\n      <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"stepBack()\">Back</button>\n    </div>\n  </div>\n</form>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { UntypedFormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"app-billing\",\n  templateUrl: \"./billing.component.html\",\n})\nexport class BillingComponent extends OrganizationPlansComponent {\n  @Input() orgInfoForm: FormGroup;\n  @Output() previousStep = new EventEmitter();\n\n  constructor(\n    apiService: ApiService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cryptoService: CryptoService,\n    router: Router,\n    syncService: SyncService,\n    policyService: PolicyService,\n    organizationService: OrganizationService,\n    logService: LogService,\n    messagingService: MessagingService,\n    formBuilder: UntypedFormBuilder,\n    organizationApiService: OrganizationApiServiceAbstraction\n  ) {\n    super(\n      apiService,\n      i18nService,\n      platformUtilsService,\n      cryptoService,\n      router,\n      syncService,\n      policyService,\n      organizationService,\n      logService,\n      messagingService,\n      formBuilder,\n      organizationApiService\n    );\n  }\n\n  async ngOnInit() {\n    const additionalSeats = this.product == ProductType.Families ? 0 : 1;\n    this.formGroup.patchValue({\n      name: this.orgInfoForm.value.name,\n      billingEmail: this.orgInfoForm.value.email,\n      additionalSeats: additionalSeats,\n      plan: this.plan,\n      product: this.product,\n    });\n    this.isInTrialFlow = true;\n    await super.ngOnInit();\n  }\n\n  stepBack() {\n    this.previousStep.emit();\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-default-content\",\n  templateUrl: \"default-content.component.html\",\n})\nexport class DefaultContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise1-content\",\n  templateUrl: \"enterprise1-content.component.html\",\n})\nexport class Enterprise1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-enterprise2-content\",\n  templateUrl: \"enterprise2-content.component.html\",\n})\nexport class Enterprise2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams1-content\",\n  templateUrl: \"teams1-content.component.html\",\n})\nexport class Teams1ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-teams2-content\",\n  templateUrl: \"teams2-content.component.html\",\n})\nexport class Teams2ContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-logo-cnet\",\n  templateUrl: \"logo-cnet.component.html\",\n})\nexport class LogoCnetComponent {}\n","<figure>\n  <figcaption>\n    <cite>\n      <img\n        src=\"../../images/register-layout/cnet-logo.svg\"\n        class=\"tw-mx-auto tw-block tw-w-40\"\n        alt=\"CNET Logo\"\n      />\n    </cite>\n  </figcaption>\n  <blockquote class=\"tw-mx-auto tw-mt-2 tw-max-w-xl tw-px-4 tw-text-center\">\n    \"No more excuses; start using Bitwarden today. The identity you save could be your own. The\n    money definitely will be.\"\n  </blockquote>\n</figure>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-enterprise-content\",\n  templateUrl: \"cnet-enterprise-content.component.html\",\n})\nexport class CnetEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Enterprise Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-individual-content\",\n  templateUrl: \"cnet-individual-content.component.html\",\n})\nexport class CnetIndividualContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Premium Account Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Secure your account with advanced two-step login</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-cnet-teams-content\",\n  templateUrl: \"cnet-teams-content.component.html\",\n})\nexport class CnetTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">Start Your Teams Free Trial Now</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Millions of individuals, teams, and organizations worldwide trust Bitwarden for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Collaborate and share securely</li>\n  <li>Deploy and manage quickly and easily</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-cnet></app-logo-cnet>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-enterprise-content\",\n  templateUrl: \"abm-enterprise-content.component.html\",\n})\nexport class AbmEnterpriseContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-abm-teams-content\",\n  templateUrl: \"abm-teams-content.component.html\",\n})\nexport class AbmTeamsContentComponent {}\n","<h1 class=\"tw-text-4xl !tw-text-alt2\">The Bitwarden Password Manager</h1>\n<div class=\"tw-pt-32\">\n  <h2 class=\"tw-text-2xl\">\n    Trusted by millions of individuals, teams, and organizations worldwide for secure password\n    storage and sharing.\n  </h2>\n</div>\n<ul class=\"tw-mt-12 tw-flex tw-flex-col tw-gap-10 tw-text-2xl tw-text-main\">\n  <li>Store logins, secure notes, and more</li>\n  <li>Collaborate and share securely</li>\n  <li>Access anywhere on any device</li>\n  <li>Create your account to get started</li>\n</ul>\n<div class=\"tw-mt-28 tw-flex tw-flex-col tw-items-center tw-gap-5\">\n  <app-logo-forbes></app-logo-forbes>\n  <app-logo-us-news></app-logo-us-news>\n</div>\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<!-- eslint-disable tailwindcss/no-custom-classname -->\n<div *ngIf=\"accountCreateOnly\" class=\"\">\n  <h1 class=\"tw-mt-12 tw-text-center tw-text-xl\">{{ \"createAccount\" | i18n }}</h1>\n  <div\n    class=\"tw-min-w-xl tw-m-auto tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n  >\n    <app-register-form\n      [queryParamEmail]=\"email\"\n      [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n      [referenceDataValue]=\"referenceData\"\n    ></app-register-form>\n  </div>\n</div>\n<div *ngIf=\"!accountCreateOnly\">\n  <div class=\"tw-absolute tw--z-10 tw--mt-48 tw-h-[28rem] tw-w-full tw-bg-background-alt2\"></div>\n  <div class=\"tw-min-w-4xl tw-mx-auto tw-flex tw-max-w-screen-xl tw-gap-12 tw-px-4\">\n    <div class=\"tw-w-1/2\">\n      <img\n        alt=\"Bitwarden\"\n        style=\"height: 50px; width: 335px\"\n        class=\"tw-mt-6\"\n        src=\"../../images/register-layout/logo-horizontal-white.svg\"\n      />\n\n      <div class=\"tw-pt-12\">\n        <!-- Layout params are used by marketing to determine left-hand content -->\n        <app-default-content *ngIf=\"layout === layouts.default\"></app-default-content>\n        <app-teams-content *ngIf=\"layout === layouts.teams\"></app-teams-content>\n        <app-teams1-content *ngIf=\"layout === layouts.teams1\"></app-teams1-content>\n        <app-teams2-content *ngIf=\"layout === layouts.teams2\"></app-teams2-content>\n        <app-enterprise-content *ngIf=\"layout === layouts.enterprise\"></app-enterprise-content>\n        <app-enterprise1-content *ngIf=\"layout === layouts.enterprise1\"></app-enterprise1-content>\n        <app-enterprise2-content *ngIf=\"layout === layouts.enterprise2\"></app-enterprise2-content>\n        <app-cnet-enterprise-content\n          *ngIf=\"layout === layouts.cnetcmpgnent\"\n        ></app-cnet-enterprise-content>\n        <app-cnet-individual-content\n          *ngIf=\"layout === layouts.cnetcmpgnind\"\n        ></app-cnet-individual-content>\n        <app-cnet-teams-content *ngIf=\"layout === layouts.cnetcmpgnteams\"></app-cnet-teams-content>\n        <app-abm-enterprise-content\n          *ngIf=\"layout === layouts.abmenterprise\"\n        ></app-abm-enterprise-content>\n        <app-abm-teams-content *ngIf=\"layout === layouts.abmteams\"></app-abm-teams-content>\n      </div>\n    </div>\n    <div class=\"tw-w-1/2\">\n      <div *ngIf=\"!useTrialStepper\">\n        <div\n          class=\"tw-min-w-xl tw-m-auto tw-mt-28 tw-max-w-xl tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background tw-p-8\"\n        >\n          <app-register-form\n            [queryParamEmail]=\"email\"\n            [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n            [referenceDataValue]=\"referenceData\"\n          ></app-register-form>\n        </div>\n      </div>\n      <div class=\"tw-pt-44\" *ngIf=\"useTrialStepper\">\n        <div class=\"tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-background\">\n          <div class=\"tw-flex tw-h-12 tw-w-full tw-items-center tw-rounded-t tw-bg-secondary-100\">\n            <h2 class=\"tw-mb-0 tw-pl-4 tw-text-base tw-font-bold tw-uppercase\">\n              Start your 7-Day free trial of Bitwarden for {{ org }}\n            </h2>\n          </div>\n          <app-vertical-stepper #stepper linear (selectionChange)=\"stepSelectionChange($event)\">\n            <app-vertical-step label=\"Create Account\" [editable]=\"false\" [subLabel]=\"email\">\n              <app-register-form\n                [isInTrialFlow]=\"true\"\n                (createdAccount)=\"createdAccount($event)\"\n                [referenceDataValue]=\"referenceData\"\n              ></app-register-form>\n            </app-vertical-step>\n            <app-vertical-step label=\"Organization Information\" [subLabel]=\"orgInfoSubLabel\">\n              <app-org-info [nameOnly]=\"true\" [formGroup]=\"orgInfoFormGroup\"></app-org-info>\n              <button\n                bitButton\n                buttonType=\"primary\"\n                [disabled]=\"orgInfoFormGroup.get('name').invalid\"\n                cdkStepperNext\n              >\n                Next\n              </button>\n            </app-vertical-step>\n            <app-vertical-step label=\"Billing\" [subLabel]=\"billingSubLabel\">\n              <app-billing\n                *ngIf=\"stepper.selectedIndex === 2\"\n                [plan]=\"plan\"\n                [product]=\"product\"\n                [orgInfoForm]=\"orgInfoFormGroup\"\n                (previousStep)=\"previousStep()\"\n                (onTrialBillingSuccess)=\"billingSuccess($event)\"\n              ></app-billing>\n            </app-vertical-step>\n            <app-vertical-step label=\"Confirmation Details\" [applyBorder]=\"false\">\n              <app-trial-confirmation-details\n                [email]=\"email\"\n                [orgLabel]=\"orgLabel\"\n              ></app-trial-confirmation-details>\n              <div class=\"tw-mb-3 tw-flex\">\n                <button bitButton buttonType=\"primary\" (click)=\"navigateToOrgVault()\">\n                  Get Started\n                </button>\n                <button\n                  bitButton\n                  buttonType=\"secondary\"\n                  (click)=\"navigateToOrgInvite()\"\n                  class=\"tw-ml-3 tw-inline-flex tw-items-center tw-px-3\"\n                >\n                  Invite Users\n                </button>\n              </div>\n            </app-vertical-step>\n          </app-vertical-stepper>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { StepperSelectionEvent } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { Component, OnDestroy, OnInit, ViewChild } from \"@angular/core\";\nimport { UntypedFormBuilder, Validators } from \"@angular/forms\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { first, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PolicyApiServiceAbstraction } from \"@bitwarden/common/abstractions/policy/policy-api.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { PolicyData } from \"@bitwarden/common/models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { ReferenceEventRequest } from \"@bitwarden/common/models/request/reference-event.request\";\n\nimport { RouterService } from \"./../../core/router.service\";\nimport { VerticalStepperComponent } from \"./vertical-stepper/vertical-stepper.component\";\n\nenum ValidOrgParams {\n  families = \"families\",\n  enterprise = \"enterprise\",\n  teams = \"teams\",\n  individual = \"individual\",\n  premium = \"premium\",\n  free = \"free\",\n}\n\nenum ValidLayoutParams {\n  default = \"default\",\n  teams = \"teams\",\n  teams1 = \"teams1\",\n  teams2 = \"teams2\",\n  enterprise = \"enterprise\",\n  enterprise1 = \"enterprise1\",\n  enterprise2 = \"enterprise2\",\n  cnetcmpgnent = \"cnetcmpgnent\",\n  cnetcmpgnind = \"cnetcmpgnind\",\n  cnetcmpgnteams = \"cnetcmpgnteams\",\n  abmenterprise = \"abmenterprise\",\n  abmteams = \"abmteams\",\n}\n\n@Component({\n  selector: \"app-trial\",\n  templateUrl: \"trial-initiation.component.html\",\n})\nexport class TrialInitiationComponent implements OnInit, OnDestroy {\n  email = \"\";\n  org = \"\";\n  orgInfoSubLabel = \"\";\n  orgId = \"\";\n  orgLabel = \"\";\n  billingSubLabel = \"\";\n  layout = \"default\";\n  plan: PlanType;\n  product: ProductType;\n  accountCreateOnly = true;\n  useTrialStepper = false;\n  policies: Policy[];\n  enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  trialFlowOrgs: string[] = [\n    ValidOrgParams.teams,\n    ValidOrgParams.enterprise,\n    ValidOrgParams.families,\n  ];\n  routeFlowOrgs: string[] = [\n    ValidOrgParams.free,\n    ValidOrgParams.premium,\n    ValidOrgParams.individual,\n  ];\n  layouts = ValidLayoutParams;\n  referenceData: ReferenceEventRequest;\n  @ViewChild(\"stepper\", { static: false }) verticalStepper: VerticalStepperComponent;\n\n  orgInfoFormGroup = this.formBuilder.group({\n    name: [\"\", { validators: [Validators.required, Validators.maxLength(50)], updateOn: \"change\" }],\n    email: [\"\"],\n  });\n\n  private set referenceDataId(referenceId: string) {\n    if (referenceId != null) {\n      this.referenceData.id = referenceId;\n    } else {\n      this.referenceData.id = (\"; \" + document.cookie)\n        .split(\"; reference=\")\n        .pop()\n        .split(\";\")\n        .shift();\n    }\n\n    if (this.referenceData.id === \"\") {\n      this.referenceData.id = null;\n    }\n  }\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private route: ActivatedRoute,\n    protected router: Router,\n    private formBuilder: UntypedFormBuilder,\n    private titleCasePipe: TitleCasePipe,\n    private stateService: StateService,\n    private logService: LogService,\n    private policyApiService: PolicyApiServiceAbstraction,\n    private policyService: PolicyService,\n    private i18nService: I18nService,\n    private routerService: RouterService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    this.route.queryParams.pipe(first()).subscribe((qParams) => {\n      this.referenceData = new ReferenceEventRequest();\n      if (qParams.email != null && qParams.email.indexOf(\"@\") > -1) {\n        this.email = qParams.email;\n      }\n\n      this.referenceDataId = qParams.reference;\n\n      if (Object.values(ValidLayoutParams).includes(qParams.layout)) {\n        this.layout = qParams.layout;\n        this.accountCreateOnly = false;\n      }\n\n      if (this.trialFlowOrgs.includes(qParams.org)) {\n        this.org = qParams.org;\n        this.orgLabel = this.titleCasePipe.transform(this.org);\n        this.useTrialStepper = true;\n        this.referenceData.flow = qParams.org;\n\n        if (this.org === ValidOrgParams.families) {\n          this.plan = PlanType.FamiliesAnnually;\n          this.product = ProductType.Families;\n        } else if (this.org === ValidOrgParams.teams) {\n          this.plan = PlanType.TeamsAnnually;\n          this.product = ProductType.Teams;\n        } else if (this.org === ValidOrgParams.enterprise) {\n          this.plan = PlanType.EnterpriseAnnually;\n          this.product = ProductType.Enterprise;\n        }\n      } else if (this.routeFlowOrgs.includes(qParams.org)) {\n        this.referenceData.flow = qParams.org;\n        const route = this.router.createUrlTree([\"create-organization\"], {\n          queryParams: { plan: qParams.org },\n        });\n        this.routerService.setPreviousUrl(route.toString());\n      }\n\n      // Are they coming from an email for sponsoring a families organization\n      // After logging in redirect them to setup the families sponsorship\n      this.setupFamilySponsorship(qParams.sponsorshipToken);\n    });\n\n    const invite = await this.stateService.getOrganizationInvitation();\n    if (invite != null) {\n      try {\n        const policies = await this.policyApiService.getPoliciesByToken(\n          invite.organizationId,\n          invite.token,\n          invite.email,\n          invite.organizationUserId\n        );\n        if (policies.data != null) {\n          const policiesData = policies.data.map((p) => new PolicyData(p));\n          this.policies = policiesData.map((p) => new Policy(p));\n        }\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n\n    if (this.policies != null) {\n      this.policyService\n        .masterPasswordPolicyOptions$(this.policies)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((enforcedPasswordPolicyOptions) => {\n          this.enforcedPolicyOptions = enforcedPasswordPolicyOptions;\n        });\n    }\n\n    this.orgInfoFormGroup.controls.name.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.orgInfoFormGroup.controls.name.markAsTouched();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  stepSelectionChange(event: StepperSelectionEvent) {\n    // Set org info sub label\n    if (event.selectedIndex === 1 && this.orgInfoFormGroup.controls.name.value === \"\") {\n      this.orgInfoSubLabel =\n        \"Enter your \" + this.titleCasePipe.transform(this.org) + \" organization information\";\n    } else if (event.previouslySelectedIndex === 1) {\n      this.orgInfoSubLabel = this.orgInfoFormGroup.controls.name.value;\n    }\n\n    //set billing sub label\n    if (event.selectedIndex === 2) {\n      this.billingSubLabel = this.i18nService.t(\"billingTrialSubLabel\");\n    }\n  }\n\n  createdAccount(email: string) {\n    this.email = email;\n    this.orgInfoFormGroup.get(\"email\")?.setValue(email);\n    this.verticalStepper.next();\n  }\n\n  billingSuccess(event: any) {\n    this.orgId = event?.orgId;\n    this.billingSubLabel = event?.subLabelText;\n    this.verticalStepper.next();\n  }\n\n  navigateToOrgVault() {\n    this.router.navigate([\"organizations\", this.orgId, \"vault\"]);\n  }\n\n  navigateToOrgInvite() {\n    this.router.navigate([\"organizations\", this.orgId, \"manage\", \"members\"]);\n  }\n\n  previousStep() {\n    this.verticalStepper.previous();\n  }\n\n  private setupFamilySponsorship(sponsorshipToken: string) {\n    if (sponsorshipToken != null) {\n      const route = this.router.createUrlTree([\"setup/families-for-enterprise\"], {\n        queryParams: { plan: sponsorshipToken },\n      });\n      this.routerService.setPreviousUrl(route.toString());\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/auth/enums/authentication-status\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class HomeGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  async canActivate(route: ActivatedRouteSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return this.router.createUrlTree([\"/login\"], { queryParams: route.queryParams });\n    }\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"/lock\"], { queryParams: route.queryParams });\n    }\n    return this.router.createUrlTree([\"/vault\"], { queryParams: route.queryParams });\n  }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-frontend-layout\",\n  templateUrl: \"frontend-layout.component.html\",\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n    document.body.classList.add(\"layout_frontend\");\n  }\n\n  ngOnDestroy() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n  Vaultwarden (unofficial Bitwarden&reg; server)<br />\n  {{ \"versionNumber\" | i18n: version }}\n</div>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-footer\",\n  templateUrl: \"footer.component.html\",\n})\nexport class FooterComponent implements OnInit {\n  version: string;\n  year = \"2015\";\n\n  constructor(private platformUtilsService: PlatformUtilsService) {}\n\n  async ngOnInit() {\n    this.year = new Date().getFullYear().toString();\n    this.version = await this.platformUtilsService.getApplicationVersion();\n  }\n}\n","<div class=\"container footer text-muted\">\n  <div class=\"row\">\n    <div class=\"col\">Vaultwarden (unofficial Bitwarden&reg; server)</div>\n    <div class=\"col text-center\"></div>\n    <div class=\"col text-right\">\n      {{ \"versionNumber\" | i18n: version }}\n    </div>\n  </div>\n</div>\n","<bit-menu #menu ariaRole=\"dialog\" [ariaLabel]=\"'switchProducts' | i18n\">\n  <div class=\"tw-px-4 tw-py-2\" *ngIf=\"products$ | async as products\">\n    <!-- Bento options -->\n    <!-- grid-template-columns is dynamic so we can collapse empty columns  -->\n    <section\n      [ngStyle]=\"{\n        '--num-products': products.bento.length,\n        'grid-template-columns': 'repeat(min(var(--num-products,1),3),auto)'\n      }\"\n      class=\"tw-grid tw-gap-2\"\n    >\n      <a\n        *ngFor=\"let product of products.bento\"\n        [routerLink]=\"product.appRoute\"\n        class=\"tw-group tw-flex tw-h-24 tw-w-28 tw-flex-col tw-items-center tw-justify-center tw-rounded tw-p-1 tw-text-primary-500 tw-outline-none hover:tw-bg-background-alt hover:tw-text-primary-700 hover:tw-no-underline focus-visible:!tw-ring-2 focus-visible:!tw-ring-primary-700\"\n        routerLinkActive=\"tw-font-bold tw-bg-primary-500 hover:tw-bg-primary-500 !tw-text-contrast tw-ring-offset-2\"\n        ariaCurrentWhenActive=\"page\"\n      >\n        <i class=\"bwi {{ product.icon }} tw-text-4xl !tw-m-0 !tw-mb-1\"></i>\n        <span class=\"tw-text-center tw-text-sm tw-leading-snug group-hover:tw-underline\">{{\n          product.name\n        }}</span>\n      </a>\n    </section>\n\n    <!-- Other options -->\n    <section\n      *ngIf=\"products.other.length > 0\"\n      class=\"tw-mt-4 tw-flex tw-w-full tw-flex-col tw-gap-2 tw-border-0 tw-border-t tw-border-solid tw-border-t-text-muted tw-p-2 tw-pb-0\"\n    >\n      <span class=\"tw-mb-1 tw-text-xs tw-text-muted\">{{ \"moreFromBitwarden\" | i18n }}</span>\n      <a\n        *ngFor=\"let product of products.other\"\n        bitLink\n        [href]=\"product.marketingRoute\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <span class=\"tw-flex tw-items-center tw-font-normal\">\n          <i class=\"bwi bwi-fw {{ product.icon }} tw-m-0 !tw-mr-3\"></i>{{ product.name }}\n        </span>\n      </a>\n    </section>\n  </div>\n</bit-menu>\n","import { Component, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { combineLatest, map } from \"rxjs\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { MenuComponent } from \"@bitwarden/components\";\n\ntype ProductSwitcherItem = {\n  /**\n   * Displayed name\n   */\n  name: string;\n\n  /**\n   * Displayed icon\n   */\n  icon: string;\n\n  /**\n   * Route for items in the `bentoProducts$` section\n   */\n  appRoute?: string | any[];\n\n  /**\n   * Route for items in the `otherProducts$` section\n   */\n  marketingRoute?: string | any[];\n};\n\n@Component({\n  selector: \"product-switcher-content\",\n  templateUrl: \"./product-switcher-content.component.html\",\n})\nexport class ProductSwitcherContentComponent {\n  @ViewChild(\"menu\")\n  menu: MenuComponent;\n\n  protected products$ = combineLatest([\n    this.organizationService.organizations$,\n    this.route.paramMap,\n  ]).pipe(\n    map(([orgs, paramMap]) => {\n      const routeOrg = orgs.find((o) => o.id === paramMap.get(\"organizationId\"));\n      // If the active route org doesn't have access to SM, find the first org that does.\n      const smOrg = routeOrg?.canAccessSecretsManager\n        ? routeOrg\n        : orgs.find((o) => o.canAccessSecretsManager);\n\n      /**\n       * We can update this to the \"satisfies\" type upon upgrading to TypeScript 4.9\n       * https://devblogs.microsoft.com/typescript/announcing-typescript-4-9/#satisfies\n       */\n      const products: Record<\"pm\" | \"sm\" | \"orgs\", ProductSwitcherItem> = {\n        pm: {\n          name: \"Password Manager\",\n          icon: \"bwi-lock\",\n          appRoute: \"/vault\",\n          marketingRoute: \"https://bitwarden.com/products/personal/\",\n        },\n        sm: {\n          name: \"Secrets Manager Beta\",\n          icon: \"bwi-cli\",\n          appRoute: [\"/sm\", smOrg?.id],\n          marketingRoute: \"https://bitwarden.com/products/secrets-manager/\",\n        },\n        orgs: {\n          name: \"Organizations\",\n          icon: \"bwi-business\",\n          marketingRoute: \"https://bitwarden.com/products/business/\",\n        },\n      };\n\n      const bento: ProductSwitcherItem[] = [products.pm];\n      const other: ProductSwitcherItem[] = [];\n\n      if (orgs.length === 0) {\n        other.push(products.orgs);\n      }\n\n      if (smOrg) {\n        bento.push(products.sm);\n      } else {\n        other.push(products.sm);\n      }\n\n      return {\n        bento,\n        other,\n      };\n    })\n  );\n\n  constructor(private organizationService: OrganizationService, private route: ActivatedRoute) {}\n}\n","<ng-template [ngIf]=\"isEnabled\">\n  <button\n    type=\"button\"\n    bitIconButton=\"bwi bwi-fw bwi-filter\"\n    [bitMenuTriggerFor]=\"content?.menu\"\n    [buttonType]=\"buttonType\"\n    [attr.aria-label]=\"'switchProducts' | i18n\"\n  ></button>\n  <product-switcher-content #content></product-switcher-content>\n</ng-template>\n","import { AfterViewInit, ChangeDetectorRef, Component, Input } from \"@angular/core\";\n\nimport { IconButtonType } from \"@bitwarden/components/src/icon-button/icon-button.component\";\n\nimport { flagEnabled } from \"../../../utils/flags\";\n\n@Component({\n  selector: \"product-switcher\",\n  templateUrl: \"./product-switcher.component.html\",\n})\nexport class ProductSwitcherComponent implements AfterViewInit {\n  protected isEnabled = flagEnabled(\"secretsManager\");\n\n  /**\n   * Passed to the product switcher's `bitIconButton`\n   */\n  @Input()\n  buttonType: IconButtonType = \"main\";\n\n  ngAfterViewInit() {\n    /**\n     * Resolves https://angular.io/errors/NG0100 [SM-403]\n     *\n     * Caused by `[bitMenuTriggerFor]=\"content?.menu\"` in template\n     */\n    this.changeDetector.detectChanges();\n  }\n\n  constructor(private changeDetector: ChangeDetectorRef) {}\n}\n","import { Component, Input, OnDestroy } from \"@angular/core\";\nimport { Observable, Subject } from \"rxjs\";\n\nimport { AvatarUpdateService } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\ntype SizeTypes = \"xlarge\" | \"large\" | \"default\" | \"small\" | \"xsmall\";\n@Component({\n  selector: \"dynamic-avatar\",\n  template: `<span [title]=\"title\">\n    <bit-avatar\n      appStopClick\n      [text]=\"text\"\n      [size]=\"size\"\n      [color]=\"color$ | async\"\n      [border]=\"border\"\n      [id]=\"id\"\n      [title]=\"title\"\n    >\n    </bit-avatar>\n  </span>`,\n})\nexport class DynamicAvatarComponent implements OnDestroy {\n  @Input() border = false;\n  @Input() id: string;\n  @Input() text: string;\n  @Input() title: string;\n  @Input() size: SizeTypes = \"default\";\n  color$: Observable<string | null>;\n  private destroy$ = new Subject<void>();\n\n  constructor(private accountUpdateService: AvatarUpdateService) {\n    if (this.text) {\n      this.text = this.text.toUpperCase();\n    }\n    this.color$ = this.accountUpdateService.avatarUpdate$;\n  }\n\n  async ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<nav class=\"navbar navbar-expand navbar-dark\" [ngClass]=\"{ 'nav-background-alt': selfHosted }\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{ 'pageTitle' | i18n: 'Vaultwarden' }}\">\n      <i class=\"bwi bwi-shield\" aria-hidden=\"true\"></i>\n    </a>\n    <div class=\"collapse navbar-collapse\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/vault\">{{ \"vaults\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/sends\">{{ \"send\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/tools\">{{ \"tools\" | i18n }}</a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a class=\"nav-link\" routerLink=\"/reports\">{{ \"reports\" | i18n }}</a>\n        </li>\n        <li\n          *ngIf=\"(organizations$ | async)?.length >= 1\"\n          class=\"nav-item\"\n          routerLinkActive=\"active\"\n        >\n          <a class=\"nav-link\" [routerLink]=\"['/organizations', (organizations$ | async)[0].id]\">{{\n            \"organizations\" | i18n\n          }}</a>\n        </li>\n        <ng-container *ngIf=\"providers.length >= 1\">\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length == 1\">\n            <a class=\"nav-link\" [routerLink]=\"['/providers', providers[0].id]\">{{\n              \"provider\" | i18n\n            }}</a>\n          </li>\n          <li class=\"nav-item\" routerLinkActive=\"active\" *ngIf=\"providers.length > 1\">\n            <a class=\"nav-link\" routerLink=\"/providers\">{{ \"provider\" | i18n }}</a>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n    <product-switcher buttonType=\"light\"></product-switcher>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li>\n        <button\n          [bitMenuTriggerFor]=\"accountMenu\"\n          class=\"tw-border-0 tw-bg-transparent tw-text-alt2 tw-opacity-70 hover:tw-opacity-90\"\n        >\n          <dynamic-avatar\n            [text]=\"name\"\n            [id]=\"userId\"\n            size=\"xsmall\"\n            aria-hidden=\"true\"\n          ></dynamic-avatar>\n          <i class=\"bwi bwi-caret-down bwi-sm\" aria-hidden=\"true\"></i>\n        </button>\n        <bit-menu class=\"dropdown-menu\" #accountMenu>\n          <div class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\">\n            <div\n              class=\"tw-flex tw-items-center tw-py-1 tw-px-4 tw-leading-tight tw-text-info\"\n              *ngIf=\"name\"\n              appStopProp\n            >\n              <dynamic-avatar [text]=\"name\" [id]=\"userId\" size=\"small\"></dynamic-avatar>\n              <div class=\"tw-ml-2 tw-block tw-overflow-hidden tw-whitespace-nowrap\">\n                <span>{{ \"loggedInAs\" | i18n }}</span>\n                <small class=\"tw-block tw-overflow-hidden tw-whitespace-nowrap tw-text-muted\">{{\n                  name\n                }}</small>\n              </div>\n            </div>\n            <bit-menu-divider></bit-menu-divider>\n            <a bitMenuItem routerLink=\"/settings/account\">\n              <i class=\"bwi bwi-fw bwi-user\" aria-hidden=\"true\"></i>\n              {{ \"accountSettings\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://github.com/dani-garcia/vaultwarden/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-question-circle\" aria-hidden=\"true\"></i>\n              {{ \"getHelp\" | i18n }}\n            </a>\n            <a bitMenuItem href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\">\n              <i class=\"bwi bwi-fw bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"getApps\" | i18n }}\n            </a>\n            <bit-menu-divider></bit-menu-divider>\n            <button bitMenuItem type=\"button\" (click)=\"lock()\">\n              <i class=\"bwi bwi-fw bwi-lock\" aria-hidden=\"true\"></i>\n              {{ \"lockNow\" | i18n }}\n            </button>\n            <button bitMenuItem type=\"button\" (click)=\"logOut()\">\n              <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n              {{ \"logOut\" | i18n }}\n            </button>\n          </div>\n        </bit-menu>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, OnInit } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport {\n  canAccessAdmin,\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProviderService } from \"@bitwarden/common/abstractions/provider.service\";\nimport { TokenService } from \"@bitwarden/common/auth/abstractions/token.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Provider } from \"@bitwarden/common/models/domain/provider\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-navbar\",\n  templateUrl: \"navbar.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class NavbarComponent implements OnInit {\n  selfHosted = false;\n  name: string;\n  email: string;\n  providers: Provider[] = [];\n  userId: string;\n  organizations$: Observable<Organization[]>;\n\n  constructor(\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private providerService: ProviderService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private i18nService: I18nService\n  ) {\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.name = await this.tokenService.getName();\n    this.email = await this.tokenService.getEmail();\n    this.userId = await this.tokenService.getUserId();\n    if (this.name == null || this.name.trim() === \"\") {\n      this.name = this.email;\n    }\n\n    // Ensure providers and organizations are loaded\n    if ((await this.syncService.getLastSync()) == null) {\n      await this.syncService.fullSync(false);\n    }\n    this.providers = await this.providerService.getAll();\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter(isNotProviderUser)),\n      canAccessAdmin(this.i18nService)\n    );\n  }\n\n  lock() {\n    this.messagingService.send(\"lockVault\");\n  }\n\n  logOut() {\n    this.messagingService.send(\"logout\");\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-user-layout\",\n  templateUrl: \"user-layout.component.html\",\n})\nexport class UserLayoutComponent implements OnInit {\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { IconButtonModule } from \"../icon-button\";\nimport { LinkModule } from \"../link\";\nimport { MenuModule } from \"../menu\";\n\nimport { BreadcrumbComponent } from \"./breadcrumb.component\";\nimport { BreadcrumbsComponent } from \"./breadcrumbs.component\";\n\n@NgModule({\n  imports: [CommonModule, LinkModule, IconButtonModule, MenuModule, RouterModule],\n  declarations: [BreadcrumbsComponent, BreadcrumbComponent],\n  exports: [BreadcrumbsComponent, BreadcrumbComponent],\n})\nexport class BreadcrumbsModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { OrganizationNameBadgeComponent } from \"./organization-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [OrganizationNameBadgeComponent],\n  exports: [OrganizationNameBadgeComponent],\n})\nexport class OrganizationBadgeModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { GetCollectionNameFromIdPipe } from \"./get-collection-name.pipe\";\nimport { GetGroupNameFromIdPipe } from \"./get-group-name.pipe\";\nimport { GetOrgNameFromIdPipe } from \"./get-organization-name.pipe\";\n\n@NgModule({\n  declarations: [GetOrgNameFromIdPipe, GetCollectionNameFromIdPipe, GetGroupNameFromIdPipe],\n  exports: [GetOrgNameFromIdPipe, GetCollectionNameFromIdPipe, GetGroupNameFromIdPipe],\n})\nexport class PipesModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\nimport { PipesModule } from \"../../individual-vault/pipes/pipes.module\";\n\nimport { CollectionNameBadgeComponent } from \"./collection-name.badge.component\";\n\n@NgModule({\n  imports: [SharedModule, PipesModule],\n  declarations: [CollectionNameBadgeComponent],\n  exports: [CollectionNameBadgeComponent],\n})\nexport class CollectionBadgeModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\nimport { PipesModule } from \"../../individual-vault/pipes/pipes.module\";\n\nimport { GroupNameBadgeComponent } from \"./group-name-badge.component\";\n\n@NgModule({\n  imports: [SharedModule, PipesModule],\n  declarations: [GroupNameBadgeComponent],\n  exports: [GroupNameBadgeComponent],\n})\nexport class GroupBadgeModule {}\n","import { Observable } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/src/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/src/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/src/models/view/collection.view\";\nimport { FolderView } from \"@bitwarden/common/src/vault/models/view/folder.view\";\n\nimport {\n  CipherTypeFilter,\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"../../shared/models/vault-filter.type\";\n\nexport abstract class VaultFilterService {\n  collapsedFilterNodes$: Observable<Set<string>>;\n  filteredFolders$: Observable<FolderView[]>;\n  filteredCollections$: Observable<CollectionView[]>;\n  organizationTree$: Observable<TreeNode<OrganizationFilter>>;\n  folderTree$: Observable<TreeNode<FolderFilter>>;\n  collectionTree$: Observable<TreeNode<CollectionFilter>>;\n  cipherTypeTree$: Observable<TreeNode<CipherTypeFilter>>;\n  reloadCollections: () => Promise<void>;\n  getCollectionNodeFromTree: (id: string) => Promise<TreeNode<CollectionFilter>>;\n  setCollapsedFilterNodes: (collapsedFilterNodes: Set<string>) => Promise<void>;\n  expandOrgFilter: () => Promise<void>;\n  setOrganizationFilter: (organization: Organization) => void;\n  buildTypeTree: (\n    head: CipherTypeFilter,\n    array: CipherTypeFilter[]\n  ) => Observable<TreeNode<CipherTypeFilter>>;\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../../shared\";\n\nimport { VaultFilterSectionComponent } from \"./components/vault-filter-section.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VaultFilterSectionComponent],\n  exports: [SharedModule, VaultFilterSectionComponent],\n})\nexport class VaultFilterSharedModule {}\n","import { Injectable } from \"@angular/core\";\nimport {\n  BehaviorSubject,\n  combineLatestWith,\n  firstValueFrom,\n  map,\n  Observable,\n  of,\n  ReplaySubject,\n  switchMap,\n} from \"rxjs\";\n\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/vault/abstractions/folder/folder.service.abstraction\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\nimport { FolderView } from \"@bitwarden/common/vault/models/view/folder.view\";\n\nimport { CollectionAdminView } from \"../../../../organizations/core\";\nimport {\n  CipherTypeFilter,\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"../shared/models/vault-filter.type\";\n\nimport { VaultFilterService as VaultFilterServiceAbstraction } from \"./abstractions/vault-filter.service\";\n\nconst NestingDelimiter = \"/\";\n\n@Injectable()\nexport class VaultFilterService implements VaultFilterServiceAbstraction {\n  protected _collapsedFilterNodes = new BehaviorSubject<Set<string>>(null);\n  collapsedFilterNodes$: Observable<Set<string>> = this._collapsedFilterNodes.pipe(\n    switchMap(async (nodes) => nodes ?? (await this.getCollapsedFilterNodes()))\n  );\n\n  organizationTree$: Observable<TreeNode<OrganizationFilter>> =\n    this.organizationService.organizations$.pipe(\n      switchMap((orgs) => this.buildOrganizationTree(orgs))\n    );\n\n  protected _organizationFilter = new BehaviorSubject<Organization>(null);\n\n  filteredFolders$: Observable<FolderView[]> = this.folderService.folderViews$.pipe(\n    combineLatestWith(this._organizationFilter),\n    switchMap(([folders, org]) => {\n      return this.filterFolders(folders, org);\n    })\n  );\n  folderTree$: Observable<TreeNode<FolderFilter>> = this.filteredFolders$.pipe(\n    map((folders) => this.buildFolderTree(folders))\n  );\n\n  // TODO: Remove once collections is refactored with observables\n  // replace with collection service observable\n  private collectionViews$ = new ReplaySubject<CollectionView[]>(1);\n  filteredCollections$: Observable<CollectionView[]> = this.collectionViews$.pipe(\n    combineLatestWith(this._organizationFilter),\n    switchMap(([collections, org]) => {\n      return this.filterCollections(collections, org);\n    })\n  );\n  collectionTree$: Observable<TreeNode<CollectionFilter>> = this.filteredCollections$.pipe(\n    map((collections) => this.buildCollectionTree(collections))\n  );\n\n  cipherTypeTree$: Observable<TreeNode<CipherTypeFilter>> = this.buildCipherTypeTree();\n\n  constructor(\n    protected stateService: StateService,\n    protected organizationService: OrganizationService,\n    protected folderService: FolderService,\n    protected cipherService: CipherService,\n    protected collectionService: CollectionService,\n    protected policyService: PolicyService,\n    protected i18nService: I18nService\n  ) {}\n\n  // TODO: Remove once collections is refactored with observables\n  async reloadCollections() {\n    this.collectionViews$.next(await this.collectionService.getAllDecrypted());\n  }\n\n  async getCollectionNodeFromTree(id: string) {\n    const collections = await firstValueFrom(this.collectionTree$);\n    return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionFilter>;\n  }\n\n  async setCollapsedFilterNodes(collapsedFilterNodes: Set<string>): Promise<void> {\n    await this.stateService.setCollapsedGroupings(Array.from(collapsedFilterNodes));\n    this._collapsedFilterNodes.next(collapsedFilterNodes);\n  }\n\n  protected async getCollapsedFilterNodes(): Promise<Set<string>> {\n    const nodes = new Set(await this.stateService.getCollapsedGroupings());\n    return nodes;\n  }\n\n  setOrganizationFilter(organization: Organization) {\n    if (organization?.id != \"AllVaults\") {\n      this._organizationFilter.next(organization);\n    } else {\n      this._organizationFilter.next(null);\n    }\n  }\n\n  async expandOrgFilter() {\n    const collapsedFilterNodes = await firstValueFrom(this.collapsedFilterNodes$);\n    if (!collapsedFilterNodes.has(\"AllVaults\")) {\n      return;\n    }\n    collapsedFilterNodes.delete(\"AllVaults\");\n    await this.setCollapsedFilterNodes(collapsedFilterNodes);\n  }\n\n  protected async buildOrganizationTree(\n    orgs?: Organization[]\n  ): Promise<TreeNode<OrganizationFilter>> {\n    const headNode = this.getOrganizationFilterHead();\n    if (!(await this.policyService.policyAppliesToUser(PolicyType.PersonalOwnership))) {\n      const myVaultNode = this.getOrganizationFilterMyVault();\n      headNode.children.push(myVaultNode);\n    }\n    if (await this.policyService.policyAppliesToUser(PolicyType.SingleOrg)) {\n      orgs = orgs.slice(0, 1);\n    }\n    if (orgs) {\n      orgs.filter(isNotProviderUser).forEach((org) => {\n        const orgCopy = org as OrganizationFilter;\n        orgCopy.icon = \"bwi-business\";\n        const node = new TreeNode<OrganizationFilter>(orgCopy, headNode, orgCopy.name);\n        headNode.children.push(node);\n      });\n    }\n    return headNode;\n  }\n\n  protected getOrganizationFilterHead(): TreeNode<OrganizationFilter> {\n    const head = new Organization() as OrganizationFilter;\n    head.enabled = true;\n    return new TreeNode<OrganizationFilter>(head, null, \"allVaults\", \"AllVaults\");\n  }\n\n  protected getOrganizationFilterMyVault(): TreeNode<OrganizationFilter> {\n    const myVault = new Organization() as OrganizationFilter;\n    myVault.id = \"MyVault\";\n    myVault.icon = \"bwi-user\";\n    myVault.enabled = true;\n    myVault.hideOptions = true;\n    return new TreeNode<OrganizationFilter>(myVault, null, this.i18nService.t(\"myVault\"));\n  }\n\n  buildTypeTree(\n    head: CipherTypeFilter,\n    array?: CipherTypeFilter[]\n  ): Observable<TreeNode<CipherTypeFilter>> {\n    const headNode = new TreeNode<CipherTypeFilter>(head, null);\n    array?.forEach((filter) => {\n      const node = new TreeNode<CipherTypeFilter>(filter, headNode, filter.name);\n      headNode.children.push(node);\n    });\n    return of(headNode);\n  }\n\n  protected async filterCollections(\n    storedCollections: CollectionView[],\n    org?: Organization\n  ): Promise<CollectionView[]> {\n    return org?.id != null\n      ? storedCollections.filter((c) => c.organizationId === org.id)\n      : storedCollections;\n  }\n\n  protected buildCollectionTree(collections?: CollectionView[]): TreeNode<CollectionFilter> {\n    const headNode = this.getCollectionFilterHead();\n    if (!collections) {\n      return headNode;\n    }\n    const nodes: TreeNode<CollectionFilter>[] = [];\n    collections\n      .sort((a, b) => this.i18nService.collator.compare(a.name, b.name))\n      .forEach((c) => {\n        const collectionCopy = new CollectionView() as CollectionFilter;\n        collectionCopy.id = c.id;\n        collectionCopy.organizationId = c.organizationId;\n        collectionCopy.icon = \"bwi-collection\";\n        if (c instanceof CollectionAdminView) {\n          collectionCopy.groups = c.groups;\n          collectionCopy.assigned = c.assigned;\n        }\n        const parts =\n          c.name != null ? c.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n        ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n      });\n    nodes.forEach((n) => {\n      n.parent = headNode;\n      headNode.children.push(n);\n    });\n    return headNode;\n  }\n\n  protected getCollectionFilterHead(): TreeNode<CollectionFilter> {\n    const head = new CollectionView() as CollectionFilter;\n    return new TreeNode<CollectionFilter>(head, null, \"collections\", \"AllCollections\");\n  }\n\n  protected async filterFolders(\n    storedFolders: FolderView[],\n    org?: Organization\n  ): Promise<FolderView[]> {\n    // If no org or \"My Vault\" is selected, show all folders\n    if (org?.id == null || org?.id == \"MyVault\") {\n      return storedFolders;\n    }\n\n    // Otherwise, show only folders that have ciphers from the selected org and the \"no folder\" folder\n    const ciphers = await this.cipherService.getAllDecrypted();\n    const orgCiphers = ciphers.filter((c) => c.organizationId == org?.id);\n    return storedFolders.filter(\n      (f) => orgCiphers.some((oc) => oc.folderId == f.id) || f.id == null\n    );\n  }\n\n  protected buildFolderTree(folders?: FolderView[]): TreeNode<FolderFilter> {\n    const headNode = this.getFolderFilterHead();\n    if (!folders) {\n      return headNode;\n    }\n    const nodes: TreeNode<FolderFilter>[] = [];\n    folders.forEach((f) => {\n      const folderCopy = new FolderView() as FolderFilter;\n      folderCopy.id = f.id;\n      folderCopy.revisionDate = f.revisionDate;\n      folderCopy.icon = \"bwi-folder\";\n      const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, \"\").split(NestingDelimiter) : [];\n      ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n    });\n\n    nodes.forEach((n) => {\n      n.parent = headNode;\n      headNode.children.push(n);\n    });\n    return headNode;\n  }\n\n  protected getFolderFilterHead(): TreeNode<FolderFilter> {\n    const head = new FolderView() as FolderFilter;\n    return new TreeNode<FolderFilter>(head, null, \"folders\", \"AllFolders\");\n  }\n\n  protected buildCipherTypeTree(): Observable<TreeNode<CipherTypeFilter>> {\n    const allTypeFilters: CipherTypeFilter[] = [\n      {\n        id: \"favorites\",\n        name: this.i18nService.t(\"favorites\"),\n        type: \"favorites\",\n        icon: \"bwi-star\",\n      },\n      {\n        id: \"login\",\n        name: this.i18nService.t(\"typeLogin\"),\n        type: CipherType.Login,\n        icon: \"bwi-globe\",\n      },\n      {\n        id: \"card\",\n        name: this.i18nService.t(\"typeCard\"),\n        type: CipherType.Card,\n        icon: \"bwi-credit-card\",\n      },\n      {\n        id: \"identity\",\n        name: this.i18nService.t(\"typeIdentity\"),\n        type: CipherType.Identity,\n        icon: \"bwi-id-card\",\n      },\n      {\n        id: \"note\",\n        name: this.i18nService.t(\"typeSecureNote\"),\n        type: CipherType.SecureNote,\n        icon: \"bwi-sticky-note\",\n      },\n    ];\n\n    return this.buildTypeTree(\n      { id: \"AllItems\", name: \"allItems\", type: \"all\", icon: \"\" },\n      allTypeFilters\n    );\n  }\n}\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { filter, map, Observable, ReplaySubject, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessVaultTab,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/vault/abstractions/folder/folder.service.abstraction\";\n\nimport { CollectionAdminView } from \"../../../organizations/core\";\nimport { CollectionAdminService } from \"../../../organizations/core/services/collection-admin.service\";\nimport { VaultFilterService as BaseVaultFilterService } from \"../../individual-vault/vault-filter/services/vault-filter.service\";\nimport { CollectionFilter } from \"../../individual-vault/vault-filter/shared/models/vault-filter.type\";\n\n@Injectable()\nexport class VaultFilterService extends BaseVaultFilterService implements OnDestroy {\n  private destroy$ = new Subject<void>();\n  private _collections = new ReplaySubject<CollectionAdminView[]>(1);\n\n  filteredCollections$: Observable<CollectionAdminView[]> = this._collections.asObservable();\n\n  collectionTree$: Observable<TreeNode<CollectionFilter>> = this.filteredCollections$.pipe(\n    map((collections) => this.buildCollectionTree(collections))\n  );\n\n  constructor(\n    stateService: StateService,\n    organizationService: OrganizationService,\n    folderService: FolderService,\n    cipherService: CipherService,\n    collectionService: CollectionService,\n    policyService: PolicyService,\n    i18nService: I18nService,\n    protected collectionAdminService: CollectionAdminService\n  ) {\n    super(\n      stateService,\n      organizationService,\n      folderService,\n      cipherService,\n      collectionService,\n      policyService,\n      i18nService\n    );\n    this.loadSubscriptions();\n  }\n\n  protected loadSubscriptions() {\n    this._organizationFilter\n      .pipe(\n        filter((org) => org != null),\n        switchMap((org) => {\n          return this.loadCollections(org);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((collections) => {\n        this._collections.next(collections);\n      });\n  }\n\n  async reloadCollections() {\n    this._collections.next(await this.loadCollections(this._organizationFilter.getValue()));\n  }\n\n  protected async loadCollections(org: Organization): Promise<CollectionAdminView[]> {\n    let collections: CollectionAdminView[] = [];\n    if (canAccessVaultTab(org)) {\n      collections = await this.collectionAdminService.getAll(org.id);\n\n      const noneCollection = new CollectionAdminView();\n      noneCollection.name = this.i18nService.t(\"unassigned\");\n      noneCollection.organizationId = org.id;\n      collections.push(noneCollection);\n    }\n    return collections;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultFilterService as VaultFilterServiceAbstraction } from \"../../individual-vault/vault-filter/services/abstractions/vault-filter.service\";\nimport { VaultFilterSharedModule } from \"../../individual-vault/vault-filter/shared/vault-filter-shared.module\";\n\nimport { VaultFilterComponent } from \"./vault-filter.component\";\nimport { VaultFilterService } from \"./vault-filter.service\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent],\n  exports: [VaultFilterComponent],\n  providers: [\n    {\n      provide: VaultFilterServiceAbstraction,\n      useClass: VaultFilterService,\n    },\n  ],\n})\nexport class VaultFilterModule {}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { Cipher } from \"@bitwarden/common/vault/models/domain/cipher\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n  @Input() cipherId: string;\n  @Input() allowSelectNone = false;\n  @Output() onSavedCollections = new EventEmitter();\n\n  formPromise: Promise<any>;\n  cipher: CipherView;\n  collectionIds: string[];\n  collections: CollectionView[] = [];\n\n  protected cipherDomain: Cipher;\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.cipherDomain = await this.loadCipher();\n    this.collectionIds = this.loadCipherCollections();\n    this.cipher = await this.cipherDomain.decrypt();\n    this.collections = await this.loadCollections();\n\n    this.collections.forEach((c) => ((c as any).checked = false));\n    if (this.collectionIds != null) {\n      this.collections.forEach((c) => {\n        (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n      });\n    }\n  }\n\n  async submit() {\n    const selectedCollectionIds = this.collections\n      .filter((c) => !!(c as any).checked)\n      .map((c) => c.id);\n    if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n    this.cipherDomain.collectionIds = selectedCollectionIds;\n    try {\n      this.formPromise = this.saveCollections();\n      await this.formPromise;\n      this.onSavedCollections.emit();\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"editedItem\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  protected loadCipher() {\n    return this.cipherService.get(this.cipherId);\n  }\n\n  protected loadCipherCollections() {\n    return this.cipherDomain.collectionIds;\n  }\n\n  protected async loadCollections() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    return allCollections.filter(\n      (c) => !c.readOnly && c.organizationId === this.cipher.organizationId\n    );\n  }\n\n  protected saveCollections() {\n    return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"collectionsTitle\">\n          {{ \"collections\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"collectionsDesc\" | i18n }}</p>\n        <div class=\"d-flex\">\n          <h3>{{ \"collections\" | i18n }}</h3>\n          <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"selectAll\" | i18n }}\n            </button>\n            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n              {{ \"unselectAll\" | i18n }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"!collections || !collections.length\">\n          {{ \"noCollectionsInList\" | i18n }}\n        </div>\n        <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n          <tbody>\n            <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n              <td class=\"table-list-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [(ngModel)]=\"$any(c).checked\"\n                  name=\"Collection[{{ i }}].Checked\"\n                  appStopProp\n                />\n              </td>\n              <td>\n                {{ c.name }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"@bitwarden/angular/components/collections.component\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\n\n@Component({\n  selector: \"app-vault-collections\",\n  templateUrl: \"collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    this.collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { CipherData } from \"@bitwarden/common/vault/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/vault/models/domain/cipher\";\nimport { CipherCollectionsRequest } from \"@bitwarden/common/vault/models/request/cipher-collections.request\";\n\nimport { CollectionsComponent as BaseCollectionsComponent } from \"../../vault/individual-vault/collections.component\";\n\n@Component({\n  selector: \"app-org-vault-collections\",\n  templateUrl: \"../../vault/individual-vault/collections.component.html\",\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n  organization: Organization;\n\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    private apiService: ApiService,\n    logService: LogService\n  ) {\n    super(collectionService, platformUtilsService, i18nService, cipherService, logService);\n    this.allowSelectNone = true;\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canViewAllCollections) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected loadCipherCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCipherCollections();\n    }\n    return this.collectionIds;\n  }\n\n  protected loadCollections() {\n    if (!this.organization.canViewAllCollections) {\n      return super.loadCollections();\n    }\n    return Promise.resolve(this.collections);\n  }\n\n  protected saveCollections() {\n    if (this.organization.canEditAnyCollection) {\n      const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n      return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n    } else {\n      return super.saveCollections();\n    }\n  }\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\n\nimport {\n  CipherStatus,\n  CipherTypeFilter,\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"./vault-filter.type\";\n\nexport type VaultFilterFunction = (cipher: CipherView) => boolean;\n\n// TODO: Replace shared VaultFilter Model with this one and\n// refactor browser and desktop code to use this model.\nexport class VaultFilter {\n  selectedOrganizationNode: TreeNode<OrganizationFilter>;\n  selectedCipherTypeNode: TreeNode<CipherTypeFilter>;\n  selectedFolderNode: TreeNode<FolderFilter>;\n  selectedCollectionNode: TreeNode<CollectionFilter>;\n\n  /**\n   * A list of collection filters that form a chain from the organization root to currently selected collection.\n   * To be used when rendering a breadcrumb UI for navigating the collection hierarchy.\n   * Begins from the organization root and excludes the currently selected collection.\n   */\n  get collectionBreadcrumbs(): TreeNode<CollectionFilter>[] {\n    if (!this.isCollectionSelected) {\n      return [];\n    }\n\n    const collections = [this.selectedCollectionNode];\n    while (collections[collections.length - 1].parent != undefined) {\n      collections.push(collections[collections.length - 1].parent);\n    }\n\n    return collections.slice(1).reverse();\n  }\n\n  /**\n   * The vault is filtered by a specific collection\n   */\n  get isCollectionSelected(): boolean {\n    return (\n      this.selectedCollectionNode != null &&\n      this.selectedCollectionNode.node.id !== \"AllCollections\"\n    );\n  }\n\n  /**\n   * The vault is filtered by the \"Unassigned\" collection\n   */\n  get isUnassignedCollectionSelected(): boolean {\n    return this.selectedCollectionNode != null && this.selectedCollectionNode.node.id === null;\n  }\n\n  /**\n   * The vault is filtered by the users individual vault\n   */\n  get isMyVaultSelected(): boolean {\n    return this.selectedOrganizationNode?.node.id === \"MyVault\";\n  }\n\n  get isFavorites(): boolean {\n    return this.selectedCipherTypeNode?.node.type === \"favorites\";\n  }\n\n  get isDeleted(): boolean {\n    return this.selectedCipherTypeNode?.node.type === \"trash\" ? true : null;\n  }\n\n  get organizationId(): string {\n    return this.selectedOrganizationNode?.node.id;\n  }\n\n  get cipherType(): CipherType {\n    return this.selectedCipherTypeNode?.node.type in CipherType\n      ? (this.selectedCipherTypeNode?.node.type as CipherType)\n      : null;\n  }\n\n  get cipherStatus(): CipherStatus {\n    return this.selectedCipherTypeNode?.node.type;\n  }\n\n  get cipherTypeId(): string {\n    return this.selectedCipherTypeNode?.node.id;\n  }\n\n  get folderId(): string {\n    return this.selectedFolderNode?.node.id;\n  }\n\n  get collectionId(): string {\n    return this.selectedCollectionNode?.node.id;\n  }\n\n  constructor(init?: Partial<VaultFilter>) {\n    Object.assign(this, init);\n  }\n\n  resetFilter() {\n    this.selectedCipherTypeNode = null;\n    this.selectedFolderNode = null;\n    this.selectedCollectionNode = null;\n  }\n\n  resetOrganization() {\n    this.selectedOrganizationNode = null;\n  }\n\n  buildFilter(): VaultFilterFunction {\n    return (cipher) => {\n      let cipherPassesFilter = true;\n      if (this.isFavorites && cipherPassesFilter) {\n        cipherPassesFilter = cipher.favorite;\n      }\n      if (this.isDeleted && cipherPassesFilter) {\n        cipherPassesFilter = cipher.isDeleted;\n      }\n      if (this.cipherType && cipherPassesFilter) {\n        cipherPassesFilter = cipher.type === this.cipherType;\n      }\n      if (this.selectedFolderNode) {\n        // No folder\n        if (this.folderId === null && cipherPassesFilter) {\n          cipherPassesFilter = cipher.folderId === null;\n        }\n        // Folder\n        if (this.folderId !== null && cipherPassesFilter) {\n          cipherPassesFilter = cipher.folderId === this.folderId;\n        }\n      }\n      if (this.selectedCollectionNode) {\n        // All Collections\n        if (this.collectionId === \"AllCollections\" && cipherPassesFilter) {\n          cipherPassesFilter = false;\n        }\n        // Unassigned\n        if (this.collectionId === null && cipherPassesFilter) {\n          cipherPassesFilter =\n            cipher.organizationId != null &&\n            (cipher.collectionIds == null || cipher.collectionIds.length === 0);\n        }\n        // Collection\n        if (\n          this.collectionId !== null &&\n          this.collectionId !== \"AllCollections\" &&\n          cipherPassesFilter\n        ) {\n          cipherPassesFilter =\n            cipher.collectionIds != null && cipher.collectionIds.includes(this.collectionId);\n        }\n      }\n      if (this.selectedOrganizationNode) {\n        // My Vault\n        if (this.organizationId === \"MyVault\" && cipherPassesFilter) {\n          cipherPassesFilter = cipher.organizationId === null;\n        }\n        // Organization\n        else if (this.organizationId !== null && cipherPassesFilter) {\n          cipherPassesFilter = cipher.organizationId === this.organizationId;\n        }\n      }\n      return cipherPassesFilter;\n    };\n  }\n}\n","export const Unassigned = \"unassigned\";\n\nexport const All = \"all\";\n\n// TODO: Remove `All` when moving to vertical navigation.\nconst itemTypes = [\"favorites\", \"login\", \"card\", \"identity\", \"note\", \"trash\", All] as const;\n\nexport type RoutedVaultFilterItemType = typeof itemTypes[number];\n\nexport function isRoutedVaultFilterItemType(value: unknown): value is RoutedVaultFilterItemType {\n  return itemTypes.includes(value as any);\n}\n\nexport interface RoutedVaultFilterModel {\n  collectionId?: string;\n  folderId?: string;\n  organizationId?: string;\n  type?: RoutedVaultFilterItemType;\n\n  organizationIdParamType?: \"path\" | \"query\";\n}\n","import { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\n\nimport { RoutedVaultFilterBridgeService } from \"../../services/routed-vault-filter-bridge.service\";\n\nimport {\n  All,\n  isRoutedVaultFilterItemType,\n  RoutedVaultFilterItemType,\n  RoutedVaultFilterModel,\n  Unassigned,\n} from \"./routed-vault-filter.model\";\nimport { VaultFilter, VaultFilterFunction } from \"./vault-filter.model\";\nimport {\n  OrganizationFilter,\n  CipherTypeFilter,\n  FolderFilter,\n  CollectionFilter,\n  CipherStatus,\n} from \"./vault-filter.type\";\n\n/**\n * This file is part of a layer that is used to temporary bridge between URL filtering and the old state-in-code method.\n * This should be removed after we have refactored the {@link VaultItemsComponent} and introduced vertical navigation\n * (which will refactor the {@link VaultFilterComponent}).\n *\n * This model supplies legacy code with the old state-in-code models saved as tree nodes.\n * It can also receive requests to select a new tree node by using setters.\n * However instead of just replacing the tree node models, it requests a URL navigation,\n * thereby bridging between legacy and URL filtering.\n */\nexport class RoutedVaultFilterBridge implements VaultFilter {\n  constructor(\n    private routedFilter: RoutedVaultFilterModel,\n    private legacyFilter: VaultFilter,\n    private bridgeService: RoutedVaultFilterBridgeService\n  ) {}\n  get collectionBreadcrumbs(): TreeNode<CollectionFilter>[] {\n    return this.legacyFilter.collectionBreadcrumbs;\n  }\n  get isCollectionSelected(): boolean {\n    return this.legacyFilter.isCollectionSelected;\n  }\n  get isUnassignedCollectionSelected(): boolean {\n    return this.legacyFilter.isUnassignedCollectionSelected;\n  }\n  get isMyVaultSelected(): boolean {\n    return this.legacyFilter.isMyVaultSelected;\n  }\n  get selectedOrganizationNode(): TreeNode<OrganizationFilter> {\n    return this.legacyFilter.selectedOrganizationNode;\n  }\n  set selectedOrganizationNode(value: TreeNode<OrganizationFilter>) {\n    this.bridgeService.navigate({\n      ...this.routedFilter,\n      organizationId: value.node.id,\n      folderId: undefined,\n      collectionId: undefined,\n    });\n  }\n  get selectedCipherTypeNode(): TreeNode<CipherTypeFilter> {\n    return this.legacyFilter.selectedCipherTypeNode;\n  }\n  set selectedCipherTypeNode(value: TreeNode<CipherTypeFilter>) {\n    let type: RoutedVaultFilterItemType | undefined;\n\n    if (value?.node.id === \"AllItems\" && this.routedFilter.organizationIdParamType === \"path\") {\n      type = \"all\";\n    } else if (\n      value?.node.id === \"AllItems\" &&\n      this.routedFilter.organizationIdParamType === \"query\"\n    ) {\n      type = undefined;\n    } else if (isRoutedVaultFilterItemType(value?.node.id)) {\n      type = value?.node.id;\n    }\n\n    this.bridgeService.navigate({\n      ...this.routedFilter,\n      type,\n      folderId: undefined,\n      collectionId: undefined,\n    });\n  }\n  get selectedFolderNode(): TreeNode<FolderFilter> {\n    return this.legacyFilter.selectedFolderNode;\n  }\n  set selectedFolderNode(value: TreeNode<FolderFilter>) {\n    const folderId = value != null && value.node.id === null ? Unassigned : value?.node.id;\n    this.bridgeService.navigate({\n      ...this.routedFilter,\n      folderId,\n      type: undefined,\n      collectionId: undefined,\n    });\n  }\n  get selectedCollectionNode(): TreeNode<CollectionFilter> {\n    return this.legacyFilter.selectedCollectionNode;\n  }\n  set selectedCollectionNode(value: TreeNode<CollectionFilter>) {\n    let collectionId: string | undefined;\n\n    if (value != null && value.node.id === null) {\n      collectionId = Unassigned;\n    } else if (\n      value?.node.id === \"AllCollections\" &&\n      this.routedFilter.organizationIdParamType === \"path\"\n    ) {\n      collectionId = undefined;\n    } else if (\n      value?.node.id === \"AllCollections\" &&\n      this.routedFilter.organizationIdParamType === \"query\"\n    ) {\n      collectionId = All;\n    } else {\n      collectionId = value?.node.id;\n    }\n\n    this.bridgeService.navigate({\n      ...this.routedFilter,\n      collectionId,\n      type: undefined,\n      folderId: undefined,\n    });\n  }\n  get isFavorites(): boolean {\n    return this.legacyFilter.isFavorites;\n  }\n  get isDeleted(): boolean {\n    return this.legacyFilter.isDeleted;\n  }\n  get organizationId(): string {\n    return this.legacyFilter.organizationId;\n  }\n  get cipherType(): CipherType {\n    return this.legacyFilter.cipherType;\n  }\n  get cipherStatus(): CipherStatus {\n    return this.legacyFilter.cipherStatus;\n  }\n  get cipherTypeId(): string {\n    return this.legacyFilter.cipherTypeId;\n  }\n  get folderId(): string {\n    return this.legacyFilter.folderId;\n  }\n  get collectionId(): string {\n    return this.legacyFilter.collectionId;\n  }\n  resetFilter(): void {\n    this.bridgeService.navigate({\n      ...this.routedFilter,\n      collectionId: undefined,\n      folderId: undefined,\n      organizationId:\n        this.routedFilter.organizationIdParamType === \"path\"\n          ? this.routedFilter.organizationId\n          : undefined,\n      type: undefined,\n    });\n  }\n  resetOrganization(): void {\n    this.bridgeService.navigate({ ...this.routedFilter, organizationId: undefined });\n  }\n  buildFilter(): VaultFilterFunction {\n    return this.legacyFilter.buildFilter();\n  }\n}\n","import { Injectable, OnDestroy } from \"@angular/core\";\nimport { ActivatedRoute, NavigationExtras } from \"@angular/router\";\nimport { combineLatest, map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport {\n  isRoutedVaultFilterItemType,\n  RoutedVaultFilterModel,\n} from \"../shared/models/routed-vault-filter.model\";\n\n/**\n * This service is an abstraction layer on top of ActivatedRoute that\n * encapsulates the logic of how filters are stored in the URL.\n *\n * The service builds and emits filter models based on URL params and\n * also contains a method for generating routes to corresponding to those params.\n */\n@Injectable()\nexport class RoutedVaultFilterService implements OnDestroy {\n  private onDestroy = new Subject<void>();\n\n  /**\n   * Filter values extracted from the URL.\n   * To change the values use {@link RoutedVaultFilterService.createRoute}.\n   */\n  filter$: Observable<RoutedVaultFilterModel>;\n\n  constructor(activatedRoute: ActivatedRoute) {\n    this.filter$ = combineLatest([activatedRoute.paramMap, activatedRoute.queryParamMap]).pipe(\n      map(([params, queryParams]) => {\n        const unsafeType = queryParams.get(\"type\");\n        const type = isRoutedVaultFilterItemType(unsafeType) ? unsafeType : undefined;\n\n        return {\n          collectionId: queryParams.get(\"collectionId\") ?? undefined,\n          folderId: queryParams.get(\"folderId\") ?? undefined,\n          organizationId:\n            params.get(\"organizationId\") ?? queryParams.get(\"organizationId\") ?? undefined,\n          organizationIdParamType:\n            params.get(\"organizationId\") != undefined ? (\"path\" as const) : (\"query\" as const),\n          type,\n        };\n      }),\n      takeUntil(this.onDestroy)\n    );\n  }\n\n  /**\n   * Create a route that can be used to modify filters with Router or RouterLink.\n   * This method is specifically built to leave other query parameters untouched,\n   * meaning that navigation will only affect filters and not e.g. `cipherId`.\n   * To subscribe to changes use {@link RoutedVaultFilterService.filter$}.\n   *\n   * Note:\n   * This method currently only supports changing filters that are stored\n   * in query parameters. This means that {@link RoutedVaultFilterModel.organizationId}\n   * will be ignored if {@link RoutedVaultFilterModel.organizationIdParamType}\n   * is set to `path`.\n   *\n   * @param filter Filter values that should be applied to the URL.\n   * @returns route that can be used with Router or RouterLink\n   */\n  createRoute(filter: RoutedVaultFilterModel): [commands: any[], extras?: NavigationExtras] {\n    const commands: string[] = [];\n    const extras: NavigationExtras = {\n      queryParams: {\n        collectionId: filter.collectionId ?? null,\n        folderId: filter.folderId ?? null,\n        organizationId:\n          filter.organizationIdParamType === \"path\" ? null : filter.organizationId ?? null,\n        type: filter.type ?? null,\n      },\n      queryParamsHandling: \"merge\",\n    };\n    return [commands, extras];\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy.next();\n    this.onDestroy.complete();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { combineLatest, map, Observable } from \"rxjs\";\n\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\n\nimport { RoutedVaultFilterBridge } from \"../shared/models/routed-vault-filter-bridge.model\";\nimport {\n  RoutedVaultFilterModel,\n  Unassigned,\n  All,\n} from \"../shared/models/routed-vault-filter.model\";\nimport { VaultFilter } from \"../shared/models/vault-filter.model\";\nimport {\n  CipherTypeFilter,\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"../shared/models/vault-filter.type\";\n\nimport { VaultFilterService } from \"./abstractions/vault-filter.service\";\nimport { RoutedVaultFilterService } from \"./routed-vault-filter.service\";\n\n/**\n * This file is part of a layer that is used to temporary bridge between URL filtering and the old state-in-code method.\n * This should be removed after we have refactored the {@link VaultItemsComponent} and introduced vertical navigation\n * (which will refactor the {@link VaultFilterComponent}).\n *\n * This class listens to both the new {@link RoutedVaultFilterService} and the old {@link VaultFilterService}.\n * When a new filter is emitted the service uses the ids to find the corresponding tree nodes needed for\n * the old {@link VaultFilter} model. It then emits a bridge model that contains this information.\n */\n@Injectable()\nexport class RoutedVaultFilterBridgeService {\n  readonly activeFilter$: Observable<VaultFilter>;\n\n  constructor(\n    private router: Router,\n    private routedVaultFilterService: RoutedVaultFilterService,\n    legacyVaultFilterService: VaultFilterService\n  ) {\n    this.activeFilter$ = combineLatest([\n      routedVaultFilterService.filter$,\n      legacyVaultFilterService.collectionTree$,\n      legacyVaultFilterService.folderTree$,\n      legacyVaultFilterService.organizationTree$,\n      legacyVaultFilterService.cipherTypeTree$,\n    ]).pipe(\n      map(([filter, collectionTree, folderTree, organizationTree, cipherTypeTree]) => {\n        const legacyFilter = isAdminConsole(filter)\n          ? createLegacyFilterForAdminConsole(filter, collectionTree, cipherTypeTree)\n          : createLegacyFilterForEndUser(\n              filter,\n              collectionTree,\n              folderTree,\n              organizationTree,\n              cipherTypeTree\n            );\n\n        return new RoutedVaultFilterBridge(filter, legacyFilter, this);\n      })\n    );\n  }\n\n  navigate(filter: RoutedVaultFilterModel) {\n    const [commands, extras] = this.routedVaultFilterService.createRoute(filter);\n    this.router.navigate(commands, extras);\n  }\n}\n\n/**\n * Check if the filtering is being done as part of admin console.\n * Admin console can be identified by checking if the `organizationId`\n * is part of the path.\n *\n * @param filter Model to check if origin is admin console\n * @returns true if filtering being done as part of admin console\n */\nfunction isAdminConsole(filter: RoutedVaultFilterModel) {\n  return filter.organizationIdParamType === \"path\";\n}\n\nfunction createLegacyFilterForAdminConsole(\n  filter: RoutedVaultFilterModel,\n  collectionTree: TreeNode<CollectionFilter>,\n  cipherTypeTree: TreeNode<CipherTypeFilter>\n): VaultFilter {\n  const legacyFilter = new VaultFilter();\n\n  if (filter.collectionId === undefined && filter.type === undefined) {\n    legacyFilter.selectedCollectionNode = ServiceUtils.getTreeNodeObject(\n      collectionTree,\n      \"AllCollections\"\n    );\n  } else if (filter.collectionId !== undefined && filter.collectionId === Unassigned) {\n    legacyFilter.selectedCollectionNode = ServiceUtils.getTreeNodeObject(collectionTree, null);\n  } else if (filter.collectionId !== undefined) {\n    legacyFilter.selectedCollectionNode = ServiceUtils.getTreeNodeObject(\n      collectionTree,\n      filter.collectionId\n    );\n  }\n\n  if (filter.collectionId === undefined && filter.type === All) {\n    legacyFilter.selectedCipherTypeNode = ServiceUtils.getTreeNodeObject(\n      cipherTypeTree,\n      \"AllItems\"\n    );\n  } else if (filter.type !== undefined && filter.type === \"trash\") {\n    legacyFilter.selectedCipherTypeNode = new TreeNode<CipherTypeFilter>(\n      { id: \"trash\", name: \"\", type: \"trash\", icon: \"\" },\n      null\n    );\n  } else if (filter.type !== undefined && filter.type !== \"trash\") {\n    legacyFilter.selectedCipherTypeNode = ServiceUtils.getTreeNodeObject(\n      cipherTypeTree,\n      filter.type\n    );\n  }\n\n  return legacyFilter;\n}\n\nfunction createLegacyFilterForEndUser(\n  filter: RoutedVaultFilterModel,\n  collectionTree: TreeNode<CollectionFilter>,\n  folderTree: TreeNode<FolderFilter>,\n  organizationTree: TreeNode<OrganizationFilter>,\n  cipherTypeTree: TreeNode<CipherTypeFilter>\n): VaultFilter {\n  const legacyFilter = new VaultFilter();\n\n  if (filter.collectionId !== undefined && filter.collectionId === Unassigned) {\n    legacyFilter.selectedCollectionNode = ServiceUtils.getTreeNodeObject(collectionTree, null);\n  } else if (filter.collectionId !== undefined && filter.collectionId === All) {\n    legacyFilter.selectedCollectionNode = ServiceUtils.getTreeNodeObject(\n      collectionTree,\n      \"AllCollections\"\n    );\n  } else if (filter.collectionId !== undefined) {\n    legacyFilter.selectedCollectionNode = ServiceUtils.getTreeNodeObject(\n      collectionTree,\n      filter.collectionId\n    );\n  }\n\n  if (filter.folderId !== undefined && filter.folderId === Unassigned) {\n    legacyFilter.selectedFolderNode = ServiceUtils.getTreeNodeObject(folderTree, null);\n  } else if (filter.folderId !== undefined && filter.folderId !== Unassigned) {\n    legacyFilter.selectedFolderNode = ServiceUtils.getTreeNodeObject(folderTree, filter.folderId);\n  }\n\n  if (filter.organizationId !== undefined) {\n    legacyFilter.selectedOrganizationNode = ServiceUtils.getTreeNodeObject(\n      organizationTree,\n      filter.organizationId\n    );\n  }\n\n  if (filter.type === undefined) {\n    legacyFilter.selectedCipherTypeNode = ServiceUtils.getTreeNodeObject(\n      cipherTypeTree,\n      \"AllItems\"\n    );\n  } else if (filter.type !== undefined && filter.type === \"trash\") {\n    legacyFilter.selectedCipherTypeNode = new TreeNode<CipherTypeFilter>(\n      { id: \"trash\", name: \"\", type: \"trash\", icon: \"\" },\n      null\n    );\n  } else if (filter.type !== undefined && filter.type !== \"trash\") {\n    legacyFilter.selectedCipherTypeNode = ServiceUtils.getTreeNodeObject(\n      cipherTypeTree,\n      filter.type\n    );\n  }\n\n  return legacyFilter;\n}\n","import { Component } from \"@angular/core\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"@bitwarden/angular/vault/components/attachments.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { AttachmentView } from \"@bitwarden/common/vault/models/view/attachment.view\";\n\n@Component({\n  selector: \"app-vault-attachments\",\n  templateUrl: \"attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  protected override componentName = \"app-vault-attachments\";\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      platformUtilsService,\n      apiService,\n      window,\n      logService,\n      stateService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.showFixOldAttachments(attachment)) {\n      await this.reuploadCipherAttachment(attachment, false);\n    }\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.cipher.organizationId == null;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { CipherData } from \"@bitwarden/common/vault/models/data/cipher.data\";\nimport { Cipher } from \"@bitwarden/common/vault/models/domain/cipher\";\nimport { AttachmentView } from \"@bitwarden/common/vault/models/view/attachment.view\";\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from \"../individual-vault/attachments.component\";\n\n@Component({\n  selector: \"app-org-vault-attachments\",\n  templateUrl: \"../individual-vault/attachments.component.html\",\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n  viewOnly = false;\n  organization: Organization;\n\n  constructor(\n    cipherService: CipherService,\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    apiService: ApiService,\n    logService: LogService,\n    fileDownloadService: FileDownloadService\n  ) {\n    super(\n      cipherService,\n      i18nService,\n      cryptoService,\n      stateService,\n      platformUtilsService,\n      apiService,\n      logService,\n      fileDownloadService\n    );\n  }\n\n  protected async reupload(attachment: AttachmentView) {\n    if (this.organization.canEditAnyCollection && this.showFixOldAttachments(attachment)) {\n      await super.reuploadCipherAttachment(attachment, true);\n    }\n  }\n\n  protected async loadCipher() {\n    if (!this.organization.canEditAnyCollection) {\n      return await super.loadCipher();\n    }\n    const response = await this.apiService.getCipherAdmin(this.cipherId);\n    return new Cipher(new CipherData(response));\n  }\n\n  protected saveCipherAttachment(file: File) {\n    return this.cipherService.saveAttachmentWithServer(\n      this.cipherDomain,\n      file,\n      this.organization.canEditAnyCollection\n    );\n  }\n\n  protected deleteCipherAttachment(attachmentId: string) {\n    if (!this.organization.canEditAnyCollection) {\n      return super.deleteCipherAttachment(attachmentId);\n    }\n    return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n  }\n\n  protected showFixOldAttachments(attachment: AttachmentView) {\n    return attachment.key == null && this.organization.canEditAnyCollection;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ModalRef } from \"@bitwarden/angular/components/modal/modal.ref\";\nimport { ModalConfig } from \"@bitwarden/angular/services/modal.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\n@Component({\n  selector: \"app-enroll-master-password-reset\",\n  templateUrl: \"enroll-master-password-reset.component.html\",\n})\nexport class EnrollMasterPasswordReset {\n  organization: Organization;\n\n  verification: Verification;\n  formPromise: Promise<void>;\n\n  constructor(\n    private userVerificationService: UserVerificationService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private cryptoService: CryptoService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private modalRef: ModalRef,\n    config: ModalConfig,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    this.organization = config.data.organization;\n  }\n\n  async submit() {\n    let toastStringRef = \"withdrawPasswordResetSuccess\";\n\n    this.formPromise = this.userVerificationService\n      .buildRequest(this.verification, OrganizationUserResetPasswordEnrollmentRequest)\n      .then(async (request) => {\n        // Set variables\n        let keyString: string = null;\n\n        // Retrieve Public Key\n        const orgKeys = await this.organizationApiService.getKeys(this.organization.id);\n        if (orgKeys == null) {\n          throw new Error(this.i18nService.t(\"resetPasswordOrgKeysError\"));\n        }\n\n        const publicKey = Utils.fromB64ToArray(orgKeys.publicKey);\n\n        // RSA Encrypt user's encKey.key with organization public key\n        const encKey = await this.cryptoService.getEncKey();\n        const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n        keyString = encryptedKey.encryptedString;\n        toastStringRef = \"enrollPasswordResetSuccess\";\n\n        // Create request and execute enrollment\n        request.resetPasswordKey = keyString;\n        await this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n          this.organization.id,\n          this.organization.userId,\n          request\n        );\n\n        await this.syncService.fullSync(true);\n      });\n    try {\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(toastStringRef));\n      this.modalRef.close();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div\n  class=\"modal fade\"\n  role=\"dialog\"\n  aria-modal=\"true\"\n  aria-labelledby=\"enrollMasterPasswordResetTitle\"\n>\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"enrollMasterPasswordResetTitle\">\n          {{ \"enrollPasswordReset\" | i18n }}\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <app-callout type=\"warning\">\n          {{ \"resetPasswordEnrollmentWarning\" | i18n }}\n        </app-callout>\n        <app-user-verification [(ngModel)]=\"verification\" name=\"secret\"> </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n          {{ \"submit\" | i18n }}\n        </button>\n        <button\n          bitButton\n          buttonType=\"secondary\"\n          type=\"button\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span>\n            {{ \"cancel\" | i18n }}\n          </span>\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<ng-container *ngIf=\"filters && filters.length\">\n  <div *ngIf=\"headerInfo.showHeader\" class=\"filter-heading\">\n    <button\n      class=\"toggle-button\"\n      (click)=\"toggleCollapse(headerNode.node)\"\n      [attr.aria-expanded]=\"!isCollapsed(headerNode.node)\"\n      appA11yTitle=\"{{ 'toggleCollapse' | i18n }}: {{ headerNode.node.name | i18n }}\"\n      aria-controls=\"sub-filters\"\n    >\n      <i\n        class=\"bwi bwi-fw\"\n        aria-hidden=\"true\"\n        [ngClass]=\"isCollapsed(headerNode.node) ? 'bwi-angle-right' : 'bwi-angle-down'\"\n      ></i>\n    </button>\n    <button\n      *ngIf=\"headerInfo.isSelectable\"\n      appA11yTitle=\"{{ (isOrganizationFilter ? 'vault' : 'filter') | i18n }}: {{\n        headerNode.node.name | i18n\n      }}\"\n      class=\"filter-button\"\n      (click)=\"onFilterSelect(headerNode)\"\n    >\n      <h3\n        [ngClass]=\"{\n          active: isAllVaultsSelected || isNodeSelected(headerNode)\n        }\"\n      >\n        &nbsp;{{ headerNode.node.name | i18n }}\n      </h3>\n    </button>\n    <h3 *ngIf=\"!headerInfo.isSelectable\" class=\"filter-title\">\n      &nbsp;{{ headerNode.node.name | i18n }}\n    </h3>\n\n    <button\n      *ngIf=\"showAddButton\"\n      (click)=\"onAdd()\"\n      class=\"text-muted ml-auto add-button\"\n      appA11yTitle=\"{{ addInfo.text | i18n }}\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n  <ul\n    id=\"{{ headerNode.node.name }}-filters\"\n    *ngIf=\"!isCollapsed(headerNode.node)\"\n    class=\"filter-options\"\n  >\n    <ng-template #recursiveFilters let-filters>\n      <li\n        *ngFor=\"let f of filters\"\n        [ngClass]=\"{\n          active: isNodeSelected(f)\n        }\"\n        class=\"filter-option\"\n      >\n        <span class=\"filter-buttons\">\n          <button\n            *ngIf=\"f.children.length\"\n            appA11yTitle=\"{{ 'toggleCollapse' | i18n }}: {{ f.node.name }}\"\n            (click)=\"toggleCollapse(f.node)\"\n            [attr.aria-expanded]=\"!isCollapsed(f.node)\"\n            [attr.aria-controls]=\"f.node.name + '_children'\"\n            class=\"toggle-button\"\n          >\n            <i\n              class=\"bwi bwi-fw\"\n              [ngClass]=\"{\n                'bwi-angle-right': isCollapsed(f.node),\n                'bwi-angle-down': !isCollapsed(f.node)\n              }\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n          <button\n            class=\"filter-button\"\n            appA11yTitle=\"{{ isOrganizationFilter ? 'vault' : ('filter' | i18n) }}: {{\n              f.node.name\n            }}\"\n            [ngClass]=\"{ 'disabled-organization': isOrganizationFilter && !f.node.enabled }\"\n            (click)=\"onFilterSelect(f)\"\n          >\n            <i\n              *ngIf=\"f.children.length === 0\"\n              class=\"bwi bwi-fw {{ f.node.icon }}\"\n              aria-hidden=\"true\"\n            ></i>\n            &nbsp;{{ f.node.name }}\n          </button>\n          <span class=\"ml-auto\">\n            <button\n              *ngIf=\"editInfo && f.node.id\"\n              class=\"edit-button\"\n              (click)=\"onEdit(f)\"\n              appA11yTitle=\"{{ editInfo.text | i18n }}\"\n            >\n              <i class=\"bwi bwi-pencil bwi-fw\" aria-hidden=\"true\"></i>\n            </button>\n            <i\n              *ngIf=\"isOrganizationFilter && !f.node.enabled\"\n              class=\"org-options bwi bwi-fw bwi-exclamation-triangle text-danger\"\n              [attr.aria-label]=\"'organizationIsDisabled' | i18n\"\n              appA11yTitle=\"{{ 'organizationIsDisabled' | i18n }}\"\n            ></i\n            ><ng-container *ngIf=\"optionsInfo && !f.node.hideOptions\"\n              ><button [bitMenuTriggerFor]=\"optionsMenu\" class=\"filter-options-icon\">\n                <i class=\"bwi bwi-ellipsis-v\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu class=\"filter-organization-options\" #optionsMenu>\n                <ng-container\n                  *ngComponentOutlet=\"optionsInfo.component; injector: createInjector(f.node)\"\n                ></ng-container>\n              </bit-menu>\n            </ng-container>\n          </span>\n        </span>\n        <ul\n          [id]=\"f.node.name + '_children'\"\n          class=\"nested-filter-options\"\n          *ngIf=\"f.children.length && !isCollapsed(f.node)\"\n        >\n          <ng-container *ngTemplateOutlet=\"recursiveFilters; context: { $implicit: f.children }\">\n          </ng-container>\n        </ul>\n      </li>\n    </ng-template>\n    <ng-container\n      *ngTemplateOutlet=\"recursiveFilters; context: { $implicit: filters }\"\n    ></ng-container>\n    <li class=\"filter-option\" *ngIf=\"showAddLink\">\n      <span class=\"filter-buttons\">\n        <a href=\"#\" routerLink=\"{{ addInfo.route }}\" class=\"filter-button\">\n          <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n          &nbsp;{{ addInfo.text | i18n }}\n        </a>\n      </span>\n    </li>\n  </ul>\n  <hr *ngIf=\"divider\" />\n</ng-container>\n","import { Component, InjectionToken, Injector, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { ITreeNodeObject, TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\n\nimport { VaultFilterService } from \"../../services/abstractions/vault-filter.service\";\nimport { VaultFilterSection, VaultFilterType } from \"../models/vault-filter-section.type\";\nimport { VaultFilter } from \"../models/vault-filter.model\";\n\n@Component({\n  selector: \"app-filter-section\",\n  templateUrl: \"vault-filter-section.component.html\",\n})\nexport class VaultFilterSectionComponent implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  @Input() activeFilter: VaultFilter;\n  @Input() section: VaultFilterSection;\n\n  data: TreeNode<VaultFilterType>;\n  collapsedFilterNodes: Set<string> = new Set();\n\n  private injectors = new Map<string, Injector>();\n\n  constructor(private vaultFilterService: VaultFilterService, private injector: Injector) {\n    this.vaultFilterService.collapsedFilterNodes$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((nodes) => {\n        this.collapsedFilterNodes = nodes;\n      });\n  }\n\n  ngOnInit() {\n    this.section?.data$?.pipe(takeUntil(this.destroy$)).subscribe((data) => {\n      this.data = data;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get headerNode() {\n    return this.data;\n  }\n\n  get headerInfo() {\n    return this.section.header;\n  }\n\n  get filters() {\n    return this.data?.children;\n  }\n\n  get isOrganizationFilter() {\n    return this.data.node instanceof Organization;\n  }\n\n  get isAllVaultsSelected() {\n    return this.isOrganizationFilter && !this.activeFilter.selectedOrganizationNode;\n  }\n\n  isNodeSelected(filterNode: TreeNode<VaultFilterType>) {\n    return (\n      this.activeFilter.organizationId === filterNode?.node.id ||\n      this.activeFilter.cipherTypeId === filterNode?.node.id ||\n      this.activeFilter.folderId === filterNode?.node.id ||\n      this.activeFilter.collectionId === filterNode?.node.id\n    );\n  }\n\n  async onFilterSelect(filterNode: TreeNode<VaultFilterType>) {\n    await this.section?.action(filterNode);\n  }\n\n  get editInfo() {\n    return this.section?.edit;\n  }\n\n  onEdit(filterNode: TreeNode<VaultFilterType>) {\n    this.section?.edit?.action(filterNode.node);\n  }\n\n  get addInfo() {\n    return this.section.add;\n  }\n\n  get showAddButton() {\n    return this.section.add && !this.section.add.route;\n  }\n\n  get showAddLink() {\n    return this.section.add && this.section.add.route;\n  }\n\n  async onAdd() {\n    this.section?.add?.action();\n  }\n\n  get optionsInfo() {\n    return this.section?.options;\n  }\n\n  get divider() {\n    return this.section?.divider;\n  }\n\n  isCollapsed(node: ITreeNodeObject) {\n    return this.collapsedFilterNodes.has(node.id);\n  }\n\n  async toggleCollapse(node: ITreeNodeObject) {\n    if (this.collapsedFilterNodes.has(node.id)) {\n      this.collapsedFilterNodes.delete(node.id);\n    } else {\n      this.collapsedFilterNodes.add(node.id);\n    }\n    await this.vaultFilterService.setCollapsedFilterNodes(this.collapsedFilterNodes);\n  }\n\n  // an injector is necessary to pass data into a dynamic component\n  // here we are creating a new injector for each filter that has options\n  createInjector(data: VaultFilterType) {\n    let inject = this.injectors.get(data.id);\n    if (!inject) {\n      inject = Injector.create({\n        providers: [{ provide: OptionsInput, useValue: data }],\n        parent: this.injector,\n      });\n      this.injectors.set(data.id, inject);\n    }\n    return inject;\n  }\n}\nexport const OptionsInput = new InjectionToken<VaultFilterType>(\"OptionsInput\");\n","import { AfterContentInit, Component, Input } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\nimport { SsoComponent } from \"@bitwarden/angular/auth/components/sso.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\n\n@Component({\n  selector: \"app-link-sso\",\n  templateUrl: \"link-sso.component.html\",\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n  @Input() organization: Organization;\n  returnUri = \"/settings/organizations\";\n\n  constructor(\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    apiService: ApiService,\n    authService: AuthService,\n    router: Router,\n    route: ActivatedRoute,\n    cryptoFunctionService: CryptoFunctionService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    stateService: StateService,\n    environmentService: EnvironmentService,\n    logService: LogService\n  ) {\n    super(\n      authService,\n      router,\n      i18nService,\n      route,\n      stateService,\n      platformUtilsService,\n      apiService,\n      cryptoFunctionService,\n      environmentService,\n      passwordGenerationService,\n      logService\n    );\n\n    this.returnUri = \"/settings/organizations\";\n    this.redirectUri = window.location.origin + \"/sso-connector.html\";\n    this.clientId = \"web\";\n  }\n\n  async ngAfterContentInit() {\n    this.identifier = this.organization.identifier;\n  }\n}\n","<a\n  class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main tw-no-underline hover:tw-bg-secondary-100 hover:tw-no-underline focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n  href=\"#\"\n  appStopClick\n  (click)=\"submit(returnUri, true)\"\n>\n  <i class=\"bwi bwi-fw bwi-link\" aria-hidden=\"true\"></i>\n  {{ \"linkSso\" | i18n }}\n</a>\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<ng-container *ngIf=\"!loaded\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted tw-m-2\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<div\n  *ngIf=\"loaded\"\n  class=\"tw-flex tw-min-w-[200px] tw-max-w-[300px] tw-flex-col\"\n  [appApiAction]=\"actionPromise\"\n>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && !organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-key\" aria-hidden=\"true\"></i>\n    {{ \"enrollPasswordReset\" | i18n }}\n  </button>\n  <button\n    *ngIf=\"allowEnrollmentChanges(organization) && organization.resetPasswordEnrolled\"\n    class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"toggleResetPasswordEnrollment(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n    {{ \"withdrawPasswordReset\" | i18n }}\n  </button>\n  <ng-container *ngIf=\"organization.useSso && organization.identifier\">\n    <button\n      *ngIf=\"organization.ssoBound; else linkSso\"\n      class=\"tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left !tw-text-main hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n      (click)=\"unlinkSso(organization)\"\n    >\n      <i class=\"bwi bwi-fw bwi-chain-broken\" aria-hidden=\"true\"></i>\n      {{ \"unlinkSso\" | i18n }}\n    </button>\n    <ng-template #linkSso>\n      <app-link-sso [organization]=\"organization\"> </app-link-sso>\n    </ng-template>\n  </ng-container>\n  <button\n    class=\"text-danger tw-block tw-cursor-pointer tw-border-none tw-bg-background tw-px-4 tw-py-2 tw-text-left hover:tw-bg-secondary-100 focus:tw-z-50 focus:tw-bg-secondary-100 focus:tw-outline-none focus:tw-ring focus:tw-ring-primary-700 focus:tw-ring-offset-2 active:!tw-ring-0 active:!tw-ring-offset-0\"\n    (click)=\"leave(organization)\"\n  >\n    <i class=\"bwi bwi-fw bwi-sign-out\" aria-hidden=\"true\"></i>\n    {{ \"leave\" | i18n }}\n  </button>\n</div>\n","import { Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { map, Subject, takeUntil } from \"rxjs\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\nimport { EnrollMasterPasswordReset } from \"../../../../organizations/users/enroll-master-password-reset.component\";\nimport { OptionsInput } from \"../shared/components/vault-filter-section.component\";\nimport { OrganizationFilter } from \"../shared/models/vault-filter.type\";\n\n@Component({\n  selector: \"app-organization-options\",\n  templateUrl: \"organization-options.component.html\",\n})\nexport class OrganizationOptionsComponent implements OnInit, OnDestroy {\n  actionPromise: Promise<void | boolean>;\n  policies: Policy[];\n  loaded = false;\n\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    @Inject(OptionsInput) protected organization: OrganizationFilter,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private policyService: PolicyService,\n    private modalService: ModalService,\n    private logService: LogService,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService.policies$\n      .pipe(\n        map((policies) => policies.filter((policy) => policy.type === PolicyType.ResetPassword)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((policies) => {\n        this.policies = policies;\n        this.loaded = true;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  allowEnrollmentChanges(org: OrganizationFilter): boolean {\n    if (org.usePolicies && org.useResetPassword && org.hasPublicAndPrivateKeys) {\n      const policy = this.policies.find((p) => p.organizationId === org.id);\n      if (policy != null && policy.enabled) {\n        return org.resetPasswordEnrolled && policy.data.autoEnrollEnabled ? false : true;\n      }\n    }\n\n    return false;\n  }\n\n  showEnrolledStatus(org: Organization): boolean {\n    return (\n      org.useResetPassword &&\n      org.resetPasswordEnrolled &&\n      this.policies.some((p) => p.organizationId === org.id && p.enabled)\n    );\n  }\n\n  async unlinkSso(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"unlinkSsoConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n        return this.syncService.fullSync(true);\n      });\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, \"Unlinked SSO\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async leave(org: Organization) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"leaveOrganizationConfirmation\"),\n      org.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.organizationApiService.leave(org.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"leftOrganization\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async toggleResetPasswordEnrollment(org: Organization) {\n    if (!this.organization.resetPasswordEnrolled) {\n      this.modalService.open(EnrollMasterPasswordReset, {\n        allowMultipleModals: true,\n        data: {\n          organization: org,\n        },\n      });\n    } else {\n      // Remove reset password\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = \"ignored\";\n      request.resetPasswordKey = null;\n      this.actionPromise = this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n        this.organization.id,\n        this.organization.userId,\n        request\n      );\n      try {\n        await this.actionPromise;\n        this.platformUtilsService.showToast(\n          \"success\",\n          null,\n          this.i18nService.t(\"withdrawPasswordResetSuccess\")\n        );\n        this.syncService.fullSync(true);\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n}\n","<div class=\"card vault-filters\">\n  <div class=\"container loading-spinner\" *ngIf=\"!isLoaded\">\n    <i class=\"bwi bwi-spinner bwi-spin bwi-3x\" aria-hidden=\"true\"></i>\n  </div>\n  <div *ngIf=\"isLoaded\">\n    <div class=\"card-header d-flex\">\n      {{ \"filters\" | i18n }}\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/searching-vault/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"card-body\">\n      <input\n        type=\"search\"\n        placeholder=\"{{ searchPlaceholder | i18n }}\"\n        id=\"search\"\n        class=\"form-control\"\n        (input)=\"searchTextChanged($any($event.target).value)\"\n        autocomplete=\"off\"\n        appAutofocus\n      />\n      <ng-container *ngFor=\"let f of filtersList\">\n        <div class=\"filter\">\n          <app-filter-section [activeFilter]=\"activeFilter\" [section]=\"f\"> </app-filter-section>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, Subject } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\n\nimport { VaultFilterService } from \"../services/abstractions/vault-filter.service\";\nimport {\n  VaultFilterList,\n  VaultFilterSection,\n  VaultFilterType,\n} from \"../shared/models/vault-filter-section.type\";\nimport { VaultFilter } from \"../shared/models/vault-filter.model\";\nimport {\n  CipherStatus,\n  CipherTypeFilter,\n  CollectionFilter,\n  FolderFilter,\n  OrganizationFilter,\n} from \"../shared/models/vault-filter.type\";\n\nimport { OrganizationOptionsComponent } from \"./organization-options.component\";\n\n@Component({\n  selector: \"app-vault-filter\",\n  templateUrl: \"vault-filter.component.html\",\n})\nexport class VaultFilterComponent implements OnInit, OnDestroy {\n  filters?: VaultFilterList;\n  @Input() activeFilter: VaultFilter = new VaultFilter();\n  @Output() onSearchTextChanged = new EventEmitter<string>();\n  @Output() onAddFolder = new EventEmitter<never>();\n  @Output() onEditFolder = new EventEmitter<FolderFilter>();\n\n  isLoaded = false;\n  searchText = \"\";\n\n  protected destroy$: Subject<void> = new Subject<void>();\n\n  get filtersList() {\n    return this.filters ? Object.values(this.filters) : [];\n  }\n\n  get searchPlaceholder() {\n    if (this.activeFilter.isFavorites) {\n      return \"searchFavorites\";\n    }\n    if (this.activeFilter.isDeleted) {\n      return \"searchTrash\";\n    }\n    if (this.activeFilter.cipherType === CipherType.Login) {\n      return \"searchLogin\";\n    }\n    if (this.activeFilter.cipherType === CipherType.Card) {\n      return \"searchCard\";\n    }\n    if (this.activeFilter.cipherType === CipherType.Identity) {\n      return \"searchIdentity\";\n    }\n    if (this.activeFilter.cipherType === CipherType.SecureNote) {\n      return \"searchSecureNote\";\n    }\n    if (this.activeFilter.selectedFolderNode?.node) {\n      return \"searchFolder\";\n    }\n    if (this.activeFilter.selectedCollectionNode?.node) {\n      return \"searchCollection\";\n    }\n    if (this.activeFilter.organizationId === \"MyVault\") {\n      return \"searchMyVault\";\n    }\n    if (this.activeFilter.organizationId) {\n      return \"searchOrganization\";\n    }\n\n    return \"searchVault\";\n  }\n\n  constructor(\n    protected vaultFilterService: VaultFilterService,\n    protected policyService: PolicyService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this.filters = await this.buildAllFilters();\n    this.activeFilter.selectedCipherTypeNode =\n      (await this.getDefaultFilter()) as TreeNode<CipherTypeFilter>;\n    this.isLoaded = true;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  searchTextChanged(t: string) {\n    this.searchText = t;\n    this.onSearchTextChanged.emit(t);\n  }\n\n  applyOrganizationFilter = async (orgNode: TreeNode<OrganizationFilter>): Promise<void> => {\n    if (!orgNode?.node.enabled) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"disabledOrganizationFilterError\")\n      );\n      return;\n    }\n    const filter = this.activeFilter;\n    if (orgNode?.node.id === \"AllVaults\") {\n      filter.resetOrganization();\n    } else {\n      filter.selectedOrganizationNode = orgNode;\n    }\n    this.vaultFilterService.setOrganizationFilter(orgNode.node);\n    await this.vaultFilterService.expandOrgFilter();\n  };\n\n  applyTypeFilter = async (filterNode: TreeNode<CipherTypeFilter>): Promise<void> => {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedCipherTypeNode = filterNode;\n  };\n\n  applyFolderFilter = async (folderNode: TreeNode<FolderFilter>): Promise<void> => {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedFolderNode = folderNode;\n  };\n\n  applyCollectionFilter = async (collectionNode: TreeNode<CollectionFilter>): Promise<void> => {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedCollectionNode = collectionNode;\n  };\n\n  addFolder = async (): Promise<void> => {\n    this.onAddFolder.emit();\n  };\n\n  editFolder = async (folder: FolderFilter): Promise<void> => {\n    this.onEditFolder.emit(folder);\n  };\n\n  async getDefaultFilter(): Promise<TreeNode<VaultFilterType>> {\n    return await firstValueFrom(this.filters?.typeFilter.data$);\n  }\n\n  async buildAllFilters(): Promise<VaultFilterList> {\n    const builderFilter = {} as VaultFilterList;\n    builderFilter.organizationFilter = await this.addOrganizationFilter();\n    builderFilter.typeFilter = await this.addTypeFilter();\n    builderFilter.folderFilter = await this.addFolderFilter();\n    builderFilter.collectionFilter = await this.addCollectionFilter();\n    builderFilter.trashFilter = await this.addTrashFilter();\n    return builderFilter;\n  }\n\n  protected async addOrganizationFilter(): Promise<VaultFilterSection> {\n    const singleOrgPolicy = await this.policyService.policyAppliesToUser(PolicyType.SingleOrg);\n    const personalVaultPolicy = await this.policyService.policyAppliesToUser(\n      PolicyType.PersonalOwnership\n    );\n\n    const addAction = !singleOrgPolicy\n      ? { text: \"newOrganization\", route: \"/create-organization\" }\n      : null;\n\n    const orgFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.organizationTree$,\n      header: {\n        showHeader: !(singleOrgPolicy && personalVaultPolicy),\n        isSelectable: true,\n      },\n      action: this.applyOrganizationFilter,\n      options: { component: OrganizationOptionsComponent },\n      add: addAction,\n      divider: true,\n    };\n\n    return orgFilterSection;\n  }\n\n  protected async addTypeFilter(excludeTypes: CipherStatus[] = []): Promise<VaultFilterSection> {\n    const allTypeFilters: CipherTypeFilter[] = [\n      {\n        id: \"favorites\",\n        name: this.i18nService.t(\"favorites\"),\n        type: \"favorites\",\n        icon: \"bwi-star\",\n      },\n      {\n        id: \"login\",\n        name: this.i18nService.t(\"typeLogin\"),\n        type: CipherType.Login,\n        icon: \"bwi-globe\",\n      },\n      {\n        id: \"card\",\n        name: this.i18nService.t(\"typeCard\"),\n        type: CipherType.Card,\n        icon: \"bwi-credit-card\",\n      },\n      {\n        id: \"identity\",\n        name: this.i18nService.t(\"typeIdentity\"),\n        type: CipherType.Identity,\n        icon: \"bwi-id-card\",\n      },\n      {\n        id: \"note\",\n        name: this.i18nService.t(\"typeSecureNote\"),\n        type: CipherType.SecureNote,\n        icon: \"bwi-sticky-note\",\n      },\n    ];\n\n    const typeFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.buildTypeTree(\n        { id: \"AllItems\", name: \"allItems\", type: \"all\", icon: \"\" },\n        allTypeFilters.filter((f) => !excludeTypes.includes(f.type))\n      ),\n      header: {\n        showHeader: true,\n        isSelectable: true,\n      },\n      action: this.applyTypeFilter,\n    };\n    return typeFilterSection;\n  }\n\n  protected async addFolderFilter(): Promise<VaultFilterSection> {\n    const folderFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.folderTree$,\n      header: {\n        showHeader: true,\n        isSelectable: false,\n      },\n      action: this.applyFolderFilter,\n      edit: {\n        text: \"editFolder\",\n        action: this.editFolder,\n      },\n      add: {\n        text: \"Add Folder\",\n        action: this.addFolder,\n      },\n    };\n    return folderFilterSection;\n  }\n\n  protected async addCollectionFilter(): Promise<VaultFilterSection> {\n    const collectionFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.collectionTree$,\n      header: {\n        showHeader: true,\n        isSelectable: true,\n      },\n      action: this.applyCollectionFilter,\n    };\n    return collectionFilterSection;\n  }\n\n  protected async addTrashFilter(): Promise<VaultFilterSection> {\n    const trashFilterSection: VaultFilterSection = {\n      data$: this.vaultFilterService.buildTypeTree(\n        {\n          id: \"headTrash\",\n          name: \"HeadTrash\",\n          type: \"trash\",\n          icon: \"bwi-trash\",\n        },\n        [\n          {\n            id: \"trash\",\n            name: this.i18nService.t(\"trash\"),\n            type: \"trash\",\n            icon: \"bwi-trash\",\n          },\n        ]\n      ),\n      header: {\n        showHeader: false,\n        isSelectable: true,\n      },\n      action: this.applyTypeFilter,\n    };\n    return trashFilterSection;\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport { firstValueFrom, Subject } from \"rxjs\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\n\nimport { VaultFilterComponent as BaseVaultFilterComponent } from \"../../individual-vault/vault-filter/components/vault-filter.component\"; //../../vault/vault-filter/components/vault-filter.component\";\nimport {\n  VaultFilterList,\n  VaultFilterType,\n} from \"../../individual-vault/vault-filter/shared/models/vault-filter-section.type\";\nimport { CollectionFilter } from \"../../individual-vault/vault-filter/shared/models/vault-filter.type\";\n\n@Component({\n  selector: \"app-organization-vault-filter\",\n  templateUrl: \"../../individual-vault/vault-filter/components/vault-filter.component.html\",\n})\nexport class VaultFilterComponent extends BaseVaultFilterComponent implements OnInit, OnDestroy {\n  @Input() set organization(value: Organization) {\n    if (value && value !== this._organization) {\n      this._organization = value;\n      this.vaultFilterService.setOrganizationFilter(this._organization);\n    }\n  }\n  _organization: Organization;\n  protected destroy$: Subject<void>;\n\n  async ngOnInit() {\n    this.filters = await this.buildAllFilters();\n    if (!this.activeFilter.selectedCipherTypeNode) {\n      this.activeFilter.resetFilter();\n      this.activeFilter.selectedCollectionNode =\n        (await this.getDefaultFilter()) as TreeNode<CollectionFilter>;\n    }\n    this.isLoaded = true;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async buildAllFilters(): Promise<VaultFilterList> {\n    const builderFilter = {} as VaultFilterList;\n    builderFilter.typeFilter = await this.addTypeFilter([\"favorites\"]);\n    builderFilter.collectionFilter = await this.addCollectionFilter();\n    builderFilter.trashFilter = await this.addTrashFilter();\n    return builderFilter;\n  }\n\n  async getDefaultFilter(): Promise<TreeNode<VaultFilterType>> {\n    return await firstValueFrom(this.filters?.collectionFilter.data$);\n  }\n}\n","export class CollectionBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","import { DialogConfig, DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CollectionBulkDeleteRequest } from \"@bitwarden/common/models/request/collection-bulk-delete.request\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { CipherBulkDeleteRequest } from \"@bitwarden/common/vault/models/request/cipher-bulk-delete.request\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BulkDeleteDialogParams {\n  cipherIds?: string[];\n  collectionIds?: string[];\n  permanent?: boolean;\n  organization?: Organization;\n}\n\nexport enum BulkDeleteDialogResult {\n  Deleted = \"deleted\",\n  Canceled = \"canceled\",\n}\n\n/**\n * Strongly typed helper to open a BulkDeleteDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openBulkDeleteDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<BulkDeleteDialogParams>\n) => {\n  return dialogService.open<BulkDeleteDialogResult, BulkDeleteDialogParams>(\n    BulkDeleteDialogComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"vault-bulk-delete-dialog\",\n  templateUrl: \"bulk-delete-dialog.component.html\",\n})\nexport class BulkDeleteDialogComponent {\n  cipherIds: string[];\n  collectionIds: string[];\n  permanent = false;\n  organization: Organization;\n\n  constructor(\n    @Inject(DIALOG_DATA) params: BulkDeleteDialogParams,\n    private dialogRef: DialogRef<BulkDeleteDialogResult>,\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private apiService: ApiService\n  ) {\n    this.cipherIds = params.cipherIds ?? [];\n    this.collectionIds = params.collectionIds ?? [];\n    this.permanent = params.permanent;\n    this.organization = params.organization;\n  }\n\n  protected async cancel() {\n    this.close(BulkDeleteDialogResult.Canceled);\n  }\n\n  protected submit = async () => {\n    const deletePromises: Promise<void>[] = [];\n    if (this.cipherIds.length) {\n      if (!this.organization || !this.organization.canEditAnyCollection) {\n        deletePromises.push(this.deleteCiphers());\n      } else {\n        deletePromises.push(this.deleteCiphersAdmin());\n      }\n    }\n\n    if (this.collectionIds.length && this.organization) {\n      deletePromises.push(this.deleteCollections());\n    }\n\n    await Promise.all(deletePromises);\n\n    if (this.cipherIds.length) {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.permanent ? \"permanentlyDeletedItems\" : \"deletedItems\")\n      );\n    }\n    if (this.collectionIds.length) {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollections\")\n      );\n    }\n    this.close(BulkDeleteDialogResult.Deleted);\n  };\n\n  private async deleteCiphers(): Promise<any> {\n    if (this.permanent) {\n      await this.cipherService.deleteManyWithServer(this.cipherIds);\n    } else {\n      await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n    }\n  }\n\n  private async deleteCiphersAdmin(): Promise<any> {\n    const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n    if (this.permanent) {\n      return await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n    } else {\n      return await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n    }\n  }\n\n  private async deleteCollections(): Promise<any> {\n    if (\n      !this.organization.canDeleteAssignedCollections &&\n      !this.organization.canDeleteAnyCollection\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"missingPermissions\")\n      );\n      return;\n    }\n    const deleteRequest = new CollectionBulkDeleteRequest(this.collectionIds, this.organization.id);\n    return await this.apiService.deleteManyCollections(deleteRequest);\n  }\n\n  private close(result: BulkDeleteDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n","<bit-simple-dialog>\n  <span bitDialogTitle>\n    {{ (permanent ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n }}\n  </span>\n  <span bitDialogContent>\n    <ng-container *ngIf=\"!permanent\">\n      <span *ngIf=\"cipherIds?.length\">\n        {{ \"deleteSelectedItemsDesc\" | i18n: cipherIds.length }}\n      </span>\n      <span *ngIf=\"collectionIds?.length\">\n        {{ \"deleteSelectedCollectionsDesc\" | i18n: collectionIds.length }}\n      </span>\n      {{ \"deleteSelectedConfirmation\" | i18n }}\n    </ng-container>\n    <ng-container *ngIf=\"permanent\">\n      {{ \"permanentlyDeleteSelectedItemsDesc\" | i18n: cipherIds.length }}\n    </ng-container>\n  </span>\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <button bitButton type=\"submit\" buttonType=\"danger\" [bitAction]=\"submit\">\n      {{ (permanent ? \"permanentlyDelete\" : \"delete\") | i18n }}\n    </button>\n    <button bitButton type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n  </div>\n</bit-simple-dialog>\n","import { Directive, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\n\n@Directive()\nexport class VaultItemsComponent {\n  @Input() activeCipherId: string = null;\n  @Output() onCipherClicked = new EventEmitter<CipherView>();\n  @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n  @Output() onAddCipher = new EventEmitter();\n  @Output() onAddCipherOptions = new EventEmitter();\n\n  loaded = false;\n  ciphers: CipherView[] = [];\n  searchPlaceholder: string = null;\n  filter: (cipher: CipherView) => boolean = null;\n  deleted = false;\n  organization: Organization;\n  accessEvents = false;\n\n  protected searchPending = false;\n\n  private searchTimeout: any = null;\n  private _searchText: string = null;\n  get searchText() {\n    return this._searchText;\n  }\n  set searchText(value: string) {\n    this._searchText = value;\n  }\n\n  constructor(protected searchService: SearchService) {}\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted ?? false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async reload(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.loaded = false;\n    await this.load(filter, deleted);\n  }\n\n  async refresh() {\n    await this.reload(this.filter, this.deleted);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null, indexedCiphers?: CipherView[]) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      await this.doSearch(indexedCiphers);\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      await this.doSearch(indexedCiphers);\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  selectCipher(cipher: CipherView) {\n    this.onCipherClicked.emit(cipher);\n  }\n\n  rightClickCipher(cipher: CipherView) {\n    this.onCipherRightClicked.emit(cipher);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  addCipherOptions() {\n    this.onAddCipherOptions.emit();\n  }\n\n  isSearching() {\n    return !this.searchPending && this.searchService.isSearchable(this.searchText);\n  }\n\n  protected deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n\n  protected async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n  }\n}\n","import { svgIcon } from \"../icon\";\n\nexport const Search = svgIcon`\n<svg width=\"120\" height=\"120\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <g opacity=\".49\">\n    <path class=\"tw-fill-secondary-300\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.36 73.256a30.004 30.004 0 0 0 10.346 1.826c16.282 0 29.482-12.912 29.482-28.84 0-.384-.008-.766-.023-1.145h28.726v39.57H40.36v-11.41Z\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M21.546 46.241c0 15.929 13.2 28.841 29.482 28.841S80.51 62.17 80.51 46.241c0-15.928-13.2-28.841-29.482-28.841S21.546 30.313 21.546 46.241Z\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-fill-secondary-500\" d=\"M35.36 70.595a1.2 1.2 0 0 0-2.4 0h2.4Zm77.475-30.356a2.343 2.343 0 0 1 2.365 2.33h2.4c0-2.593-2.107-4.73-4.765-4.73v2.4Zm2.365 2.33v46.047h2.4V42.57h-2.4Zm0 46.047c0 1.293-1.058 2.33-2.365 2.33v2.4c2.59 0 4.765-2.069 4.765-4.73h-2.4Zm-2.365 2.33h-75.11v2.4h75.11v-2.4Zm-75.11 0a2.343 2.343 0 0 1-2.365-2.33h-2.4c0 2.594 2.107 4.73 4.766 4.73v-2.4Zm-2.365-2.33v-18.02h-2.4v18.02h2.4Zm44.508-48.377h32.967v-2.4H79.868v2.4Z\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M79.907 45.287h29.114v39.57H40.487V73.051\" stroke-width=\"2\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M57.356 102.56h35.849\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M68.954 92.147v10.413m11.599-10.413v10.413\" stroke-width=\"4\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"m27.44 64.945-4.51 4.51L5.72 86.663a3 3 0 0 0 0 4.243l1.238 1.238a3 3 0 0 0 4.243 0L28.41 74.936l4.51-4.51\" stroke-width=\"4\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M101.293 53.154H85.178m16.115 6.043H90.214m-5.036 0h-7.553m23.668 6.043h-7.05m-5.54 0h-15.61m28.2 6.042H85.178m-5.538 0h-8.562m30.215 6.043H78.632m-5.539 0H60m-5.54 0h-8.057\" stroke-width=\"2\" stroke-linecap=\"round\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M29.164 33.01h41.529a2.4 2.4 0 0 1 2.4 2.4v6.28a2.4 2.4 0 0 1-2.4 2.4h-41.53a2.4 2.4 0 0 1-2.4-2.4v-6.28a2.4 2.4 0 0 1 2.4-2.4Z\" stroke-width=\"4\" />\n    <path class=\"tw-stroke-secondary-500\" d=\"M22.735 54.16h34.361a2.4 2.4 0 0 1 2.4 2.4v6.28a2.4 2.4 0 0 1-2.4 2.4H28.778m50.358-11.08h-6.161a2.4 2.4 0 0 0-2.4 2.4v6.414a2.266 2.266 0 0 0 2.266 2.265\" stroke-width=\"4\" stroke-linecap=\"round\" />\n  </g>\n</svg>\n`;\n","import { DialogConfig, DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { firstValueFrom, Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/vault/abstractions/folder/folder.service.abstraction\";\nimport { FolderView } from \"@bitwarden/common/vault/models/view/folder.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BulkMoveDialogParams {\n  cipherIds?: string[];\n}\n\nexport enum BulkMoveDialogResult {\n  Moved = \"moved\",\n  Canceled = \"canceled\",\n}\n\n/**\n * Strongly typed helper to open a BulkMoveDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openBulkMoveDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<BulkMoveDialogParams>\n) => {\n  return dialogService.open<BulkMoveDialogResult, BulkMoveDialogParams>(\n    BulkMoveDialogComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"vault-bulk-move-dialog\",\n  templateUrl: \"bulk-move-dialog.component.html\",\n})\nexport class BulkMoveDialogComponent implements OnInit {\n  cipherIds: string[] = [];\n\n  formGroup = this.formBuilder.group({\n    folderId: [\"\", [Validators.required]],\n  });\n  folders$: Observable<FolderView[]>;\n\n  constructor(\n    @Inject(DIALOG_DATA) params: BulkMoveDialogParams,\n    private dialogRef: DialogRef<BulkMoveDialogResult>,\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private folderService: FolderService,\n    private formBuilder: FormBuilder\n  ) {\n    this.cipherIds = params.cipherIds ?? [];\n  }\n\n  async ngOnInit() {\n    this.folders$ = this.folderService.folderViews$;\n    this.formGroup.patchValue({\n      folderId: (await firstValueFrom(this.folders$))[0].id,\n    });\n  }\n\n  protected cancel() {\n    this.close(BulkMoveDialogResult.Canceled);\n  }\n\n  protected submit = async () => {\n    if (this.formGroup.invalid) {\n      return;\n    }\n\n    await this.cipherService.moveManyWithServer(this.cipherIds, this.formGroup.value.folderId);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"movedItems\"));\n    this.close(BulkMoveDialogResult.Moved);\n  };\n\n  private close(result: BulkMoveDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n","<form [formGroup]=\"formGroup\" [bitSubmit]=\"submit\">\n  <bit-dialog dialogSize=\"small\">\n    <span bitDialogTitle>\n      {{ \"moveSelected\" | i18n }}\n    </span>\n    <span bitDialogContent>\n      <p>{{ \"moveSelectedItemsDesc\" | i18n: cipherIds.length }}</p>\n      <bit-form-field>\n        <bit-label for=\"folder\">{{ \"folder\" | i18n }}</bit-label>\n        <select bitInput formControlName=\"folderId\">\n          <option *ngFor=\"let f of folders$ | async\" [ngValue]=\"f.id\">{{ f.name }}</option>\n        </select>\n      </bit-form-field>\n    </span>\n    <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n      <button bitButton bitFormButton type=\"submit\" buttonType=\"primary\">\n        {{ \"save\" | i18n }}\n      </button>\n      <button bitButton bitFormButton type=\"button\" buttonType=\"secondary\" (click)=\"cancel()\">\n        {{ \"cancel\" | i18n }}\n      </button>\n    </div>\n  </bit-dialog>\n</form>\n","import { DialogConfig, DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BulkRestoreDialogParams {\n  cipherIds: string[];\n}\n\nexport enum BulkRestoreDialogResult {\n  Restored = \"restored\",\n  Canceled = \"canceled\",\n}\n\n/**\n * Strongly typed helper to open a BulkRestoreDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openBulkRestoreDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<BulkRestoreDialogParams>\n) => {\n  return dialogService.open<BulkRestoreDialogResult, BulkRestoreDialogParams>(\n    BulkRestoreDialogComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"vault-bulk-restore-dialog\",\n  templateUrl: \"bulk-restore-dialog.component.html\",\n})\nexport class BulkRestoreDialogComponent {\n  cipherIds: string[];\n\n  constructor(\n    @Inject(DIALOG_DATA) params: BulkRestoreDialogParams,\n    private dialogRef: DialogRef<BulkRestoreDialogResult>,\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService\n  ) {\n    this.cipherIds = params.cipherIds ?? [];\n  }\n\n  submit = async () => {\n    await this.cipherService.restoreManyWithServer(this.cipherIds);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItems\"));\n    this.close(BulkRestoreDialogResult.Restored);\n  };\n\n  protected cancel() {\n    this.close(BulkRestoreDialogResult.Canceled);\n  }\n\n  private close(result: BulkRestoreDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n","type CheckableBase = {\n  checked?: boolean;\n};\n\nexport type Checkable<T> = T & CheckableBase;\n\nexport function isChecked(item: CheckableBase): boolean {\n  return !!item.checked;\n}\n","<bit-simple-dialog>\n  <span bitDialogTitle>\n    {{ \"restoreSelected\" | i18n }}\n  </span>\n  <span bitDialogContent>\n    {{ \"restoreSelectedItemsDesc\" | i18n: cipherIds.length }}\n  </span>\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <button bitButton type=\"submit\" buttonType=\"primary\" [bitAction]=\"submit\">\n      {{ \"restore\" | i18n }}\n    </button>\n    <button bitButton type=\"button\" (click)=\"cancel()\">{{ \"cancel\" | i18n }}</button>\n  </div>\n</bit-simple-dialog>\n","import { DialogConfig, DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject, OnInit } from \"@angular/core\";\n\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nexport interface BulkShareDialogParams {\n  ciphers: CipherView[];\n  organizationId?: string;\n}\n\nexport enum BulkShareDialogResult {\n  Shared = \"shared\",\n  Canceled = \"canceled\",\n}\n\n/**\n * Strongly typed helper to open a BulkShareDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openBulkShareDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<BulkShareDialogParams>\n) => {\n  return dialogService.open<BulkShareDialogResult, BulkShareDialogParams>(\n    BulkShareDialogComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"vault-bulk-share-dialog\",\n  templateUrl: \"bulk-share-dialog.component.html\",\n})\nexport class BulkShareDialogComponent implements OnInit {\n  ciphers: CipherView[] = [];\n  organizationId: string;\n\n  nonShareableCount = 0;\n  collections: Checkable<CollectionView>[] = [];\n  organizations: Organization[] = [];\n  shareableCiphers: CipherView[] = [];\n\n  private writeableCollections: CollectionView[] = [];\n\n  constructor(\n    @Inject(DIALOG_DATA) params: BulkShareDialogParams,\n    private dialogRef: DialogRef<BulkShareDialogResult>,\n    private cipherService: CipherService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private organizationService: OrganizationService,\n    private logService: LogService\n  ) {\n    this.ciphers = params.ciphers ?? [];\n    this.organizationId = params.organizationId;\n  }\n\n  async ngOnInit() {\n    this.shareableCiphers = this.ciphers.filter(\n      (c) => !c.hasOldAttachments && c.organizationId == null\n    );\n    this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n    this.organizations = await this.organizationService.getAll();\n    if (this.organizationId == null && this.organizations.length > 0) {\n      this.organizationId = this.organizations[0].id;\n    }\n    this.filterCollections();\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  filterCollections() {\n    this.selectAll(false);\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  submit = async () => {\n    const checkedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    try {\n      await this.cipherService.shareManyWithServer(\n        this.shareableCiphers,\n        this.organizationId,\n        checkedCollectionIds\n      );\n      const orgName =\n        this.organizations.find((o) => o.id === this.organizationId)?.name ??\n        this.i18nService.t(\"organization\");\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"movedItemsToOrg\", orgName)\n      );\n      this.close(BulkShareDialogResult.Shared);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  };\n\n  check(c: Checkable<CollectionView>, select?: boolean) {\n    c.checked = select == null ? !c.checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n\n  get canSave() {\n    if (\n      this.shareableCiphers != null &&\n      this.shareableCiphers.length > 0 &&\n      this.collections != null\n    ) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  protected cancel() {\n    this.close(BulkShareDialogResult.Canceled);\n  }\n\n  private close(result: BulkShareDialogResult) {\n    this.dialogRef.close(result);\n  }\n}\n","<bit-dialog>\n  <span bitDialogTitle>\n    {{ \"moveSelectedToOrg\" | i18n }}\n  </span>\n  <span bitDialogContent>\n    <p>{{ \"moveManyToOrgDesc\" | i18n }}</p>\n    <p>\n      {{\n        \"moveSelectedItemsCountDesc\"\n          | i18n: this.ciphers.length:shareableCiphers.length:nonShareableCount\n      }}\n    </p>\n    <bit-form-field>\n      <bit-label for=\"organization\">{{ \"organization\" | i18n }}</bit-label>\n      <select\n        bitInput\n        [(ngModel)]=\"organizationId\"\n        id=\"organization\"\n        (change)=\"filterCollections()\"\n      >\n        <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n      </select>\n    </bit-form-field>\n\n    <div class=\"d-flex\">\n      <label class=\"tw-mb-1 tw-block tw-font-semibold tw-text-main\">{{\n        \"collections\" | i18n\n      }}</label>\n      <div class=\"tw-ml-auto tw-flex tw-gap-2\" *ngIf=\"collections && collections.length\">\n        <button bitLink type=\"button\" (click)=\"selectAll(true)\" class=\"tw-px-2\">\n          {{ \"selectAll\" | i18n }}\n        </button>\n        <button bitLink type=\"button\" (click)=\"selectAll(false)\" class=\"tw-px-2\">\n          {{ \"unselectAll\" | i18n }}\n        </button>\n      </div>\n    </div>\n    <div *ngIf=\"!collections || !collections.length\">\n      {{ \"noCollectionsInList\" | i18n }}\n    </div>\n    <table\n      class=\"table table-hover table-list mb-0\"\n      *ngIf=\"collections && collections.length\"\n      id=\"collections\"\n    >\n      <tbody>\n        <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n          <td class=\"table-list-checkbox\">\n            <input\n              bitInput\n              type=\"checkbox\"\n              [(ngModel)]=\"c.checked\"\n              name=\"Collection[{{ i }}].Checked\"\n              attr.aria-label=\"Check {{ c.name }}\"\n              appStopProp\n            />\n          </td>\n          <td>\n            {{ c.name }}\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </span>\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <button bitButton type=\"submit\" buttonType=\"primary\" [bitAction]=\"submit\">\n      {{ \"save\" | i18n }}\n    </button>\n    <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"cancel()\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</bit-dialog>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({\n  name: \"ellipsis\",\n})\nexport class EllipsisPipe implements PipeTransform {\n  transform(value: string, limit = 25, completeWords = false, ellipsis = \"...\") {\n    if (value.length <= limit) {\n      return value;\n    }\n    limit -= ellipsis.length;\n    if (completeWords && value.length > limit && value.indexOf(\" \") > 0) {\n      limit = value.substring(0, limit).lastIndexOf(\" \");\n    }\n    return value.substring(0, limit) + ellipsis;\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { AvatarUpdateService } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { TokenService } from \"@bitwarden/common/auth/abstractions/token.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-org-badge\",\n  templateUrl: \"organization-name-badge.component.html\",\n})\nexport class OrganizationNameBadgeComponent implements OnInit {\n  @Input() organizationName: string;\n  @Input() profileName: string;\n\n  @Output() onOrganizationClicked = new EventEmitter<string>();\n\n  color: string;\n  textColor: string;\n  isMe: boolean;\n\n  constructor(\n    private i18nService: I18nService,\n    private avatarService: AvatarUpdateService,\n    private tokenService: TokenService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    if (this.organizationName == null || this.organizationName === \"\") {\n      this.organizationName = this.i18nService.t(\"me\");\n      this.isMe = true;\n    }\n    if (this.isMe) {\n      this.color = await this.avatarService.loadColorFromState();\n      if (this.color == null) {\n        const userId = await this.tokenService.getUserId();\n        if (userId != null) {\n          this.color = Utils.stringToColor(userId);\n        } else {\n          const userName =\n            (await this.tokenService.getName()) ?? (await this.tokenService.getEmail());\n          this.color = Utils.stringToColor(userName.toUpperCase());\n        }\n      }\n    } else {\n      this.color = Utils.stringToColor(this.organizationName.toUpperCase());\n    }\n    this.textColor = Utils.pickTextColorBasedOnBgColor(this.color, 135, true) + \"!important\";\n  }\n\n  emitOnOrganizationClicked() {\n    this.onOrganizationClicked.emit();\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<button\n  bitBadge\n  [style.color]=\"textColor\"\n  [style.background-color]=\"color\"\n  appA11yTitle=\"{{ organizationName }}\"\n  (click)=\"emitOnOrganizationClicked()\"\n>\n  {{ organizationName | ellipsis: 13 }}\n</button>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\n\nimport { GroupView } from \"../../../organizations/core\";\n\n@Component({\n  selector: \"app-group-badge\",\n  templateUrl: \"group-name-badge.component.html\",\n})\nexport class GroupNameBadgeComponent implements OnChanges {\n  @Input() selectedGroups: SelectionReadOnlyRequest[];\n  @Input() allGroups: GroupView[];\n\n  protected groupNames: string[] = [];\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnChanges() {\n    this.groupNames = this.selectedGroups\n      .map((g) => {\n        return this.allGroups.find((o) => o.id === g.id)?.name;\n      })\n      .sort(this.i18nService.collator.compare);\n  }\n}\n","<bit-badge-list [items]=\"groupNames\" [maxItems]=\"3\" badgeType=\"secondary\"></bit-badge-list>\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { CollectionView } from \"@bitwarden/common/src/models/view/collection.view\";\n\n@Pipe({\n  name: \"collectionNameFromId\",\n  pure: true,\n})\nexport class GetCollectionNameFromIdPipe implements PipeTransform {\n  transform(value: string, collections: CollectionView[]) {\n    return collections.find((o) => o.id === value)?.name;\n  }\n}\n","<ng-container *ngFor=\"let c of shownCollections\">\n  <span bitBadge badgeType=\"secondary\">{{ c | collectionNameFromId: collections }}</span>\n</ng-container>\n<ng-container *ngIf=\"showXMore\">\n  <span bitBadge badgeType=\"secondary\">+ {{ xMoreCount }} more</span>\n</ng-container>\n","import { Component, Input } from \"@angular/core\";\n\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\n\n@Component({\n  selector: \"app-collection-badge\",\n  templateUrl: \"collection-name-badge.component.html\",\n})\nexport class CollectionNameBadgeComponent {\n  @Input() collectionIds: string[];\n  @Input() collections: CollectionView[];\n\n  get shownCollections(): string[] {\n    return this.showXMore ? this.collectionIds.slice(0, 2) : this.collectionIds;\n  }\n\n  get showXMore(): boolean {\n    return this.collectionIds.length > 3;\n  }\n\n  get xMoreCount(): number {\n    return this.collectionIds.length - 2;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Pipe({\n  name: \"orgNameFromId\",\n  pure: true,\n})\nexport class GetOrgNameFromIdPipe implements PipeTransform {\n  transform(value: string, organizations: Organization[]) {\n    const orgName = organizations.find((o) => o.id === value)?.name;\n    return orgName;\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<ng-container>\n  <bit-table\n    *ngIf=\"filteredCiphers.length || filteredCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <ng-container header>\n      <tr>\n        <th bitCell class=\"tw-min-w-fit\" colspan=\"2\">\n          <input\n            class=\"tw-mr-2\"\n            type=\"checkbox\"\n            bitCheckbox\n            id=\"checkAll\"\n            [disabled]=\"isProcessingAction\"\n            (change)=\"checkAll($any($event.target).checked)\"\n            [(ngModel)]=\"isAllChecked\"\n          />\n          <label class=\"tw-mb-0 !tw-font-bold !tw-text-muted\" for=\"checkAll\">{{\n            \"all\" | i18n\n          }}</label>\n        </th>\n        <th bitCell class=\"tw-w-1/2\">{{ \"name\" | i18n }}</th>\n        <th bitCell class=\"tw-w-max\">\n          <ng-container *ngIf=\"!organization\">{{ \"owner\" | i18n }}</ng-container>\n          <ng-container *ngIf=\"organization\">\n            {{ (activeFilter.selectedCollectionNode ? \"groups\" : \"collections\") | i18n }}\n          </ng-container>\n        </th>\n        <th bitCell class=\"tw-min-w-fit tw-text-right\">\n          <button\n            [bitMenuTriggerFor]=\"headerMenu\"\n            [disabled]=\"isProcessingAction\"\n            bitIconButton=\"bwi-ellipsis-v\"\n            size=\"small\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n          ></button>\n          <bit-menu #headerMenu>\n            <ng-container>\n              <button\n                bitMenuItem\n                (click)=\"bulkMove()\"\n                *ngIf=\"!activeFilter.isDeleted && !organization\"\n              >\n                <i class=\"bwi bwi-fw bwi-folder\" aria-hidden=\"true\"></i>\n                {{ \"moveSelected\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"bulkShare()\"\n                *ngIf=\"!activeFilter.isDeleted && !organization\"\n              >\n                <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n                {{ \"moveSelectedToOrg\" | i18n }}\n              </button>\n              <button bitMenuItem (click)=\"bulkRestore()\" *ngIf=\"activeFilter.isDeleted\">\n                <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n                {{ \"restoreSelected\" | i18n }}\n              </button>\n              <button bitMenuItem (click)=\"bulkDelete()\">\n                <span class=\"tw-text-danger\">\n                  <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                  {{\n                    (activeFilter.isDeleted ? \"permanentlyDeleteSelected\" : \"deleteSelected\") | i18n\n                  }}\n                </span>\n              </button>\n            </ng-container>\n          </bit-menu>\n        </th>\n      </tr>\n    </ng-container>\n    <ng-template body>\n      <tr\n        bitRow\n        *ngFor=\"let col of filteredCollections\"\n        [class.tw-cursor-pointer]=\"!isProcessingAction\"\n        (click)=\"!isProcessingAction && navigateCollection(col)\"\n        alignContent=\"middle\"\n      >\n        <td bitCell (click)=\"checkRow(col)\" appStopProp>\n          <input\n            *ngIf=\"canDeleteCollection(col.node)\"\n            class=\"tw-cursor-pointer\"\n            type=\"checkbox\"\n            bitCheckbox\n            [disabled]=\"isProcessingAction\"\n            [(ngModel)]=\"$any(col).checked\"\n            appStopProp\n          />\n        </td>\n        <td bitCell>\n          <div class=\"icon\" aria-hidden=\"true\">\n            <i class=\"bwi bwi-fw bwi-lg bwi-collection\"></i>\n          </div>\n        </td>\n        <td bitCell>\n          <button\n            bitLink\n            class=\"tw-text-start\"\n            linkType=\"secondary\"\n            (click)=\"navigateCollection(col)\"\n            [disabled]=\"isProcessingAction\"\n          >\n            {{ col.node.name }}\n          </button>\n        </td>\n        <td bitCell>\n          <ng-container *ngIf=\"!organization\">\n            <app-org-badge\n              organizationName=\"{{ col.node.organizationId | orgNameFromId: organizations }}\"\n              [profileName]=\"profileName\"\n              (onOrganizationClicked)=\"onOrganizationClicked(col.node.organizationId)\"\n              appStopProp\n            >\n            </app-org-badge>\n          </ng-container>\n          <ng-container *ngIf=\"organization && activeFilter.selectedCollectionNode\">\n            <app-group-badge\n              *ngIf=\"col.node.groups\"\n              [selectedGroups]=\"col.node.groups\"\n              [allGroups]=\"groups\"\n            ></app-group-badge>\n          </ng-container>\n        </td>\n        <td bitCell class=\"tw-text-right\">\n          <button\n            *ngIf=\"canEditCollection(col.node) || canDeleteCollection(col.node)\"\n            [bitMenuTriggerFor]=\"collectionOptions\"\n            [disabled]=\"isProcessingAction\"\n            size=\"small\"\n            bitIconButton=\"bwi-ellipsis-v\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n            appStopProp\n          ></button>\n          <bit-menu #collectionOptions>\n            <button\n              *ngIf=\"canEditCollection(col.node)\"\n              bitMenuItem\n              (click)=\"editCollection(col.node, 'info')\"\n            >\n              <i class=\"bwi bwi-fw bwi-pencil-square\" aria-hidden=\"true\"></i>\n              {{ \"editInfo\" | i18n }}\n            </button>\n            <button\n              *ngIf=\"canEditCollection(col.node)\"\n              bitMenuItem\n              (click)=\"editCollection(col.node, 'access')\"\n            >\n              <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n              {{ \"access\" | i18n }}\n            </button>\n            <button\n              *ngIf=\"canDeleteCollection(col.node)\"\n              bitMenuItem\n              (click)=\"deleteCollection(col.node)\"\n            >\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n      <tr\n        bitRow\n        *ngFor=\"let c of filteredCiphers\"\n        [class.tw-cursor-pointer]=\"!isProcessingAction\"\n        (click)=\"!isProcessingAction && selectCipher(c)\"\n        alignContent=\"middle\"\n      >\n        <td bitCell (click)=\"checkRow(c)\" appStopProp>\n          <input\n            type=\"checkbox\"\n            bitCheckbox\n            [disabled]=\"isProcessingAction\"\n            [(ngModel)]=\"$any(c).checked\"\n            appStopProp\n          />\n        </td>\n        <td bitCell>\n          <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n        </td>\n        <td bitCell class=\"tw-break-all\">\n          <button\n            bitLink\n            class=\"tw-text-start\"\n            [routerLink]=\"[]\"\n            [queryParams]=\"{ itemId: c.id }\"\n            queryParamsHandling=\"merge\"\n            title=\"{{ 'editItem' | i18n }}\"\n            [disabled]=\"isProcessingAction\"\n          >\n            {{ c.name }}\n          </button>\n          <ng-container *ngIf=\"c.hasAttachments\">\n            <i\n              class=\"bwi bwi-paperclip\"\n              appStopProp\n              title=\"{{ 'attachments' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span class=\"sr-only\">{{ \"attachments\" | i18n }}</span>\n            <ng-container *ngIf=\"showFixOldAttachments(c)\">\n              <i\n                class=\"bwi bwi-exclamation-triangle text-warning\"\n                appStopProp\n                title=\"{{ 'attachmentsNeedFix' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"attachmentsNeedFix\" | i18n }}</span>\n            </ng-container>\n          </ng-container>\n          <br />\n          <span class=\"tw-text-sm tw-text-muted\" appStopProp>{{ c.subTitle }}</span>\n        </td>\n        <td bitCell>\n          <ng-container *ngIf=\"!organization\">\n            <app-org-badge\n              organizationName=\"{{ c.organizationId | orgNameFromId: organizations }}\"\n              profileName=\"{{ profileName }}\"\n              (onOrganizationClicked)=\"onOrganizationClicked(c.organizationId)\"\n              appStopProp\n            >\n            </app-org-badge>\n          </ng-container>\n          <ng-container *ngIf=\"organization && !activeFilter.selectedCollectionNode\">\n            <app-collection-badge\n              *ngIf=\"c.collectionIds\"\n              [collectionIds]=\"c.collectionIds\"\n              [collections]=\"vaultFilterService.filteredCollections$ | async\"\n            ></app-collection-badge>\n          </ng-container>\n        </td>\n        <td bitCell class=\"tw-text-right\">\n          <button\n            [bitMenuTriggerFor]=\"cipherOptions\"\n            [disabled]=\"isProcessingAction\"\n            size=\"small\"\n            bitIconButton=\"bwi-ellipsis-v\"\n            type=\"button\"\n            appA11yTitle=\"{{ 'options' | i18n }}\"\n            appStopProp\n          ></button>\n          <bit-menu #cipherOptions>\n            <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n              <button bitMenuItem (click)=\"copy(c, c.login.username, 'username', 'Username')\">\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyUsername\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.password, 'password', 'Password')\"\n                *ngIf=\"c.viewPassword\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyPassword\" | i18n }}\n              </button>\n              <button\n                bitMenuItem\n                (click)=\"copy(c, c.login.totp, 'verificationCodeTotp', 'TOTP')\"\n                *ngIf=\"displayTotpCopyButton(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                {{ \"copyVerificationCode\" | i18n }}\n              </button>\n              <button bitMenuItem *ngIf=\"c.login.canLaunch\" (click)=\"launch(c.login.launchUri)\">\n                <i class=\"bwi bwi-fw bwi-share-square\" aria-hidden=\"true\"></i>\n                {{ \"launch\" | i18n }}\n              </button>\n            </ng-container>\n            <button bitMenuItem (click)=\"attachments(c)\">\n              <i class=\"bwi bwi-fw bwi-paperclip\" aria-hidden=\"true\"></i>\n              {{ \"attachments\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n              (click)=\"clone(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-files\" aria-hidden=\"true\"></i>\n              {{ \"clone\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"!organization && !c.organizationId && !c.isDeleted\"\n              (click)=\"share(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-arrow-circle-right\" aria-hidden=\"true\"></i>\n              {{ \"moveToOrganization\" | i18n }}\n            </button>\n            <button\n              bitMenuItem\n              *ngIf=\"c.organizationId && !c.isDeleted\"\n              (click)=\"editCipherCollections(c)\"\n            >\n              <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n              {{ \"collections\" | i18n }}\n            </button>\n            <button bitMenuItem *ngIf=\"c.organizationId && accessEvents\" (click)=\"events(c)\">\n              <i class=\"bwi bwi-fw bwi-file-text\" aria-hidden=\"true\"></i>\n              {{ \"eventLogs\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"restore(c)\" *ngIf=\"c.isDeleted\">\n              <i class=\"bwi bwi-fw bwi-undo\" aria-hidden=\"true\"></i>\n              {{ \"restore\" | i18n }}\n            </button>\n            <button bitMenuItem (click)=\"deleteCipher(c)\">\n              <span class=\"tw-text-danger\">\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ (c.isDeleted ? \"permanentlyDelete\" : \"delete\") | i18n }}\n              </span>\n            </button>\n          </bit-menu>\n        </td>\n      </tr>\n    </ng-template>\n  </bit-table>\n  <div\n    class=\"tw-mt-6 tw-flex tw-h-full tw-flex-col tw-items-center tw-justify-start\"\n    *ngIf=\"\n      showMissingCollectionPermissionMessage ||\n      (!filteredCiphers.length && !filteredCollections.length)\n    \"\n  >\n    <ng-container *ngIf=\"!loaded\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n      <bit-icon [icon]=\"noItemIcon\" aria-hidden=\"true\"></bit-icon>\n      <ng-container *ngIf=\"showMissingCollectionPermissionMessage\">\n        <p>{{ \"noPermissionToViewAllCollectionItems\" | i18n }}</p>\n      </ng-container>\n      <ng-container *ngIf=\"!showMissingCollectionPermissionMessage\">\n        <p>{{ \"noItemsInList\" | i18n }}</p>\n        <button\n          type=\"button\"\n          buttonType=\"primary\"\n          bitButton\n          (click)=\"addCipher()\"\n          *ngIf=\"showAddNew\"\n        >\n          <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"newItem\" | i18n }}\n        </button>\n      </ng-container>\n    </ng-container>\n  </div>\n</ng-container>\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\nimport { lastValueFrom } from \"rxjs\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { VaultItemsComponent as BaseVaultItemsComponent } from \"@bitwarden/angular/vault/components/vault-items.component\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TokenService } from \"@bitwarden/common/auth/abstractions/token.service\";\nimport { EventType } from \"@bitwarden/common/enums/eventType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { CipherRepromptType } from \"@bitwarden/common/vault/enums/cipher-reprompt-type\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\nimport { DialogService, Icons } from \"@bitwarden/components\";\n\nimport { CollectionAdminView, GroupView } from \"../../organizations/core\";\n\nimport {\n  BulkDeleteDialogResult,\n  openBulkDeleteDialog,\n} from \"./bulk-action-dialogs/bulk-delete-dialog/bulk-delete-dialog.component\";\nimport {\n  BulkMoveDialogResult,\n  openBulkMoveDialog,\n} from \"./bulk-action-dialogs/bulk-move-dialog/bulk-move-dialog.component\";\nimport {\n  BulkRestoreDialogResult,\n  openBulkRestoreDialog,\n} from \"./bulk-action-dialogs/bulk-restore-dialog/bulk-restore-dialog.component\";\nimport {\n  BulkShareDialogResult,\n  openBulkShareDialog,\n} from \"./bulk-action-dialogs/bulk-share-dialog/bulk-share-dialog.component\";\nimport { VaultFilterService } from \"./vault-filter/services/abstractions/vault-filter.service\";\nimport { VaultFilter } from \"./vault-filter/shared/models/vault-filter.model\";\nimport { CollectionFilter } from \"./vault-filter/shared/models/vault-filter.type\";\n\nconst MaxCheckedCount = 500;\n\nexport type VaultItemRow = (CipherView | TreeNode<CollectionFilter>) & { checked?: boolean };\n\n@Component({\n  selector: \"app-vault-items\",\n  templateUrl: \"vault-items.component.html\",\n})\nexport class VaultItemsComponent extends BaseVaultItemsComponent implements OnDestroy {\n  @Output() activeFilterChanged = new EventEmitter<VaultFilter>();\n  @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n  @Output() onShareClicked = new EventEmitter<CipherView>();\n  @Output() onEditCipherCollectionsClicked = new EventEmitter<CipherView>();\n  @Output() onCloneClicked = new EventEmitter<CipherView>();\n  @Output() onOrganzationBadgeClicked = new EventEmitter<string>();\n\n  private _activeFilter: VaultFilter;\n  @Input() get activeFilter(): VaultFilter {\n    return this._activeFilter;\n  }\n  set activeFilter(value: VaultFilter) {\n    this._activeFilter = value;\n    this.reload(this.activeFilter.buildFilter(), this.activeFilter.isDeleted);\n  }\n\n  cipherType = CipherType;\n  actionPromise: Promise<any>;\n  userHasPremiumAccess = false;\n  organizations: Organization[] = [];\n  profileName: string;\n  noItemIcon = Icons.Search;\n  groups: GroupView[] = [];\n\n  protected pageSizeLimit = 200;\n  protected isAllChecked = false;\n  protected didScroll = false;\n  protected currentPagedCiphersCount = 0;\n  protected currentPagedCollectionsCount = 0;\n  protected refreshing = false;\n\n  protected pagedCiphers: CipherView[] = [];\n  protected pagedCollections: TreeNode<CollectionFilter>[] = [];\n  protected searchedCollections: TreeNode<CollectionFilter>[] = [];\n\n  get showAddNew() {\n    return !this.activeFilter.isDeleted;\n  }\n\n  get collections(): TreeNode<CollectionFilter>[] {\n    return this.activeFilter?.selectedCollectionNode?.children ?? [];\n  }\n\n  get filteredCollections(): TreeNode<CollectionFilter>[] {\n    if (this.isPaging()) {\n      return this.pagedCollections;\n    }\n\n    if (this.searchService.isSearchable(this.searchText)) {\n      return this.searchedCollections;\n    }\n\n    return this.collections;\n  }\n\n  get filteredCiphers(): CipherView[] {\n    return this.isPaging() ? this.pagedCiphers : this.ciphers;\n  }\n\n  constructor(\n    searchService: SearchService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected vaultFilterService: VaultFilterService,\n    protected cipherService: CipherService,\n    protected eventCollectionService: EventCollectionService,\n    protected totpService: TotpService,\n    protected stateService: StateService,\n    protected passwordRepromptService: PasswordRepromptService,\n    protected dialogService: DialogService,\n    protected logService: LogService,\n    private searchPipe: SearchPipe,\n    private organizationService: OrganizationService,\n    private tokenService: TokenService\n  ) {\n    super(searchService);\n  }\n\n  ngOnDestroy() {\n    this.checkAll(false);\n  }\n\n  async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n    this.checkAll(false);\n    this.isAllChecked = false;\n    this.pagedCollections = [];\n    if (!this.refreshing && this.isPaging()) {\n      this.currentPagedCollectionsCount = 0;\n      this.currentPagedCiphersCount = 0;\n    }\n    await super.applyFilter(filter);\n  }\n\n  // load() is called after the page loads and the first sync has completed.\n  // Do not use ngOnInit() for anything that requires sync data.\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    await super.load(filter, deleted);\n    this.updateSearchedCollections(this.collections);\n    this.profileName = await this.tokenService.getName();\n    this.organizations = await this.organizationService.getAll();\n    this.userHasPremiumAccess = await this.stateService.getCanAccessPremium();\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter, this.deleted);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  loadMore() {\n    // If we have less rows than the page size, we don't need to page anything\n    if (this.ciphers.length + (this.collections?.length || 0) <= this.pageSizeLimit) {\n      return;\n    }\n\n    let pageSpaceLeft = this.pageSizeLimit;\n    if (\n      this.refreshing &&\n      this.pagedCiphers.length + this.pagedCollections.length === 0 &&\n      this.currentPagedCiphersCount + this.currentPagedCollectionsCount > this.pageSizeLimit\n    ) {\n      // When we refresh, we want to load the previous amount of items, not restart the paging\n      pageSpaceLeft = this.currentPagedCiphersCount + this.currentPagedCollectionsCount;\n    }\n    // if there are still collections to show\n    if (this.collections?.length > this.pagedCollections.length) {\n      const collectionsToAdd = this.collections.slice(\n        this.pagedCollections.length,\n        this.currentPagedCollectionsCount + pageSpaceLeft\n      );\n      this.pagedCollections = this.pagedCollections.concat(collectionsToAdd);\n      // set the current count to the new count of paged collections\n      this.currentPagedCollectionsCount = this.pagedCollections.length;\n      // subtract the available page size by the amount of collections we just added, default to 0 if negative\n      pageSpaceLeft =\n        collectionsToAdd.length > pageSpaceLeft ? 0 : pageSpaceLeft - collectionsToAdd.length;\n    }\n    // if we have room left to show ciphers and we have ciphers to show\n    if (pageSpaceLeft > 0 && this.ciphers.length > this.pagedCiphers.length) {\n      this.pagedCiphers = this.pagedCiphers.concat(\n        this.ciphers.slice(this.pagedCiphers.length, this.currentPagedCiphersCount + pageSpaceLeft)\n      );\n      // set the current count to the new count of paged ciphers\n      this.currentPagedCiphersCount = this.pagedCiphers.length;\n    }\n    // set a flag if we actually loaded the second page while paging\n    this.didScroll = this.pagedCiphers.length + this.pagedCollections.length > this.pageSizeLimit;\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    const totalRows =\n      this.ciphers.length + (this.activeFilter?.selectedCollectionNode?.children.length || 0);\n    return !searching && totalRows > this.pageSizeLimit;\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.pagedCiphers = [];\n    this.loadMore();\n  }\n\n  async doSearch(indexedCiphers?: CipherView[]) {\n    this.ciphers = await this.searchService.searchCiphers(\n      this.searchText,\n      [this.filter, this.deletedFilter],\n      indexedCiphers\n    );\n    this.updateSearchedCollections(this.collections);\n    this.resetPaging();\n  }\n\n  launch(uri: string) {\n    this.platformUtilsService.launchUri(uri);\n  }\n\n  async attachments(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onAttachmentsClicked.emit(c);\n  }\n\n  async share(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onShareClicked.emit(c);\n  }\n\n  editCipherCollections(c: CipherView) {\n    this.onEditCipherCollectionsClicked.emit(c);\n  }\n\n  async clone(c: CipherView) {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    this.onCloneClicked.emit(c);\n  }\n\n  async deleteCipher(c: CipherView): Promise<boolean> {\n    if (!(await this.repromptCipher(c))) {\n      return;\n    }\n    if (this.actionPromise != null) {\n      return;\n    }\n    const permanent = c.isDeleted;\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\n        permanent ? \"permanentlyDeleteItemConfirmation\" : \"deleteItemConfirmation\"\n      ),\n      this.i18nService.t(permanent ? \"permanentlyDeleteItem\" : \"deleteItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.deleteCipherWithServer(c.id, permanent);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(permanent ? \"permanentlyDeletedItem\" : \"deletedItem\")\n      );\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkDelete() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedIds = this.selectedCipherIds;\n    if (selectedIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkDeleteDialog(this.dialogService, {\n      data: { permanent: this.deleted, cipherIds: selectedIds },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkDeleteDialogResult.Deleted) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  async restore(c: CipherView): Promise<boolean> {\n    if (this.actionPromise != null || !c.isDeleted) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"restoreItemConfirmation\"),\n      this.i18nService.t(\"restoreItem\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.cipherService.restoreWithServer(c.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"restoredItem\"));\n      this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async bulkRestore() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedCipherIds = this.selectedCipherIds;\n    if (selectedCipherIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkRestoreDialog(this.dialogService, {\n      data: { cipherIds: selectedCipherIds },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkRestoreDialogResult.Restored) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  async bulkShare() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedCiphers = this.selectedCiphers;\n    if (selectedCiphers.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkShareDialog(this.dialogService, { data: { ciphers: selectedCiphers } });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkShareDialogResult.Shared) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  async bulkMove() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedCipherIds = this.selectedCipherIds;\n    if (selectedCipherIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkMoveDialog(this.dialogService, {\n      data: { cipherIds: selectedCipherIds },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkMoveDialogResult.Moved) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  async copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n    if (\n      this.passwordRepromptService.protectedFields().includes(aType) &&\n      !(await this.repromptCipher(cipher))\n    ) {\n      return;\n    }\n\n    if (value == null || (aType === \"TOTP\" && !this.displayTotpCopyButton(cipher))) {\n      return;\n    } else if (value === cipher.login.totp) {\n      value = await this.totpService.getCode(value);\n    }\n\n    if (!cipher.viewPassword) {\n      return;\n    }\n\n    this.platformUtilsService.copyToClipboard(value, { window: window });\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(typeI18nKey))\n    );\n\n    if (typeI18nKey === \"password\" || typeI18nKey === \"verificationCodeTotp\") {\n      this.eventCollectionService.collect(\n        EventType.Cipher_ClientToggledHiddenFieldVisible,\n        cipher.id\n      );\n    } else if (typeI18nKey === \"securityCode\") {\n      this.eventCollectionService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n    }\n  }\n\n  navigateCollection(node: TreeNode<CollectionFilter>) {\n    const filter = this.activeFilter;\n    filter.selectedCollectionNode = node;\n    this.activeFilterChanged.emit(filter);\n  }\n\n  checkAll(select: boolean) {\n    if (select) {\n      this.checkAll(false);\n    }\n    const items: VaultItemRow[] = this.ciphers;\n    if (!items) {\n      return;\n    }\n\n    const selectCount = select && items.length > MaxCheckedCount ? MaxCheckedCount : items.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkRow(items[i], select);\n    }\n  }\n\n  checkRow(item: VaultItemRow, select?: boolean) {\n    // Collections can't be managed in end user vault\n    if (!(item instanceof CipherView)) {\n      return;\n    }\n    item.checked = select ?? !item.checked;\n  }\n\n  get selectedCiphers(): CipherView[] {\n    if (!this.ciphers) {\n      return [];\n    }\n    return this.ciphers.filter((c) => !!(c as VaultItemRow).checked);\n  }\n\n  get selectedCipherIds(): string[] {\n    return this.selectedCiphers.map((c) => c.id);\n  }\n\n  displayTotpCopyButton(cipher: CipherView) {\n    return (\n      (cipher?.login?.hasTotp ?? false) && (cipher.organizationUseTotp || this.userHasPremiumAccess)\n    );\n  }\n\n  onOrganizationClicked(organizationId: string) {\n    this.onOrganzationBadgeClicked.emit(organizationId);\n  }\n\n  events(c: CipherView) {\n    // TODO: This should be removed but is needed since we reuse the same template\n  }\n\n  canDeleteCollection(c: CollectionAdminView): boolean {\n    // TODO: This should be removed but is needed since we reuse the same template\n    return false; // Always return false for non org vault\n  }\n\n  async deleteCollection(collection: CollectionView): Promise<void> {\n    // TODO: This should be removed but is needed since we reuse the same template\n  }\n\n  canEditCollection(c: CollectionAdminView): boolean {\n    // TODO: This should be removed but is needed since we reuse the same template\n    return false; // Always return false for non org vault\n  }\n\n  async editCollection(c: CollectionView, tab: \"info\" | \"access\"): Promise<void> {\n    // TODO: This should be removed but is needed since we reuse the same template\n  }\n\n  get showMissingCollectionPermissionMessage(): boolean {\n    // TODO: This should be removed but is needed since we reuse the same template\n    return false; // Always return false for non org vault\n  }\n\n  /**\n   * @deprecated Block interaction using long running modal dialog instead\n   */\n  protected get isProcessingAction() {\n    return this.actionPromise != null;\n  }\n\n  protected updateSearchedCollections(collections: TreeNode<CollectionFilter>[]) {\n    if (this.searchService.isSearchable(this.searchText)) {\n      this.searchedCollections = this.searchPipe.transform(\n        collections,\n        this.searchText,\n        (collection) => collection.node.name,\n        (collection) => collection.node.id\n      );\n    }\n  }\n\n  protected deleteCipherWithServer(id: string, permanent: boolean) {\n    return permanent\n      ? this.cipherService.deleteWithServer(id)\n      : this.cipherService.softDeleteWithServer(id);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return c.hasOldAttachments && c.organizationId == null;\n  }\n\n  protected async repromptCipher(c?: CipherView) {\n    if (c) {\n      return (\n        c.reprompt === CipherRepromptType.None ||\n        (await this.passwordRepromptService.showPasswordPrompt())\n      );\n    } else {\n      const selectedCiphers = this.selectedCiphers;\n      const notProtected = !selectedCiphers.find(\n        (cipher) => cipher.reprompt !== CipherRepromptType.None\n      );\n\n      return notProtected || (await this.passwordRepromptService.showPasswordPrompt());\n    }\n  }\n}\n","import { Component, EventEmitter, Input, OnDestroy, Output } from \"@angular/core\";\nimport { lastValueFrom } from \"rxjs\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { EventCollectionService } from \"@bitwarden/common/abstractions/event/event-collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TotpService } from \"@bitwarden/common/abstractions/totp.service\";\nimport { TokenService } from \"@bitwarden/common/auth/abstractions/token.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { CollectionAdminView } from \"../../organizations/core\";\nimport { GroupService } from \"../../organizations/core/services/group/group.service\";\nimport {\n  CollectionDialogResult,\n  CollectionDialogTabType,\n  openCollectionDialog,\n} from \"../../organizations/shared/components/collection-dialog/collection-dialog.component\";\nimport {\n  BulkDeleteDialogResult,\n  openBulkDeleteDialog,\n} from \"../individual-vault/bulk-action-dialogs/bulk-delete-dialog/bulk-delete-dialog.component\";\nimport { VaultFilterService } from \"../individual-vault/vault-filter/services/abstractions/vault-filter.service\";\nimport { CollectionFilter } from \"../individual-vault/vault-filter/shared/models/vault-filter.type\";\nimport {\n  VaultItemRow,\n  VaultItemsComponent as BaseVaultItemsComponent,\n} from \"../individual-vault/vault-items.component\";\n\nconst MaxCheckedCount = 500;\n\n@Component({\n  selector: \"app-org-vault-items\",\n  templateUrl: \"../individual-vault/vault-items.component.html\",\n})\nexport class VaultItemsComponent extends BaseVaultItemsComponent implements OnDestroy {\n  @Input() set initOrganization(value: Organization) {\n    this.organization = value;\n    this.changeOrganization();\n  }\n  @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n  protected allCiphers: CipherView[] = [];\n\n  constructor(\n    searchService: SearchService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    cipherService: CipherService,\n    vaultFilterService: VaultFilterService,\n    eventCollectionService: EventCollectionService,\n    totpService: TotpService,\n    passwordRepromptService: PasswordRepromptService,\n    dialogService: DialogService,\n    logService: LogService,\n    stateService: StateService,\n    organizationService: OrganizationService,\n    tokenService: TokenService,\n    searchPipe: SearchPipe,\n    protected groupService: GroupService,\n    private apiService: ApiService\n  ) {\n    super(\n      searchService,\n      i18nService,\n      platformUtilsService,\n      vaultFilterService,\n      cipherService,\n      eventCollectionService,\n      totpService,\n      stateService,\n      passwordRepromptService,\n      dialogService,\n      logService,\n      searchPipe,\n      organizationService,\n      tokenService\n    );\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n  }\n\n  async changeOrganization() {\n    this.groups = await this.groupService.getAll(this.organization?.id);\n    await this.loadCiphers();\n    await this.reload(this.activeFilter.buildFilter());\n  }\n\n  async loadCiphers() {\n    if (this.organization?.canEditAnyCollection) {\n      this.accessEvents = this.organization?.useEvents;\n      this.allCiphers = await this.cipherService.getAllFromApiForOrganization(\n        this.organization?.id\n      );\n    } else {\n      this.allCiphers = (await this.cipherService.getAllDecrypted()).filter(\n        (c) => c.organizationId === this.organization?.id\n      );\n    }\n    await this.searchService.indexCiphers(this.organization?.id, this.allCiphers);\n  }\n\n  async refreshCollections(): Promise<void> {\n    await this.vaultFilterService.reloadCollections();\n    if (this.activeFilter.selectedCollectionNode) {\n      this.activeFilter.selectedCollectionNode =\n        await this.vaultFilterService.getCollectionNodeFromTree(\n          this.activeFilter.selectedCollectionNode.node.id\n        );\n    }\n  }\n\n  async load(filter: (cipher: CipherView) => boolean = null, deleted = false) {\n    this.deleted = deleted ?? false;\n    await this.applyFilter(filter);\n    this.loaded = true;\n  }\n\n  async refresh() {\n    await this.loadCiphers();\n    await this.refreshCollections();\n    super.refresh();\n  }\n\n  async search(timeout: number = null) {\n    await super.search(timeout, this.allCiphers);\n  }\n\n  events(c: CipherView) {\n    this.onEventsClicked.emit(c);\n  }\n\n  protected showFixOldAttachments(c: CipherView) {\n    return this.organization?.canEditAnyCollection && c.hasOldAttachments;\n  }\n\n  checkAll(select: boolean) {\n    if (select) {\n      this.checkAll(false);\n    }\n\n    const items: VaultItemRow[] = [...this.collections, ...this.ciphers];\n    if (!items.length) {\n      return;\n    }\n\n    const selectCount = select && items.length > MaxCheckedCount ? MaxCheckedCount : items.length;\n    for (let i = 0; i < selectCount; i++) {\n      this.checkRow(items[i], select);\n    }\n  }\n\n  checkRow(item: VaultItemRow, select?: boolean) {\n    if (item instanceof TreeNode && item.node.id == null) {\n      return;\n    }\n\n    // Do not allow checking a collection we cannot delete\n    if (item instanceof TreeNode && !this.canDeleteCollection(item.node)) {\n      return;\n    }\n\n    item.checked = select ?? !item.checked;\n  }\n\n  get selectedCollections(): TreeNode<CollectionFilter>[] {\n    if (!this.collections) {\n      return [];\n    }\n    return this.collections.filter((c) => !!(c as VaultItemRow).checked);\n  }\n\n  get selectedCollectionIds(): string[] {\n    return this.selectedCollections.map((c) => c.node.id);\n  }\n\n  canEditCollection(c: CollectionAdminView): boolean {\n    // Only edit collections if we're in the org vault and not editing \"Unassigned\"\n    if (this.organization === undefined || c.id === null) {\n      return false;\n    }\n\n    // Otherwise, check if we can edit the specified collection\n    return (\n      this.organization.canEditAnyCollection ||\n      (this.organization.canEditAssignedCollections && c.assigned)\n    );\n  }\n\n  async editCollection(c: CollectionView, tab: \"info\" | \"access\"): Promise<void> {\n    const tabType = tab == \"info\" ? CollectionDialogTabType.Info : CollectionDialogTabType.Access;\n\n    const dialog = openCollectionDialog(this.dialogService, {\n      data: { collectionId: c?.id, organizationId: this.organization?.id, initialTab: tabType },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === CollectionDialogResult.Saved || result === CollectionDialogResult.Deleted) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  get showMissingCollectionPermissionMessage(): boolean {\n    // Not filtering by collections, so no need to show message\n    if (this.activeFilter.selectedCollectionNode == null) {\n      return false;\n    }\n\n    // Filtering by all collections, so no need to show message\n    if (this.activeFilter.selectedCollectionNode.node.id == \"AllCollections\") {\n      return false;\n    }\n\n    // Filtering by a collection, so show message if user is not assigned\n    return !this.activeFilter.selectedCollectionNode.node.assigned && !this.organization.isAdmin;\n  }\n\n  canDeleteCollection(c: CollectionAdminView): boolean {\n    // Only delete collections if we're in the org vault and not deleting \"Unassigned\"\n    if (this.organization === undefined || c.id === null) {\n      return false;\n    }\n\n    // Otherwise, check if we can delete the specified collection\n    return (\n      this.organization?.canDeleteAnyCollection ||\n      (this.organization?.canDeleteAssignedCollections && c.assigned)\n    );\n  }\n\n  async deleteCollection(collection: CollectionView): Promise<void> {\n    if (\n      !this.organization.canDeleteAssignedCollections &&\n      !this.organization.canDeleteAnyCollection\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"missingPermissions\")\n      );\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    try {\n      this.actionPromise = this.apiService.deleteCollection(this.organization?.id, collection.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.actionPromise = null;\n      await this.refresh();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async bulkDelete() {\n    if (!(await this.repromptCipher())) {\n      return;\n    }\n\n    const selectedCipherIds = this.selectedCipherIds;\n    const selectedCollectionIds = this.deleted ? null : this.selectedCollectionIds;\n\n    if (!selectedCipherIds?.length && !selectedCollectionIds?.length) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nothingSelected\")\n      );\n      return;\n    }\n\n    const dialog = openBulkDeleteDialog(this.dialogService, {\n      data: {\n        permanent: this.deleted,\n        cipherIds: selectedCipherIds,\n        collectionIds: selectedCollectionIds,\n        organization: this.organization,\n      },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === BulkDeleteDialogResult.Deleted) {\n      this.actionPromise = this.refresh();\n      await this.actionPromise;\n      this.actionPromise = null;\n    }\n  }\n\n  /**\n   * @deprecated Block interaction using long running modal dialog instead\n   */\n  protected get isProcessingAction() {\n    return this.actionPromise != null;\n  }\n\n  protected deleteCipherWithServer(id: string, permanent: boolean) {\n    if (!this.organization?.canEditAnyCollection) {\n      return super.deleteCipherWithServer(id, this.deleted);\n    }\n    return permanent\n      ? this.apiService.deleteCipherAdmin(id)\n      : this.apiService.putDeleteCipherAdmin(id);\n  }\n}\n","<ng-template>\n  <i *ngIf=\"icon\" class=\"bwi {{ icon }} !tw-mr-2\" aria-hidden=\"true\"></i><ng-content></ng-content>\n</ng-template>\n","import { Component, EventEmitter, Input, Output, TemplateRef, ViewChild } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-breadcrumb\",\n  templateUrl: \"./breadcrumb.component.html\",\n})\nexport class BreadcrumbComponent {\n  @Input()\n  icon?: string;\n\n  @Input()\n  route?: string | any[] = undefined;\n\n  @Input()\n  queryParams?: Record<string, string> = {};\n\n  @Output()\n  click = new EventEmitter();\n\n  @ViewChild(TemplateRef, { static: true }) content: TemplateRef<unknown>;\n\n  onClick(args: unknown) {\n    this.click.next(args);\n  }\n}\n","<ng-container *ngFor=\"let breadcrumb of beforeOverflow; let last = last\">\n  <ng-container *ngIf=\"breadcrumb.route\">\n    <a\n      bitLink\n      linkType=\"primary\"\n      class=\"tw-my-2 tw-inline-block\"\n      [routerLink]=\"breadcrumb.route\"\n      [queryParams]=\"breadcrumb.queryParams\"\n    >\n      <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n    </a>\n  </ng-container>\n  <ng-container *ngIf=\"!breadcrumb.route\">\n    <button\n      type=\"button\"\n      bitLink\n      linkType=\"primary\"\n      class=\"tw-my-2 tw-inline-block\"\n      (click)=\"breadcrumb.onClick($event)\"\n    >\n      <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n    </button>\n  </ng-container>\n  <i *ngIf=\"!last\" class=\"bwi bwi-angle-right tw-mx-1.5 tw-text-main\"></i>\n</ng-container>\n\n<ng-container *ngIf=\"hasOverflow\">\n  <i *ngIf=\"beforeOverflow.length > 0\" class=\"bwi bwi-angle-right tw-mx-1.5 tw-text-main\"></i>\n\n  <button\n    type=\"button\"\n    bitIconButton=\"bwi-ellipsis-h\"\n    [bitMenuTriggerFor]=\"overflowMenu\"\n    size=\"small\"\n    aria-haspopup\n  ></button>\n\n  <bit-menu #overflowMenu>\n    <ng-container *ngFor=\"let breadcrumb of overflow\">\n      <ng-container *ngIf=\"breadcrumb.route\">\n        <a\n          bitMenuItem\n          linkType=\"primary\"\n          [routerLink]=\"breadcrumb.route\"\n          [queryParams]=\"breadcrumb.queryParams\"\n        >\n          <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n        </a>\n      </ng-container>\n      <ng-container *ngIf=\"!breadcrumb.route\">\n        <button type=\"button\" bitMenuItem linkType=\"primary\" (click)=\"breadcrumb.onClick($event)\">\n          <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n        </button>\n      </ng-container>\n    </ng-container>\n  </bit-menu>\n  <i class=\"bwi bwi-angle-right tw-mx-1.5 tw-text-main\"></i>\n\n  <ng-container *ngFor=\"let breadcrumb of afterOverflow; let last = last\">\n    <ng-container *ngIf=\"breadcrumb.route\">\n      <a\n        bitLink\n        linkType=\"primary\"\n        class=\"tw-my-2 tw-inline-block\"\n        [routerLink]=\"breadcrumb.route\"\n        [queryParams]=\"breadcrumb.queryParams\"\n      >\n        <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n      </a>\n    </ng-container>\n    <ng-container *ngIf=\"!breadcrumb.route\">\n      <button\n        type=\"button\"\n        bitLink\n        linkType=\"primary\"\n        class=\"tw-my-2 tw-inline-block\"\n        (click)=\"breadcrumb.onClick($event)\"\n      >\n        <ng-container [ngTemplateOutlet]=\"breadcrumb.content\"></ng-container>\n      </button>\n    </ng-container>\n    <i *ngIf=\"!last\" class=\"bwi bwi-angle-right tw-mx-1.5 tw-text-main\"></i>\n  </ng-container>\n</ng-container>\n","import { Component, ContentChildren, Input, QueryList } from \"@angular/core\";\n\nimport { BreadcrumbComponent } from \"./breadcrumb.component\";\n\n@Component({\n  selector: \"bit-breadcrumbs\",\n  templateUrl: \"./breadcrumbs.component.html\",\n})\nexport class BreadcrumbsComponent {\n  @Input()\n  show = 3;\n\n  private breadcrumbs: BreadcrumbComponent[] = [];\n\n  @ContentChildren(BreadcrumbComponent)\n  protected set breadcrumbList(value: QueryList<BreadcrumbComponent>) {\n    this.breadcrumbs = value.toArray();\n  }\n\n  protected get beforeOverflow() {\n    if (this.hasOverflow) {\n      return this.breadcrumbs.slice(0, this.show - 1);\n    }\n\n    return this.breadcrumbs;\n  }\n\n  protected get overflow() {\n    return this.breadcrumbs.slice(this.show - 1, -1);\n  }\n\n  protected get afterOverflow() {\n    return this.breadcrumbs.slice(-1);\n  }\n\n  protected get hasOverflow() {\n    return this.breadcrumbs.length > this.show;\n  }\n}\n","<div class=\"tw-mb-4 tw-flex tw-items-start tw-justify-between\">\n  <div>\n    <bit-breadcrumbs *ngIf=\"activeFilter.collectionBreadcrumbs.length > 0\">\n      <bit-breadcrumb\n        *ngFor=\"let collection of activeFilter.collectionBreadcrumbs; let first = first\"\n        [icon]=\"first ? undefined : 'bwi-collection'\"\n        (click)=\"applyCollectionFilter(collection)\"\n      >\n        <!-- First node in the tree is the \"Org Name Vault\" item. The rest come from user input. -->\n        <ng-container *ngIf=\"first\">\n          {{ activeOrganizationId | orgNameFromId: (organizations$ | async) }}\n          {{ \"vault\" | i18n | lowercase }}\n        </ng-container>\n        <ng-container *ngIf=\"!first\">{{ collection.node.name }}</ng-container>\n      </bit-breadcrumb>\n    </bit-breadcrumbs>\n    <h1 class=\"tw-mb-0 tw-mt-1 tw-flex tw-items-center tw-space-x-2\">\n      <i\n        *ngIf=\"activeFilter.isCollectionSelected\"\n        class=\"bwi bwi-collection\"\n        aria-hidden=\"true\"\n      ></i>\n      <span>{{ title }}</span>\n      <ng-container\n        *ngIf=\"activeFilter.isCollectionSelected && !activeFilter.isUnassignedCollectionSelected\"\n      >\n        <button\n          bitIconButton=\"bwi-angle-down\"\n          [bitMenuTriggerFor]=\"editCollectionMenu\"\n          size=\"small\"\n          type=\"button\"\n          aria-haspopup\n        ></button>\n        <bit-menu #editCollectionMenu>\n          <button\n            type=\"button\"\n            *ngIf=\"canEditCollection(activeFilter.selectedCollectionNode.node)\"\n            bitMenuItem\n            (click)=\"editCollection(activeFilter.selectedCollectionNode.node, 'info')\"\n          >\n            <i class=\"bwi bwi-fw bwi-pencil-square\" aria-hidden=\"true\"></i>\n            {{ \"editInfo\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            *ngIf=\"canEditCollection(activeFilter.selectedCollectionNode.node)\"\n            bitMenuItem\n            (click)=\"editCollection(activeFilter.selectedCollectionNode.node, 'access')\"\n          >\n            <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n            {{ \"access\" | i18n }}\n          </button>\n          <button\n            type=\"button\"\n            *ngIf=\"canDeleteCollection(activeFilter.selectedCollectionNode.node)\"\n            bitMenuItem\n            (click)=\"deleteCollection(activeFilter.selectedCollectionNode.node)\"\n          >\n            <span class=\"tw-text-danger\">\n              <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n              {{ \"delete\" | i18n }}\n            </span>\n          </button>\n        </bit-menu>\n      </ng-container>\n      <small #actionSpinner [appApiAction]=\"actionPromise\">\n        <ng-container *ngIf=\"$any(actionSpinner).loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n      </small>\n    </h1>\n  </div>\n\n  <div *ngIf=\"!activeFilter.isDeleted\" class=\"tw-shrink-0\">\n    <div *ngIf=\"organization.canCreateNewCollections\" appListDropdown>\n      <button\n        bitButton\n        buttonType=\"primary\"\n        type=\"button\"\n        [bitMenuTriggerFor]=\"addOptions\"\n        id=\"newItemDropdown\"\n        appA11yTitle=\"{{ 'new' | i18n }}\"\n      >\n        {{ \"new\" | i18n }}<i class=\"bwi bwi-angle-down tw-ml-2\" aria-hidden=\"true\"></i>\n      </button>\n      <bit-menu #addOptions aria-labelledby=\"newItemDropdown\">\n        <button type=\"button\" bitMenuItem (click)=\"addCipher()\">\n          <i class=\"bwi bwi-fw bwi-globe\" aria-hidden=\"true\"></i>\n          {{ \"item\" | i18n }}\n        </button>\n        <button type=\"button\" bitMenuItem (click)=\"addCollection()\">\n          <i class=\"bwi bwi-fw bwi-collection\" aria-hidden=\"true\"></i>\n          {{ \"collection\" | i18n }}\n        </button>\n      </bit-menu>\n    </div>\n    <button\n      *ngIf=\"!organization.canCreateNewCollections\"\n      type=\"button\"\n      bitButton\n      buttonType=\"primary\"\n      (click)=\"addCipher()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newItem\" | i18n }}\n    </button>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom, lastValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport {\n  DialogService,\n  SimpleDialogCloseType,\n  SimpleDialogOptions,\n  SimpleDialogType,\n} from \"@bitwarden/components\";\n\nimport { CollectionAdminService, CollectionAdminView } from \"../../../organizations/core\";\nimport {\n  CollectionDialogResult,\n  CollectionDialogTabType,\n  openCollectionDialog,\n} from \"../../../organizations/shared\";\nimport { VaultFilterService } from \"../../individual-vault/vault-filter/services/abstractions/vault-filter.service\";\nimport { VaultFilter } from \"../../individual-vault/vault-filter/shared/models/vault-filter.model\";\nimport { CollectionFilter } from \"../../individual-vault/vault-filter/shared/models/vault-filter.type\";\n\n@Component({\n  selector: \"app-org-vault-header\",\n  templateUrl: \"./vault-header.component.html\",\n})\nexport class VaultHeaderComponent {\n  /**\n   * The organization currently being viewed\n   */\n  @Input() organization: Organization;\n\n  /**\n   * Promise that is used to determine the loading state of the header via the ApiAction directive.\n   * When the promise exists and is not resolved, the loading spinner will be shown.\n   */\n  @Input() actionPromise: Promise<any>;\n\n  /**\n   * The filter being actively applied to the vault view\n   */\n  @Input() activeFilter: VaultFilter;\n\n  /**\n   * Emits when the active filter has been modified by the header\n   */\n  @Output() activeFilterChanged = new EventEmitter<VaultFilter>();\n\n  /**\n   * Emits an event when a collection is modified or deleted via the header collection dropdown menu\n   */\n  @Output() onCollectionChanged = new EventEmitter<CollectionView | null>();\n\n  /**\n   * Emits an event when the new item button is clicked in the header\n   */\n  @Output() onAddCipher = new EventEmitter<void>();\n\n  protected organizations$ = this.organizationService.organizations$;\n\n  constructor(\n    private organizationService: OrganizationService,\n    private i18nService: I18nService,\n    private dialogService: DialogService,\n    private vaultFilterService: VaultFilterService,\n    private platformUtilsService: PlatformUtilsService,\n    private apiService: ApiService,\n    private logService: LogService,\n    private collectionAdminService: CollectionAdminService,\n    private router: Router\n  ) {}\n\n  /**\n   * The id of the organization that is currently being filtered on.\n   * This can come from a collection filter, organization filter, or the current organization when viewed\n   * in the organization admin console and no other filters are applied.\n   */\n  get activeOrganizationId() {\n    if (this.activeFilter.selectedCollectionNode != null) {\n      return this.activeFilter.selectedCollectionNode.node.organizationId;\n    }\n    if (this.activeFilter.selectedOrganizationNode != null) {\n      return this.activeFilter.selectedOrganizationNode.node.id;\n    }\n    return this.organization.id;\n  }\n\n  get title() {\n    if (this.activeFilter.isCollectionSelected) {\n      return this.activeFilter.selectedCollectionNode.node.name;\n    }\n    if (this.activeFilter.isUnassignedCollectionSelected) {\n      return this.i18nService.t(\"unassigned\");\n    }\n    return `${this.organization.name} ${this.i18nService.t(\"vault\").toLowerCase()}`;\n  }\n\n  private showFreeOrgUpgradeDialog(): void {\n    const orgUpgradeSimpleDialogOpts: SimpleDialogOptions = {\n      title: this.i18nService.t(\"upgradeOrganization\"),\n      content: this.i18nService.t(\n        this.organization.canManageBilling\n          ? \"freeOrgMaxCollectionReachedManageBilling\"\n          : \"freeOrgMaxCollectionReachedNoManageBilling\",\n        this.organization.maxCollections\n      ),\n      type: SimpleDialogType.PRIMARY,\n    };\n\n    if (this.organization.canManageBilling) {\n      orgUpgradeSimpleDialogOpts.acceptButtonText = this.i18nService.t(\"upgrade\");\n    } else {\n      orgUpgradeSimpleDialogOpts.acceptButtonText = this.i18nService.t(\"ok\");\n      orgUpgradeSimpleDialogOpts.cancelButtonText = null; // hide secondary btn\n    }\n\n    const simpleDialog = this.dialogService.openSimpleDialog(orgUpgradeSimpleDialogOpts);\n\n    firstValueFrom(simpleDialog.closed).then((result: SimpleDialogCloseType | undefined) => {\n      if (!result) {\n        return;\n      }\n\n      if (result == SimpleDialogCloseType.ACCEPT && this.organization.canManageBilling) {\n        this.router.navigate([\"/organizations\", this.organization.id, \"billing\", \"subscription\"], {\n          queryParams: { upgrade: true },\n        });\n      }\n    });\n  }\n\n  applyCollectionFilter(collection: TreeNode<CollectionFilter>) {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedCollectionNode = collection;\n    this.activeFilterChanged.emit(filter);\n  }\n\n  canEditCollection(c: CollectionAdminView): boolean {\n    // Only edit collections if we're in the org vault and not editing \"Unassigned\"\n    if (this.organization === undefined || c.id === null) {\n      return false;\n    }\n\n    // Otherwise, check if we can edit the specified collection\n    return (\n      this.organization.canEditAnyCollection ||\n      (this.organization.canEditAssignedCollections && c.assigned)\n    );\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n\n  async addCollection() {\n    if (this.organization.planProductType === ProductType.Free) {\n      const collections = await this.collectionAdminService.getAll(this.organization.id);\n      if (collections.length === this.organization.maxCollections) {\n        this.showFreeOrgUpgradeDialog();\n        return;\n      }\n    }\n\n    const dialog = openCollectionDialog(this.dialogService, {\n      data: {\n        organizationId: this.organization?.id,\n        parentCollectionId: this.activeFilter.collectionId,\n      },\n    });\n    const result = await lastValueFrom(dialog.closed);\n    if (result === CollectionDialogResult.Saved || result === CollectionDialogResult.Deleted) {\n      this.onCollectionChanged.emit(null);\n    }\n  }\n\n  async editCollection(c: CollectionView, tab: \"info\" | \"access\"): Promise<void> {\n    const tabType = tab == \"info\" ? CollectionDialogTabType.Info : CollectionDialogTabType.Access;\n\n    const dialog = openCollectionDialog(this.dialogService, {\n      data: { collectionId: c?.id, organizationId: this.organization?.id, initialTab: tabType },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === CollectionDialogResult.Saved || result === CollectionDialogResult.Deleted) {\n      this.onCollectionChanged.emit(c);\n    }\n  }\n\n  canDeleteCollection(c: CollectionAdminView): boolean {\n    // Only delete collections if we're in the org vault and not deleting \"Unassigned\"\n    if (this.organization === undefined || c.id === null) {\n      return false;\n    }\n\n    // Otherwise, check if we can delete the specified collection\n    return (\n      this.organization?.canDeleteAnyCollection ||\n      (this.organization?.canDeleteAssignedCollections && c.assigned)\n    );\n  }\n\n  async deleteCollection(collection: CollectionView): Promise<void> {\n    if (\n      !this.organization.canDeleteAnyCollection &&\n      !this.organization.canDeleteAssignedCollections\n    ) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"missingPermissions\")\n      );\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n    try {\n      this.actionPromise = this.apiService.deleteCollection(this.organization?.id, collection.id);\n      await this.actionPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.onCollectionChanged.emit(collection);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-organization-vault-filter\n              #vaultFilter\n              [organization]=\"organization\"\n              [activeFilter]=\"activeFilter\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n            ></app-organization-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <app-org-vault-header\n        [activeFilter]=\"activeFilter\"\n        (onCollectionChanged)=\"refreshItems()\"\n        [actionPromise]=\"vaultItemsComponent.actionPromise\"\n        (onAddCipher)=\"addCipher()\"\n        [organization]=\"organization\"\n      ></app-org-vault-header>\n      <app-callout\n        type=\"warning\"\n        *ngIf=\"activeFilter.isDeleted\"\n        icon=\"bwi bwi-exclamation-triangle\"\n      >\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-org-vault-items\n        [activeFilter]=\"activeFilter\"\n        [initOrganization]=\"organization\"\n        (onCipherClicked)=\"navigateToCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onEditCipherCollectionsClicked)=\"editCipherCollections($event)\"\n        (onEventsClicked)=\"viewEvents($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n      >\n      </app-org-vault-items>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { combineLatest, firstValueFrom, Subject } from \"rxjs\";\nimport { first, switchMap, takeUntil } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { EntityEventsComponent } from \"../../organizations/manage/entity-events.component\";\nimport { CollectionsComponent } from \"../../organizations/vault/collections.component\";\nimport { VaultFilterService } from \"../../vault/individual-vault/vault-filter/services/abstractions/vault-filter.service\";\nimport { VaultFilter } from \"../../vault/individual-vault/vault-filter/shared/models/vault-filter.model\";\nimport { RoutedVaultFilterBridgeService } from \"../individual-vault/vault-filter/services/routed-vault-filter-bridge.service\";\nimport { RoutedVaultFilterService } from \"../individual-vault/vault-filter/services/routed-vault-filter.service\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { VaultFilterComponent } from \"./vault-filter/vault-filter.component\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\n\nconst BroadcasterSubscriptionId = \"OrgVaultComponent\";\n\n@Component({\n  selector: \"app-org-vault\",\n  templateUrl: \"vault.component.html\",\n  providers: [RoutedVaultFilterService, RoutedVaultFilterBridgeService],\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true })\n  vaultFilterComponent: VaultFilterComponent;\n  @ViewChild(VaultItemsComponent, { static: true }) vaultItemsComponent: VaultItemsComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"eventsTemplate\", { read: ViewContainerRef, static: true })\n  eventsModalRef: ViewContainerRef;\n\n  organization: Organization;\n  trashCleanupWarning: string = null;\n  activeFilter: VaultFilter = new VaultFilter();\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private route: ActivatedRoute,\n    private organizationService: OrganizationService,\n    protected vaultFilterService: VaultFilterService,\n    private routedVaultFilterBridgeService: RoutedVaultFilterBridgeService,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private syncService: SyncService,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private dialogService: DialogService,\n    private messagingService: MessagingService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.trashCleanupWarning = this.i18nService.t(\"trashCleanupWarningSelfHosted\");\n\n    this.route.parent.params.pipe(takeUntil(this.destroy$)).subscribe((params) => {\n      this.organization = this.organizationService.get(params.organizationId);\n    });\n\n    this.route.queryParams.pipe(first(), takeUntil(this.destroy$)).subscribe((qParams) => {\n      this.vaultItemsComponent.searchText = this.vaultFilterComponent.searchText = qParams.search;\n    });\n\n    // verifies that the organization has been set\n    combineLatest([this.route.queryParams, this.route.parent.params])\n      .pipe(\n        switchMap(async ([qParams]) => {\n          const cipherId = getCipherIdFromParams(qParams);\n          if (!cipherId) {\n            return;\n          }\n          if (\n            // Handle users with implicit collection access since they use the admin endpoint\n            this.organization.canUseAdminCollections ||\n            (await this.cipherService.get(cipherId)) != null\n          ) {\n            this.editCipherId(cipherId);\n          } else {\n            this.platformUtilsService.showToast(\n              \"error\",\n              this.i18nService.t(\"errorOccurred\"),\n              this.i18nService.t(\"unknownCipher\")\n            );\n            this.router.navigate([], {\n              queryParams: { cipherId: null, itemId: null },\n              queryParamsHandling: \"merge\",\n            });\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    if (!this.organization.canUseAdminCollections) {\n      this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n        this.ngZone.run(async () => {\n          switch (message.command) {\n            case \"syncCompleted\":\n              if (message.successfully) {\n                await Promise.all([\n                  this.vaultFilterService.reloadCollections(),\n                  this.vaultItemsComponent.refresh(),\n                ]);\n                this.changeDetectorRef.detectChanges();\n              }\n              break;\n          }\n        });\n      });\n      await this.syncService.fullSync(false);\n    }\n\n    this.routedVaultFilterBridgeService.activeFilter$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((activeFilter) => {\n        this.activeFilter = activeFilter;\n      });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async refreshItems() {\n    this.vaultItemsComponent.actionPromise = this.vaultItemsComponent.refresh();\n    await this.vaultItemsComponent.actionPromise;\n    this.vaultItemsComponent.actionPromise = null;\n  }\n\n  filterSearchText(searchText: string) {\n    this.vaultItemsComponent.searchText = searchText;\n    this.vaultItemsComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n      this.messagingService.send(\"upgradeOrganization\", { organizationId: cipher.organizationId });\n      return;\n    }\n\n    let madeAttachmentChanges = false;\n\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.vaultItemsComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const currCollections = await firstValueFrom(this.vaultFilterService.filteredCollections$);\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.collectionIds = cipher.collectionIds;\n        comp.collections = currCollections.filter((c) => !c.readOnly && c.id != null);\n        comp.organization = this.organization;\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const collections = (await firstValueFrom(this.vaultFilterService.filteredCollections$)).filter(\n      (c) => !c.readOnly && c.id != null\n    );\n\n    await this.editCipher(null, (comp) => {\n      comp.type = this.activeFilter.cipherType;\n      comp.collections = collections;\n      if (this.activeFilter.collectionId) {\n        comp.collectionIds = [this.activeFilter.collectionId];\n      }\n    });\n  }\n\n  async navigateToCipher(cipher: CipherView) {\n    this.go({ itemId: cipher?.id });\n  }\n\n  async editCipher(\n    cipher: CipherView,\n    additionalComponentParameters?: (comp: AddEditComponent) => void\n  ) {\n    return this.editCipherId(cipher?.id, additionalComponentParameters);\n  }\n\n  async editCipherId(\n    cipherId: string,\n    additionalComponentParameters?: (comp: AddEditComponent) => void\n  ) {\n    const cipher = await this.cipherService.get(cipherId);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const defaultComponentParameters = (comp: AddEditComponent) => {\n      comp.organization = this.organization;\n      comp.organizationId = this.organization.id;\n      comp.cipherId = cipherId;\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n      comp.onSavedCipher.subscribe(async () => {\n        modal.close();\n        await this.vaultItemsComponent.refresh();\n      });\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n      comp.onDeletedCipher.subscribe(async () => {\n        modal.close();\n        await this.vaultItemsComponent.refresh();\n      });\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n      comp.onRestoredCipher.subscribe(async () => {\n        modal.close();\n        await this.vaultItemsComponent.refresh();\n      });\n    };\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      additionalComponentParameters == null\n        ? defaultComponentParameters\n        : (comp) => {\n            defaultComponentParameters(comp);\n            additionalComponentParameters(comp);\n          }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const collections = (await firstValueFrom(this.vaultFilterService.filteredCollections$)).filter(\n      (c) => !c.readOnly && c.id != null\n    );\n\n    await this.editCipher(cipher, (comp) => {\n      comp.cloneMode = true;\n      comp.collections = collections;\n      comp.collectionIds = cipher.collectionIds;\n    });\n  }\n\n  async viewEvents(cipher: CipherView) {\n    await this.modalService.openViewRef(EntityEventsComponent, this.eventsModalRef, (comp) => {\n      comp.name = cipher.name;\n      comp.organizationId = this.organization.id;\n      comp.entityId = cipher.id;\n      comp.showUser = true;\n      comp.entity = \"cipher\";\n    });\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        type: this.activeFilter.cipherType,\n        collectionId: this.activeFilter.collectionId,\n        deleted: this.activeFilter.isDeleted || null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { canAccessVaultTab } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\n\nimport { OrganizationPermissionsGuard } from \"../../organizations/guards/org-permissions.guard\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    canActivate: [OrganizationPermissionsGuard],\n    data: { titleId: \"vaults\", organizationPermissions: canAccessVaultTab },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { BreadcrumbsModule } from \"@bitwarden/components\";\n\nimport { LooseComponentsModule } from \"../../shared/loose-components.module\";\nimport { SharedModule } from \"../../shared/shared.module\";\nimport { OrganizationBadgeModule } from \"../../vault/individual-vault/organization-badge/organization-badge.module\";\nimport { PipesModule } from \"../../vault/individual-vault/pipes/pipes.module\";\n\nimport { CollectionBadgeModule } from \"./collection-badge/collection-badge.module\";\nimport { GroupBadgeModule } from \"./group-badge/group-badge.module\";\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { VaultHeaderComponent } from \"./vault-header/vault-header.component\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [\n    VaultRoutingModule,\n    VaultFilterModule,\n    SharedModule,\n    LooseComponentsModule,\n    GroupBadgeModule,\n    CollectionBadgeModule,\n    OrganizationBadgeModule,\n    PipesModule,\n    BreadcrumbsModule,\n  ],\n  declarations: [VaultComponent, VaultItemsComponent, VaultHeaderComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { AfterViewInit, Component, HostListener, Input, OnDestroy, ViewChild } from \"@angular/core\";\nimport { IsActiveMatchOptions, RouterLinkActive } from \"@angular/router\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { TabListItemDirective } from \"../shared/tab-list-item.directive\";\n\nimport { TabNavBarComponent } from \"./tab-nav-bar.component\";\n\n@Component({\n  selector: \"bit-tab-link\",\n  templateUrl: \"tab-link.component.html\",\n})\nexport class TabLinkComponent implements FocusableOption, AfterViewInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  @ViewChild(TabListItemDirective) tabItem: TabListItemDirective;\n  @ViewChild(\"rla\") routerLinkActive: RouterLinkActive;\n\n  readonly routerLinkMatchOptions: IsActiveMatchOptions = {\n    queryParams: \"ignored\",\n    matrixParams: \"ignored\",\n    paths: \"subset\",\n    fragment: \"ignored\",\n  };\n\n  @Input() route: string | any[];\n  @Input() disabled = false;\n\n  @HostListener(\"keydown\", [\"$event\"]) onKeyDown(event: KeyboardEvent) {\n    if (event.code === \"Space\") {\n      this.tabItem.click();\n    }\n  }\n\n  get active() {\n    return this.routerLinkActive?.isActive ?? false;\n  }\n\n  constructor(private _tabNavBar: TabNavBarComponent) {}\n\n  focus(): void {\n    this.tabItem.focus();\n  }\n\n  ngAfterViewInit() {\n    // The active state of tab links are tracked via the routerLinkActive directive\n    // We need to watch for changes to tell the parent nav group when the tab is active\n    this.routerLinkActive.isActiveChange\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((_) => this._tabNavBar.updateActiveLink());\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<a\n  bitTabListItem\n  [routerLink]=\"disabled ? null : route\"\n  routerLinkActive\n  [routerLinkActiveOptions]=\"routerLinkMatchOptions\"\n  #rla=\"routerLinkActive\"\n  [active]=\"rla.isActive\"\n  [disabled]=\"disabled\"\n  [attr.aria-disabled]=\"disabled\"\n  ariaCurrentWhenActive=\"page\"\n  role=\"link\"\n>\n  <ng-content></ng-content>\n</a>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  forwardRef,\n  Input,\n  QueryList,\n} from \"@angular/core\";\n\nimport { TabLinkComponent } from \"./tab-link.component\";\n\n@Component({\n  selector: \"bit-tab-nav-bar\",\n  templateUrl: \"tab-nav-bar.component.html\",\n  host: {\n    class: \"tw-block\",\n  },\n})\nexport class TabNavBarComponent implements AfterContentInit {\n  @ContentChildren(forwardRef(() => TabLinkComponent)) tabLabels: QueryList<TabLinkComponent>;\n  @Input() label = \"\";\n\n  /**\n   * Focus key manager for keeping tab controls accessible.\n   * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tablist_role#keyboard_interactions\n   */\n  keyManager: FocusKeyManager<TabLinkComponent>;\n\n  ngAfterContentInit(): void {\n    this.keyManager = new FocusKeyManager(this.tabLabels)\n      .withHorizontalOrientation(\"ltr\")\n      .withWrap()\n      .withHomeAndEnd();\n  }\n\n  updateActiveLink() {\n    // Keep the keyManager in sync with active tabs\n    const items = this.tabLabels.toArray();\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.keyManager.updateActiveItem(i);\n      }\n    }\n  }\n}\n","<bit-tab-header>\n  <nav bitTabListContainer [attr.aria-label]=\"label\" (keydown)=\"keyManager.onKeydown($event)\">\n    <ng-content></ng-content>\n  </nav>\n</bit-tab-header>\n","<div *ngIf=\"loaded && activeOrganization != null\" class=\"tw-flex\">\n  <button\n    class=\"tw-flex tw-items-center tw-border-none tw-bg-background-alt\"\n    type=\"button\"\n    id=\"pickerButton\"\n    [appA11yTitle]=\"'organizationPicker' | i18n\"\n    [bitMenuTriggerFor]=\"orgPickerMenu\"\n  >\n    <bit-avatar [text]=\"activeOrganization.name\"></bit-avatar>\n    <div class=\"tw-flex\">\n      <div class=\"org-name tw-ml-3\">\n        <span>{{ activeOrganization.name }}</span>\n        <small class=\"tw-text-muted\">{{ \"organization\" | i18n }}</small>\n      </div>\n      <div class=\"tw-ml-3\">\n        <i class=\"bwi bwi-angle-down tw-text-main\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  </button>\n  <div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-danger-500 tw-text-danger\"\n      *ngIf=\"!activeOrganization.enabled\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"organizationIsDisabled\" | i18n }}\n      </div>\n    </div>\n    <div\n      class=\"tw-ml-3 tw-rounded tw-border tw-border-solid tw-border-info-500 tw-text-info\"\n      *ngIf=\"activeOrganization.isProviderUser\"\n    >\n      <div class=\"tw-py-2 tw-px-5\">\n        <i class=\"bwi bwi-exclamation-triangle\" aria-hidden=\"true\"></i>\n        {{ \"accessingUsingProvider\" | i18n: activeOrganization.providerName }}\n      </div>\n    </div>\n  </div>\n\n  <bit-menu #orgPickerMenu>\n    <ul aria-labelledby=\"pickerButton\" class=\"tw-m-0 tw-p-0\">\n      <li\n        *ngFor=\"let org of organizations$ | async\"\n        class=\"tw-flex tw-list-none tw-flex-col\"\n        role=\"none\"\n      >\n        <a bitMenuItem [routerLink]=\"['/organizations', org.id]\">\n          <i\n            class=\"bwi bwi-check mr-2\"\n            [ngClass]=\"org.id === activeOrganization.id ? 'visible' : 'invisible'\"\n          >\n            <span class=\"tw-sr-only\">{{ \"currentOrganization\" | i18n }}</span>\n          </i>\n          {{ org.name }}\n        </a>\n      </li>\n      <bit-menu-divider></bit-menu-divider>\n      <li class=\"tw-list-none\" role=\"none\">\n        <a bitMenuItem routerLink=\"/create-organization\">\n          <i class=\"bwi bwi-plus mr-2\"></i>\n          {{ \"newOrganization\" | i18n }}</a\n        >\n      </li>\n    </ul>\n  </bit-menu>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport {\n  canAccessAdmin,\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-switcher\",\n  templateUrl: \"organization-switcher.component.html\",\n})\nexport class OrganizationSwitcherComponent implements OnInit {\n  constructor(private organizationService: OrganizationService, private i18nService: I18nService) {}\n\n  @Input() activeOrganization: Organization = null;\n  organizations$: Observable<Organization[]>;\n\n  loaded = false;\n\n  async ngOnInit() {\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter(isNotProviderUser)),\n      canAccessAdmin(this.i18nService),\n      map((orgs) => orgs.sort(Utils.getSortFunction(this.i18nService, \"name\")))\n    );\n\n    this.loaded = true;\n  }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav !tw-h-32\" *ngIf=\"organization$ | async as organization\">\n  <div class=\"container d-flex\">\n    <div class=\"d-flex flex-column\">\n      <app-organization-switcher\n        class=\"my-auto pl-1\"\n        [activeOrganization]=\"organization\"\n      ></app-organization-switcher>\n      <bit-tab-nav-bar class=\"-tw-mb-px\">\n        <bit-tab-link *ngIf=\"canShowVaultTab(organization)\" route=\"vault\">{{\n          \"vault\" | i18n\n        }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowMembersTab(organization)\" route=\"members\">{{\n          \"members\" | i18n\n        }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowGroupsTab(organization)\" route=\"groups\">{{\n          \"groups\" | i18n\n        }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowReportsTab(organization)\" route=\"reporting\">\n          {{ getReportTabLabel(organization) | i18n }}\n        </bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowBillingTab(organization)\" route=\"billing\">{{\n          \"billing\" | i18n\n        }}</bit-tab-link>\n        <bit-tab-link *ngIf=\"canShowSettingsTab(organization)\" route=\"settings\">{{\n          \"settings\" | i18n\n        }}</bit-tab-link>\n      </bit-tab-nav-bar>\n    </div>\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, mergeMap, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport {\n  canAccessBillingTab,\n  canAccessGroupsTab,\n  canAccessMembersTab,\n  canAccessReportingTab,\n  canAccessSettingsTab,\n  canAccessVaultTab,\n  getOrganizationById,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-organization-layout\",\n  templateUrl: \"organization-layout.component.html\",\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n  organization$: Observable<Organization>;\n\n  private _destroy = new Subject<void>();\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n\n    this.organization$ = this.route.params\n      .pipe(takeUntil(this._destroy))\n      .pipe<string>(map((p) => p.organizationId))\n      .pipe(\n        mergeMap((id) => {\n          return this.organizationService.organizations$\n            .pipe(takeUntil(this._destroy))\n            .pipe(getOrganizationById(id));\n        })\n      );\n  }\n\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  canShowVaultTab(organization: Organization): boolean {\n    return canAccessVaultTab(organization);\n  }\n\n  canShowSettingsTab(organization: Organization): boolean {\n    return canAccessSettingsTab(organization);\n  }\n\n  canShowMembersTab(organization: Organization): boolean {\n    return canAccessMembersTab(organization);\n  }\n\n  canShowGroupsTab(organization: Organization): boolean {\n    return canAccessGroupsTab(organization);\n  }\n\n  canShowReportsTab(organization: Organization): boolean {\n    return canAccessReportingTab(organization);\n  }\n\n  canShowBillingTab(organization: Organization): boolean {\n    return canAccessBillingTab(organization);\n  }\n\n  getReportTabLabel(organization: Organization): string {\n    return organization.useEvents ? \"reporting\" : \"reports\";\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"userAccessTitle\">\n          {{ \"userAccess\" | i18n }}\n          <small>{{ entityName }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"loading || !users\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n      <cdk-virtual-scroll-viewport\n        itemSize=\"46\"\n        minBufferPx=\"600\"\n        maxBufferPx=\"1200\"\n        [style]=\"scrollViewportStyle\"\n      >\n        <div class=\"modal-body\" *ngIf=\"!loading && users && searchedUsers\">\n          <div class=\"d-flex\">\n            <div class=\"mr-3\">\n              <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n              <input\n                type=\"search\"\n                class=\"form-control form-control-sm\"\n                id=\"search\"\n                placeholder=\"{{ 'search' | i18n }}\"\n                name=\"SearchText\"\n                [(ngModel)]=\"searchText\"\n              />\n            </div>\n            <div class=\"btn-group btn-group-sm\" role=\"group\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: !showSelected }\"\n                (click)=\"filterSelected(false)\"\n              >\n                {{ \"all\" | i18n }}\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{ active: showSelected }\"\n                (click)=\"filterSelected(true)\"\n              >\n                {{ \"selected\" | i18n }}\n                <span bitBadge badgeType=\"info\" *ngIf=\"selectedCount\">{{ selectedCount }}</span>\n              </button>\n            </div>\n          </div>\n          <ng-container *ngIf=\"!searchedUsers.length\">\n            <hr />\n            {{ \"noUsersInList\" | i18n }}\n          </ng-container>\n          <table class=\"table table-hover table-list mb-0\" [hidden]=\"!searchedUsers.length\">\n            <thead>\n              <tr>\n                <th>&nbsp;</th>\n                <th>&nbsp;</th>\n                <th>{{ \"name\" | i18n }}</th>\n                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                <th>{{ \"userType\" | i18n }}</th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"hidePasswords\" | i18n }}\n                </th>\n                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  {{ \"readOnly\" | i18n }}\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *cdkVirtualFor=\"let u of searchedUsers\" class=\"\">\n                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.checked\"\n                    name=\"{{ u.id.substr(0, 8) }}_Checked\"\n                    [disabled]=\"entity === 'collection' && u.accessAll\"\n                    (change)=\"selectedChanged(u)\"\n                    appStopProp\n                  />\n                </td>\n                <td width=\"30\" (click)=\"check(u)\">\n                  <bit-avatar [text]=\"u | userName\" [id]=\"u.id\" size=\"small\"></bit-avatar>\n                </td>\n                <td>\n                  {{ u.email }}\n                  <span\n                    bitBadge\n                    badgeType=\"secondary\"\n                    *ngIf=\"u.status === organizationUserStatusType.Invited\"\n                    >{{ \"invited\" | i18n }}</span\n                  >\n                  <span\n                    bitBadge\n                    badgeType=\"warning\"\n                    *ngIf=\"u.status === organizationUserStatusType.Accepted\"\n                    >{{ \"accepted\" | i18n }}</span\n                  >\n                  <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{ u.name }}</small>\n                </td>\n                <td *ngIf=\"entity === 'collection'\">\n                  <ng-container *ngIf=\"u.accessAll\">\n                    <i\n                      class=\"bwi bwi-filter\"\n                      title=\"{{ 'userAccessAllItems' | i18n }}\"\n                      aria-hidden=\"true\"\n                    ></i>\n                    <span class=\"sr-only\">{{ \"userAccessAllItems\" | i18n }}</span>\n                  </ng-container>\n                </td>\n                <td>\n                  <span *ngIf=\"u.type === organizationUserType.Owner\">{{ \"owner\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Admin\">{{ \"admin\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Manager\">{{\n                    \"manager\" | i18n\n                  }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.User\">{{ \"user\" | i18n }}</span>\n                  <span *ngIf=\"u.type === organizationUserType.Custom\">{{ \"custom\" | i18n }}</span>\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.hidePasswords\"\n                    name=\"{{ u.id.substr(0, 8) }}_HidePasswords\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"u.readOnly\"\n                    name=\"{{ u.id.substr(0, 8) }}_ReadOnly\"\n                    [disabled]=\"u.accessAll || !u.checked\"\n                  />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </cdk-virtual-scroll-viewport>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserUserDetailsResponse } from \"@bitwarden/common/abstractions/organization-user/responses\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { SelectionReadOnlyRequest } from \"@bitwarden/common/models/request/selection-read-only.request\";\n\n@Component({\n  selector: \"app-entity-users\",\n  templateUrl: \"entity-users.component.html\",\n  providers: [SearchPipe],\n})\nexport class EntityUsersComponent implements OnInit {\n  @Input() entity: \"group\" | \"collection\";\n  @Input() entityId: string;\n  @Input() entityName: string;\n  @Input() organizationId: string;\n  @Output() onEditedUsers = new EventEmitter();\n\n  organizationUserType = OrganizationUserType;\n  organizationUserStatusType = OrganizationUserStatusType;\n\n  showSelected = false;\n  loading = true;\n  formPromise: Promise<any>;\n  selectedCount = 0;\n  searchText: string;\n\n  private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n  constructor(\n    private search: SearchPipe,\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationUserService: OrganizationUserService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.loadUsers();\n    this.loading = false;\n  }\n\n  get users() {\n    if (this.showSelected) {\n      return this.allUsers.filter((u) => (u as any).checked);\n    } else {\n      return this.allUsers;\n    }\n  }\n\n  get searchedUsers() {\n    return this.search.transform(this.users, this.searchText, \"name\", \"email\", \"id\");\n  }\n\n  get scrollViewportStyle() {\n    return `min-height: 120px; height: ${120 + this.searchedUsers.length * 46}px`;\n  }\n\n  async loadUsers() {\n    const users = await this.organizationUserService.getAllUsers(this.organizationId);\n    this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, \"email\"));\n    if (this.entity === \"group\") {\n      const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => u.id === s);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n          }\n        });\n      }\n    } else if (this.entity === \"collection\") {\n      const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n      if (response != null && users.data.length > 0) {\n        response.forEach((s) => {\n          const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n          if (user != null && user.length > 0) {\n            (user[0] as any).checked = true;\n            (user[0] as any).readOnly = s.readOnly;\n            (user[0] as any).hidePasswords = s.hidePasswords;\n          }\n        });\n      }\n    }\n\n    this.allUsers.forEach((u) => {\n      if (this.entity === \"collection\" && u.accessAll) {\n        (u as any).checked = true;\n      }\n      if ((u as any).checked) {\n        this.selectedCount++;\n      }\n    });\n  }\n\n  check(u: OrganizationUserUserDetailsResponse) {\n    if (this.entity === \"collection\" && u.accessAll) {\n      return;\n    }\n    (u as any).checked = !(u as any).checked;\n    this.selectedChanged(u);\n  }\n\n  selectedChanged(u: OrganizationUserUserDetailsResponse) {\n    if ((u as any).checked) {\n      this.selectedCount++;\n    } else {\n      if (this.entity === \"collection\") {\n        (u as any).readOnly = false;\n        (u as any).hidePasswords = false;\n      }\n      this.selectedCount--;\n    }\n  }\n\n  filterSelected(showSelected: boolean) {\n    this.showSelected = showSelected;\n  }\n\n  async submit() {\n    try {\n      if (this.entity === \"group\") {\n        const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n        this.formPromise = this.apiService.putGroupUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      } else {\n        const selections = this.users\n          .filter((u) => (u as any).checked && !u.accessAll)\n          .map(\n            (u) =>\n              new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords)\n          );\n        this.formPromise = this.apiService.putCollectionUsers(\n          this.organizationId,\n          this.entityId,\n          selections\n        );\n      }\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"updatedUsers\"));\n      this.onEditedUsers.emit();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"page-header d-flex\">\n  <h1>{{ \"collections\" | i18n }}</h1>\n  <div class=\"ml-auto d-flex\">\n    <div>\n      <label class=\"sr-only\" for=\"search\">{{ \"search\" | i18n }}</label>\n      <input\n        type=\"search\"\n        class=\"form-control form-control-sm\"\n        id=\"search\"\n        placeholder=\"{{ 'search' | i18n }}\"\n        [(ngModel)]=\"searchText\"\n      />\n    </div>\n    <button\n      type=\"button\"\n      *ngIf=\"this.canCreate\"\n      class=\"btn btn-sm btn-outline-primary ml-3\"\n      (click)=\"add()\"\n    >\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newCollection\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container\n  *ngIf=\"\n    !loading &&\n    (isPaging()\n      ? pagedCollections\n      : (collections | search: searchText:'name':'id')) as searchedCollections\n  \"\n>\n  <p *ngIf=\"!searchedCollections.length\">{{ \"noCollectionsInList\" | i18n }}</p>\n  <table\n    class=\"table table-hover table-list\"\n    *ngIf=\"searchedCollections.length\"\n    infiniteScroll\n    [infiniteScrollDistance]=\"1\"\n    [infiniteScrollDisabled]=\"!isPaging()\"\n    (scrolled)=\"loadMore()\"\n  >\n    <tbody>\n      <tr *ngFor=\"let c of searchedCollections\">\n        <td>\n          <a href=\"#\" appStopClick (click)=\"edit(c)\">{{ c.name }}</a>\n        </td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown *ngIf=\"this.canEdit(c) || this.canDelete(c)\">\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"edit(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-pencil-square\" aria-hidden=\"true\"></i>\n                {{ \"edit\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canEdit(c)\"\n                (click)=\"users(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-users\" aria-hidden=\"true\"></i>\n                {{ \"users\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item text-danger\"\n                href=\"#\"\n                appStopClick\n                *ngIf=\"this.canDelete(c)\"\n                (click)=\"delete(c)\"\n              >\n                <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                {{ \"delete\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { firstValueFrom, lastValueFrom } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collection.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport {\n  DialogService,\n  SimpleDialogCloseType,\n  SimpleDialogOptions,\n  SimpleDialogType,\n} from \"@bitwarden/components\";\n\nimport { CollectionDialogResult, openCollectionDialog } from \"../shared\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@Component({\n  selector: \"app-org-manage-collections\",\n  templateUrl: \"collections.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CollectionsComponent implements OnInit {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organization: Organization;\n  canCreate = false;\n  organizationId: string;\n  collections: CollectionView[];\n  assignedCollections: CollectionView[];\n  pagedCollections: CollectionView[];\n  searchText: string;\n\n  protected didScroll = false;\n  protected pageSize = 100;\n\n  private pagedCollectionsCount = 0;\n\n  constructor(\n    private apiService: ApiService,\n    private route: ActivatedRoute,\n    private collectionService: CollectionService,\n    private modalService: ModalService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private organizationService: OrganizationService,\n    private dialogService: DialogService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.parent.params.subscribe(async (params) => {\n      this.organizationId = params.organizationId;\n      await this.load();\n      // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe, rxjs/no-nested-subscribe\n      this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n        this.searchText = qParams.search;\n      });\n    });\n  }\n\n  async load() {\n    this.organization = await this.organizationService.get(this.organizationId);\n    this.canCreate = this.organization.canCreateNewCollections;\n\n    const decryptCollections = async (r: ListResponse<CollectionResponse>) => {\n      const collections = r.data\n        .filter((c) => c.organizationId === this.organizationId)\n        .map((d) => new Collection(new CollectionData(d as CollectionDetailsResponse)));\n      return await this.collectionService.decryptMany(collections);\n    };\n\n    if (this.organization.canViewAssignedCollections) {\n      const response = await this.apiService.getUserCollections();\n      this.assignedCollections = await decryptCollections(response);\n    }\n\n    if (this.organization.canViewAllCollections) {\n      const response = await this.apiService.getCollections(this.organizationId);\n      this.collections = await decryptCollections(response);\n    } else {\n      this.collections = this.assignedCollections;\n    }\n\n    this.resetPaging();\n    this.loading = false;\n  }\n\n  loadMore() {\n    if (!this.collections || this.collections.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedCollections.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n      pagedSize = this.pagedCollectionsCount;\n    }\n    if (this.collections.length > pagedLength) {\n      this.pagedCollections = this.pagedCollections.concat(\n        this.collections.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedCollectionsCount = this.pagedCollections.length;\n    this.didScroll = this.pagedCollections.length > this.pageSize;\n  }\n\n  async edit(collection?: CollectionView) {\n    const canCreate = collection == undefined && this.canCreate;\n    const canEdit = collection != undefined && this.canEdit(collection);\n    const canDelete = collection != undefined && this.canDelete(collection);\n\n    if (!(canCreate || canEdit || canDelete)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n      return;\n    }\n\n    if (\n      !collection &&\n      this.organization.planProductType === ProductType.Free &&\n      this.collections.length === this.organization.maxCollections\n    ) {\n      // Show org upgrade modal\n      // It might be worth creating a simple\n      // org upgrade dialog service to launch the dialog here and in the people.comp\n      // once the enterprise pod is done w/ their organization module refactor.\n      const orgUpgradeSimpleDialogOpts: SimpleDialogOptions = {\n        title: this.i18nService.t(\"upgradeOrganization\"),\n        content: this.i18nService.t(\n          this.organization.canManageBilling\n            ? \"freeOrgMaxCollectionReachedManageBilling\"\n            : \"freeOrgMaxCollectionReachedNoManageBilling\",\n          this.organization.maxCollections\n        ),\n        type: SimpleDialogType.PRIMARY,\n      };\n\n      if (this.organization.canManageBilling) {\n        orgUpgradeSimpleDialogOpts.acceptButtonText = this.i18nService.t(\"upgrade\");\n      } else {\n        orgUpgradeSimpleDialogOpts.acceptButtonText = this.i18nService.t(\"ok\");\n        orgUpgradeSimpleDialogOpts.cancelButtonText = null; // hide secondary btn\n      }\n\n      const simpleDialog = this.dialogService.openSimpleDialog(orgUpgradeSimpleDialogOpts);\n\n      firstValueFrom(simpleDialog.closed).then((result: SimpleDialogCloseType | undefined) => {\n        if (!result) {\n          return;\n        }\n\n        if (result == SimpleDialogCloseType.ACCEPT && this.organization.canManageBilling) {\n          this.router.navigate(\n            [\"/organizations\", this.organization.id, \"billing\", \"subscription\"],\n            { queryParams: { upgrade: true } }\n          );\n        }\n      });\n\n      return;\n    }\n\n    const dialog = openCollectionDialog(this.dialogService, {\n      data: { collectionId: collection?.id, organizationId: this.organizationId },\n    });\n\n    const result = await lastValueFrom(dialog.closed);\n    if (result === CollectionDialogResult.Saved || result === CollectionDialogResult.Deleted) {\n      this.load();\n    }\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(collection: CollectionView) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteCollectionConfirmation\"),\n      collection.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.apiService.deleteCollection(this.organizationId, collection.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedCollectionId\", collection.name)\n      );\n      this.removeCollection(collection);\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingPermissions\"));\n    }\n  }\n\n  async users(collection: CollectionView) {\n    const [modal] = await this.modalService.openViewRef(\n      EntityUsersComponent,\n      this.usersModalRef,\n      (comp) => {\n        comp.organizationId = this.organizationId;\n        comp.entity = \"collection\";\n        comp.entityId = collection.id;\n        comp.entityName = collection.name;\n\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onEditedUsers.subscribe(() => {\n          this.load();\n          modal.close();\n        });\n      }\n    );\n  }\n\n  async resetPaging() {\n    this.pagedCollections = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.collections && this.collections.length > this.pageSize;\n  }\n\n  canEdit(collection: CollectionView) {\n    if (this.organization.canEditAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canEditAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  canDelete(collection: CollectionView) {\n    if (this.organization.canDeleteAnyCollection) {\n      return true;\n    }\n\n    if (\n      this.organization.canDeleteAssignedCollections &&\n      this.assignedCollections.some((c) => c.id === collection.id)\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  private removeCollection(collection: CollectionView) {\n    const index = this.collections.indexOf(collection);\n    if (index > -1) {\n      this.collections.splice(index, 1);\n      this.resetPaging();\n    }\n  }\n}\n","import { DIALOG_DATA, DialogConfig, DialogRef } from \"@angular/cdk/dialog\";\nimport { ChangeDetectorRef, Component, Inject, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { catchError, combineLatest, from, map, of, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport { CollectionDetailsResponse } from \"@bitwarden/common/models/response/collection.response\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { GroupService, GroupView } from \"../core\";\nimport {\n  AccessItemType,\n  AccessItemValue,\n  AccessItemView,\n  convertToPermission,\n  convertToSelectionView,\n  PermissionMode,\n} from \"../shared/components/access-selector\";\n\n/**\n * Indices for the available tabs in the dialog\n */\nexport enum GroupAddEditTabType {\n  Info = 0,\n  Members = 1,\n  Collections = 2,\n}\n\nexport interface GroupAddEditDialogParams {\n  /**\n   * ID of the organization the group belongs to\n   */\n  organizationId: string;\n\n  /**\n   * Optional ID of the group being modified\n   */\n  groupId?: string;\n\n  /**\n   * Tab to open when the dialog is open.\n   * Defaults to Group Info\n   */\n  initialTab?: GroupAddEditTabType;\n}\n\nexport enum GroupAddEditDialogResultType {\n  Saved = \"saved\",\n  Canceled = \"canceled\",\n  Deleted = \"deleted\",\n}\n\n/**\n * Strongly typed helper to open a groupAddEditDialog\n * @param dialogService Instance of the dialog service that will be used to open the dialog\n * @param config Configuration for the dialog\n */\nexport const openGroupAddEditDialog = (\n  dialogService: DialogService,\n  config: DialogConfig<GroupAddEditDialogParams>\n) => {\n  return dialogService.open<GroupAddEditDialogResultType, GroupAddEditDialogParams>(\n    GroupAddEditComponent,\n    config\n  );\n};\n\n@Component({\n  selector: \"app-group-add-edit\",\n  templateUrl: \"group-add-edit.component.html\",\n})\nexport class GroupAddEditComponent implements OnInit, OnDestroy {\n  protected PermissionMode = PermissionMode;\n  protected ResultType = GroupAddEditDialogResultType;\n\n  tabIndex: GroupAddEditTabType;\n  loading = true;\n  editMode = false;\n  title: string;\n  collections: AccessItemView[] = [];\n  members: AccessItemView[] = [];\n  group: GroupView;\n\n  groupForm = this.formBuilder.group({\n    accessAll: [false],\n    name: [\"\", [Validators.required, Validators.maxLength(100)]],\n    externalId: this.formBuilder.control({ value: \"\", disabled: true }),\n    members: [[] as AccessItemValue[]],\n    collections: [[] as AccessItemValue[]],\n  });\n\n  get groupId(): string | undefined {\n    return this.params.groupId;\n  }\n\n  get organizationId(): string {\n    return this.params.organizationId;\n  }\n\n  private destroy$ = new Subject<void>();\n\n  private get orgCollections$() {\n    return from(this.apiService.getCollections(this.organizationId)).pipe(\n      switchMap((response) => {\n        return from(\n          this.collectionService.decryptMany(\n            response.data.map(\n              (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n            )\n          )\n        );\n      }),\n      map((collections) =>\n        collections.map<AccessItemView>((c) => ({\n          id: c.id,\n          type: AccessItemType.Collection,\n          labelName: c.name,\n          listName: c.name,\n        }))\n      )\n    );\n  }\n\n  private get orgMembers$() {\n    return from(this.organizationUserService.getAllUsers(this.organizationId)).pipe(\n      map((response) =>\n        response.data.map((m) => ({\n          id: m.id,\n          type: AccessItemType.Member,\n          email: m.email,\n          role: m.type,\n          listName: m.name?.length > 0 ? `${m.name} (${m.email})` : m.email,\n          labelName: m.name || m.email,\n          status: m.status,\n        }))\n      )\n    );\n  }\n\n  private get groupDetails$() {\n    if (!this.editMode) {\n      return of(undefined);\n    }\n\n    return combineLatest([\n      this.groupService.get(this.organizationId, this.groupId),\n      this.apiService.getGroupUsers(this.organizationId, this.groupId),\n    ]).pipe(\n      map(([groupView, users]) => {\n        groupView.members = users;\n        return groupView;\n      }),\n      catchError((e: unknown) => {\n        if (e instanceof ErrorResponse) {\n          this.logService.error(e.message);\n        } else {\n          this.logService.error(e.toString());\n        }\n        return of(undefined);\n      })\n    );\n  }\n\n  constructor(\n    @Inject(DIALOG_DATA) private params: GroupAddEditDialogParams,\n    private dialogRef: DialogRef<GroupAddEditDialogResultType>,\n    private apiService: ApiService,\n    private organizationUserService: OrganizationUserService,\n    private groupService: GroupService,\n    private i18nService: I18nService,\n    private collectionService: CollectionService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private formBuilder: FormBuilder,\n    private changeDetectorRef: ChangeDetectorRef\n  ) {\n    this.tabIndex = params.initialTab ?? GroupAddEditTabType.Info;\n  }\n\n  ngOnInit() {\n    this.editMode = this.loading = this.groupId != null;\n    this.title = this.i18nService.t(this.editMode ? \"editGroup\" : \"newGroup\");\n\n    combineLatest([this.orgCollections$, this.orgMembers$, this.groupDetails$])\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(([collections, members, group]) => {\n        this.collections = collections;\n        this.members = members;\n        this.group = group;\n\n        if (this.group != undefined) {\n          // Must detect changes so that AccessSelector @Inputs() are aware of the latest\n          // collections/members set above, otherwise no selected values will be patched below\n          this.changeDetectorRef.detectChanges();\n\n          this.groupForm.patchValue({\n            name: this.group.name,\n            externalId: this.group.externalId,\n            accessAll: this.group.accessAll,\n            members: this.group.members.map((m) => ({\n              id: m,\n              type: AccessItemType.Member,\n            })),\n            collections: this.group.collections.map((gc) => ({\n              id: gc.id,\n              type: AccessItemType.Collection,\n              permission: convertToPermission(gc),\n            })),\n          });\n        }\n\n        this.loading = false;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  submit = async () => {\n    this.groupForm.markAllAsTouched();\n\n    if (this.groupForm.invalid) {\n      if (this.tabIndex !== GroupAddEditTabType.Info) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"fieldOnTabRequiresAttention\", this.i18nService.t(\"groupInfo\"))\n        );\n      }\n      return;\n    }\n\n    const groupView = new GroupView();\n    groupView.id = this.groupId;\n    groupView.organizationId = this.organizationId;\n\n    const formValue = this.groupForm.value;\n    groupView.name = formValue.name;\n    groupView.accessAll = formValue.accessAll;\n    groupView.members = formValue.members?.map((m) => m.id) ?? [];\n\n    if (!groupView.accessAll) {\n      groupView.collections = formValue.collections.map((c) => convertToSelectionView(c));\n    }\n\n    await this.groupService.save(groupView);\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(this.editMode ? \"editedGroupId\" : \"createdGroupId\", formValue.name)\n    );\n\n    this.dialogRef.close(GroupAddEditDialogResultType.Saved);\n  };\n\n  delete = async () => {\n    if (!this.editMode) {\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      this.group.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      \"app-group-add-edit .modal-content\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    await this.groupService.delete(this.organizationId, this.groupId);\n\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"deletedGroupId\", this.group.name)\n    );\n    this.dialogRef.close(GroupAddEditDialogResultType.Deleted);\n  };\n}\n","<form [formGroup]=\"groupForm\" [bitSubmit]=\"submit\">\n  <bit-dialog [disablePadding]=\"!loading\">\n    <span bitDialogTitle>\n      {{ title }}\n      <span *ngIf=\"editMode\" class=\"tw-text-sm tw-normal-case tw-text-muted\">{{\n        group?.name\n      }}</span>\n    </span>\n    <div bitDialogContent>\n      <div *ngIf=\"loading\">\n        <i\n          class=\"bwi bwi-spinner bwi-spin text-muted\"\n          title=\"{{ 'loading' | i18n }}\"\n          aria-hidden=\"true\"\n        ></i>\n        <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n      </div>\n\n      <bit-tab-group *ngIf=\"!loading\" [(selectedIndex)]=\"tabIndex\">\n        <bit-tab label=\"{{ 'groupInfo' | i18n }}\">\n          <bit-form-field>\n            <bit-label>{{ \"name\" | i18n }}</bit-label>\n            <input bitInput appAutofocus type=\"text\" formControlName=\"name\" />\n            <bit-hint>{{ \"characterMaximum\" | i18n: 100 }}</bit-hint>\n          </bit-form-field>\n          <bit-form-field>\n            <bit-label>{{ \"externalId\" | i18n }}</bit-label>\n            <input bitInput type=\"text\" formControlName=\"externalId\" />\n            <bit-hint>{{ \"externalIdDesc\" | i18n }}</bit-hint>\n          </bit-form-field>\n        </bit-tab>\n\n        <bit-tab label=\"{{ 'members' | i18n }}\">\n          <p>{{ \"editGroupMembersDesc\" | i18n }}</p>\n          <bit-access-selector\n            formControlName=\"members\"\n            [items]=\"members\"\n            [showMemberRoles]=\"true\"\n            [permissionMode]=\"PermissionMode.Hidden\"\n            [columnHeader]=\"'member' | i18n\"\n            [selectorLabelText]=\"'selectMembers' | i18n\"\n            [emptySelectionText]=\"'noMembersAdded' | i18n\"\n          ></bit-access-selector>\n        </bit-tab>\n\n        <bit-tab label=\"{{ 'collections' | i18n }}\">\n          <p>{{ \"editGroupCollectionsDesc\" | i18n }}</p>\n          <div class=\"tw-my-3\">\n            <input type=\"checkbox\" formControlName=\"accessAll\" id=\"accessAll\" />\n            <label class=\"tw-mb-0 tw-text-lg\" for=\"accessAll\">{{\n              \"accessAllCollectionsDesc\" | i18n\n            }}</label>\n            <p class=\"tw-my-0 tw-text-muted\">{{ \"accessAllCollectionsHelp\" | i18n }}</p>\n          </div>\n          <ng-container *ngIf=\"!groupForm.value.accessAll\">\n            <bit-access-selector\n              formControlName=\"collections\"\n              [items]=\"collections\"\n              [permissionMode]=\"PermissionMode.Edit\"\n              [columnHeader]=\"'collection' | i18n\"\n              [selectorLabelText]=\"'selectCollections' | i18n\"\n              [emptySelectionText]=\"'noCollectionsAdded' | i18n\"\n            ></bit-access-selector>\n          </ng-container>\n        </bit-tab>\n      </bit-tab-group>\n    </div>\n    <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n      <button bitButton buttonType=\"primary\" bitFormButton type=\"submit\">\n        {{ \"save\" | i18n }}\n      </button>\n      <button\n        bitButton\n        buttonType=\"secondary\"\n        type=\"button\"\n        bitDialogClose\n        [bit-dialog-close]=\"ResultType.Canceled\"\n      >\n        {{ \"cancel\" | i18n }}\n      </button>\n      <button\n        class=\"tw-ml-auto\"\n        type=\"button\"\n        buttonType=\"danger\"\n        bitIconButton=\"bwi-trash\"\n        bitFormButton\n        [bitAction]=\"delete\"\n        [appA11yTitle]=\"'delete' | i18n\"\n      ></button>\n    </div>\n  </bit-dialog>\n</form>\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<div class=\"container page-content\">\n  <div class=\"tw-mb-4 tw-flex\">\n    <h1>{{ \"groups\" | i18n }}</h1>\n    <div class=\"tw-ml-auto tw-flex tw-items-center\">\n      <div class=\"tw-mr-2\">\n        <label class=\"sr-only\">{{ \"search\" | i18n }}</label>\n        <div class=\"tw-flex tw-items-center\">\n          <i class=\"bwi bwi-search bwi-fw tw-z-20 -tw-mr-7 tw-text-muted\" aria-hidden=\"true\"></i>\n          <input\n            bitInput\n            type=\"search\"\n            placeholder=\"{{ 'searchGroups' | i18n }}\"\n            class=\"tw-rounded-l tw-pl-9\"\n            [(ngModel)]=\"searchText\"\n          />\n        </div>\n      </div>\n      <button bitButton type=\"button\" buttonType=\"primary\" (click)=\"add()\">\n        <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n        {{ \"newGroup\" | i18n }}\n      </button>\n    </div>\n  </div>\n  <ng-container *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </ng-container>\n  <ng-container *ngIf=\"!loading && visibleGroups\">\n    <p *ngIf=\"!visibleGroups.length\">{{ \"noGroupsInList\" | i18n }}</p>\n    <bit-table\n      *ngIf=\"visibleGroups.length\"\n      infinite-scroll\n      [infiniteScrollDistance]=\"1\"\n      [infiniteScrollDisabled]=\"!isPaging()\"\n      (scrolled)=\"loadMore()\"\n    >\n      <ng-container header>\n        <tr>\n          <th bitCell class=\"tw-w-20\">\n            <input\n              type=\"checkbox\"\n              bitCheckbox\n              class=\"tw-mr-2\"\n              (change)=\"toggleAllVisible($event)\"\n              id=\"selectAll\"\n            />\n            <label class=\"tw-mb-0 !tw-font-bold !tw-text-muted\" for=\"selectAll\">{{\n              \"all\" | i18n\n            }}</label>\n          </th>\n          <th bitCell>{{ \"name\" | i18n }}</th>\n          <th bitCell>{{ \"collections\" | i18n }}</th>\n          <th bitCell class=\"tw-w-10\">\n            <button\n              [bitMenuTriggerFor]=\"headerMenu\"\n              type=\"button\"\n              bitIconButton=\"bwi-ellipsis-v\"\n              size=\"small\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            ></button>\n\n            <bit-menu #headerMenu>\n              <button type=\"button\" bitMenuItem (click)=\"deleteAllSelected()\">\n                <span class=\"tw-text-danger\"\n                  ><i aria-hidden=\"true\" class=\"bwi bwi-trash\"></i> {{ \"delete\" | i18n }}</span\n                >\n              </button>\n            </bit-menu>\n          </th>\n        </tr>\n      </ng-container>\n      <ng-template body>\n        <tr bitRow *ngFor=\"let g of visibleGroups\">\n          <td bitCell (click)=\"check(g)\" class=\"tw-cursor-pointer\">\n            <input type=\"checkbox\" bitCheckbox [(ngModel)]=\"g.checked\" />\n          </td>\n          <td bitCell class=\"tw-cursor-pointer tw-font-bold\" (click)=\"edit(g)\">\n            <button bitLink>\n              {{ g.details.name }}\n            </button>\n          </td>\n          <td bitCell (click)=\"edit(g, ModalTabType.Collections)\" class=\"tw-cursor-pointer\">\n            <bit-badge-list\n              *ngIf=\"!g.details.accessAll\"\n              [items]=\"g.collectionNames\"\n              [maxItems]=\"3\"\n              badgeType=\"secondary\"\n            ></bit-badge-list>\n            <span *ngIf=\"g.details.accessAll\">{{ \"all\" | i18n }}</span>\n          </td>\n          <td bitCell>\n            <button\n              [bitMenuTriggerFor]=\"rowMenu\"\n              type=\"button\"\n              bitIconButton=\"bwi-ellipsis-v\"\n              size=\"small\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            ></button>\n\n            <bit-menu #rowMenu>\n              <button type=\"button\" bitMenuItem (click)=\"edit(g)\">\n                <i aria-hidden=\"true\" class=\"bwi bwi-pencil-square\"></i> {{ \"editInfo\" | i18n }}\n              </button>\n              <button type=\"button\" bitMenuItem (click)=\"edit(g, ModalTabType.Members)\">\n                <i aria-hidden=\"true\" class=\"bwi bwi-user\"></i> {{ \"members\" | i18n }}\n              </button>\n              <button type=\"button\" bitMenuItem (click)=\"edit(g, ModalTabType.Collections)\">\n                <i aria-hidden=\"true\" class=\"bwi bwi-collection\"></i> {{ \"collections\" | i18n }}\n              </button>\n              <button type=\"button\" bitMenuItem (click)=\"delete(g)\">\n                <span class=\"tw-text-danger\"\n                  ><i aria-hidden=\"true\" class=\"bwi bwi-trash\"></i> {{ \"delete\" | i18n }}</span\n                >\n              </button>\n            </bit-menu>\n          </td>\n        </tr>\n      </ng-template>\n    </bit-table>\n  </ng-container>\n  <ng-template #addEdit></ng-template>\n</div>\n","import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport {\n  BehaviorSubject,\n  combineLatest,\n  concatMap,\n  from,\n  lastValueFrom,\n  map,\n  Subject,\n  switchMap,\n  takeUntil,\n  tap,\n} from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nimport { SearchPipe } from \"@bitwarden/angular/pipes/search.pipe\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CollectionData } from \"@bitwarden/common/models/data/collection.data\";\nimport { Collection } from \"@bitwarden/common/models/domain/collection\";\nimport {\n  CollectionDetailsResponse,\n  CollectionResponse,\n} from \"@bitwarden/common/models/response/collection.response\";\nimport { ListResponse } from \"@bitwarden/common/models/response/list.response\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { GroupService, GroupView } from \"../core\";\n\nimport {\n  GroupAddEditDialogResultType,\n  GroupAddEditTabType,\n  openGroupAddEditDialog,\n} from \"./group-add-edit.component\";\n\ntype CollectionViewMap = {\n  [id: string]: CollectionView;\n};\n\ntype GroupDetailsRow = {\n  /**\n   * Group Id (used for searching)\n   */\n  id: string;\n\n  /**\n   * Group name (used for searching)\n   */\n  name: string;\n\n  /**\n   * Details used for displaying group information\n   */\n  details: GroupView;\n\n  /**\n   * True if the group is selected in the table\n   */\n  checked?: boolean;\n\n  /**\n   * A list of collection names the group has access to\n   */\n  collectionNames?: string[];\n};\n\n@Component({\n  selector: \"app-org-groups\",\n  templateUrl: \"groups.component.html\",\n})\nexport class GroupsComponent implements OnInit, OnDestroy {\n  @ViewChild(\"addEdit\", { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n  @ViewChild(\"usersTemplate\", { read: ViewContainerRef, static: true })\n  usersModalRef: ViewContainerRef;\n\n  loading = true;\n  organizationId: string;\n  groups: GroupDetailsRow[];\n\n  protected didScroll = false;\n  protected pageSize = 100;\n  protected ModalTabType = GroupAddEditTabType;\n\n  private pagedGroupsCount = 0;\n  private pagedGroups: GroupDetailsRow[];\n  private searchedGroups: GroupDetailsRow[];\n  private _searchText: string;\n  private destroy$ = new Subject<void>();\n  private refreshGroups$ = new BehaviorSubject<void>(null);\n\n  get searchText() {\n    return this._searchText;\n  }\n  set searchText(value: string) {\n    this._searchText = value;\n    // Manually update as we are not using the search pipe in the template\n    this.updateSearchedGroups();\n  }\n\n  /**\n   * The list of groups that should be visible in the table.\n   * This is needed as there are two modes (paging/searching) and\n   * we need a reference to the currently visible groups for\n   * the Select All checkbox\n   */\n  get visibleGroups(): GroupDetailsRow[] {\n    if (this.isPaging()) {\n      return this.pagedGroups;\n    }\n    if (this.isSearching()) {\n      return this.searchedGroups;\n    }\n    return this.groups;\n  }\n\n  constructor(\n    private apiService: ApiService,\n    private groupService: GroupService,\n    private route: ActivatedRoute,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private dialogService: DialogService,\n    private platformUtilsService: PlatformUtilsService,\n    private searchService: SearchService,\n    private logService: LogService,\n    private collectionService: CollectionService,\n    private searchPipe: SearchPipe\n  ) {}\n\n  async ngOnInit() {\n    this.route.params\n      .pipe(\n        tap((params) => (this.organizationId = params.organizationId)),\n        switchMap(() =>\n          combineLatest([\n            // collectionMap\n            from(this.apiService.getCollections(this.organizationId)).pipe(\n              concatMap((response) => this.toCollectionMap(response))\n            ),\n            // groups\n            this.refreshGroups$.pipe(\n              switchMap(() => this.groupService.getAll(this.organizationId))\n            ),\n          ])\n        ),\n        map(([collectionMap, groups]) => {\n          return groups\n            .sort(Utils.getSortFunction(this.i18nService, \"name\"))\n            .map<GroupDetailsRow>((g) => ({\n              id: g.id,\n              name: g.name,\n              details: g,\n              checked: false,\n              collectionNames: g.collections\n                .map((c) => collectionMap[c.id]?.name)\n                .sort(this.i18nService.collator?.compare),\n            }));\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((groups) => {\n        this.groups = groups;\n        this.resetPaging();\n        this.updateSearchedGroups();\n        this.loading = false;\n      });\n\n    this.route.queryParams\n      .pipe(\n        first(),\n        concatMap(async (qParams) => {\n          this.searchText = qParams.search;\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  loadMore() {\n    if (!this.groups || this.groups.length <= this.pageSize) {\n      return;\n    }\n    const pagedLength = this.pagedGroups.length;\n    let pagedSize = this.pageSize;\n    if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n      pagedSize = this.pagedGroupsCount;\n    }\n    if (this.groups.length > pagedLength) {\n      this.pagedGroups = this.pagedGroups.concat(\n        this.groups.slice(pagedLength, pagedLength + pagedSize)\n      );\n    }\n    this.pagedGroupsCount = this.pagedGroups.length;\n    this.didScroll = this.pagedGroups.length > this.pageSize;\n  }\n\n  async edit(\n    group: GroupDetailsRow,\n    startingTabIndex: GroupAddEditTabType = GroupAddEditTabType.Info\n  ) {\n    const dialogRef = openGroupAddEditDialog(this.dialogService, {\n      data: {\n        initialTab: startingTabIndex,\n        organizationId: this.organizationId,\n        groupId: group != null ? group.details.id : null,\n      },\n    });\n\n    const result = await lastValueFrom(dialogRef.closed);\n\n    if (result == GroupAddEditDialogResultType.Saved) {\n      this.refreshGroups$.next();\n    } else if (result == GroupAddEditDialogResultType.Deleted) {\n      this.removeGroup(group.details.id);\n    }\n  }\n\n  add() {\n    this.edit(null);\n  }\n\n  async delete(groupRow: GroupDetailsRow) {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteGroupConfirmation\"),\n      groupRow.details.name,\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.groupService.delete(this.organizationId, groupRow.details.id);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedGroupId\", groupRow.details.name)\n      );\n      this.removeGroup(groupRow.details.id);\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async deleteAllSelected() {\n    const groupsToDelete = this.groups.filter((g) => g.checked);\n\n    if (groupsToDelete.length == 0) {\n      return;\n    }\n\n    const deleteMessage = groupsToDelete.map((g) => g.details.name).join(\", \");\n    const confirmed = await this.platformUtilsService.showDialog(\n      deleteMessage,\n      this.i18nService.t(\"deleteMultipleGroupsConfirmation\", groupsToDelete.length.toString()),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      await this.groupService.deleteMany(\n        this.organizationId,\n        groupsToDelete.map((g) => g.details.id)\n      );\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"deletedManyGroups\", groupsToDelete.length.toString())\n      );\n\n      groupsToDelete.forEach((g) => this.removeGroup(g.details.id));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  resetPaging() {\n    this.pagedGroups = [];\n    this.loadMore();\n  }\n\n  isSearching() {\n    return this.searchService.isSearchable(this.searchText);\n  }\n\n  check(groupRow: GroupDetailsRow) {\n    groupRow.checked = !groupRow.checked;\n  }\n\n  toggleAllVisible(event: Event) {\n    this.visibleGroups.forEach((g) => (g.checked = (event.target as HTMLInputElement).checked));\n  }\n\n  isPaging() {\n    const searching = this.isSearching();\n    if (searching && this.didScroll) {\n      this.resetPaging();\n    }\n    return !searching && this.groups && this.groups.length > this.pageSize;\n  }\n\n  private removeGroup(id: string) {\n    const index = this.groups.findIndex((g) => g.details.id === id);\n    if (index > -1) {\n      this.groups.splice(index, 1);\n      this.resetPaging();\n      this.updateSearchedGroups();\n    }\n  }\n\n  private async toCollectionMap(response: ListResponse<CollectionResponse>) {\n    const collections = response.data.map(\n      (r) => new Collection(new CollectionData(r as CollectionDetailsResponse))\n    );\n    const decryptedCollections = await this.collectionService.decryptMany(collections);\n\n    // Convert to an object using collection Ids as keys for faster name lookups\n    const collectionMap: CollectionViewMap = {};\n    decryptedCollections.forEach((c) => (collectionMap[c.id] = c));\n\n    return collectionMap;\n  }\n\n  private updateSearchedGroups() {\n    if (this.searchService.isSearchable(this.searchText)) {\n      // Making use of the pipe in the component as we need know which groups where filtered\n      this.searchedGroups = this.searchPipe.transform(\n        this.groups,\n        this.searchText,\n        (group) => group.details.name,\n        (group) => group.details.id\n      );\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\" *ngIf=\"organization\">\n        <div class=\"card-header\">{{ \"manage\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a\n            routerLink=\"members\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageUsers\"\n          >\n            {{ \"members\" | i18n }}\n          </a>\n          <a\n            routerLink=\"collections\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canViewAllCollections || organization.canViewAssignedCollections\"\n          >\n            {{ \"collections\" | i18n }}\n          </a>\n          <a\n            routerLink=\"groups\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"organization.canManageGroups\"\n          >\n            {{ \"groups\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"app-org-manage\",\n  templateUrl: \"manage.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class ManageComponent implements OnInit {\n  organization: Organization;\n\n  constructor(private route: ActivatedRoute, private organizationService: OrganizationService) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.parent.params.subscribe(async (params) => {\n      this.organization = await this.organizationService.get(params.organizationId);\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/auth/guards/auth.guard\";\nimport {\n  canAccessOrgAdmin,\n  canAccessGroupsTab,\n  canAccessMembersTab,\n  canAccessVaultTab,\n  canAccessReportingTab,\n  canAccessSettingsTab,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\nimport { VaultModule } from \"../vault/org-vault/vault.module\";\n\nimport { OrganizationPermissionsGuard } from \"./guards/org-permissions.guard\";\nimport { OrganizationRedirectGuard } from \"./guards/org-redirect.guard\";\nimport { OrganizationLayoutComponent } from \"./layouts/organization-layout.component\";\nimport { CollectionsComponent } from \"./manage/collections.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { ManageComponent } from \"./manage/manage.component\";\n\nconst routes: Routes = [\n  {\n    path: \":organizationId\",\n    component: OrganizationLayoutComponent,\n    canActivate: [AuthGuard, OrganizationPermissionsGuard],\n    data: {\n      organizationPermissions: canAccessOrgAdmin,\n    },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        canActivate: [OrganizationRedirectGuard],\n        data: {\n          autoRedirectCallback: getOrganizationRoute,\n        },\n        children: [], // This is required to make the auto redirect work, },\n      },\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      {\n        path: \"settings\",\n        loadChildren: () => import(\"./settings\").then((m) => m.OrganizationSettingsModule),\n      },\n      {\n        path: \"members\",\n        loadChildren: () => import(\"./members\").then((m) => m.MembersModule),\n      },\n      {\n        path: \"groups\",\n        component: GroupsComponent,\n        canActivate: [OrganizationPermissionsGuard],\n        data: {\n          titleId: \"groups\",\n          organizationPermissions: canAccessGroupsTab,\n        },\n      },\n      {\n        path: \"manage\",\n        component: ManageComponent,\n        children: [\n          {\n            path: \"collections\",\n            component: CollectionsComponent,\n            data: {\n              titleId: \"collections\",\n            },\n          },\n        ],\n      },\n      {\n        path: \"reporting\",\n        loadChildren: () =>\n          import(\"./reporting/organization-reporting.module\").then(\n            (m) => m.OrganizationReportingModule\n          ),\n      },\n      {\n        path: \"billing\",\n        loadChildren: () =>\n          import(\"./billing/organization-billing.module\").then((m) => m.OrganizationBillingModule),\n      },\n    ],\n  },\n];\n\nfunction getOrganizationRoute(organization: Organization): string {\n  if (canAccessVaultTab(organization)) {\n    return \"vault\";\n  }\n  if (canAccessMembersTab(organization)) {\n    return \"members\";\n  }\n  if (canAccessGroupsTab(organization)) {\n    return \"groups\";\n  }\n  if (canAccessReportingTab(organization)) {\n    return \"reporting\";\n  }\n  if (canAccessSettingsTab(organization)) {\n    return \"settings\";\n  }\n  return undefined;\n}\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrganizationsRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { CoreOrganizationModule } from \"./core\";\nimport { GroupAddEditComponent } from \"./manage/group-add-edit.component\";\nimport { GroupsComponent } from \"./manage/groups.component\";\nimport { OrganizationsRoutingModule } from \"./organization-routing.module\";\nimport { SharedOrganizationModule } from \"./shared\";\nimport { AccessSelectorModule } from \"./shared/components/access-selector\";\n\n@NgModule({\n  imports: [\n    SharedOrganizationModule,\n    AccessSelectorModule,\n    CoreOrganizationModule,\n    OrganizationsRoutingModule,\n  ],\n  declarations: [GroupsComponent, GroupAddEditComponent],\n})\nexport class OrganizationModule {}\n","export enum PlanSponsorshipType {\n  FamiliesForEnterprise = 0,\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n  <div>\n    <img class=\"mb-4 logo logo-themed\" alt=\"Bitwarden\" />\n    <p class=\"text-center\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </p>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { Params } from \"@angular/router\";\n\nimport { BaseAcceptComponent } from \"../../common/base.accept.component\";\n\n@Component({\n  selector: \"app-accept-family-sponsorship\",\n  templateUrl: \"accept-family-sponsorship.component.html\",\n})\nexport class AcceptFamilySponsorshipComponent extends BaseAcceptComponent {\n  failedShortMessage = \"inviteAcceptFailedShort\";\n  failedMessage = \"inviteAcceptFailed\";\n\n  requiredParameters = [\"email\", \"token\"];\n\n  async authedHandler(qParams: Params) {\n    this.router.navigate([\"/setup/families-for-enterprise\"], { queryParams: qParams });\n  }\n\n  async unauthedHandler(qParams: Params) {\n    if (!qParams.register) {\n      this.router.navigate([\"/login\"], { queryParams: { email: qParams.email } });\n    } else {\n      this.router.navigate([\"/register\"], { queryParams: { email: qParams.email } });\n    }\n  }\n}\n","import { PlanSponsorshipType } from \"../../../enums/planSponsorshipType\";\n\nexport class OrganizationSponsorshipRedeemRequest {\n  planSponsorshipType: PlanSponsorshipType;\n  sponsoredOrganizationId: string;\n}\n","<div class=\"container page-content\">\n  <div class=\"page-header\">\n    <h1>{{ \"sponsoredFamiliesOffer\" | i18n }}</h1>\n  </div>\n  <div *ngIf=\"loading\" class=\"mt-5 d-flex justify-content-center\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </div>\n  <div *ngIf=\"!loading && badToken\" class=\"mt-5 d-flex justify-content-center\">\n    <span>{{ \"badToken\" | i18n }}</span>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    ngNativeValidate\n    *ngIf=\"!loading && !badToken\"\n  >\n    <p>\n      <span>{{ \"acceptBitwardenFamiliesHelp\" | i18n }}</span>\n    </p>\n    <div class=\"form-group col-6\">\n      <label for=\"availableSponsorshipOrg\">{{ \"sponsoredFamiliesSelectOffer\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        [(ngModel)]=\"selectedFamilyOrganizationId\"\n        class=\"form-control\"\n        required\n      >\n        <option value=\"\" disabled>-- {{ \"select\" | i18n }} --</option>\n        <option value=\"createNew\">{{ \"newFamiliesOrganization\" | i18n }}</option>\n        <option *ngFor=\"let o of existingFamilyOrganizations$ | async\" [ngValue]=\"o.id\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div *ngIf=\"showNewOrganization\" class=\"col-12\">\n      <app-organization-plans></app-organization-plans>\n    </div>\n    <div class=\"form-group col-6\" *ngIf=\"!showNewOrganization\">\n      <button class=\"btn btn-primary mt-2 btn-submit\" [disabled]=\"form.loading\" type=\"submit\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"acceptOffer\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n","import { Component, OnDestroy, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Observable, Subject } from \"rxjs\";\nimport { first, map, takeUntil } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { OrganizationSponsorshipRedeemRequest } from \"@bitwarden/common/models/request/organization/organization-sponsorship-redeem.request\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\nimport { DeleteOrganizationComponent } from \"../../organizations/settings\";\nimport { OrganizationPlansComponent } from \"../../settings/organization-plans.component\";\n\n@Component({\n  selector: \"families-for-enterprise-setup\",\n  templateUrl: \"families-for-enterprise-setup.component.html\",\n})\nexport class FamiliesForEnterpriseSetupComponent implements OnInit, OnDestroy {\n  @ViewChild(OrganizationPlansComponent, { static: false })\n  set organizationPlansComponent(value: OrganizationPlansComponent) {\n    if (!value) {\n      return;\n    }\n\n    value.plan = PlanType.FamiliesAnnually;\n    value.product = ProductType.Families;\n    value.acceptingSponsorship = true;\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n    value.onSuccess.subscribe(this.onOrganizationCreateSuccess.bind(this));\n  }\n\n  @ViewChild(\"deleteOrganizationTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  loading = true;\n  badToken = false;\n  formPromise: Promise<any>;\n\n  token: string;\n  existingFamilyOrganizations: Organization[];\n  existingFamilyOrganizations$: Observable<Organization[]>;\n\n  showNewOrganization = false;\n  _organizationPlansComponent: OrganizationPlansComponent;\n  _selectedFamilyOrganizationId = \"\";\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    private router: Router,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private syncService: SyncService,\n    private validationService: ValidationService,\n    private organizationService: OrganizationService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    document.body.classList.remove(\"layout_frontend\");\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const error = qParams.token == null;\n      if (error) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          null,\n          this.i18nService.t(\"sponsoredFamiliesAcceptFailed\"),\n          { timeout: 10000 }\n        );\n        this.router.navigate([\"/\"]);\n        return;\n      }\n\n      this.token = qParams.token;\n\n      await this.syncService.fullSync(true);\n      this.badToken = !(await this.apiService.postPreValidateSponsorshipToken(this.token));\n      this.loading = false;\n    });\n\n    this.existingFamilyOrganizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.planProductType === ProductType.Families))\n    );\n\n    this.existingFamilyOrganizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (orgs.length === 0) {\n        this.selectedFamilyOrganizationId = \"createNew\";\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async submit() {\n    this.formPromise = this.doSubmit(this._selectedFamilyOrganizationId);\n    await this.formPromise;\n    this.formPromise = null;\n  }\n\n  get selectedFamilyOrganizationId() {\n    return this._selectedFamilyOrganizationId;\n  }\n\n  set selectedFamilyOrganizationId(value: string) {\n    this._selectedFamilyOrganizationId = value;\n    this.showNewOrganization = value === \"createNew\";\n  }\n\n  private async doSubmit(organizationId: string) {\n    try {\n      const request = new OrganizationSponsorshipRedeemRequest();\n      request.planSponsorshipType = PlanSponsorshipType.FamiliesForEnterprise;\n      request.sponsoredOrganizationId = organizationId;\n\n      await this.apiService.postRedeemSponsorship(this.token, request);\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"sponsoredFamiliesOfferRedeemed\")\n      );\n      await this.syncService.fullSync(true);\n\n      this.router.navigate([\"/\"]);\n    } catch (e) {\n      if (this.showNewOrganization) {\n        await this.modalService.openViewRef(\n          DeleteOrganizationComponent,\n          this.deleteModalRef,\n          (comp) => {\n            comp.organizationId = organizationId;\n            comp.deleteOrganizationRequestType = \"InvalidFamiliesForEnterprise\";\n            // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n            comp.onSuccess.subscribe(() => {\n              this.router.navigate([\"/\"]);\n            });\n          }\n        );\n      }\n      this.validationService.showError(this.i18nService.t(\"sponsorshipTokenHasExpired\"));\n    }\n  }\n\n  private async onOrganizationCreateSuccess(value: any) {\n    // Use newly created organization id\n    await this.doSubmit(value.organizationId);\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccess } from \"../domain/send-access\";\n\nimport { SendFileView } from \"./send-file.view\";\nimport { SendTextView } from \"./send-text.view\";\nimport { View } from \"./view\";\n\nexport class SendAccessView implements View {\n  id: string = null;\n  name: string = null;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  expirationDate: Date = null;\n  creatorIdentifier: string = null;\n\n  constructor(s?: SendAccess) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.type = s.type;\n    this.expirationDate = s.expirationDate;\n    this.creatorIdentifier = s.creatorIdentifier;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendAccessResponse } from \"../response/send-access.response\";\nimport { SendAccessView } from \"../view/send-access.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SendFile } from \"./send-file\";\nimport { SendText } from \"./send-text\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendAccess extends Domain {\n  id: string;\n  type: SendType;\n  name: EncString;\n  file: SendFile;\n  text: SendText;\n  expirationDate: Date;\n  creatorIdentifier: string;\n\n  constructor(obj?: SendAccessResponse) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n        expirationDate: null,\n        creatorIdentifier: null,\n      },\n      [\"id\", \"expirationDate\", \"creatorIdentifier\"]\n    );\n\n    this.type = obj.type;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendText(obj.text);\n        break;\n      case SendType.File:\n        this.file = new SendFile(obj.file);\n        break;\n      default:\n        break;\n    }\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendAccessView> {\n    const model = new SendAccessView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n      },\n      null,\n      key\n    );\n\n    switch (this.type) {\n      case SendType.File:\n        model.file = await this.file.decrypt(key);\n        break;\n      case SendType.Text:\n        model.text = await this.text.decrypt(key);\n        break;\n      default:\n        break;\n    }\n\n    return model;\n  }\n}\n","export class SendAccessRequest {\n  password: string;\n}\n","<form #form (ngSubmit)=\"load()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n  <div class=\"row justify-content-center mt-5\">\n    <div class=\"col-12\">\n      <h1 class=\"lead text-center mb-4\">Bitwarden Send</h1>\n    </div>\n    <div class=\"col-12 text-center\" *ngIf=\"creatorIdentifier != null\">\n      <p>{{ \"sendCreatorIdentifier\" | i18n: creatorIdentifier }}</p>\n    </div>\n    <div class=\"col-8\" *ngIf=\"hideEmail\">\n      <app-callout type=\"warning\" title=\"{{ 'warning' | i18n }}\">\n        {{ \"viewSendHiddenEmailWarning\" | i18n }}\n        <a href=\"https://bitwarden.com/help/receive-send/\" target=\"_blank\">{{\n          \"learnMore\" | i18n\n        }}</a\n        >.\n      </app-callout>\n    </div>\n  </div>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-5\">\n      <div class=\"card d-block\">\n        <div class=\"card-body\" *ngIf=\"loading\" class=\"text-center\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin bwi-2x text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && passwordRequired\">\n          <p>{{ \"sendProtectedPassword\" | i18n }}</p>\n          <p>{{ \"sendProtectedPasswordDontKnow\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"password\">{{ \"password\" | i18n }}</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              name=\"Password\"\n              class=\"text-monospace form-control\"\n              [(ngModel)]=\"password\"\n              required\n              appInputVerbatim\n              appAutofocus\n            />\n          </div>\n          <div class=\"d-flex\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary btn-block btn-submit\"\n              [disabled]=\"form.loading\"\n            >\n              <span>\n                <i class=\"bwi bwi-sign-in\" aria-hidden=\"true\"></i> {{ \"continue\" | i18n }}\n              </span>\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </div>\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && unavailable\">\n          {{ \"sendAccessUnavailable\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && error\">\n          {{ \"unexpectedError\" | i18n }}\n        </div>\n        <div class=\"card-body\" *ngIf=\"!loading && !passwordRequired && send\">\n          <p class=\"text-center\">\n            <b>{{ send.name }}</b>\n          </p>\n          <hr />\n          <!-- Text -->\n          <ng-container *ngIf=\"send.type === sendType.Text\">\n            <app-callout *ngIf=\"send.text.hidden\" type=\"tip\">{{\n              \"sendHiddenByDefault\" | i18n\n            }}</app-callout>\n            <div class=\"form-group\">\n              <textarea\n                id=\"text\"\n                rows=\"8\"\n                name=\"Text\"\n                [ngModel]=\"sendText\"\n                class=\"form-control\"\n                readonly\n              ></textarea>\n            </div>\n            <button\n              class=\"btn btn-block btn-link\"\n              type=\"button\"\n              (click)=\"toggleText()\"\n              *ngIf=\"send.text.hidden\"\n            >\n              <i\n                class=\"bwi bwi-lg\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-eye': !showText, 'bwi-eye-slash': showText }\"\n              ></i>\n              {{ \"toggleVisibility\" | i18n }}\n            </button>\n            <button class=\"btn btn-block btn-link\" type=\"button\" (click)=\"copyText()\">\n              <i class=\"bwi bwi-copy\" aria-hidden=\"true\"></i> {{ \"copyValue\" | i18n }}\n            </button>\n          </ng-container>\n          <!-- File -->\n          <ng-container *ngIf=\"send.type === sendType.File\">\n            <p>{{ send.file.fileName }}</p>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              (click)=\"download()\"\n              *ngIf=\"!downloading\"\n            >\n              <i class=\"bwi bwi-download\" aria-hidden=\"true\"></i>\n              {{ \"downloadFile\" | i18n }} ({{ send.file.sizeName }})\n            </button>\n            <button\n              class=\"btn btn-primary btn-block\"\n              type=\"button\"\n              *ngIf=\"downloading\"\n              disabled=\"true\"\n            >\n              <i\n                class=\"bwi bwi-spinner bwi-spin\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n            </button>\n          </ng-container>\n          <p *ngIf=\"expirationDate\" class=\"text-center text-muted\">\n            Expires: {{ expirationDate | date: \"medium\" }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-12 text-center mt-5 text-muted\">\n      <p class=\"mb-0\">\n        {{ \"sendAccessTaglineProductDesc\" | i18n }}<br />\n      </p>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { CryptoFunctionService } from \"@bitwarden/common/abstractions/cryptoFunction.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { SEND_KDF_ITERATIONS } from \"@bitwarden/common/enums/kdfType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { SendAccess } from \"@bitwarden/common/models/domain/send-access\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { SendAccessRequest } from \"@bitwarden/common/models/request/send-access.request\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\nimport { SendAccessResponse } from \"@bitwarden/common/models/response/send-access.response\";\nimport { SendAccessView } from \"@bitwarden/common/models/view/send-access.view\";\n\n@Component({\n  selector: \"app-send-access\",\n  templateUrl: \"access.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class AccessComponent implements OnInit {\n  send: SendAccessView;\n  sendType = SendType;\n  downloading = false;\n  loading = true;\n  passwordRequired = false;\n  formPromise: Promise<SendAccessResponse>;\n  password: string;\n  showText = false;\n  unavailable = false;\n  error = false;\n  hideEmail = false;\n\n  private id: string;\n  private key: string;\n  private decKey: SymmetricCryptoKey;\n  private accessRequest: SendAccessRequest;\n\n  constructor(\n    private i18nService: I18nService,\n    private cryptoFunctionService: CryptoFunctionService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private route: ActivatedRoute,\n    private cryptoService: CryptoService,\n    private fileDownloadService: FileDownloadService\n  ) {}\n\n  get sendText() {\n    if (this.send == null || this.send.text == null) {\n      return null;\n    }\n    return this.showText ? this.send.text.text : this.send.text.maskedText;\n  }\n\n  get expirationDate() {\n    if (this.send == null || this.send.expirationDate == null) {\n      return null;\n    }\n    return this.send.expirationDate;\n  }\n\n  get creatorIdentifier() {\n    if (this.send == null || this.send.creatorIdentifier == null) {\n      return null;\n    }\n    return this.send.creatorIdentifier;\n  }\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.params.subscribe(async (params) => {\n      this.id = params.sendId;\n      this.key = params.key;\n      if (this.key == null || this.id == null) {\n        return;\n      }\n      await this.load();\n    });\n  }\n\n  async download() {\n    if (this.send == null || this.decKey == null) {\n      return;\n    }\n\n    if (this.downloading) {\n      return;\n    }\n\n    const downloadData = await this.apiService.getSendFileDownloadData(\n      this.send,\n      this.accessRequest\n    );\n\n    if (Utils.isNullOrWhitespace(downloadData.url)) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"missingSendFile\"));\n      return;\n    }\n\n    this.downloading = true;\n    const response = await fetch(new Request(downloadData.url, { cache: \"no-store\" }));\n    if (response.status !== 200) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      this.downloading = false;\n      return;\n    }\n\n    try {\n      const encBuf = await EncArrayBuffer.fromResponse(response);\n      const decBuf = await this.cryptoService.decryptFromBytes(encBuf, this.decKey);\n      this.fileDownloadService.download({\n        fileName: this.send.file.fileName,\n        blobData: decBuf,\n        downloadMethod: \"save\",\n      });\n    } catch (e) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n\n    this.downloading = false;\n  }\n\n  copyText() {\n    this.platformUtilsService.copyToClipboard(this.send.text.text);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendTypeText\"))\n    );\n  }\n\n  toggleText() {\n    this.showText = !this.showText;\n  }\n\n  async load() {\n    this.unavailable = false;\n    this.error = false;\n    this.hideEmail = false;\n    const keyArray = Utils.fromUrlB64ToArray(this.key);\n    this.accessRequest = new SendAccessRequest();\n    if (this.password != null) {\n      const passwordHash = await this.cryptoFunctionService.pbkdf2(\n        this.password,\n        keyArray,\n        \"sha256\",\n        SEND_KDF_ITERATIONS\n      );\n      this.accessRequest.password = Utils.fromBufferToB64(passwordHash);\n    }\n    try {\n      let sendResponse: SendAccessResponse = null;\n      if (this.loading) {\n        sendResponse = await this.apiService.postSendAccess(this.id, this.accessRequest);\n      } else {\n        this.formPromise = this.apiService.postSendAccess(this.id, this.accessRequest);\n        sendResponse = await this.formPromise;\n      }\n      this.passwordRequired = false;\n      const sendAccess = new SendAccess(sendResponse);\n      this.decKey = await this.cryptoService.makeSendKey(keyArray);\n      this.send = await sendAccess.decrypt(this.decKey);\n      this.showText = this.send.text != null ? !this.send.text.hidden : true;\n    } catch (e) {\n      if (e instanceof ErrorResponse) {\n        if (e.statusCode === 401) {\n          this.passwordRequired = true;\n        } else if (e.statusCode === 404) {\n          this.unavailable = true;\n        } else {\n          this.error = true;\n        }\n      }\n    }\n    this.loading = false;\n    this.hideEmail =\n      this.creatorIdentifier == null &&\n      !this.passwordRequired &&\n      !this.loading &&\n      !this.unavailable;\n  }\n}\n","import { Directive, NgZone, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class SendComponent implements OnInit, OnDestroy {\n  disableSend = false;\n  sendType = SendType;\n  loaded = false;\n  loading = true;\n  refreshing = false;\n  expired = false;\n  type: SendType = null;\n  sends: SendView[] = [];\n  filteredSends: SendView[] = [];\n  searchText: string;\n  selectedType: SendType;\n  selectedAll: boolean;\n  searchPlaceholder: string;\n  filter: (cipher: SendView) => boolean;\n  searchPending = false;\n  hasSearched = false; // search() function called - returns true if text qualifies for search\n\n  actionPromise: any;\n  onSuccessfulRemovePassword: () => Promise<any>;\n  onSuccessfulDelete: () => Promise<any>;\n  onSuccessfulLoad: () => Promise<any>;\n\n  private searchTimeout: any;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected sendService: SendService,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected ngZone: NgZone,\n    protected searchService: SearchService,\n    protected policyService: PolicyService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async load(filter: (send: SendView) => boolean = null) {\n    this.loading = true;\n    const sends = await this.sendService.getAllDecrypted();\n    this.sends = sends;\n    if (this.onSuccessfulLoad != null) {\n      await this.onSuccessfulLoad();\n    } else {\n      // Default action\n      this.selectAll();\n    }\n    this.loading = false;\n    this.loaded = true;\n  }\n\n  async reload(filter: (send: SendView) => boolean = null) {\n    this.loaded = false;\n    this.sends = [];\n    await this.load(filter);\n  }\n\n  async refresh() {\n    try {\n      this.refreshing = true;\n      await this.reload(this.filter);\n    } finally {\n      this.refreshing = false;\n    }\n  }\n\n  async applyFilter(filter: (send: SendView) => boolean = null) {\n    this.filter = filter;\n    await this.search(null);\n  }\n\n  async search(timeout: number = null) {\n    this.searchPending = false;\n    if (this.searchTimeout != null) {\n      clearTimeout(this.searchTimeout);\n    }\n    if (timeout == null) {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      return;\n    }\n    this.searchPending = true;\n    this.searchTimeout = setTimeout(async () => {\n      this.hasSearched = this.searchService.isSearchable(this.searchText);\n      this.filteredSends = this.sends.filter((s) => this.filter == null || this.filter(s));\n      this.applyTextSearch();\n      this.searchPending = false;\n    }, timeout);\n  }\n\n  async removePassword(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null || s.password == null) {\n      return;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"removePasswordConfirmation\"),\n      this.i18nService.t(\"removePassword\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.removePasswordWithServer(s.id);\n      await this.actionPromise;\n      if (this.onSuccessfulRemovePassword != null) {\n        this.onSuccessfulRemovePassword();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"removedPassword\"));\n        await this.load();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n  }\n\n  async delete(s: SendView): Promise<boolean> {\n    if (this.actionPromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.actionPromise = this.sendService.deleteWithServer(s.id);\n      await this.actionPromise;\n\n      if (this.onSuccessfulDelete != null) {\n        this.onSuccessfulDelete();\n      } else {\n        // Default actions\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n        await this.refresh();\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n    this.actionPromise = null;\n    return true;\n  }\n\n  copy(s: SendView) {\n    const sendLinkBaseUrl = this.environmentService.getSendUrl();\n    const link = sendLinkBaseUrl + s.accessId + \"/\" + s.urlB64Key;\n    this.platformUtilsService.copyToClipboard(link);\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"sendLink\"))\n    );\n  }\n\n  searchTextChanged() {\n    this.search(200);\n  }\n\n  selectAll() {\n    this.clearSelections();\n    this.selectedAll = true;\n    this.applyFilter(null);\n  }\n\n  selectType(type: SendType) {\n    this.clearSelections();\n    this.selectedType = type;\n    this.applyFilter((s) => s.type === type);\n  }\n\n  clearSelections() {\n    this.selectedAll = false;\n    this.selectedType = null;\n  }\n\n  private applyTextSearch() {\n    if (this.searchText != null) {\n      this.filteredSends = this.searchService.searchSends(this.filteredSends, this.searchText);\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { UntypedFormControl, UntypedFormGroup } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n// Different BrowserPath = different controls.\nenum BrowserPath {\n  // Native datetime-locale.\n  // We are happy.\n  Default = \"default\",\n\n  // Native date and time inputs, but no datetime-locale.\n  // We use individual date and time inputs and create a datetime programatically on submit.\n  Firefox = \"firefox\",\n\n  // No native date, time, or datetime-locale inputs.\n  // We use a polyfill for dates and a dropdown for times.\n  Safari = \"safari\",\n}\n\nenum DateField {\n  DeletionDate = \"deletion\",\n  ExpriationDate = \"expiration\",\n}\n\n// Value = hours\nenum DatePreset {\n  OneHour = 1,\n  OneDay = 24,\n  TwoDays = 48,\n  ThreeDays = 72,\n  SevenDays = 168,\n  ThirtyDays = 720,\n  Custom = 0,\n  Never = null,\n}\n\n// TimeOption is used for the dropdown implementation of custom times\n// twelveHour = displayed time; twentyFourHour = time used in logic\ninterface TimeOption {\n  twelveHour: string;\n  twentyFourHour: string;\n}\n\n@Directive()\nexport class EffluxDatesComponent implements OnInit {\n  @Input() readonly initialDeletionDate: Date;\n  @Input() readonly initialExpirationDate: Date;\n  @Input() readonly editMode: boolean;\n  @Input() readonly disabled: boolean;\n\n  @Output() datesChanged = new EventEmitter<{ deletionDate: string; expirationDate: string }>();\n\n  get browserPath(): BrowserPath {\n    if (this.platformUtilsService.isFirefox()) {\n      return BrowserPath.Firefox;\n    } else if (this.platformUtilsService.isSafari()) {\n      return BrowserPath.Safari;\n    }\n    return BrowserPath.Default;\n  }\n\n  datesForm = new UntypedFormGroup({\n    selectedDeletionDatePreset: new UntypedFormControl(),\n    selectedExpirationDatePreset: new UntypedFormControl(),\n    defaultDeletionDateTime: new UntypedFormControl(),\n    defaultExpirationDateTime: new UntypedFormControl(),\n    fallbackDeletionDate: new UntypedFormControl(),\n    fallbackDeletionTime: new UntypedFormControl(),\n    fallbackExpirationDate: new UntypedFormControl(),\n    fallbackExpirationTime: new UntypedFormControl(),\n  });\n\n  deletionDatePresets: any[] = [\n    { name: this.i18nService.t(\"oneHour\"), value: DatePreset.OneHour },\n    { name: this.i18nService.t(\"oneDay\"), value: DatePreset.OneDay },\n    { name: this.i18nService.t(\"days\", \"2\"), value: DatePreset.TwoDays },\n    { name: this.i18nService.t(\"days\", \"3\"), value: DatePreset.ThreeDays },\n    { name: this.i18nService.t(\"days\", \"7\"), value: DatePreset.SevenDays },\n    { name: this.i18nService.t(\"days\", \"30\"), value: DatePreset.ThirtyDays },\n    { name: this.i18nService.t(\"custom\"), value: DatePreset.Custom },\n  ];\n\n  expirationDatePresets: any[] = [\n    { name: this.i18nService.t(\"never\"), value: DatePreset.Never },\n  ].concat([...this.deletionDatePresets]);\n\n  get selectedDeletionDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedDeletionDatePreset\") as UntypedFormControl;\n  }\n\n  get selectedExpirationDatePreset(): UntypedFormControl {\n    return this.datesForm.get(\"selectedExpirationDatePreset\") as UntypedFormControl;\n  }\n\n  get defaultDeletionDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultDeletionDateTime\") as UntypedFormControl;\n  }\n\n  get defaultExpirationDateTime(): UntypedFormControl {\n    return this.datesForm.get(\"defaultExpirationDateTime\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionDate\") as UntypedFormControl;\n  }\n\n  get fallbackDeletionTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackDeletionTime\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationDate(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationDate\") as UntypedFormControl;\n  }\n\n  get fallbackExpirationTime(): UntypedFormControl {\n    return this.datesForm.get(\"fallbackExpirationTime\") as UntypedFormControl;\n  }\n\n  // Should be able to call these at any time and compute a submitable value\n  get formattedDeletionDate(): string {\n    switch (this.selectedDeletionDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n        return this.formattedDeletionDate;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            return this.fallbackDeletionDate.value + \"T\" + this.fallbackDeletionTime.value;\n          default:\n            return this.defaultDeletionDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedDeletionDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n\n  get formattedExpirationDate(): string {\n    switch (this.selectedExpirationDatePreset.value as DatePreset) {\n      case DatePreset.Never:\n        return null;\n      case DatePreset.Custom:\n        switch (this.browserPath) {\n          case BrowserPath.Safari:\n          case BrowserPath.Firefox:\n            if (\n              (!this.fallbackExpirationDate.value || !this.fallbackExpirationTime.value) &&\n              this.editMode\n            ) {\n              return null;\n            }\n            return this.fallbackExpirationDate.value + \"T\" + this.fallbackExpirationTime.value;\n          default:\n            if (!this.defaultExpirationDateTime.value) {\n              return null;\n            }\n            return this.defaultExpirationDateTime.value;\n        }\n      default: {\n        const now = new Date();\n        const miliseconds = now.setTime(\n          now.getTime() + (this.selectedExpirationDatePreset.value as number) * 60 * 60 * 1000\n        );\n        return new Date(miliseconds).toString();\n      }\n    }\n  }\n  //\n\n  get safariDeletionTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.DeletionDate);\n  }\n\n  get safariExpirationTimePresetOptions() {\n    return this.safariTimePresetOptions(DateField.ExpriationDate);\n  }\n\n  private get nextWeek(): Date {\n    const nextWeek = new Date();\n    nextWeek.setDate(nextWeek.getDate() + 7);\n    return nextWeek;\n  }\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {}\n\n  ngOnInit(): void {\n    this.setInitialFormValues();\n    this.emitDates();\n    this.datesForm.valueChanges.subscribe(() => {\n      this.emitDates();\n    });\n  }\n\n  onDeletionDatePresetSelect(value: DatePreset) {\n    this.selectedDeletionDatePreset.setValue(value);\n  }\n\n  clearExpiration() {\n    switch (this.browserPath) {\n      case BrowserPath.Safari:\n      case BrowserPath.Firefox:\n        this.fallbackExpirationDate.setValue(null);\n        this.fallbackExpirationTime.setValue(null);\n        break;\n      case BrowserPath.Default:\n        this.defaultExpirationDateTime.setValue(null);\n        break;\n    }\n  }\n\n  protected emitDates() {\n    this.datesChanged.emit({\n      deletionDate: this.formattedDeletionDate,\n      expirationDate: this.formattedExpirationDate,\n    });\n  }\n\n  protected setInitialFormValues() {\n    if (this.editMode) {\n      this.selectedDeletionDatePreset.setValue(DatePreset.Custom);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Custom);\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n        case BrowserPath.Firefox:\n          this.fallbackDeletionDate.setValue(this.initialDeletionDate.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(this.initialDeletionDate.toTimeString().slice(0, 5));\n          if (this.initialExpirationDate != null) {\n            this.fallbackExpirationDate.setValue(\n              this.initialExpirationDate.toISOString().slice(0, 10)\n            );\n            this.fallbackExpirationTime.setValue(\n              this.initialExpirationDate.toTimeString().slice(0, 5)\n            );\n          }\n          break;\n        case BrowserPath.Default:\n          if (this.initialExpirationDate) {\n            this.defaultExpirationDateTime.setValue(\n              this.datePipe.transform(new Date(this.initialExpirationDate), \"yyyy-MM-ddTHH:mm\")\n            );\n          }\n          this.defaultDeletionDateTime.setValue(\n            this.datePipe.transform(new Date(this.initialDeletionDate), \"yyyy-MM-ddTHH:mm\")\n          );\n          break;\n      }\n    } else {\n      this.selectedDeletionDatePreset.setValue(DatePreset.SevenDays);\n      this.selectedExpirationDatePreset.setValue(DatePreset.Never);\n\n      switch (this.browserPath) {\n        case BrowserPath.Safari:\n          this.fallbackDeletionDate.setValue(this.nextWeek.toISOString().slice(0, 10));\n          this.fallbackDeletionTime.setValue(\n            this.safariTimePresetOptions(DateField.DeletionDate)[1].twentyFourHour\n          );\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  protected safariTimePresetOptions(field: DateField): TimeOption[] {\n    // init individual arrays for major sort groups\n    const noon: TimeOption[] = [];\n    const midnight: TimeOption[] = [];\n    const ams: TimeOption[] = [];\n    const pms: TimeOption[] = [];\n\n    // determine minute skip (5 min, 10 min, 15 min, etc.)\n    const minuteIncrementer = 15;\n\n    // loop through each hour on a 12 hour system\n    for (let h = 1; h <= 12; h++) {\n      // loop through each minute in the hour using the skip to incriment\n      for (let m = 0; m < 60; m += minuteIncrementer) {\n        // init the final strings that will be added to the lists\n        let hour = h.toString();\n        let minutes = m.toString();\n\n        // add prepending 0s to single digit hours/minutes\n        if (h < 10) {\n          hour = \"0\" + hour;\n        }\n        if (m < 10) {\n          minutes = \"0\" + minutes;\n        }\n\n        // build time strings and push to relevant sort groups\n        if (h === 12) {\n          const midnightOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `00:${minutes}`,\n          };\n          midnight.push(midnightOption);\n\n          const noonOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          noon.push(noonOption);\n        } else {\n          const amOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} AM`,\n            twentyFourHour: `${hour}:${minutes}`,\n          };\n          ams.push(amOption);\n\n          const pmOption: TimeOption = {\n            twelveHour: `${hour}:${minutes} PM`,\n            twentyFourHour: `${h + 12}:${minutes}`,\n          };\n          pms.push(pmOption);\n        }\n      }\n    }\n\n    // bring all the arrays together in the right order\n    const validTimes = [...midnight, ...ams, ...noon, ...pms];\n\n    // determine if an unsupported value already exists on the send & add that to the top of the option list\n    // example: if the Send was created with a different client\n    if (field === DateField.ExpriationDate && this.initialExpirationDate != null && this.editMode) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialExpirationDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialExpirationDate, \"HH:mm\"),\n      };\n      return [previousValue, { twelveHour: null, twentyFourHour: null }, ...validTimes];\n    } else if (\n      field === DateField.DeletionDate &&\n      this.initialDeletionDate != null &&\n      this.editMode\n    ) {\n      const previousValue: TimeOption = {\n        twelveHour: this.datePipe.transform(this.initialDeletionDate, \"hh:mm a\"),\n        twentyFourHour: this.datePipe.transform(this.initialDeletionDate, \"HH:mm\"),\n      };\n      return [previousValue, ...validTimes];\n    } else {\n      return [{ twelveHour: null, twentyFourHour: null }, ...validTimes];\n    }\n  }\n}\n","import { DatePipe } from \"@angular/common\";\nimport { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { SendType } from \"@bitwarden/common/enums/sendType\";\nimport { EncArrayBuffer } from \"@bitwarden/common/models/domain/enc-array-buffer\";\nimport { Send } from \"@bitwarden/common/models/domain/send\";\nimport { SendFileView } from \"@bitwarden/common/models/view/send-file.view\";\nimport { SendTextView } from \"@bitwarden/common/models/view/send-text.view\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\n\n@Directive()\nexport class AddEditComponent implements OnInit, OnDestroy {\n  @Input() sendId: string;\n  @Input() type: SendType;\n\n  @Output() onSavedSend = new EventEmitter<SendView>();\n  @Output() onDeletedSend = new EventEmitter<SendView>();\n  @Output() onCancelled = new EventEmitter<SendView>();\n\n  copyLink = false;\n  disableSend = false;\n  disableHideEmail = false;\n  send: SendView;\n  deletionDate: string;\n  expirationDate: string;\n  hasPassword: boolean;\n  password: string;\n  showPassword = false;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  sendType = SendType;\n  typeOptions: any[];\n  canAccessPremium = true;\n  emailVerified = true;\n  alertShown = false;\n  showOptions = false;\n\n  protected componentName = \"\";\n  private sendLinkBaseUrl: string;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected environmentService: EnvironmentService,\n    protected datePipe: DatePipe,\n    protected sendService: SendService,\n    protected messagingService: MessagingService,\n    protected policyService: PolicyService,\n    private logService: LogService,\n    protected stateService: StateService\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"sendTypeFile\"), value: SendType.File },\n      { name: i18nService.t(\"sendTypeText\"), value: SendType.Text },\n    ];\n    this.sendLinkBaseUrl = this.environmentService.getSendUrl();\n  }\n\n  get link(): string {\n    if (this.send.id != null && this.send.accessId != null) {\n      return this.sendLinkBaseUrl + this.send.accessId + \"/\" + this.send.urlB64Key;\n    }\n    return null;\n  }\n\n  get isSafari() {\n    return this.platformUtilsService.isSafari();\n  }\n\n  get isDateTimeLocalSupported(): boolean {\n    return !(this.platformUtilsService.isFirefox() || this.platformUtilsService.isSafari());\n  }\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.DisableSend)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableSend = policyAppliesToActiveUser;\n      });\n\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.SendOptions, (p) => p.data.disableHideEmail)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((policyAppliesToActiveUser) => {\n        this.disableHideEmail = policyAppliesToActiveUser;\n      });\n\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  get editMode(): boolean {\n    return this.sendId != null;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.editMode ? \"editSend\" : \"createSend\");\n  }\n\n  setDates(event: { deletionDate: string; expirationDate: string }) {\n    this.deletionDate = event.deletionDate;\n    this.expirationDate = event.expirationDate;\n  }\n\n  async load() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    this.emailVerified = await this.stateService.getEmailVerified();\n    if (!this.canAccessPremium || !this.emailVerified) {\n      this.type = SendType.Text;\n    }\n\n    if (this.send == null) {\n      if (this.editMode) {\n        const send = await this.loadSend();\n        this.send = await send.decrypt();\n      } else {\n        this.send = new SendView();\n        this.send.type = this.type == null ? SendType.File : this.type;\n        this.send.file = new SendFileView();\n        this.send.text = new SendTextView();\n        this.send.deletionDate = new Date();\n        this.send.deletionDate.setDate(this.send.deletionDate.getDate() + 7);\n      }\n    }\n\n    this.hasPassword = this.send.password != null && this.send.password.trim() !== \"\";\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.disableSend) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"sendDisabledWarning\")\n      );\n      return false;\n    }\n\n    if (this.send.name == null || this.send.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    let file: File = null;\n    if (this.send.type === SendType.File && !this.editMode) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      const files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n\n      file = files[0];\n      if (files[0].size > 524288000) {\n        // 500 MB\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"maxFileSize\")\n        );\n        return;\n      }\n    }\n\n    if (this.password != null && this.password.trim() === \"\") {\n      this.password = null;\n    }\n\n    this.formPromise = this.encryptSend(file).then(async (encSend) => {\n      const uploadPromise = this.sendService.saveWithServer(encSend);\n      await uploadPromise;\n      if (this.send.id == null) {\n        this.send.id = encSend[0].id;\n      }\n      if (this.send.accessId == null) {\n        this.send.accessId = encSend[0].accessId;\n      }\n      this.onSavedSend.emit(this.send);\n      if (this.copyLink && this.link != null) {\n        await this.handleCopyLinkToClipboard();\n        return;\n      }\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n      );\n    });\n    try {\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    return Promise.resolve(this.platformUtilsService.copyToClipboard(link));\n  }\n\n  async delete(): Promise<boolean> {\n    if (this.deletePromise != null) {\n      return false;\n    }\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteSendConfirmation\"),\n      this.i18nService.t(\"deleteSend\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.sendService.deleteWithServer(this.send.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedSend\"));\n      await this.load();\n      this.onDeletedSend.emit(this.send);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  typeChanged() {\n    if (this.send.type === SendType.File && !this.alertShown) {\n      if (!this.canAccessPremium) {\n        this.alertShown = true;\n        this.messagingService.send(\"premiumRequired\");\n      } else if (!this.emailVerified) {\n        this.alertShown = true;\n        this.messagingService.send(\"emailVerificationRequired\");\n      }\n    }\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  protected async loadSend(): Promise<Send> {\n    return this.sendService.get(this.sendId);\n  }\n\n  protected async encryptSend(file: File): Promise<[Send, EncArrayBuffer]> {\n    const sendData = await this.sendService.encrypt(this.send, file, this.password, null);\n\n    // Parse dates\n    try {\n      sendData[0].deletionDate = this.deletionDate == null ? null : new Date(this.deletionDate);\n    } catch {\n      sendData[0].deletionDate = null;\n    }\n    try {\n      sendData[0].expirationDate =\n        this.expirationDate == null ? null : new Date(this.expirationDate);\n    } catch {\n      sendData[0].expirationDate = null;\n    }\n\n    return sendData;\n  }\n\n  protected togglePasswordVisible() {\n    this.showPassword = !this.showPassword;\n    document.getElementById(\"password\").focus();\n  }\n  private async handleCopyLinkToClipboard() {\n    const copySuccess = await this.copyLinkToClipboard(this.link);\n    if (copySuccess ?? true) {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\")\n      );\n    } else {\n      await this.platformUtilsService.showDialog(\n        this.i18nService.t(this.editMode ? \"editedSend\" : \"createdSend\"),\n        null,\n        this.i18nService.t(\"ok\"),\n        null,\n        \"success\",\n        null\n      );\n      await this.copyLinkToClipboard(this.link);\n    }\n  }\n}\n","<div class=\"row\" [formGroup]=\"datesForm\">\n  <div class=\"col-6 form-group\">\n    <label for=\"deletionDate\">{{ \"deletionDate\" | i18n }}</label>\n    <ng-template #deletionDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <ng-container *ngSwitchCase=\"'firefox'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <input\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              type=\"time\"\n              name=\"DeletionTimeDate\"\n              formControlName=\"fallbackDeletionTime\"\n              required\n              placeholder=\"HH:MM AM/PM\"\n            />\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"'safari'\">\n          <div class=\"d-flex justify-content-around\">\n            <input\n              id=\"deletionDateCustomFallback\"\n              class=\"form-control mt-1\"\n              type=\"date\"\n              name=\"DeletionDateFallback\"\n              formControlName=\"fallbackDeletionDate\"\n              required\n              placeholder=\"MM/DD/YYYY\"\n              data-date-format=\"mm/dd/yyyy\"\n            />\n            <select\n              id=\"deletionTimeCustomFallback\"\n              class=\"form-control mt-1 ml-1\"\n              [required]=\"!editMode\"\n              formControlName=\"fallbackDeletionTime\"\n              name=\"SafariDeletionTime\"\n            >\n              <option\n                *ngFor=\"let o of safariDeletionTimePresetOptions\"\n                [ngValue]=\"o.twentyFourHour\"\n              >\n                {{ o.twelveHour }}\n              </option>\n            </select>\n          </div>\n        </ng-container>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"deletionDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"DeletionDate\"\n            formControlName=\"defaultDeletionDateTime\"\n            required\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"deletionDate\"\n        name=\"SelectedDeletionDatePreset\"\n        formControlName=\"selectedDeletionDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of deletionDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedDeletionDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"deletionDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"deletionDateDesc\" | i18n }}</div>\n  </div>\n  <div class=\"col-6 form-group\">\n    <div class=\"d-flex\">\n      <label for=\"expirationDate\">{{ \"expirationDate\" | i18n }}</label>\n      <a\n        href=\"#\"\n        appStopClick\n        (click)=\"clearExpiration()\"\n        class=\"ml-auto\"\n        *ngIf=\"editMode && !disabled\"\n      >\n        {{ \"clear\" | i18n }}\n      </a>\n    </div>\n    <ng-template #expirationDateCustom>\n      <ng-container [ngSwitch]=\"browserPath\">\n        <div *ngSwitchCase=\"'firefox'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <input\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            type=\"time\"\n            name=\"ExpirationTimeFallback\"\n            formControlName=\"fallbackExpirationTime\"\n            [required]=\"!editMode\"\n            placeholder=\"HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </div>\n        <!-- non-default cases are not showing up -->\n        <div *ngSwitchCase=\"'safari'\" class=\"d-flex justify-content-around\">\n          <input\n            id=\"expirationDateCustomFallback\"\n            class=\"form-control mt-1\"\n            type=\"date\"\n            name=\"ExpirationDateFallback\"\n            formControlName=\"fallbackExpirationDate\"\n            [required]=\"!editMode\"\n            placeholder=\"MM/DD/YYYY\"\n            [readOnly]=\"disabled\"\n            data-date-format=\"mm/dd/yyyy\"\n          />\n          <select\n            id=\"expirationTimeCustomFallback\"\n            class=\"form-control mt-1 ml-1\"\n            [required]=\"!editMode\"\n            formControlName=\"fallbackExpirationTime\"\n            name=\"SafariExpirationTime\"\n          >\n            <option\n              *ngFor=\"let o of safariExpirationTimePresetOptions\"\n              [ngValue]=\"o.twentyFourHour\"\n            >\n              {{ o.twelveHour }}\n            </option>\n          </select>\n        </div>\n        <ng-container *ngSwitchDefault>\n          <input\n            id=\"expirationDateCustom\"\n            class=\"form-control mt-1\"\n            type=\"datetime-local\"\n            name=\"ExpirationDate\"\n            formControlName=\"defaultExpirationDateTime\"\n            placeholder=\"MM/DD/YYYY HH:MM AM/PM\"\n            [readOnly]=\"disabled\"\n          />\n        </ng-container>\n      </ng-container>\n    </ng-template>\n    <div *ngIf=\"!editMode\">\n      <select\n        id=\"expirationDate\"\n        name=\"SelectedExpirationDatePreset\"\n        formControlName=\"selectedExpirationDatePreset\"\n        class=\"form-control\"\n        required\n      >\n        <option *ngFor=\"let o of expirationDatePresets\" [ngValue]=\"o.value\">{{ o.name }}</option>\n      </select>\n      <ng-container *ngIf=\"selectedExpirationDatePreset.value === 0\">\n        <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n      </ng-container>\n    </div>\n    <div *ngIf=\"editMode\">\n      <ng-container *ngTemplateOutlet=\"expirationDateCustom\"> </ng-container>\n    </div>\n    <div class=\"form-text text-muted small\">{{ \"expirationDateDesc\" | i18n }}</div>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\nimport { ControlContainer, NgForm } from \"@angular/forms\";\n\nimport { EffluxDatesComponent as BaseEffluxDatesComponent } from \"@bitwarden/angular/components/send/efflux-dates.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Component({\n  selector: \"app-send-efflux-dates\",\n  templateUrl: \"efflux-dates.component.html\",\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }],\n})\nexport class EffluxDatesComponent extends BaseEffluxDatesComponent {\n  constructor(\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected datePipe: DatePipe\n  ) {\n    super(i18nService, platformUtilsService, datePipe);\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"sendAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"sendAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"send\">\n        <app-callout *ngIf=\"disableSend\">\n          <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n        </app-callout>\n        <app-callout *ngIf=\"!disableSend && disableHideEmail\">\n          <span>{{ \"sendOptionsPolicyInEffect\" | i18n }}</span>\n          <ul class=\"mb-0\">\n            <li>{{ \"sendDisableHideEmailInEffect\" | i18n }}</li>\n          </ul>\n        </app-callout>\n        <div class=\"row\">\n          <div class=\"col-6 form-group\">\n            <label for=\"name\">{{ \"name\" | i18n }}</label>\n            <input\n              id=\"name\"\n              class=\"form-control\"\n              type=\"text\"\n              name=\"Name\"\n              [(ngModel)]=\"send.name\"\n              required\n              [readOnly]=\"disableSend\"\n            />\n            <small class=\"form-text text-muted\">{{ \"sendNameDesc\" | i18n }}</small>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"!editMode\">\n          <div class=\"col-6 form-group\">\n            <label>{{ \"whatTypeOfSend\" | i18n }}</label>\n            <div class=\"form-check\" *ngFor=\"let o of typeOptions\">\n              <input\n                class=\"form-check-input\"\n                type=\"radio\"\n                [(ngModel)]=\"send.type\"\n                name=\"Type_{{ o.value }}\"\n                id=\"type_{{ o.value }}\"\n                [value]=\"o.value\"\n                (change)=\"typeChanged()\"\n                [checked]=\"send.type === o.value\"\n              />\n              <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n                {{ o.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <!-- Text -->\n        <ng-container *ngIf=\"send.type === sendType.Text\">\n          <div class=\"form-group\">\n            <label for=\"text\">{{ \"sendTypeText\" | i18n }}</label>\n            <textarea\n              id=\"text\"\n              name=\"Text.Text\"\n              rows=\"6\"\n              [(ngModel)]=\"send.text.text\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <small class=\"form-text text-muted\">{{ \"sendTextDesc\" | i18n }}</small>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.text.hidden\"\n                id=\"text-hidden\"\n                name=\"Text.Hidden\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"text-hidden\">{{\n                \"textHiddenByDefault\" | i18n\n              }}</label>\n            </div>\n          </div>\n        </ng-container>\n        <!-- File -->\n        <ng-container *ngIf=\"send.type === sendType.File\">\n          <div class=\"form-group\">\n            <div *ngIf=\"editMode\">\n              <strong class=\"d-block\">{{ \"file\" | i18n }}</strong>\n              {{ send.file.fileName }} ({{ send.file.sizeName }})\n            </div>\n            <div *ngIf=\"!editMode\">\n              <label for=\"file\">{{ \"file\" | i18n }}</label>\n              <input\n                type=\"file\"\n                id=\"file\"\n                class=\"form-control-file\"\n                name=\"file\"\n                required\n                [disabled]=\"disableSend\"\n              />\n              <small class=\"form-text text-muted\"\n                >{{ \"sendFileDesc\" | i18n }} {{ \"maxFileSize\" | i18n }}</small\n              >\n            </div>\n          </div>\n        </ng-container>\n        <h3 class=\"mt-5\">{{ \"share\" | i18n }}</h3>\n        <div class=\"form-group\" *ngIf=\"link\">\n          <label for=\"link\">{{ \"sendLinkLabel\" | i18n }}</label>\n          <input type=\"text\" readonly id=\"link\" name=\"Link\" [ngModel]=\"link\" class=\"form-control\" />\n        </div>\n        <div class=\"form-group\">\n          <div class=\"form-check\">\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              [(ngModel)]=\"copyLink\"\n              id=\"copy-link\"\n              name=\"CopyLink\"\n            />\n            <label class=\"form-check-label\" for=\"copy-link\">{{\n              \"copySendLinkOnSave\" | i18n\n            }}</label>\n          </div>\n        </div>\n        <div\n          id=\"options-header\"\n          class=\"section-header d-flex flex-row align-items-center mt-5\"\n          (click)=\"toggleOptions()\"\n        >\n          <h3 class=\"mb-0 mr-2\">\n            <button appStopClick class=\"header-expandable\">\n              <i\n                class=\"bwi\"\n                aria-hidden=\"true\"\n                [ngClass]=\"{ 'bwi-angle-right': !showOptions, 'bwi-angle-down': showOptions }\"\n              ></i>\n              {{ \"options\" | i18n }}\n            </button>\n          </h3>\n        </div>\n        <div id=\"options\" [hidden]=\"!showOptions\">\n          <app-send-efflux-dates\n            [initialDeletionDate]=\"send.deletionDate\"\n            [initialExpirationDate]=\"send.expirationDate\"\n            [editMode]=\"editMode\"\n            [disabled]=\"disableSend\"\n            (datesChanged)=\"setDates($event)\"\n          >\n          </app-send-efflux-dates>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"maxAccessCount\">{{ \"maxAccessCount\" | i18n }}</label>\n              <input\n                id=\"maxAccessCount\"\n                class=\"form-control\"\n                type=\"number\"\n                name=\"MaxAccessCount\"\n                [(ngModel)]=\"send.maxAccessCount\"\n                min=\"1\"\n                [readOnly]=\"disableSend\"\n              />\n              <div class=\"form-text text-muted small\">{{ \"maxAccessCountDesc\" | i18n }}</div>\n            </div>\n            <div class=\"col-6 form-group\" *ngIf=\"editMode\">\n              <label for=\"accessCount\">{{ \"currentAccessCount\" | i18n }}</label>\n              <input\n                id=\"accessCount\"\n                class=\"form-control\"\n                type=\"text\"\n                name=\"AccessCount\"\n                readonly\n                [(ngModel)]=\"send.accessCount\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-6 form-group\">\n              <label for=\"password\" *ngIf=\"!hasPassword\">{{ \"password\" | i18n }}</label>\n              <label for=\"password\" *ngIf=\"hasPassword\">{{ \"newPassword\" | i18n }}</label>\n              <div class=\"input-group\">\n                <input\n                  id=\"password\"\n                  class=\"form-control text-monospace\"\n                  type=\"{{ showPassword ? 'text' : 'password' }}\"\n                  name=\"Password\"\n                  [(ngModel)]=\"password\"\n                  [readOnly]=\"disableSend\"\n                />\n                <div class=\"input-group-append\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-secondary\"\n                    appA11yTitle=\"{{ 'toggleVisibility' | i18n }}\"\n                    (click)=\"togglePasswordVisible()\"\n                  >\n                    <i\n                      class=\"bwi bwi-lg\"\n                      aria-hidden=\"true\"\n                      [ngClass]=\"{ 'bwi-eye': !showPassword, 'bwi-eye-slash': showPassword }\"\n                    ></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"form-text text-muted small\">{{ \"sendPasswordDesc\" | i18n }}</div>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"notes\">{{ \"notes\" | i18n }}</label>\n            <textarea\n              id=\"notes\"\n              name=\"Notes\"\n              rows=\"6\"\n              [(ngModel)]=\"send.notes\"\n              class=\"form-control\"\n              [readOnly]=\"disableSend\"\n            ></textarea>\n            <div class=\"form-text text-muted small\">{{ \"sendNotesDesc\" | i18n }}</div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.hideEmail\"\n                id=\"hideEmail\"\n                name=\"HideEmail\"\n                [disabled]=\"(disableHideEmail && !send.hideEmail) || disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"hideEmail\">\n                {{ \"hideEmail\" | i18n }}\n              </label>\n            </div>\n          </div>\n          <div class=\"form-group\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [(ngModel)]=\"send.disabled\"\n                id=\"disabled\"\n                name=\"Disabled\"\n                [disabled]=\"disableSend\"\n              />\n              <label class=\"form-check-label\" for=\"disabled\">{{ \"disableThisSend\" | i18n }}</label>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit manual\"\n          [ngClass]=\"{ loading: form.loading }\"\n          [disabled]=\"form.loading || disableSend\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\" *ngIf=\"send\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { DatePipe } from \"@angular/common\";\nimport { Component } from \"@angular/core\";\n\nimport { AddEditComponent as BaseAddEditComponent } from \"@bitwarden/angular/components/send/add-edit.component\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-send-add-edit\",\n  templateUrl: \"add-edit.component.html\",\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n  override componentName = \"app-send-add-edit\";\n\n  constructor(\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    datePipe: DatePipe,\n    sendService: SendService,\n    stateService: StateService,\n    messagingService: MessagingService,\n    policyService: PolicyService,\n    logService: LogService\n  ) {\n    super(\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      datePipe,\n      sendService,\n      messagingService,\n      policyService,\n      logService,\n      stateService\n    );\n  }\n\n  async copyLinkToClipboard(link: string): Promise<void | boolean> {\n    // Copy function on web depends on the modal being open or not. Since this event occurs during a transition\n    // of the modal closing we need to add a small delay to make sure state of the DOM is consistent.\n    return new Promise((resolve) => {\n      window.setTimeout(() => resolve(super.copyLinkToClipboard(link)), 500);\n    });\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<div class=\"container page-content\">\n  <app-callout type=\"warning\" title=\"{{ 'sendDisabled' | i18n }}\" *ngIf=\"disableSend\">\n    <span>{{ \"sendDisabledWarning\" | i18n }}</span>\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-3 groupings\">\n      <div class=\"card vault-filters\">\n        <div class=\"card-header d-flex\">\n          {{ \"filters\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <input\n            type=\"search\"\n            placeholder=\"{{ searchPlaceholder || ('searchSends' | i18n) }}\"\n            id=\"search\"\n            class=\"form-control\"\n            [(ngModel)]=\"searchText\"\n            (input)=\"searchTextChanged()\"\n            autocomplete=\"off\"\n            appAutofocus\n          />\n          <div class=\"filter\">\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedAll }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectAll()\">\n                    <i class=\"bwi bwi-fw bwi-filter\"></i>{{ \"allSends\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"filter\">\n            <div class=\"filter-heading\">\n              <h3>{{ \"types\" | i18n }}</h3>\n            </div>\n            <ul class=\"filter-options\">\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.Text }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectType(sendType.Text)\">\n                    <i class=\"bwi bwi-fw bwi-file-text\"></i>{{ \"sendTypeText\" | i18n }}\n                  </button>\n                </span>\n              </li>\n              <li class=\"filter-option\" [ngClass]=\"{ active: selectedType === sendType.File }\">\n                <span class=\"filter-buttons\">\n                  <button class=\"filter-button\" appStopClick (click)=\"selectType(sendType.File)\">\n                    <i class=\"bwi bwi-fw bwi-file\"></i>{{ \"sendTypeFile\" | i18n }}\n                  </button>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <div class=\"page-header d-flex\">\n        <h1>\n          {{ \"send\" | i18n }}\n          <small #actionSpinner [appApiAction]=\"actionPromise\">\n            <ng-container *ngIf=\"$any(actionSpinner).loading\">\n              <i\n                class=\"bwi bwi-spinner bwi-spin text-muted\"\n                title=\"{{ 'loading' | i18n }}\"\n                aria-hidden=\"true\"\n              ></i>\n              <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n            </ng-container>\n          </small>\n        </h1>\n        <div class=\"ml-auto d-flex\">\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary btn-sm\"\n            (click)=\"addSend()\"\n            [disabled]=\"disableSend\"\n          >\n            <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </div>\n      </div>\n      <!--Listing Table-->\n      <table class=\"table table-hover table-list\" *ngIf=\"filteredSends && filteredSends.length\">\n        <tbody>\n          <tr *ngFor=\"let s of filteredSends\">\n            <td class=\"table-list-icon\">\n              <div class=\"icon\" aria-hidden=\"true\">\n                <i class=\"bwi bwi-fw bwi-lg bwi-file\" *ngIf=\"s.type == sendType.File\"></i>\n                <i class=\"bwi bwi-fw bwi-lg bwi-file-text\" *ngIf=\"s.type == sendType.Text\"></i>\n              </div>\n            </td>\n            <td class=\"reduced-lh wrap\">\n              <a href=\"#\" appStopClick appStopProp (click)=\"editSend(s)\">{{ s.name }}</a>\n              <ng-container *ngIf=\"s.disabled\">\n                <i\n                  class=\"bwi bwi-exclamation-triangle\"\n                  appStopProp\n                  title=\"{{ 'disabled' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"disabled\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.password\">\n                <i\n                  class=\"bwi bwi-key\"\n                  appStopProp\n                  title=\"{{ 'password' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"password\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.maxAccessCountReached\">\n                <i\n                  class=\"bwi bwi-ban\"\n                  appStopProp\n                  title=\"{{ 'maxAccessCountReached' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"maxAccessCountReached\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.expired\">\n                <i\n                  class=\"bwi bwi-clock\"\n                  appStopProp\n                  title=\"{{ 'expired' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"expired\" | i18n }}</span>\n              </ng-container>\n              <ng-container *ngIf=\"s.pendingDelete\">\n                <i\n                  class=\"bwi bwi-trash\"\n                  appStopProp\n                  title=\"{{ 'pendingDeletion' | i18n }}\"\n                  aria-hidden=\"true\"\n                ></i>\n                <span class=\"sr-only\">{{ \"pendingDeletion\" | i18n }}</span>\n              </ng-container>\n              <br />\n              <small appStopProp>{{ s.deletionDate | date: \"medium\" }}</small>\n            </td>\n            <td class=\"table-list-options\">\n              <button\n                [bitMenuTriggerFor]=\"sendOptions\"\n                class=\"tw-border-none tw-bg-transparent tw-text-main\"\n                type=\"button\"\n                appA11yTitle=\"{{ 'options' | i18n }}\"\n              >\n                <i class=\"bwi bwi-ellipsis-v bwi-lg\" aria-hidden=\"true\"></i>\n              </button>\n              <bit-menu #sendOptions>\n                <button bitMenuItem (click)=\"copy(s)\">\n                  <i class=\"bwi bwi-fw bwi-clone\" aria-hidden=\"true\"></i>\n                  {{ \"copySendLink\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"removePassword(s)\" *ngIf=\"s.password && !disableSend\">\n                  <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                  {{ \"removePassword\" | i18n }}\n                </button>\n                <button bitMenuItem (click)=\"delete(s)\">\n                  <span class=\"tw-text-danger\">\n                    <i class=\"bwi bwi-fw bwi-trash\" aria-hidden=\"true\"></i>\n                    {{ \"delete\" | i18n }}\n                  </span>\n                </button>\n              </bit-menu>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"no-items\" *ngIf=\"filteredSends && !filteredSends.length\">\n        <ng-container *ngIf=\"!loaded\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n          <bit-icon [icon]=\"noItemIcon\" aria-hidden=\"true\"></bit-icon>\n          <p>{{ \"noSendsInList\" | i18n }}</p>\n          <button (click)=\"addSend()\" class=\"btn btn-outline-primary\" [disabled]=\"disableSend\">\n            <i class=\"bwi bwi-plus bwi-fw\"></i>{{ \"createSend\" | i18n }}\n          </button>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #sendAddEdit></ng-template>\n","import { Component, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { SendComponent as BaseSendComponent } from \"@bitwarden/angular/components/send/send.component\";\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SearchService } from \"@bitwarden/common/abstractions/search.service\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { SendView } from \"@bitwarden/common/models/view/send.view\";\nimport { Icons } from \"@bitwarden/components\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\n\nconst BroadcasterSubscriptionId = \"SendComponent\";\n\n@Component({\n  selector: \"app-send\",\n  templateUrl: \"send.component.html\",\n})\nexport class SendComponent extends BaseSendComponent {\n  @ViewChild(\"sendAddEdit\", { read: ViewContainerRef, static: true })\n  sendAddEditModalRef: ViewContainerRef;\n  noItemIcon = Icons.Search;\n\n  constructor(\n    sendService: SendService,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    environmentService: EnvironmentService,\n    ngZone: NgZone,\n    searchService: SearchService,\n    policyService: PolicyService,\n    private modalService: ModalService,\n    private broadcasterService: BroadcasterService,\n    logService: LogService\n  ) {\n    super(\n      sendService,\n      i18nService,\n      platformUtilsService,\n      environmentService,\n      ngZone,\n      searchService,\n      policyService,\n      logService\n    );\n  }\n\n  async ngOnInit() {\n    await super.ngOnInit();\n    await this.load();\n\n    // Broadcaster subscription - load if sync completes in the background\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await this.load();\n            }\n            break;\n        }\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async addSend() {\n    if (this.disableSend) {\n      return;\n    }\n\n    const component = await this.editSend(null);\n    component.type = this.type;\n  }\n\n  async editSend(send: SendView) {\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.sendAddEditModalRef,\n      (comp) => {\n        comp.sendId = send == null ? null : send.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedSend.subscribe(async () => {\n          modal.close();\n          await this.load();\n        });\n      }\n    );\n\n    return childComponent;\n  }\n}\n","import { Component } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UserVerificationService } from \"@bitwarden/common/abstractions/userVerification/userVerification.service.abstraction\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-deauthorize-sessions\",\n  templateUrl: \"deauthorize-sessions.component.html\",\n})\nexport class DeauthorizeSessionsComponent {\n  masterPassword: Verification;\n  formPromise: Promise<unknown>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private userVerificationService: UserVerificationService,\n    private messagingService: MessagingService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      this.formPromise = this.userVerificationService\n        .buildRequest(this.masterPassword)\n        .then((request) => this.apiService.postSecurityStamp(request));\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"sessionsDeauthorized\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deAuthTitle\">{{ \"deauthorizeSessions\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deauthorizeSessionsDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deauthorizeSessionsWarning\" | i18n }}</app-callout>\n        <app-user-verification [(ngModel)]=\"masterPassword\" ngDefaultControl name=\"secret\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deauthorizeSessions\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { FormBuilder } from \"@angular/forms\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { AccountApiService } from \"@bitwarden/common/auth/abstractions/account-api.service\";\nimport { Verification } from \"@bitwarden/common/types/verification\";\n\n@Component({\n  selector: \"app-delete-account\",\n  templateUrl: \"delete-account.component.html\",\n})\nexport class DeleteAccountComponent {\n  formPromise: Promise<void>;\n\n  deleteForm = this.formBuilder.group({\n    verification: undefined as Verification | undefined,\n  });\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private formBuilder: FormBuilder,\n    private accountApiService: AccountApiService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    try {\n      const verification = this.deleteForm.get(\"verification\").value;\n      this.formPromise = this.accountApiService.deleteAccount(verification);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"accountDeleted\"),\n        this.i18nService.t(\"accountDeletedDesc\")\n      );\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      [formGroup]=\"deleteForm\"\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"deleteAccountTitle\">{{ \"deleteAccount\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>{{ \"deleteAccountDesc\" | i18n }}</p>\n        <app-callout type=\"warning\">{{ \"deleteAccountWarning\" | i18n }}</app-callout>\n        <app-user-verification ngDefaultControl formControlName=\"verification\" name=\"verification\">\n        </app-user-verification>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"deleteAccount\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class EmailTokenRequest extends SecretVerificationRequest {\n  newEmail: string;\n  masterPasswordHash: string;\n}\n","import { EmailTokenRequest } from \"./email-token.request\";\n\nexport class EmailRequest extends EmailTokenRequest {\n  newMasterPasswordHash: string;\n  token: string;\n  key: string;\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <app-callout type=\"warning\" *ngIf=\"showTwoFactorEmailWarning\">\n    {{ \"changeEmailTwoFactorWarning\" | i18n }}\n  </app-callout>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          [readonly]=\"tokenSent\"\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"newEmail\">{{ \"newEmail\" | i18n }}</label>\n        <input\n          id=\"newEmail\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"NewEmail\"\n          [(ngModel)]=\"newEmail\"\n          required\n          [readonly]=\"tokenSent\"\n          inputmode=\"email\"\n          appInputVerbatim=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"tokenSent\">\n    <hr />\n    <p>{{ \"changeEmailDesc\" | i18n: newEmail }}</p>\n    <app-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</app-callout>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <div class=\"form-group\">\n          <label for=\"token\">{{ \"code\" | i18n }}</label>\n          <input\n            id=\"token\"\n            class=\"form-control\"\n            type=\"text\"\n            name=\"Token\"\n            [(ngModel)]=\"token\"\n            required\n            appInputVerbatim\n          />\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span *ngIf=\"!tokenSent\">{{ \"continue\" | i18n }}</span>\n    <span *ngIf=\"tokenSent\">{{ \"changeEmail\" | i18n }}</span>\n  </button>\n  <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n    {{ \"cancel\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TwoFactorProviderType } from \"@bitwarden/common/auth/enums/two-factor-provider-type\";\nimport { EmailTokenRequest } from \"@bitwarden/common/auth/models/request/email-token.request\";\nimport { EmailRequest } from \"@bitwarden/common/auth/models/request/email.request\";\n\n@Component({\n  selector: \"app-change-email\",\n  templateUrl: \"change-email.component.html\",\n})\nexport class ChangeEmailComponent implements OnInit {\n  masterPassword: string;\n  newEmail: string;\n  token: string;\n  tokenSent = false;\n  showTwoFactorEmailWarning = false;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    const twoFactorProviders = await this.apiService.getTwoFactorProviders();\n    this.showTwoFactorEmailWarning = twoFactorProviders.data.some(\n      (p) => p.type === TwoFactorProviderType.Email && p.enabled\n    );\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    this.newEmail = this.newEmail.trim().toLowerCase();\n    if (!this.tokenSent) {\n      const request = new EmailTokenRequest();\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      try {\n        this.formPromise = this.apiService.postEmailToken(request);\n        await this.formPromise;\n        this.tokenSent = true;\n      } catch (e) {\n        this.logService.error(e);\n      }\n    } else {\n      const request = new EmailRequest();\n      request.token = this.token;\n      request.newEmail = this.newEmail;\n      request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n      const kdf = await this.stateService.getKdfType();\n      const kdfConfig = await this.stateService.getKdfConfig();\n      const newKey = await this.cryptoService.makeKey(\n        this.masterPassword,\n        this.newEmail,\n        kdf,\n        kdfConfig\n      );\n      request.newMasterPasswordHash = await this.cryptoService.hashPassword(\n        this.masterPassword,\n        newKey\n      );\n      const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n      request.key = newEncKey[1].encryptedString;\n      try {\n        this.formPromise = this.apiService.postEmail(request);\n        await this.formPromise;\n        this.reset();\n        this.platformUtilsService.showToast(\n          \"success\",\n          this.i18nService.t(\"emailChanged\"),\n          this.i18nService.t(\"logBackIn\")\n        );\n        this.messagingService.send(\"logout\");\n      } catch (e) {\n        this.logService.error(e);\n      }\n    }\n  }\n\n  reset() {\n    this.token = this.newEmail = this.masterPassword = null;\n    this.tokenSent = false;\n  }\n}\n","export class UpdateProfileRequest {\n  name: string;\n  masterPasswordHint: string;\n  culture = \"en-US\"; // deprecated\n\n  constructor(name: string, masterPasswordHint: string) {\n    this.name = name;\n    this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\n@Component({\n  selector: \"selectable-avatar\",\n  template: `<span\n    [title]=\"title\"\n    (click)=\"onFire()\"\n    (keyup.enter)=\"onFire()\"\n    tabindex=\"0\"\n    [ngClass]=\"classList\"\n  >\n    <bit-avatar\n      appStopClick\n      [text]=\"text\"\n      size=\"xlarge\"\n      [text]=\"text\"\n      [color]=\"color\"\n      [border]=\"false\"\n      [id]=\"id\"\n      [border]=\"border\"\n      [title]=\"title\"\n    >\n    </bit-avatar>\n  </span>`,\n})\nexport class SelectableAvatarComponent {\n  @Input() id: string;\n  @Input() text: string;\n  @Input() title: string;\n  @Input() color: string;\n  @Input() border = false;\n  @Input() selected = false;\n  @Output() select = new EventEmitter<string>();\n\n  onFire() {\n    this.select.emit(this.color);\n  }\n\n  get classList() {\n    return [\"tw-rounded-full tw-inline-block\"]\n      .concat([\"tw-cursor-pointer\", \"tw-outline\", \"tw-outline-solid\", \"tw-outline-offset-1\"])\n      .concat(\n        this.selected\n          ? [\"tw-outline-[3px]\", \"tw-outline-primary-500\"]\n          : [\n              \"tw-outline-0\",\n              \"hover:tw-outline-1\",\n              \"hover:tw-outline-primary-300\",\n              \"focus:tw-outline-2\",\n              \"focus:tw-outline-primary-500\",\n            ]\n      );\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable tailwindcss/no-custom-classname -->\n<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"customizeTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable tw-w-[600px] tw-max-w-none\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h2 class=\"modal-title\" id=\"customizeTitle\">{{ \"customizeAvatar\" | i18n }}</h2>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"card-body text-center\" *ngIf=\"loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          {{ \"loading\" | i18n }}\n        </div>\n        <app-callout type=\"error\" *ngIf=\"error\">\n          {{ error }}\n        </app-callout>\n        <p class=\"tw-text-lg\">{{ \"pickAnAvatarColor\" | i18n }}</p>\n        <div class=\"tw-flex tw-flex-wrap tw-justify-center tw-gap-8\">\n          <ng-container *ngFor=\"let c of defaultColorPalette\">\n            <selectable-avatar\n              appStopClick\n              (select)=\"setSelection(c.color)\"\n              [selected]=\"c.selected\"\n              [title]=\"c.name\"\n              text=\"{{ profile | userName }}\"\n              [color]=\"c.color\"\n              [border]=\"true\"\n            >\n            </selectable-avatar>\n          </ng-container>\n          <span>\n            <span\n              [tabIndex]=\"0\"\n              (keyup.enter)=\"showCustomPicker()\"\n              (click)=\"showCustomPicker()\"\n              title=\"{{ 'customColor' | i18n }}\"\n              [ngClass]=\"{\n                '!tw-outline-[3px] tw-outline-primary-500 hover:tw-outline-[3px] hover:tw-outline-primary-500':\n                  customColorSelected\n              }\"\n              class=\"tw-outline-solid tw-bg-white tw-relative tw-flex tw-h-24 tw-w-24 tw-cursor-pointer tw-place-content-center tw-content-center tw-justify-center tw-rounded-full tw-border tw-border-solid tw-border-secondary-500 tw-outline tw-outline-0 tw-outline-offset-1 hover:tw-outline-1 hover:tw-outline-primary-300 focus:tw-outline-2 focus:tw-outline-primary-500\"\n              [style.background-color]=\"customColor$ | async\"\n            >\n              <i\n                [style.color]=\"customTextColor$ | async\"\n                class=\"bwi bwi-pencil tw-m-auto tw-text-3xl\"\n              ></i>\n              <input\n                tabindex=\"-1\"\n                class=\"tw-absolute tw-right-0 tw-bottom-0 tw-h-px tw-w-px tw-border-none tw-bg-transparent tw-opacity-0\"\n                #colorPicker\n                type=\"color\"\n                [ngModel]=\"customColor$ | async\"\n                (ngModelChange)=\"customColor$.next($event)\"\n              />\n            </span>\n          </span>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary btn-submit\"\n          [disabled]=\"loading\"\n          (click)=\"submit()\"\n        >\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { BehaviorSubject, debounceTime, Subject, takeUntil } from \"rxjs\";\n\nimport { AvatarUpdateService } from \"@bitwarden/common/abstractions/account/avatar-update.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profile.response\";\n\n@Component({\n  selector: \"app-change-avatar\",\n  templateUrl: \"change-avatar.component.html\",\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ChangeAvatarComponent implements OnInit, OnDestroy {\n  @Input() profile: ProfileResponse;\n\n  @Output() changeColor: EventEmitter<string | null> = new EventEmitter();\n  @Output() onSaved = new EventEmitter();\n\n  @ViewChild(\"colorPicker\") colorPickerElement: ElementRef<HTMLElement>;\n\n  loading = false;\n  error: string;\n  defaultColorPalette: NamedAvatarColor[] = [\n    { name: \"brightBlue\", color: \"#16cbfc\" },\n    { name: \"green\", color: \"#94cc4b\" },\n    { name: \"orange\", color: \"#ffb520\" },\n    { name: \"lavender\", color: \"#e5beed\" },\n    { name: \"yellow\", color: \"#fcff41\" },\n    { name: \"indigo\", color: \"#acbdf7\" },\n    { name: \"teal\", color: \"#8ecdc5\" },\n    { name: \"salmon\", color: \"#ffa3a3\" },\n    { name: \"pink\", color: \"#ffa2d4\" },\n  ];\n  customColorSelected = false;\n  currentSelection: string;\n\n  protected customColor$ = new BehaviorSubject<string | null>(null);\n  protected customTextColor$ = new BehaviorSubject<string>(\"#000000\");\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private accountUpdateService: AvatarUpdateService\n  ) {}\n\n  async ngOnInit() {\n    //localize the default colors\n    this.defaultColorPalette.forEach((c) => (c.name = this.i18nService.t(c.name)));\n\n    this.customColor$\n      .pipe(debounceTime(200), takeUntil(this.destroy$))\n      .subscribe((color: string | null) => {\n        if (color == null) {\n          return;\n        }\n        this.customTextColor$.next(Utils.pickTextColorBasedOnBgColor(color));\n        this.customColorSelected = true;\n        this.currentSelection = color;\n      });\n\n    this.setSelection(await this.accountUpdateService.loadColorFromState());\n  }\n\n  async showCustomPicker() {\n    this.customColorSelected = true;\n    this.colorPickerElement.nativeElement.click();\n    this.setSelection(this.customColor$.value);\n  }\n\n  async generateAvatarColor() {\n    Utils.stringToColor(this.profile.name.toString());\n  }\n\n  async submit() {\n    try {\n      if (Utils.validateHexColor(this.currentSelection) || this.currentSelection == null) {\n        await this.accountUpdateService.pushUpdate(this.currentSelection);\n        this.changeColor.emit(this.currentSelection);\n        this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"avatarUpdated\"));\n      } else {\n        this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n      }\n    } catch (e) {\n      this.logService.error(e);\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  async ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async setSelection(color: string | null) {\n    this.defaultColorPalette.filter((x) => x.selected).forEach((c) => (c.selected = false));\n\n    if (color == null) {\n      return;\n    }\n\n    color = color.toLowerCase();\n\n    this.customColorSelected = false;\n    //Allow for toggle\n    if (this.currentSelection === color) {\n      this.currentSelection = null;\n    } else {\n      const selectedColorIndex = this.defaultColorPalette.findIndex((c) => c.color === color);\n      if (selectedColorIndex !== -1) {\n        this.defaultColorPalette[selectedColorIndex].selected = true;\n        this.currentSelection = color;\n      } else {\n        this.customColor$.next(color);\n      }\n    }\n  }\n}\n\nexport class NamedAvatarColor {\n  name: string;\n  color: string;\n  selected? = false;\n}\n","<div *ngIf=\"loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</div>\n<form\n  *ngIf=\"profile && !loading\"\n  #form\n  (ngSubmit)=\"submit()\"\n  [appApiAction]=\"formPromise\"\n  ngNativeValidate\n>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\" />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">{{ \"email\" | i18n }}</label>\n        <input\n          id=\"email\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Email\"\n          [(ngModel)]=\"profile.email\"\n          readonly\n        />\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"mb-3\">\n        <dynamic-avatar text=\"{{ profile | userName }}\" [id]=\"profile.id\" [size]=\"'large'\">\n        </dynamic-avatar>\n        <button\n          type=\"button\"\n          class=\"btn btn-outline-secondary tw-ml-3.5\"\n          appStopClick\n          appStopProp\n          (click)=\"openChangeAvatar()\"\n        >\n          <i class=\"bwi bwi-lg bwi-pencil-square\" aria-hidden=\"true\"></i>\n          Customize\n        </button>\n      </div>\n      <hr />\n      <p *ngIf=\"fingerprint\">\n        {{ \"yourAccountsFingerprint\" | i18n }}:\n        <a\n          href=\"https://bitwarden.com/help/fingerprint-phrase/\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i></a\n        ><br />\n        <code>{{ fingerprint }}</code>\n      </p>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n<ng-template #avatarModalTemplate></ng-template>\n","import { ViewChild, ViewContainerRef, Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/auth/abstractions/key-connector.service\";\nimport { UpdateProfileRequest } from \"@bitwarden/common/auth/models/request/update-profile.request\";\nimport { ProfileResponse } from \"@bitwarden/common/models/response/profile.response\";\n\nimport { ChangeAvatarComponent } from \"./change-avatar.component\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"profile.component.html\",\n})\nexport class ProfileComponent implements OnInit, OnDestroy {\n  loading = true;\n  profile: ProfileResponse;\n  fingerprint: string;\n\n  formPromise: Promise<any>;\n  @ViewChild(\"avatarModalTemplate\", { read: ViewContainerRef, static: true })\n  avatarModalRef: ViewContainerRef;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private logService: LogService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService\n  ) {}\n\n  async ngOnInit() {\n    this.profile = await this.apiService.getProfile();\n    this.loading = false;\n    const fingerprint = await this.cryptoService.getFingerprint(\n      await this.stateService.getUserId()\n    );\n    if (fingerprint != null) {\n      this.fingerprint = fingerprint.join(\"-\");\n    }\n  }\n\n  async ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async openChangeAvatar() {\n    const modalOpened = await this.modalService.openViewRef(\n      ChangeAvatarComponent,\n      this.avatarModalRef,\n      (modal) => {\n        modal.profile = this.profile;\n        modal.changeColor.pipe(takeUntil(this.destroy$)).subscribe(() => {\n          modalOpened[0].close();\n        });\n      }\n    );\n  }\n\n  async submit() {\n    try {\n      const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n      this.formPromise = this.apiService.putProfile(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"accountUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<div class=\"page-header\">\n  <h1>{{ \"myAccount\" | i18n }}</h1>\n</div>\n<app-profile></app-profile>\n<ng-container *ngIf=\"showChangeEmail\">\n  <div class=\"secondary-header\">\n    <h1>{{ \"changeEmail\" | i18n }}</h1>\n  </div>\n  <app-change-email></app-change-email>\n</ng-container>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n  <h1>{{ \"dangerZone\" | i18n }}</h1>\n</div>\n<div class=\"card border-danger\">\n  <div class=\"card-body\">\n    <p>{{ \"dangerZoneDesc\" | i18n }}</p>\n    <button bitButton buttonType=\"danger\" (click)=\"deauthorizeSessions()\">\n      {{ \"deauthorizeSessions\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"purgeVault()\">\n      {{ \"purgeVault\" | i18n }}\n    </button>\n    <button bitButton buttonType=\"danger\" (click)=\"deleteAccount()\">\n      {{ \"deleteAccount\" | i18n }}\n    </button>\n  </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/auth/abstractions/key-connector.service\";\n\nimport { DeauthorizeSessionsComponent } from \"../../auth/settings/deauthorize-sessions.component\";\n\nimport { DeleteAccountComponent } from \"./delete-account.component\";\nimport { PurgeVaultComponent } from \"./purge-vault.component\";\n\n@Component({\n  selector: \"app-account\",\n  templateUrl: \"account.component.html\",\n})\nexport class AccountComponent {\n  @ViewChild(\"deauthorizeSessionsTemplate\", { read: ViewContainerRef, static: true })\n  deauthModalRef: ViewContainerRef;\n  @ViewChild(\"purgeVaultTemplate\", { read: ViewContainerRef, static: true })\n  purgeModalRef: ViewContainerRef;\n  @ViewChild(\"deleteAccountTemplate\", { read: ViewContainerRef, static: true })\n  deleteModalRef: ViewContainerRef;\n\n  showChangeEmail = true;\n\n  constructor(\n    private modalService: ModalService,\n    private apiService: ApiService,\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeEmail = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async deauthorizeSessions() {\n    await this.modalService.openViewRef(DeauthorizeSessionsComponent, this.deauthModalRef);\n  }\n\n  async purgeVault() {\n    await this.modalService.openViewRef(PurgeVaultComponent, this.purgeModalRef);\n  }\n\n  async deleteAccount() {\n    await this.modalService.openViewRef(DeleteAccountComponent, this.deleteModalRef);\n  }\n}\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { PlanType } from \"@bitwarden/common/enums/planType\";\nimport { ProductType } from \"@bitwarden/common/enums/productType\";\n\nimport { OrganizationPlansComponent } from \"./organization-plans.component\";\n\n@Component({\n  selector: \"app-create-organization\",\n  templateUrl: \"create-organization.component.html\",\n})\n// eslint-disable-next-line rxjs-angular/prefer-takeuntil\nexport class CreateOrganizationComponent implements OnInit {\n  @ViewChild(OrganizationPlansComponent, { static: true })\n  orgPlansComponent: OrganizationPlansComponent;\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      if (qParams.plan === \"families\") {\n        this.orgPlansComponent.plan = PlanType.FamiliesAnnually;\n        this.orgPlansComponent.product = ProductType.Families;\n      } else if (qParams.plan === \"teams\") {\n        this.orgPlansComponent.plan = PlanType.TeamsAnnually;\n        this.orgPlansComponent.product = ProductType.Teams;\n      } else if (qParams.plan === \"enterprise\") {\n        this.orgPlansComponent.plan = PlanType.EnterpriseAnnually;\n        this.orgPlansComponent.product = ProductType.Enterprise;\n      }\n    });\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"page-header\">\n        <h1>{{ \"newOrganization\" | i18n }}</h1>\n      </div>\n      <p>{{ \"newOrganizationDesc\" | i18n }}</p>\n      <app-organization-plans></app-organization-plans>\n    </div>\n  </div>\n</div>\n","export class UpdateDomainsRequest {\n  equivalentDomains: string[][];\n  excludedGlobalEquivalentDomains: number[];\n}\n","<div class=\"page-header\">\n  <h1>{{ \"domainRules\" | i18n }}</h1>\n</div>\n<p>{{ \"domainRulesDesc\" | i18n }}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n  <h2>{{ \"customEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <ng-container *ngIf=\"!loading\">\n    <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n      <div class=\"flex-fill\">\n        <label for=\"customDomain_{{ i }}\" class=\"sr-only\">{{\n          \"customDomainX\" | i18n: i + 1\n        }}</label>\n        <textarea\n          class=\"form-control\"\n          name=\"CustomDomain[{{ i }}]\"\n          id=\"customDomain_{{ i }}\"\n          [(ngModel)]=\"custom[i]\"\n          placeholder=\"{{ 'ex' | i18n }} google.com, gmail.com\"\n          required\n        ></textarea>\n      </div>\n      <button\n        type=\"button\"\n        class=\"btn btn-link text-danger ml-2\"\n        (click)=\"remove(i)\"\n        appA11yTitle=\"{{ 'remove' | i18n }}\"\n      >\n        <i class=\"bwi bwi-minus-circle bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n    <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i> {{ \"newCustomDomain\" | i18n }}\n    </button>\n    <small class=\"text-muted d-block mb-3\">{{ \"newCustomDomainDesc\" | i18n }}</small>\n  </ng-container>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n  <h2 class=\"spaced-header\">{{ \"globalEqDomains\" | i18n }}</h2>\n  <p *ngIf=\"loading\">\n    <i\n      class=\"bwi bwi-spinner bwi-spin text-muted\"\n      title=\"{{ 'loading' | i18n }}\"\n      aria-hidden=\"true\"\n    ></i>\n    <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n  </p>\n  <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n    <tbody>\n      <tr *ngFor=\"let d of global\">\n        <td [ngClass]=\"{ 'table-list-strike': d.excluded }\">{{ d.domains }}</td>\n        <td class=\"table-list-options\">\n          <div class=\"dropdown\" appListDropdown>\n            <button\n              class=\"btn btn-outline-secondary dropdown-toggle\"\n              type=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n              appA11yTitle=\"{{ 'options' | i18n }}\"\n            >\n              <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n            </button>\n            <div class=\"dropdown-menu dropdown-menu-right\">\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"!d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-close\" aria-hidden=\"true\"></i>\n                {{ \"exclude\" | i18n }}\n              </a>\n              <a\n                class=\"dropdown-item\"\n                href=\"#\"\n                appStopClick\n                (click)=\"toggleExcluded(d)\"\n                *ngIf=\"d.excluded\"\n              >\n                <i class=\"bwi bwi-fw bwi-plus\" aria-hidden=\"true\"></i>\n                {{ \"include\" | i18n }}\n              </a>\n              <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                <i class=\"bwi bwi-fw bwi-cut\" aria-hidden=\"true\"></i>\n                {{ \"customize\" | i18n }}\n              </a>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n    <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n    <span>{{ \"save\" | i18n }}</span>\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { UpdateDomainsRequest } from \"@bitwarden/common/models/request/update-domains.request\";\n\n@Component({\n  selector: \"app-domain-rules\",\n  templateUrl: \"domain-rules.component.html\",\n})\nexport class DomainRulesComponent implements OnInit {\n  loading = true;\n  custom: string[] = [];\n  global: any[] = [];\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    const response = await this.apiService.getSettingsDomains();\n    this.loading = false;\n    if (response.equivalentDomains != null) {\n      this.custom = response.equivalentDomains.map((d) => d.join(\", \"));\n    }\n    if (response.globalEquivalentDomains != null) {\n      this.global = response.globalEquivalentDomains.map((d) => {\n        return {\n          domains: d.domains.join(\", \"),\n          excluded: d.excluded,\n          key: d.type,\n        };\n      });\n    }\n  }\n\n  toggleExcluded(globalDomain: any) {\n    globalDomain.excluded = !globalDomain.excluded;\n  }\n\n  customize(globalDomain: any) {\n    globalDomain.excluded = true;\n    this.custom.push(globalDomain.domains);\n  }\n\n  remove(index: number) {\n    this.custom.splice(index, 1);\n  }\n\n  add() {\n    this.custom.push(\"\");\n  }\n\n  async submit() {\n    const request = new UpdateDomainsRequest();\n    request.excludedGlobalEquivalentDomains = this.global\n      .filter((d) => d.excluded)\n      .map((d) => d.key);\n    if (request.excludedGlobalEquivalentDomains.length === 0) {\n      request.excludedGlobalEquivalentDomains = null;\n    }\n    request.equivalentDomains = this.custom\n      .filter((d) => d != null && d.trim() !== \"\")\n      .map((d) => d.split(\",\").map((d2) => d2.trim()));\n    if (request.equivalentDomains.length === 0) {\n      request.equivalentDomains = null;\n    }\n\n    try {\n      this.formPromise = this.apiService.putSettingsDomains(request);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"domainsUpdated\"));\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  indexTrackBy(index: number, obj: any): any {\n    return index;\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit } from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  ValidationErrors,\n  Validator,\n} from \"@angular/forms\";\nimport { combineLatestWith, Subject, takeUntil } from \"rxjs\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { PolicyType } from \"@bitwarden/common/enums/policyType\";\nimport { Policy } from \"@bitwarden/common/models/domain/policy\";\n\n@Directive()\nexport class VaultTimeoutInputComponent\n  implements ControlValueAccessor, Validator, OnInit, OnDestroy\n{\n  get showCustom() {\n    return this.form.get(\"vaultTimeout\").value === VaultTimeoutInputComponent.CUSTOM_VALUE;\n  }\n\n  get exceedsMinimumTimout(): boolean {\n    return (\n      !this.showCustom || this.customTimeInMinutes() > VaultTimeoutInputComponent.MIN_CUSTOM_MINUTES\n    );\n  }\n\n  static CUSTOM_VALUE = -100;\n  static MIN_CUSTOM_MINUTES = 0;\n\n  form = this.formBuilder.group({\n    vaultTimeout: [null],\n    custom: this.formBuilder.group({\n      hours: [null],\n      minutes: [null],\n    }),\n  });\n\n  @Input() vaultTimeouts: { name: string; value: number }[];\n  vaultTimeoutPolicy: Policy;\n  vaultTimeoutPolicyHours: number;\n  vaultTimeoutPolicyMinutes: number;\n\n  private onChange: (vaultTimeout: number) => void;\n  private validatorChange: () => void;\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private policyService: PolicyService,\n    private i18nService: I18nService\n  ) {}\n\n  async ngOnInit() {\n    this.policyService\n      .policyAppliesToActiveUser$(PolicyType.MaximumVaultTimeout)\n      .pipe(combineLatestWith(this.policyService.policies$), takeUntil(this.destroy$))\n      .subscribe(([policyAppliesToActiveUser, policies]) => {\n        if (policyAppliesToActiveUser) {\n          const vaultTimeoutPolicy = policies.find(\n            (policy) => policy.type === PolicyType.MaximumVaultTimeout && policy.enabled\n          );\n\n          this.vaultTimeoutPolicy = vaultTimeoutPolicy;\n          this.applyVaultTimeoutPolicy();\n        }\n      });\n\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.form.valueChanges.subscribe(async (value) => {\n      this.onChange(this.getVaultTimeout(value));\n    });\n\n    // Assign the previous value to the custom fields\n    this.form.get(\"vaultTimeout\").valueChanges.subscribe((value) => {\n      if (value !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n        return;\n      }\n\n      const current = Math.max(this.form.value.vaultTimeout, 0);\n      this.form.patchValue({\n        custom: {\n          hours: Math.floor(current / 60),\n          minutes: current % 60,\n        },\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  ngOnChanges() {\n    this.vaultTimeouts.push({\n      name: this.i18nService.t(\"custom\"),\n      value: VaultTimeoutInputComponent.CUSTOM_VALUE,\n    });\n  }\n\n  getVaultTimeout(value: any) {\n    if (value.vaultTimeout !== VaultTimeoutInputComponent.CUSTOM_VALUE) {\n      return value.vaultTimeout;\n    }\n\n    return value.custom.hours * 60 + value.custom.minutes;\n  }\n\n  writeValue(value: number): void {\n    if (value == null) {\n      return;\n    }\n\n    if (this.vaultTimeouts.every((p) => p.value !== value)) {\n      this.form.setValue({\n        vaultTimeout: VaultTimeoutInputComponent.CUSTOM_VALUE,\n        custom: {\n          hours: Math.floor(value / 60),\n          minutes: value % 60,\n        },\n      });\n      return;\n    }\n\n    this.form.patchValue({\n      vaultTimeout: value,\n    });\n  }\n\n  registerOnChange(onChange: any): void {\n    this.onChange = onChange;\n  }\n\n  registerOnTouched(onTouched: any): void {\n    // Empty\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Empty\n  }\n\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.vaultTimeoutPolicy && this.vaultTimeoutPolicy?.data?.minutes < control.value) {\n      return { policyError: true };\n    }\n\n    if (!this.exceedsMinimumTimout) {\n      return { minTimeoutError: true };\n    }\n\n    return null;\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this.validatorChange = fn;\n  }\n\n  private customTimeInMinutes() {\n    return this.form.value.custom.hours * 60 + this.form.value.custom.minutes;\n  }\n\n  private applyVaultTimeoutPolicy() {\n    this.vaultTimeoutPolicyHours = Math.floor(this.vaultTimeoutPolicy.data.minutes / 60);\n    this.vaultTimeoutPolicyMinutes = this.vaultTimeoutPolicy.data.minutes % 60;\n\n    this.vaultTimeouts = this.vaultTimeouts.filter(\n      (t) =>\n        t.value <= this.vaultTimeoutPolicy.data.minutes &&\n        (t.value > 0 || t.value === VaultTimeoutInputComponent.CUSTOM_VALUE) &&\n        t.value != null\n    );\n    this.validatorChange();\n  }\n}\n","<app-callout type=\"info\" *ngIf=\"vaultTimeoutPolicy\">\n  {{ \"vaultTimeoutPolicyInEffect\" | i18n: vaultTimeoutPolicyHours:vaultTimeoutPolicyMinutes }}\n</app-callout>\n\n<div [formGroup]=\"form\">\n  <div class=\"form-group\">\n    <label for=\"vaultTimeout\">{{ \"vaultTimeout\" | i18n }}</label>\n    <select\n      id=\"vaultTimeout\"\n      name=\"VaultTimeout\"\n      formControlName=\"vaultTimeout\"\n      class=\"form-control\"\n    >\n      <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{ o.name }}</option>\n    </select>\n    <small class=\"form-text text-muted\">{{ \"vaultTimeoutDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\" *ngIf=\"showCustom\" formGroupName=\"custom\">\n    <label for=\"customVaultTimeout\">{{ \"customVaultTimeout\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"col-6\">\n        <input\n          id=\"hours\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"hours\"\n          formControlName=\"hours\"\n        />\n        <small>{{ \"hours\" | i18n }}</small>\n      </div>\n      <div class=\"col-6\">\n        <input\n          id=\"minutes\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          name=\"minutes\"\n          formControlName=\"minutes\"\n        />\n        <small>{{ \"minutes\" | i18n }}</small>\n      </div>\n    </div>\n\n    <small *ngIf=\"!exceedsMinimumTimout\" class=\"tw-text-danger\">\n      <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i> {{ \"vaultCustomTimeoutMinimum\" | i18n }}\n    </small>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { VaultTimeoutInputComponent as VaultTimeoutInputComponentBase } from \"@bitwarden/angular/components/settings/vault-timeout-input.component\";\n\n@Component({\n  selector: \"app-vault-timeout-input\",\n  templateUrl: \"vault-timeout-input.component.html\",\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n    {\n      provide: NG_VALIDATORS,\n      multi: true,\n      useExisting: VaultTimeoutInputComponent,\n    },\n  ],\n})\nexport class VaultTimeoutInputComponent extends VaultTimeoutInputComponentBase {}\n","<div class=\"page-header\">\n  <h1>{{ \"preferences\" | i18n }}</h1>\n</div>\n<p>{{ \"preferencesDesc\" | i18n }}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <app-vault-timeout-input\n        [vaultTimeouts]=\"vaultTimeouts\"\n        [formControl]=\"vaultTimeout\"\n        ngDefaultControl\n      >\n      </app-vault-timeout-input>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label>{{ \"vaultTimeoutAction\" | i18n }}</label>\n    <div class=\"form-check form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLock\"\n        value=\"lock\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n        {{ \"lock\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLockDesc\" | i18n }}</small>\n      </label>\n    </div>\n    <div class=\"form-check mt-2 form-check-block\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        name=\"vaultTimeoutAction\"\n        id=\"vaultTimeoutActionLogOut\"\n        value=\"logOut\"\n        [(ngModel)]=\"vaultTimeoutAction\"\n        (ngModelChange)=\"vaultTimeoutActionChanged($event)\"\n      />\n      <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n        {{ \"logOut\" | i18n }}\n        <small>{{ \"vaultTimeoutActionLogOutDesc\" | i18n }}</small>\n      </label>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <div class=\"d-flex\">\n          <label for=\"locale\">{{ \"language\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/localization/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n        </div>\n        <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n          <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"languageDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFavicons\"\n        name=\"enableFavicons\"\n        [(ngModel)]=\"enableFavicons\"\n      />\n      <label class=\"form-check-label\" for=\"enableFavicons\">\n        {{ \"enableFavicon\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/website-icons/\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"faviconDesc\" | i18n }}</small>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"enableFullWidth\"\n        name=\"enableFullWidth\"\n        [(ngModel)]=\"enableFullWidth\"\n      />\n      <label class=\"form-check-label\" for=\"enableFullWidth\">\n        {{ \"enableFullWidth\" | i18n }}\n      </label>\n    </div>\n    <small class=\"form-text text-muted\">{{ \"enableFullWidthDesc\" | i18n }}</small>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"theme\">{{ \"theme\" | i18n }}</label>\n        <select id=\"theme\" name=\"theme\" [(ngModel)]=\"theme\" class=\"form-control\">\n          <option *ngFor=\"let o of themeOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <small class=\"form-text text-muted\">{{ \"themeDesc\" | i18n }}</small>\n      </div>\n    </div>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">\n    {{ \"save\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\nimport { UntypedFormControl } from \"@angular/forms\";\n\nimport { AbstractThemingService } from \"@bitwarden/angular/services/theming/theming.service.abstraction\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { VaultTimeoutSettingsService } from \"@bitwarden/common/abstractions/vaultTimeout/vaultTimeoutSettings.service\";\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Component({\n  selector: \"app-preferences\",\n  templateUrl: \"preferences.component.html\",\n})\nexport class PreferencesComponent implements OnInit {\n  vaultTimeoutAction = \"lock\";\n  enableFavicons: boolean;\n  enableFullWidth: boolean;\n  theme: ThemeType;\n  locale: string;\n  vaultTimeouts: { name: string; value: number }[];\n  localeOptions: any[];\n  themeOptions: any[];\n\n  vaultTimeout: UntypedFormControl = new UntypedFormControl(null);\n\n  private startingLocale: string;\n  private startingTheme: ThemeType;\n\n  constructor(\n    private stateService: StateService,\n    private i18nService: I18nService,\n    private vaultTimeoutSettingsService: VaultTimeoutSettingsService,\n    private platformUtilsService: PlatformUtilsService,\n    private messagingService: MessagingService,\n    private themingService: AbstractThemingService\n  ) {\n    this.vaultTimeouts = [\n      { name: i18nService.t(\"oneMinute\"), value: 1 },\n      { name: i18nService.t(\"fiveMinutes\"), value: 5 },\n      { name: i18nService.t(\"fifteenMinutes\"), value: 15 },\n      { name: i18nService.t(\"thirtyMinutes\"), value: 30 },\n      { name: i18nService.t(\"oneHour\"), value: 60 },\n      { name: i18nService.t(\"fourHours\"), value: 240 },\n      { name: i18nService.t(\"onRefresh\"), value: -1 },\n    ];\n    if (this.platformUtilsService.isDev()) {\n      this.vaultTimeouts.push({ name: i18nService.t(\"never\"), value: null });\n    }\n\n    const localeOptions: any[] = [];\n    i18nService.supportedTranslationLocales.forEach((locale) => {\n      let name = locale;\n      if (i18nService.localeNames.has(locale)) {\n        name += \" - \" + i18nService.localeNames.get(locale);\n      }\n      localeOptions.push({ name: name, value: locale });\n    });\n    localeOptions.sort(Utils.getSortFunction(i18nService, \"name\"));\n    localeOptions.splice(0, 0, { name: i18nService.t(\"default\"), value: null });\n    this.localeOptions = localeOptions;\n    this.themeOptions = [\n      { name: i18nService.t(\"themeLight\"), value: ThemeType.Light },\n      { name: i18nService.t(\"themeDark\"), value: ThemeType.Dark },\n      { name: i18nService.t(\"themeSystem\"), value: ThemeType.System },\n    ];\n  }\n\n  async ngOnInit() {\n    this.vaultTimeout.setValue(await this.vaultTimeoutSettingsService.getVaultTimeout());\n    this.vaultTimeoutAction = await this.stateService.getVaultTimeoutAction();\n    this.enableFavicons = !(await this.stateService.getDisableFavicon());\n    this.enableFullWidth = await this.stateService.getEnableFullWidth();\n\n    this.locale = (await this.stateService.getLocale()) ?? null;\n    this.startingLocale = this.locale;\n\n    this.theme = await this.stateService.getTheme();\n    this.startingTheme = this.theme;\n  }\n\n  async submit() {\n    if (!this.vaultTimeout.valid) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        null,\n        this.i18nService.t(\"vaultTimeoutRangeError\")\n      );\n      return;\n    }\n\n    await this.vaultTimeoutSettingsService.setVaultTimeoutOptions(\n      this.vaultTimeout.value,\n      this.vaultTimeoutAction\n    );\n    await this.stateService.setDisableFavicon(!this.enableFavicons);\n    await this.stateService.setEnableFullWidth(this.enableFullWidth);\n    this.messagingService.send(\"setFullWidth\");\n    if (this.theme !== this.startingTheme) {\n      await this.themingService.updateConfiguredTheme(this.theme);\n      this.startingTheme = this.theme;\n    }\n    await this.stateService.setLocale(this.locale);\n    if (this.locale !== this.startingLocale) {\n      window.location.reload();\n    } else {\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"preferencesUpdated\")\n      );\n    }\n  }\n\n  async vaultTimeoutActionChanged(newValue: string) {\n    if (newValue === \"logOut\") {\n      const confirmed = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmation\"),\n        this.i18nService.t(\"vaultTimeoutLogOutConfirmationTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"cancel\"),\n        \"warning\"\n      );\n      if (!confirmed) {\n        this.vaultTimeoutAction = \"lock\";\n        return;\n      }\n    }\n    this.vaultTimeoutAction = newValue;\n  }\n}\n","import { Send } from \"../domain/send\";\n\nimport { SendRequest } from \"./send.request\";\n\nexport class SendWithIdRequest extends SendRequest {\n  id: string;\n\n  constructor(send: Send) {\n    super(send);\n    this.id = send.id;\n  }\n}\n","import { CipherWithIdRequest } from \"../../vault/models/request/cipher-with-id.request\";\nimport { FolderWithIdRequest } from \"../../vault/models/request/folder-with-id.request\";\n\nimport { SendWithIdRequest } from \"./send-with-id.request\";\n\nexport class UpdateKeyRequest {\n  ciphers: CipherWithIdRequest[] = [];\n  folders: FolderWithIdRequest[] = [];\n  sends: SendWithIdRequest[] = [];\n  masterPasswordHash: string;\n  privateKey: string;\n  key: string;\n}\n","import { Folder } from \"../domain/folder\";\n\nimport { FolderRequest } from \"./folder.request\";\n\nexport class FolderWithIdRequest extends FolderRequest {\n  id: string;\n\n  constructor(folder: Folder) {\n    super(folder);\n    this.id = folder.id;\n  }\n}\n","<div class=\"tabbed-header\">\n  <h1>{{ \"changeMasterPassword\" | i18n }}</h1>\n</div>\n\n<bit-callout type=\"warning\">{{ \"loggedOutWarning\" | i18n }}</bit-callout>\n<app-callout\n  type=\"info\"\n  [enforcedPolicyOptions]=\"enforcedPolicyOptions\"\n  *ngIf=\"enforcedPolicyOptions\"\n>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"currentMasterPassword\">{{ \"currentMasterPass\" | i18n }}</label>\n        <input\n          id=\"currentMasterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"currentMasterPassword\"\n          required\n          appInputVerbatim\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"newMasterPassword\">{{ \"newMasterPass\" | i18n }}</label>\n        <input\n          id=\"newMasterPassword\"\n          type=\"password\"\n          name=\"NewMasterPasswordHash\"\n          class=\"form-control mb-1\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n        <bit-hint>\n          <span class=\"tw-font-semibold\">{{ \"important\" | i18n }}</span>\n          {{ \"masterPassImportant\" | i18n }} {{ characterMinimumMessage }}\n        </bit-hint>\n        <app-password-strength\n          [password]=\"masterPassword\"\n          [email]=\"email\"\n          [showText]=\"true\"\n          (passwordStrengthResult)=\"getStrengthResult($event)\"\n        >\n        </app-password-strength>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group\">\n        <label for=\"masterPasswordRetype\">{{ \"confirmNewMasterPass\" | i18n }}</label>\n        <input\n          id=\"masterPasswordRetype\"\n          type=\"password\"\n          name=\"MasterPasswordRetype\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPasswordRetype\"\n          required\n          appInputVerbatim\n          autocomplete=\"new-password\"\n        />\n      </div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"checkForBreaches\"\n        name=\"checkForBreaches\"\n        [(ngModel)]=\"checkForBreaches\"\n      />\n      <label class=\"form-check-label\" for=\"checkForBreaches\">\n        {{ \"checkForBreaches\" | i18n }}\n      </label>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <div class=\"form-check\">\n      <input\n        class=\"form-check-input\"\n        type=\"checkbox\"\n        id=\"rotateEncKey\"\n        name=\"RotateEncKey\"\n        [(ngModel)]=\"rotateEncKey\"\n        (change)=\"rotateEncKeyClicked()\"\n      />\n      <label class=\"form-check-label\" for=\"rotateEncKey\">\n        {{ \"rotateAccountEncKey\" | i18n }}\n      </label>\n      <a\n        href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"masterPasswordHint\">{{ \"masterPassHintLabel\" | i18n }}</label>\n    <input\n      id=\"masterPasswordHint\"\n      class=\"form-control\"\n      maxlength=\"50\"\n      type=\"text\"\n      name=\"MasterPasswordHint\"\n      [(ngModel)]=\"masterPasswordHint\"\n    />\n  </div>\n  <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n    {{ \"changeMasterPassword\" | i18n }}\n  </button>\n</form>\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from \"@bitwarden/angular/auth/components/change-password.component\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { AuditService } from \"@bitwarden/common/abstractions/audit.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationUserService } from \"@bitwarden/common/abstractions/organization-user/organization-user.service\";\nimport { OrganizationUserResetPasswordEnrollmentRequest } from \"@bitwarden/common/abstractions/organization-user/requests\";\nimport { OrganizationApiServiceAbstraction } from \"@bitwarden/common/abstractions/organization/organization-api.service.abstraction\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PolicyService } from \"@bitwarden/common/abstractions/policy/policy.service.abstraction\";\nimport { SendService } from \"@bitwarden/common/abstractions/send.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/auth/abstractions/key-connector.service\";\nimport { EmergencyAccessStatusType } from \"@bitwarden/common/auth/enums/emergency-access-status-type\";\nimport { EmergencyAccessUpdateRequest } from \"@bitwarden/common/auth/models/request/emergency-access-update.request\";\nimport { PasswordRequest } from \"@bitwarden/common/auth/models/request/password.request\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"@bitwarden/common/models/domain/symmetric-crypto-key\";\nimport { SendWithIdRequest } from \"@bitwarden/common/models/request/send-with-id.request\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/update-key.request\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/vault/abstractions/folder/folder.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/vault/models/request/cipher-with-id.request\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/vault/models/request/folder-with-id.request\";\n\n@Component({\n  selector: \"app-change-password\",\n  templateUrl: \"change-password.component.html\",\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n  rotateEncKey = false;\n  currentMasterPassword: string;\n  masterPasswordHint: string;\n  checkForBreaches = true;\n  characterMinimumMessage = \"\";\n\n  constructor(\n    i18nService: I18nService,\n    cryptoService: CryptoService,\n    messagingService: MessagingService,\n    stateService: StateService,\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    platformUtilsService: PlatformUtilsService,\n    policyService: PolicyService,\n    private auditService: AuditService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private syncService: SyncService,\n    private apiService: ApiService,\n    private sendService: SendService,\n    private organizationService: OrganizationService,\n    private keyConnectorService: KeyConnectorService,\n    private router: Router,\n    private organizationApiService: OrganizationApiServiceAbstraction,\n    private organizationUserService: OrganizationUserService\n  ) {\n    super(\n      i18nService,\n      cryptoService,\n      messagingService,\n      passwordGenerationService,\n      platformUtilsService,\n      policyService,\n      stateService\n    );\n  }\n\n  async ngOnInit() {\n    if (await this.keyConnectorService.getUsesKeyConnector()) {\n      this.router.navigate([\"/settings/security/two-factor\"]);\n    }\n\n    this.masterPasswordHint = (await this.apiService.getProfile()).masterPasswordHint;\n    await super.ngOnInit();\n\n    this.characterMinimumMessage = this.i18nService.t(\"characterMinimum\", this.minimumLength);\n  }\n\n  async rotateEncKeyClicked() {\n    if (this.rotateEncKey) {\n      const ciphers = await this.cipherService.getAllDecrypted();\n      let hasOldAttachments = false;\n      if (ciphers != null) {\n        for (let i = 0; i < ciphers.length; i++) {\n          if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n            hasOldAttachments = true;\n            break;\n          }\n        }\n      }\n\n      if (hasOldAttachments) {\n        const learnMore = await this.platformUtilsService.showDialog(\n          this.i18nService.t(\"oldAttachmentsNeedFixDesc\"),\n          null,\n          this.i18nService.t(\"learnMore\"),\n          this.i18nService.t(\"close\"),\n          \"warning\"\n        );\n        if (learnMore) {\n          this.platformUtilsService.launchUri(\n            \"https://bitwarden.com/help/attachments/#add-storage-space\"\n          );\n        }\n        this.rotateEncKey = false;\n        return;\n      }\n\n      const result = await this.platformUtilsService.showDialog(\n        this.i18nService.t(\"updateEncryptionKeyWarning\") +\n          \" \" +\n          this.i18nService.t(\"updateEncryptionKeyExportWarning\") +\n          \" \" +\n          this.i18nService.t(\"rotateEncKeyConfirmation\"),\n        this.i18nService.t(\"rotateEncKeyTitle\"),\n        this.i18nService.t(\"yes\"),\n        this.i18nService.t(\"no\"),\n        \"warning\"\n      );\n      if (!result) {\n        this.rotateEncKey = false;\n      }\n    }\n  }\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    if (this.masterPasswordHint != null && this.masterPasswordHint == this.masterPassword) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"hintEqualsPassword\")\n      );\n      return;\n    }\n\n    this.leakedPassword = false;\n    if (this.checkForBreaches) {\n      this.leakedPassword = (await this.auditService.passwordLeaked(this.masterPassword)) > 0;\n    }\n\n    await super.submit();\n  }\n\n  async setupSubmitActions() {\n    if (this.currentMasterPassword == null || this.currentMasterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return false;\n    }\n\n    if (this.rotateEncKey) {\n      await this.syncService.fullSync(true);\n    }\n\n    return super.setupSubmitActions();\n  }\n\n  async performSubmitActions(\n    newMasterPasswordHash: string,\n    newKey: SymmetricCryptoKey,\n    newEncKey: [SymmetricCryptoKey, EncString]\n  ) {\n    const request = new PasswordRequest();\n    request.masterPasswordHash = await this.cryptoService.hashPassword(\n      this.currentMasterPassword,\n      null\n    );\n    request.masterPasswordHint = this.masterPasswordHint;\n    request.newMasterPasswordHash = newMasterPasswordHash;\n    request.key = newEncKey[1].encryptedString;\n\n    try {\n      if (this.rotateEncKey) {\n        this.formPromise = this.apiService.postPassword(request).then(() => {\n          return this.updateKey(newKey, request.newMasterPasswordHash);\n        });\n      } else {\n        this.formPromise = this.apiService.postPassword(request);\n      }\n\n      await this.formPromise;\n\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"masterPasswordChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"errorOccurred\"));\n    }\n  }\n\n  private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = masterPasswordHash;\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    const sends = await this.sendService.getAll();\n    await Promise.all(\n      sends.map(async (send) => {\n        const cryptoKey = await this.cryptoService.decryptToBytes(send.key, null);\n        send.key = (await this.cryptoService.encrypt(cryptoKey, encKey[0])) ?? send.key;\n        request.sends.push(new SendWithIdRequest(send));\n      })\n    );\n\n    await this.apiService.postAccountKey(request);\n\n    await this.updateEmergencyAccesses(encKey[0]);\n\n    await this.updateAllResetPasswordKeys(encKey[0], masterPasswordHash);\n  }\n\n  private async updateEmergencyAccesses(encKey: SymmetricCryptoKey) {\n    const emergencyAccess = await this.apiService.getEmergencyAccessTrusted();\n    const allowedStatuses = [\n      EmergencyAccessStatusType.Confirmed,\n      EmergencyAccessStatusType.RecoveryInitiated,\n      EmergencyAccessStatusType.RecoveryApproved,\n    ];\n\n    const filteredAccesses = emergencyAccess.data.filter((d) => allowedStatuses.includes(d.status));\n\n    for (const details of filteredAccesses) {\n      const publicKeyResponse = await this.apiService.getUserPublicKey(details.granteeId);\n      const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      const updateRequest = new EmergencyAccessUpdateRequest();\n      updateRequest.type = details.type;\n      updateRequest.waitTimeDays = details.waitTimeDays;\n      updateRequest.keyEncrypted = encryptedKey.encryptedString;\n\n      await this.apiService.putEmergencyAccess(details.id, updateRequest);\n    }\n  }\n\n  private async updateAllResetPasswordKeys(encKey: SymmetricCryptoKey, masterPasswordHash: string) {\n    const orgs = await this.organizationService.getAll();\n\n    for (const org of orgs) {\n      // If not already enrolled, skip\n      if (!org.resetPasswordEnrolled) {\n        continue;\n      }\n\n      // Retrieve public key\n      const response = await this.organizationApiService.getKeys(org.id);\n      const publicKey = Utils.fromB64ToArray(response?.publicKey);\n\n      // Re-enroll - encrpyt user's encKey.key with organization public key\n      const encryptedKey = await this.cryptoService.rsaEncrypt(encKey.key, publicKey.buffer);\n\n      // Create/Execute request\n      const request = new OrganizationUserResetPasswordEnrollmentRequest();\n      request.masterPasswordHash = masterPasswordHash;\n      request.resetPasswordKey = encryptedKey.encryptedString;\n\n      await this.organizationUserService.putOrganizationUserResetPasswordEnrollment(\n        org.id,\n        org.userId,\n        request\n      );\n    }\n  }\n}\n","import { PasswordRequest } from \"../../auth/models/request/password.request\";\nimport { KdfType } from \"../../enums/kdfType\";\n\nexport class KdfRequest extends PasswordRequest {\n  kdf: KdfType;\n  kdfIterations: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n}\n","import { DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfConfig } from \"@bitwarden/common/auth/models/domain/kdf-config\";\nimport { KdfType } from \"@bitwarden/common/enums/kdfType\";\nimport { KdfRequest } from \"@bitwarden/common/models/request/kdf.request\";\n\n@Component({\n  selector: \"app-change-kdf-confirmation\",\n  templateUrl: \"change-kdf-confirmation.component.html\",\n})\nexport class ChangeKdfConfirmationComponent {\n  kdf: KdfType;\n  kdfConfig: KdfConfig;\n\n  form = new FormGroup({\n    masterPassword: new FormControl(null, Validators.required),\n  });\n  showPassword = false;\n  masterPassword: string;\n  formPromise: Promise<any>;\n  loading = false;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private stateService: StateService,\n    private logService: LogService,\n    @Inject(DIALOG_DATA) params: { kdf: KdfType; kdfConfig: KdfConfig }\n  ) {\n    this.kdf = params.kdf;\n    this.kdfConfig = params.kdfConfig;\n    this.masterPassword = null;\n  }\n\n  async submit() {\n    this.loading = true;\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (!hasEncKey) {\n      this.platformUtilsService.showToast(\"error\", null, this.i18nService.t(\"updateKey\"));\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeKeyAndSaveAsync();\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"encKeySettingsChanged\"),\n        this.i18nService.t(\"logBackIn\")\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  private async makeKeyAndSaveAsync() {\n    const masterPassword = this.form.value.masterPassword;\n    const request = new KdfRequest();\n    request.kdf = this.kdf;\n    request.kdfIterations = this.kdfConfig.iterations;\n    request.kdfMemory = this.kdfConfig.memory;\n    request.kdfParallelism = this.kdfConfig.parallelism;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(masterPassword, null);\n    const email = await this.stateService.getEmail();\n    const newKey = await this.cryptoService.makeKey(\n      masterPassword,\n      email,\n      this.kdf,\n      this.kdfConfig\n    );\n    request.newMasterPasswordHash = await this.cryptoService.hashPassword(masterPassword, newKey);\n    const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n    request.key = newEncKey[1].encryptedString;\n\n    await this.apiService.postAccountKdf(request);\n  }\n}\n","<bit-dialog>\n  <span bitDialogTitle>\n    {{ \"changeKdf\" | i18n }}\n  </span>\n\n  <span bitDialogContent>\n    <bit-callout type=\"warning\">{{ \"changeKdfLoggedOutWarning\" | i18n }}</bit-callout>\n    <form\n      id=\"form\"\n      [formGroup]=\"form\"\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n      autocomplete=\"off\"\n    >\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <bit-form-field class=\"tw-mb-1\"\n            ><bit-label>{{ \"masterPass\" | i18n }}</bit-label>\n            <input\n              bitInput\n              type=\"password\"\n              required\n              formControlName=\"masterPassword\"\n              appAutofocus\n            />\n            <button\n              type=\"button\"\n              bitSuffix\n              bitIconButton\n              bitPasswordInputToggle\n              [(toggled)]=\"showPassword\"\n            ></button\n            ><bit-hint>\n              {{ \"confirmIdentity\" | i18n }}\n            </bit-hint></bit-form-field\n          >\n        </div>\n      </div>\n    </form>\n  </span>\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <button bitButton buttonType=\"primary\" type=\"submit\" [loading]=\"loading\" form=\"form\">\n      <span>{{ \"changeKdf\" | i18n }}</span>\n    </button>\n    <button bitButton buttonType=\"secondary\" type=\"button\" data-dismiss=\"modal\">\n      {{ \"cancel\" | i18n }}\n    </button>\n  </div>\n</bit-dialog>\n","<div class=\"tabbed-header\">\n  <h1>{{ \"encKeySettings\" | i18n }}</h1>\n</div>\n<bit-callout type=\"warning\">{{ \"changeKdfLoggedOutWarning\" | i18n }}</bit-callout>\n<form #form ngNativeValidate autocomplete=\"off\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <label for=\"kdf\">{{ \"kdfAlgorithm\" | i18n }}</label>\n        <a\n          class=\"ml-auto\"\n          href=\"https://bitwarden.com/help/kdf-algorithms\"\n          target=\"_blank\"\n          rel=\"noopener\"\n          appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n        >\n          <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n        </a>\n        <select\n          id=\"kdf\"\n          name=\"Kdf\"\n          [(ngModel)]=\"kdf\"\n          (ngModelChange)=\"onChangeKdf($event)\"\n          class=\"form-control mb-3\"\n          required\n        >\n          <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{ o.name }}</option>\n        </select>\n        <ng-container *ngIf=\"kdf == kdfType.Argon2id\">\n          <label for=\"kdfMemory\">{{ \"kdfMemory\" | i18n }}</label>\n          <input\n            id=\"kdfMemory\"\n            type=\"number\"\n            min=\"16\"\n            max=\"1024\"\n            name=\"Memory\"\n            class=\"form-control mb-3\"\n            [(ngModel)]=\"kdfConfig.memory\"\n            required\n          />\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"form-group mb-0\">\n        <ng-container *ngIf=\"kdf == kdfType.PBKDF2_SHA256\">\n          <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n          <a\n            class=\"ml-auto\"\n            href=\"https://bitwarden.com/help/what-encryption-is-used/#changing-kdf-iterations\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n          >\n            <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n          </a>\n          <input\n            id=\"kdfIterations\"\n            type=\"number\"\n            min=\"100000\"\n            max=\"2000000\"\n            name=\"KdfIterations\"\n            class=\"form-control\"\n            [(ngModel)]=\"kdfConfig.iterations\"\n            required\n          />\n        </ng-container>\n        <ng-container *ngIf=\"kdf == kdfType.Argon2id\">\n          <label for=\"kdfIterations\">{{ \"kdfIterations\" | i18n }}</label>\n          <input\n            id=\"iterations\"\n            type=\"number\"\n            min=\"2\"\n            max=\"10\"\n            name=\"Iterations\"\n            class=\"form-control mb-3\"\n            [(ngModel)]=\"kdfConfig.iterations\"\n            required\n          />\n          <label for=\"kdfParallelism\">{{ \"kdfParallelism\" | i18n }}</label>\n          <input\n            id=\"kdfParallelism\"\n            type=\"number\"\n            min=\"1\"\n            max=\"16\"\n            name=\"Parallelism\"\n            class=\"form-control\"\n            [(ngModel)]=\"kdfConfig.parallelism\"\n            required\n          />\n        </ng-container>\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <ng-container *ngIf=\"kdf == kdfType.PBKDF2_SHA256\">\n        <p class=\"small form-text text-muted\">\n          {{ \"kdfIterationsDesc\" | i18n: (recommendedPbkdf2Iterations | number) }}\n        </p>\n        <bit-callout type=\"warning\">\n          {{ \"kdfIterationsWarning\" | i18n: (100000 | number) }}\n        </bit-callout>\n      </ng-container>\n      <ng-container *ngIf=\"kdf == kdfType.Argon2id\">\n        <p class=\"small form-text text-muted\">{{ \"argon2Desc\" | i18n }}</p>\n        <bit-callout type=\"warning\"> {{ \"argon2Warning\" | i18n }}</bit-callout>\n      </ng-container>\n    </div>\n  </div>\n  <button\n    (click)=\"openConfirmationModal()\"\n    type=\"button\"\n    buttonType=\"primary\"\n    bitButton\n    [loading]=\"form.loading\"\n  >\n    {{ \"changeKdf\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KdfConfig } from \"@bitwarden/common/auth/models/domain/kdf-config\";\nimport {\n  DEFAULT_KDF_CONFIG,\n  DEFAULT_PBKDF2_ITERATIONS,\n  DEFAULT_ARGON2_ITERATIONS,\n  DEFAULT_ARGON2_MEMORY,\n  DEFAULT_ARGON2_PARALLELISM,\n  KdfType,\n} from \"@bitwarden/common/enums/kdfType\";\nimport { DialogService } from \"@bitwarden/components\";\n\nimport { ChangeKdfConfirmationComponent } from \"./change-kdf-confirmation.component\";\n\n@Component({\n  selector: \"app-change-kdf\",\n  templateUrl: \"change-kdf.component.html\",\n})\nexport class ChangeKdfComponent implements OnInit {\n  kdf = KdfType.PBKDF2_SHA256;\n  kdfConfig: KdfConfig = DEFAULT_KDF_CONFIG;\n  kdfType = KdfType;\n  kdfOptions: any[] = [];\n  recommendedPbkdf2Iterations = DEFAULT_PBKDF2_ITERATIONS;\n\n  constructor(private stateService: StateService, private dialogService: DialogService) {\n    this.kdfOptions = [\n      { name: \"PBKDF2 SHA-256\", value: KdfType.PBKDF2_SHA256 },\n      { name: \"Argon2id\", value: KdfType.Argon2id },\n    ];\n  }\n\n  async ngOnInit() {\n    this.kdf = await this.stateService.getKdfType();\n    this.kdfConfig = await this.stateService.getKdfConfig();\n  }\n\n  async onChangeKdf(newValue: KdfType) {\n    if (newValue === KdfType.PBKDF2_SHA256) {\n      this.kdfConfig = new KdfConfig(DEFAULT_PBKDF2_ITERATIONS);\n    } else if (newValue === KdfType.Argon2id) {\n      this.kdfConfig = new KdfConfig(\n        DEFAULT_ARGON2_ITERATIONS,\n        DEFAULT_ARGON2_MEMORY,\n        DEFAULT_ARGON2_PARALLELISM\n      );\n    } else {\n      throw new Error(\"Unknown KDF type.\");\n    }\n  }\n\n  async openConfirmationModal() {\n    this.dialogService.open(ChangeKdfConfirmationComponent, {\n      data: {\n        kdf: this.kdf,\n        kdfConfig: this.kdfConfig,\n      },\n    });\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<app-change-kdf *ngIf=\"showChangeKdf\"></app-change-kdf>\n<div\n  [ngClass]=\"{ 'tabbed-header': !showChangeKdf, 'secondary-header': showChangeKdf }\"\n  class=\"border-0 mb-0\"\n>\n  <h1>{{ \"apiKey\" | i18n }}</h1>\n</div>\n<p>\n  {{ \"userApiKeyDesc\" | i18n }}\n</p>\n<button bitButton buttonType=\"secondary\" (click)=\"viewUserApiKey()\">\n  {{ \"viewApiKey\" | i18n }}\n</button>\n<button bitButton buttonType=\"secondary\" (click)=\"rotateUserApiKey()\">\n  {{ \"rotateApiKey\" | i18n }}\n</button>\n<ng-template #viewUserApiKeyTemplate></ng-template>\n<ng-template #rotateUserApiKeyTemplate></ng-template>\n","import { Component, OnInit, ViewChild, ViewContainerRef } from \"@angular/core\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/auth/abstractions/key-connector.service\";\n\nimport { ApiKeyComponent } from \"./api-key.component\";\n\n@Component({\n  selector: \"app-security-keys\",\n  templateUrl: \"security-keys.component.html\",\n})\nexport class SecurityKeysComponent implements OnInit {\n  @ViewChild(\"viewUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  viewUserApiKeyModalRef: ViewContainerRef;\n  @ViewChild(\"rotateUserApiKeyTemplate\", { read: ViewContainerRef, static: true })\n  rotateUserApiKeyModalRef: ViewContainerRef;\n\n  showChangeKdf = true;\n\n  constructor(\n    private keyConnectorService: KeyConnectorService,\n    private stateService: StateService,\n    private modalService: ModalService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.showChangeKdf = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n\n  async viewUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.viewUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"userApiKeyDesc\";\n    });\n  }\n\n  async rotateUserApiKey() {\n    const entityId = await this.stateService.getUserId();\n    await this.modalService.openViewRef(ApiKeyComponent, this.rotateUserApiKeyModalRef, (comp) => {\n      comp.keyType = \"user\";\n      comp.isRotation = true;\n      comp.entityId = entityId;\n      comp.postKey = this.apiService.postUserRotateApiKey.bind(this.apiService);\n      comp.scope = \"api\";\n      comp.grantType = \"client_credentials\";\n      comp.apiKeyTitle = \"apiKey\";\n      comp.apiKeyWarning = \"userApiKeyWarning\";\n      comp.apiKeyDescription = \"apiKeyRotateDesc\";\n    });\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\">\n  <ul class=\"nav nav-tabs\">\n    <ng-container *ngIf=\"showChangePassword\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" routerLink=\"change-password\" routerLinkActive=\"active\">\n          {{ \"masterPassword\" | i18n }}\n        </a>\n      </li>\n    </ng-container>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"two-factor\" routerLinkActive=\"active\">\n        {{ \"twoStepLogin\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"security-keys\" routerLinkActive=\"active\">\n        {{ \"keys\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { KeyConnectorService } from \"@bitwarden/common/auth/abstractions/key-connector.service\";\n\n@Component({\n  selector: \"app-security\",\n  templateUrl: \"security.component.html\",\n})\nexport class SecurityComponent {\n  showChangePassword = true;\n\n  constructor(private keyConnectorService: KeyConnectorService) {}\n\n  async ngOnInit() {\n    this.showChangePassword = !(await this.keyConnectorService.getUsesKeyConnector());\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { TwoFactorSetupComponent } from \"../../auth/settings/two-factor-setup.component\";\n\nimport { ChangePasswordComponent } from \"./change-password.component\";\nimport { SecurityKeysComponent } from \"./security-keys.component\";\nimport { SecurityComponent } from \"./security.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SecurityComponent,\n    data: { titleId: \"security\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"change-password\" },\n      {\n        path: \"change-password\",\n        component: ChangePasswordComponent,\n        data: { titleId: \"masterPassword\" },\n      },\n      {\n        path: \"two-factor\",\n        component: TwoFactorSetupComponent,\n        data: { titleId: \"twoStepLogin\" },\n      },\n      {\n        path: \"security-keys\",\n        component: SecurityKeysComponent,\n        data: { titleId: \"keys\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SecurityRoutingModule {}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card\">\n        <div class=\"card-header\">{{ \"accountSettings\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"myAccount\" | i18n }}\n          </a>\n          <a routerLink=\"security\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"security\" | i18n }}\n          </a>\n          <a routerLink=\"preferences\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"preferences\" | i18n }}\n          </a>\n          <a\n            routerLink=\"subscription\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"!hideSubscription\"\n          >\n            {{ \"subscription\" | i18n }}\n          </a>\n          <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"domainRules\" | i18n }}\n          </a>\n          <a routerLink=\"emergency-access\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"emergencyAccess\" | i18n }}\n          </a>\n          <a\n            routerLink=\"sponsored-families\"\n            class=\"list-group-item\"\n            routerLinkActive=\"active\"\n            *ngIf=\"hasFamilySponsorshipAvailable\"\n          >\n            {{ \"sponsoredFamilies\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { Component, NgZone, OnDestroy, OnInit } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/auth/abstractions/token.service\";\n\nimport { StateService } from \"../core\";\n\nconst BroadcasterSubscriptionId = \"SettingsComponent\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"settings.component.html\",\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n  premium: boolean;\n  selfHosted: boolean;\n  hasFamilySponsorshipAvailable: boolean;\n  hideSubscription: boolean;\n\n  constructor(\n    private tokenService: TokenService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private platformUtilsService: PlatformUtilsService,\n    private organizationService: OrganizationService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  async ngOnInit() {\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"purchasedPremium\":\n            await this.load();\n            break;\n          default:\n        }\n      });\n    });\n\n    this.selfHosted = await this.platformUtilsService.isSelfHost();\n    await this.load();\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n  }\n\n  async load() {\n    this.premium = await this.stateService.getHasPremiumPersonally();\n    this.hasFamilySponsorshipAvailable = await this.organizationService.canManageSponsorships();\n    const hasPremiumFromOrg = await this.stateService.getHasPremiumFromOrganization();\n    let billing = null;\n    this.hideSubscription = true;\n  }\n}\n","import { AbstractControl, AsyncValidatorFn, ValidationErrors } from \"@angular/forms\";\n\nexport function notAllowedValueAsync(\n  valueGetter: () => Promise<string>,\n  caseInsensitive = false\n): AsyncValidatorFn {\n  return async (control: AbstractControl): Promise<ValidationErrors | null> => {\n    let notAllowedValue = await valueGetter();\n    let controlValue = control.value;\n    if (caseInsensitive) {\n      notAllowedValue = notAllowedValue.toLowerCase();\n      controlValue = controlValue.toLowerCase();\n    }\n\n    if (controlValue === notAllowedValue) {\n      return {\n        notAllowedValue: true,\n      };\n    }\n  };\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<td>\n  {{ sponsoringOrg.familySponsorshipFriendlyName }}\n</td>\n<td>{{ sponsoringOrg.name }}</td>\n<td>\n  <span [ngClass]=\"statusClass\">{{ statusMessage }}</span>\n</td>\n<td class=\"table-action-right\">\n  <div class=\"dropdown\" appListDropdown>\n    <button\n      *ngIf=\"!sponsoringOrg.familySponsorshipToDelete\"\n      class=\"btn btn-outline-secondary dropdown-toggle\"\n      type=\"button\"\n      id=\"dropdownMenuButton\"\n      data-toggle=\"dropdown\"\n      aria-haspopup=\"true\"\n      aria-expanded=\"false\"\n      appA11yTitle=\"{{ 'options' | i18n }}\"\n    >\n      <i class=\"bwi bwi-cog bwi-lg\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n      <button\n        #resendEmailBtn\n        *ngIf=\"!isSelfHosted && !sponsoringOrg.familySponsorshipValidUntil\"\n        [appApiAction]=\"resendEmailPromise\"\n        class=\"dropdown-item btn-submit\"\n        [disabled]=\"$any(resendEmailBtn).loading\"\n        (click)=\"resendEmail()\"\n        [attr.aria-label]=\"'resendEmailLabel' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"resendEmail\" | i18n }}</span>\n      </button>\n      <button\n        #revokeSponsorshipBtn\n        [appApiAction]=\"revokeSponsorshipPromise\"\n        class=\"dropdown-item text-danger btn-submit\"\n        [disabled]=\"$any(revokeSponsorshipBtn).loading\"\n        (click)=\"revokeSponsorship()\"\n        [attr.aria-label]=\"'revokeAccount' | i18n: sponsoringOrg.familySponsorshipFriendlyName\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"remove\" | i18n }}</span>\n      </button>\n    </div>\n  </div>\n</td>\n","import { formatDate } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output, OnInit } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\n\n@Component({\n  selector: \"[sponsoring-org-row]\",\n  templateUrl: \"sponsoring-org-row.component.html\",\n})\nexport class SponsoringOrgRowComponent implements OnInit {\n  @Input() sponsoringOrg: Organization = null;\n  @Input() isSelfHosted = false;\n\n  @Output() sponsorshipRemoved = new EventEmitter();\n\n  statusMessage = \"loading\";\n  statusClass: \"text-success\" | \"text-danger\" = \"text-success\";\n\n  revokeSponsorshipPromise: Promise<any>;\n  resendEmailPromise: Promise<any>;\n\n  private locale = \"\";\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private logService: LogService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.locale = await firstValueFrom(this.i18nService.locale$);\n\n    this.setStatus(\n      this.isSelfHosted,\n      this.sponsoringOrg.familySponsorshipToDelete,\n      this.sponsoringOrg.familySponsorshipValidUntil,\n      this.sponsoringOrg.familySponsorshipLastSyncDate\n    );\n  }\n\n  async revokeSponsorship() {\n    try {\n      this.revokeSponsorshipPromise = this.doRevokeSponsorship();\n      await this.revokeSponsorshipPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    this.revokeSponsorshipPromise = null;\n  }\n\n  async resendEmail() {\n    this.resendEmailPromise = this.apiService.postResendSponsorshipOffer(this.sponsoringOrg.id);\n    await this.resendEmailPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailSent\"));\n    this.resendEmailPromise = null;\n  }\n\n  get isSentAwaitingSync() {\n    return this.isSelfHosted && !this.sponsoringOrg.familySponsorshipLastSyncDate;\n  }\n\n  private async doRevokeSponsorship() {\n    const isConfirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"revokeSponsorshipConfirmation\"),\n      `${this.i18nService.t(\"remove\")} ${this.sponsoringOrg.familySponsorshipFriendlyName}?`,\n      this.i18nService.t(\"remove\"),\n      this.i18nService.t(\"cancel\"),\n      \"warning\"\n    );\n\n    if (!isConfirmed) {\n      return;\n    }\n\n    await this.apiService.deleteRevokeSponsorship(this.sponsoringOrg.id);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reclaimedFreePlan\"));\n    this.sponsorshipRemoved.emit();\n  }\n\n  private setStatus(\n    selfHosted: boolean,\n    toDelete?: boolean,\n    validUntil?: Date,\n    lastSyncDate?: Date\n  ) {\n    /*\n     * Possible Statuses:\n     * Requested (self-hosted only)\n     * Sent\n     * Active\n     * RequestRevoke\n     * RevokeWhenExpired\n     */\n\n    if (toDelete && validUntil) {\n      // They want to delete but there is a valid until date which means there is an active sponsorship\n      this.statusMessage = this.i18nService.t(\n        \"revokeWhenExpired\",\n        formatDate(validUntil, \"MM/dd/yyyy\", this.locale)\n      );\n      this.statusClass = \"text-danger\";\n    } else if (toDelete) {\n      // They want to delete and we don't have a valid until date so we can\n      // this should only happen on a self-hosted install\n      this.statusMessage = this.i18nService.t(\"requestRemoved\");\n      this.statusClass = \"text-danger\";\n    } else if (validUntil) {\n      // They don't want to delete and they have a valid until date\n      // that means they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"active\");\n      this.statusClass = \"text-success\";\n    } else if (selfHosted && lastSyncDate) {\n      // We are on a self-hosted install and it has been synced but we have not gotten\n      // a valid until date so we can't know if they are actively sponsoring someone\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else if (!selfHosted) {\n      // We are in cloud and all other status checks have been false therefore we have\n      // sent the request but it hasn't been accepted yet\n      this.statusMessage = this.i18nService.t(\"sent\");\n      this.statusClass = \"text-success\";\n    } else {\n      // We are on a self-hosted install and we have not synced yet\n      this.statusMessage = this.i18nService.t(\"requested\");\n      this.statusClass = \"text-success\";\n    }\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"sponsoredFamilies\" | i18n }}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n  <i class=\"bwi bwi-spinner bwi-spin text-muted\" title=\"{{ 'loading' | i18n }}\"></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading\">\n  <p>\n    {{ \"sponsoredFamiliesEligible\" | i18n }}\n  </p>\n  <div>\n    {{ \"sponsoredFamiliesInclude\" | i18n }}:\n    <ul class=\"inset-list\">\n      <li>{{ \"sponsoredFamiliesPremiumAccess\" | i18n }}</li>\n      <li>{{ \"sponsoredFamiliesSharedCollections\" | i18n }}</li>\n    </ul>\n  </div>\n  <form\n    #form\n    (ngSubmit)=\"submit()\"\n    [appApiAction]=\"formPromise\"\n    [formGroup]=\"sponsorshipForm\"\n    ngNativeValidate\n    *ngIf=\"anyOrgsAvailable$ | async\"\n  >\n    <div class=\"form-group col-7\">\n      <label for=\"availableSponsorshipOrg\">{{ \"familiesSponsoringOrgSelect\" | i18n }}</label>\n      <select\n        id=\"availableSponsorshipOrg\"\n        name=\"Available Sponsorship Organization\"\n        formControlName=\"selectedSponsorshipOrgId\"\n        class=\"form-control\"\n        required\n      >\n        <option disabled=\"true\" value=\"\">-- {{ \"select\" | i18n }} --</option>\n        <option *ngFor=\"let o of availableSponsorshipOrgs$ | async\" [ngValue]=\"o.id\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div class=\"form-group col-7\">\n      <label for=\"sponsorshipEmail\">{{ \"sponsoredFamiliesEmail\" | i18n }}:</label>\n      <input\n        id=\"sponsorshipEmail\"\n        class=\"form-control\"\n        inputmode=\"email\"\n        formControlName=\"sponsorshipEmail\"\n        name=\"sponsorshipEmail\"\n        required\n        [attr.aria-invalid]=\"sponsorshipEmailControl.invalid\"\n      />\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.notAllowedValue\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"cannotSponsorSelf\" | i18n }}\n      </small>\n      <small\n        aria-errormessage=\"sponsorshipEmail\"\n        *ngIf=\"sponsorshipEmailControl.errors?.email\"\n        class=\"error-inline\"\n        role=\"alert\"\n      >\n        <i class=\"bwi bwi-error\" aria-hidden=\"true\"></i>\n        {{ \"invalidEmail\" | i18n }}\n      </small>\n    </div>\n    <div class=\"form-group col-7\">\n      <button class=\"btn btn-primary btn-submit mt-2\" type=\"submit\" [disabled]=\"form.loading\">\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"redeem\" | i18n }}</span>\n      </button>\n    </div>\n  </form>\n  <ng-container *ngIf=\"anyActiveSponsorships$ | async\">\n    <div class=\"border-bottom\">\n      <table class=\"table table-hover table-list\">\n        <thead>\n          <tr>\n            <th>{{ \"recipient\" | i18n }}</th>\n            <th>{{ \"sponsoringOrg\" | i18n }}</th>\n            <th>{{ \"status\" | i18n }}</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <ng-container *ngFor=\"let o of activeSponsorshipOrgs$ | async\">\n            <tr\n              sponsoring-org-row\n              [sponsoringOrg]=\"o\"\n              [isSelfHosted]=\"isSelfHosted\"\n              (sponsorshipRemoved)=\"forceReload()\"\n            ></tr>\n          </ng-container>\n        </tbody>\n      </table>\n    </div>\n    <small>{{ \"sponsoredFamiliesLeaveCopy\" | i18n }}</small>\n  </ng-container>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { notAllowedValueAsync } from \"@bitwarden/angular/validators/notAllowedValueAsync.validator\";\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PlanSponsorshipType } from \"@bitwarden/common/enums/planSponsorshipType\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\ninterface RequestSponsorshipForm {\n  selectedSponsorshipOrgId: FormControl<string>;\n  sponsorshipEmail: FormControl<string>;\n}\n\n@Component({\n  selector: \"app-sponsored-families\",\n  templateUrl: \"sponsored-families.component.html\",\n})\nexport class SponsoredFamiliesComponent implements OnInit, OnDestroy {\n  loading = false;\n\n  availableSponsorshipOrgs$: Observable<Organization[]>;\n  activeSponsorshipOrgs$: Observable<Organization[]>;\n  anyOrgsAvailable$: Observable<boolean>;\n  anyActiveSponsorships$: Observable<boolean>;\n\n  // Conditional display properties\n  formPromise: Promise<void>;\n\n  sponsorshipForm: FormGroup<RequestSponsorshipForm>;\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private syncService: SyncService,\n    private organizationService: OrganizationService,\n    private formBuilder: FormBuilder,\n    private stateService: StateService\n  ) {\n    this.sponsorshipForm = this.formBuilder.group<RequestSponsorshipForm>({\n      selectedSponsorshipOrgId: new FormControl(\"\", {\n        validators: [Validators.required],\n      }),\n      sponsorshipEmail: new FormControl(\"\", {\n        validators: [Validators.email],\n        asyncValidators: [\n          notAllowedValueAsync(async () => await this.stateService.getEmail(), true),\n        ],\n        updateOn: \"blur\",\n      }),\n    });\n  }\n\n  async ngOnInit() {\n    this.availableSponsorshipOrgs$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.familySponsorshipAvailable))\n    );\n\n    this.availableSponsorshipOrgs$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (orgs.length === 1) {\n        this.sponsorshipForm.patchValue({\n          selectedSponsorshipOrgId: orgs[0].id,\n        });\n      }\n    });\n\n    this.anyOrgsAvailable$ = this.availableSponsorshipOrgs$.pipe(map((orgs) => orgs.length > 0));\n\n    this.activeSponsorshipOrgs$ = this.organizationService.organizations$.pipe(\n      map((orgs) => orgs.filter((o) => o.familySponsorshipFriendlyName !== null))\n    );\n\n    this.anyActiveSponsorships$ = this.activeSponsorshipOrgs$.pipe(map((orgs) => orgs.length > 0));\n\n    this.loading = false;\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async submit() {\n    this.formPromise = this.apiService.postCreateSponsorship(\n      this.sponsorshipForm.value.selectedSponsorshipOrgId,\n      {\n        sponsoredEmail: this.sponsorshipForm.value.sponsorshipEmail,\n        planSponsorshipType: PlanSponsorshipType.FamiliesForEnterprise,\n        friendlyName: this.sponsorshipForm.value.sponsorshipEmail,\n      }\n    );\n\n    await this.formPromise;\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"sponsorshipCreated\"));\n    this.formPromise = null;\n    this.resetForm();\n    await this.forceReload();\n  }\n\n  async forceReload() {\n    this.loading = true;\n    await this.syncService.fullSync(true);\n    this.loading = false;\n  }\n\n  get sponsorshipEmailControl() {\n    return this.sponsorshipForm.controls.sponsorshipEmail;\n  }\n\n  private async resetForm() {\n    this.sponsorshipForm.reset();\n  }\n\n  get isSelfHosted(): boolean {\n    return this.platformUtilsService.isSelfHost();\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<div class=\"d-flex tabbed-header\">\n  <h1>\n    {{ \"billingHistory\" | i18n }}\n  </h1>\n  <button\n    bitButton\n    buttonType=\"secondary\"\n    (click)=\"load()\"\n    class=\"tw-ml-auto\"\n    *ngIf=\"firstLoaded\"\n    [disabled]=\"loading\"\n  >\n    <i class=\"bwi bwi-refresh bwi-fw\" [ngClass]=\"{ 'bwi-spin': loading }\" aria-hidden=\"true\"></i>\n    {{ \"refresh\" | i18n }}\n  </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n  <app-billing-history [billing]=\"billing\"></app-billing-history>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { BillingHistoryResponse } from \"@bitwarden/common/models/response/billing-history.response\";\n\n@Component({\n  selector: \"app-billing-history-view\",\n  templateUrl: \"billing-history-view.component.html\",\n})\nexport class BillingHistoryViewComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  billing: BillingHistoryResponse;\n\n  constructor(\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    if (this.platformUtilsService.isSelfHost()) {\n      this.router.navigate([\"/settings/subscription\"]);\n      return;\n    }\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n    this.loading = true;\n    this.billing = null;\n    this.loading = false;\n  }\n}\n","<div *ngIf=\"selfHosted\" class=\"page-header\">\n  <h1>{{ \"subscription\" | i18n }}</h1>\n</div>\n<div *ngIf=\"!selfHosted\" class=\"tabbed-header\">\n  <h1>{{ \"goPremium\" | i18n }}</h1>\n</div>\n<bit-callout\n  type=\"info\"\n  *ngIf=\"canAccessPremium\"\n  title=\"{{ 'youHavePremiumAccess' | i18n }}\"\n  icon=\"bwi bwi-star-f\"\n>\n  {{ \"alreadyPremiumFromOrg\" | i18n }}\n</bit-callout>\n<bit-callout type=\"success\">\n  <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n  <ul class=\"bwi-ul\">\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpStorage\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTwoStep\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpEmergency\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpReports\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpTotp\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpSupport\" | i18n }}\n    </li>\n    <li>\n      <i class=\"bwi bwi-check text-success bwi-li\" aria-hidden=\"true\"></i>\n      {{ \"premiumSignUpFuture\" | i18n }}\n    </li>\n  </ul>\n  <p class=\"text-lg\" [ngClass]=\"{ 'mb-0': !selfHosted }\">\n    {{ \"premiumPriceWithFamilyPlan\" | i18n: (premiumPrice | currency: \"$\"):familyPlanMaxUserCount }}\n    <a routerLink=\"/create-organization\" [queryParams]=\"{ plan: 'families' }\">{{\n      \"bitwardenFamiliesPlan\" | i18n\n    }}</a>\n  </p>\n  <a\n    bitButton\n    href=\"https://vault.bitwarden.com/#/settings/premium\"\n    target=\"_blank\"\n    rel=\"noopener\"\n    buttonType=\"secondary\"\n    *ngIf=\"selfHosted\"\n  >\n    {{ \"purchasePremium\" | i18n }}\n  </a>\n</bit-callout>\n<ng-container *ngIf=\"selfHosted\">\n  <p>{{ \"uploadLicenseFilePremium\" | i18n }}</p>\n  <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n      <label for=\"file\">{{ \"licenseFile\" | i18n }}</label>\n      <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required />\n      <small class=\"form-text text-muted\">{{\n        \"licenseFileDesc\" | i18n: \"bitwarden_premium_license.json\"\n      }}</small>\n    </div>\n    <button type=\"submit\" buttonType=\"primary\" bitButton [loading]=\"form.loading\">\n      {{ \"submit\" | i18n }}\n    </button>\n  </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n  <h2 class=\"mt-5\">{{ \"addons\" | i18n }}</h2>\n  <div class=\"row\">\n    <div class=\"form-group col-6\">\n      <label for=\"additionalStorage\">{{ \"additionalStorageGb\" | i18n }}</label>\n      <input\n        id=\"additionalStorage\"\n        class=\"form-control\"\n        type=\"number\"\n        name=\"AdditionalStorageGb\"\n        [(ngModel)]=\"additionalStorage\"\n        min=\"0\"\n        max=\"99\"\n        step=\"1\"\n        placeholder=\"{{ 'additionalStorageGbDesc' | i18n }}\"\n      />\n      <small class=\"text-muted form-text\">{{\n        \"additionalStorageIntervalDesc\"\n          | i18n: \"1 GB\":(storageGbPrice | currency: \"$\"):(\"year\" | i18n)\n      }}</small>\n    </div>\n  </div>\n  <h2 class=\"spaced-header\">{{ \"summary\" | i18n }}</h2>\n  {{ \"premiumMembership\" | i18n }}: {{ premiumPrice | currency: \"$\" }} <br />\n  {{ \"additionalStorageGb\" | i18n }}: {{ additionalStorage || 0 }} GB &times;\n  {{ storageGbPrice | currency: \"$\" }} =\n  {{ additionalStorageTotal | currency: \"$\" }}\n  <hr class=\"my-3\" />\n  <h2 class=\"spaced-header mb-4\">{{ \"paymentInformation\" | i18n }}</h2>\n  <app-payment [hideBank]=\"true\"></app-payment>\n  <app-tax-info></app-tax-info>\n  <div id=\"price\" class=\"my-4\">\n    <div class=\"text-muted text-sm\">\n      {{ \"planPrice\" | i18n }}: {{ subtotal | currency: \"USD $\" }}\n      <br />\n      <ng-container>\n        {{ \"estimatedTax\" | i18n }}: {{ taxCharges | currency: \"USD $\" }}\n      </ng-container>\n    </div>\n    <hr class=\"my-1 col-3 ml-0\" />\n    <p class=\"text-lg\">\n      <strong>{{ \"total\" | i18n }}:</strong> {{ total | currency: \"USD $\" }}/{{ \"year\" | i18n }}\n    </p>\n  </div>\n  <small class=\"text-muted font-italic\">{{ \"paymentChargedAnnually\" | i18n }}</small>\n  <button type=\"submit\" bitButton [loading]=\"form.loading\">\n    {{ \"submit\" | i18n }}\n  </button>\n</form>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/auth/abstractions/token.service\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\n\nimport { PaymentComponent } from \"./payment.component\";\nimport { TaxInfoComponent } from \"./tax-info.component\";\n\n@Component({\n  selector: \"app-premium\",\n  templateUrl: \"premium.component.html\",\n})\nexport class PremiumComponent implements OnInit {\n  @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n  @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n  canAccessPremium = false;\n  selfHosted = false;\n  premiumPrice = 10;\n  familyPlanMaxUserCount = 6;\n  storageGbPrice = 4;\n  additionalStorage = 0;\n\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private tokenService: TokenService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private logService: LogService,\n    private stateService: StateService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n    const premiumPersonally = await this.stateService.getHasPremiumPersonally();\n    if (premiumPersonally) {\n      this.router.navigate([\"/settings/subscription/user-subscription\"]);\n      return;\n    }\n  }\n\n  async submit() {\n    let files: FileList = null;\n    if (this.selfHosted) {\n      const fileEl = document.getElementById(\"file\") as HTMLInputElement;\n      files = fileEl.files;\n      if (files == null || files.length === 0) {\n        this.platformUtilsService.showToast(\n          \"error\",\n          this.i18nService.t(\"errorOccurred\"),\n          this.i18nService.t(\"selectFile\")\n        );\n        return;\n      }\n    }\n\n    try {\n      if (this.selfHosted) {\n        if (!this.tokenService.getEmailVerified()) {\n          this.platformUtilsService.showToast(\n            \"error\",\n            this.i18nService.t(\"errorOccurred\"),\n            this.i18nService.t(\"verifyEmailFirst\")\n          );\n          return;\n        }\n\n        const fd = new FormData();\n        fd.append(\"license\", files[0]);\n        this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n          return this.finalizePremium();\n        });\n      } else {\n        this.formPromise = this.paymentComponent\n          .createPaymentToken()\n          .then((result) => {\n            const fd = new FormData();\n            fd.append(\"paymentMethodType\", result[1].toString());\n            if (result[0] != null) {\n              fd.append(\"paymentToken\", result[0]);\n            }\n            fd.append(\"additionalStorageGb\", (this.additionalStorage || 0).toString());\n            fd.append(\"country\", this.taxInfoComponent.taxInfo.country);\n            fd.append(\"postalCode\", this.taxInfoComponent.taxInfo.postalCode);\n            return this.apiService.postPremium(fd);\n          })\n          .then((paymentResponse) => {\n            if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n              return this.paymentComponent.handleStripeCardPayment(\n                paymentResponse.paymentIntentClientSecret,\n                () => this.finalizePremium()\n              );\n            } else {\n              return this.finalizePremium();\n            }\n          });\n      }\n      await this.formPromise;\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async finalizePremium() {\n    await this.apiService.refreshIdentityToken();\n    await this.syncService.fullSync(true);\n    this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"premiumUpdated\"));\n    this.messagingService.send(\"purchasedPremium\");\n    this.router.navigate([\"/settings/subscription/user-subscription\"]);\n  }\n\n  get additionalStorageTotal(): number {\n    return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n  }\n\n  get subtotal(): number {\n    return this.premiumPrice + this.additionalStorageTotal;\n  }\n\n  get taxCharges(): number {\n    return this.taxInfoComponent != null && this.taxInfoComponent.taxRate != null\n      ? (this.taxInfoComponent.taxRate / 100) * this.subtotal\n      : 0;\n  }\n\n  get total(): number {\n    return this.subtotal + this.taxCharges || 0;\n  }\n}\n","<div class=\"tabbed-nav d-flex flex-column\" *ngIf=\"!selfHosted\">\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [routerLink]=\"subscriptionRoute\" routerLinkActive=\"active\">\n        {{ \"subscription\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"payment-method\" routerLinkActive=\"active\">\n        {{ \"paymentMethod\" | i18n }}\n      </a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" routerLink=\"billing-history\" routerLinkActive=\"active\">\n        {{ \"billingHistory\" | i18n }}\n      </a>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-subscription\",\n  templateUrl: \"subscription.component.html\",\n})\nexport class SubscriptionComponent {\n  hasPremium: boolean;\n  selfHosted: boolean;\n\n  constructor(\n    private stateService: StateService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  async ngOnInit() {\n    this.hasPremium = await this.stateService.getHasPremiumPersonally();\n    this.selfHosted = this.platformUtilsService.isSelfHost();\n  }\n\n  get subscriptionRoute(): string {\n    return this.hasPremium ? \"user-subscription\" : \"premium\";\n  }\n}\n","<div\n  [ngClass]=\"{\n    'page-header': selfHosted,\n    'tabbed-header': !selfHosted\n  }\"\n>\n  <h1>\n    {{ title }}\n    <small *ngIf=\"firstLoaded && loading\">\n      <i\n        class=\"bwi bwi-spinner bwi-spin text-muted\"\n        title=\"{{ 'loading' | i18n }}\"\n        aria-hidden=\"true\"\n      ></i>\n      <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n    </small>\n  </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n  <i\n    class=\"bwi bwi-spinner bwi-spin text-muted\"\n    title=\"{{ 'loading' | i18n }}\"\n    aria-hidden=\"true\"\n  ></i>\n  <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'canceled' | i18n }}\"\n    *ngIf=\"subscription && subscription.cancelled\"\n  >\n    {{ \"subscriptionCanceled\" | i18n }}</bit-callout\n  >\n  <bit-callout\n    type=\"warning\"\n    title=\"{{ 'pendingCancellation' | i18n }}\"\n    *ngIf=\"subscriptionMarkedForCancel\"\n  >\n    <p>{{ \"subscriptionPendingCanceled\" | i18n }}</p>\n    <button\n      bitButton\n      type=\"button\"\n      buttonType=\"secondary\"\n      #reinstateBtn\n      class=\"btn-submit\"\n      (click)=\"reinstate()\"\n      [appApiAction]=\"reinstatePromise\"\n      [disabled]=\"$any(reinstateBtn).loading\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"reinstateSubscription\" | i18n }}</span>\n    </button>\n  </bit-callout>\n  <dl *ngIf=\"selfHosted\">\n    <dt>{{ \"expiration\" | i18n }}</dt>\n    <dd *ngIf=\"sub.expiration\">{{ sub.expiration | date: \"mediumDate\" }}</dd>\n    <dd *ngIf=\"!sub.expiration\">{{ \"neverExpires\" | i18n }}</dd>\n  </dl>\n  <div class=\"row\" *ngIf=\"!selfHosted\">\n    <div class=\"col-4\">\n      <dl>\n        <dt>{{ \"status\" | i18n }}</dt>\n        <dd>\n          <span class=\"text-capitalize\">{{ (subscription && subscription.status) || \"-\" }}</span>\n          <span bitBadge badgeType=\"warning\" *ngIf=\"subscriptionMarkedForCancel\">{{\n            \"pendingCancellation\" | i18n\n          }}</span>\n        </dd>\n        <dt>{{ \"nextCharge\" | i18n }}</dt>\n        <dd>\n          {{\n            nextInvoice\n              ? (nextInvoice.date | date: \"mediumDate\") +\n                \", \" +\n                (nextInvoice.amount | currency: \"$\")\n              : \"-\"\n          }}\n        </dd>\n      </dl>\n    </div>\n    <div class=\"col-8\" *ngIf=\"subscription\">\n      <strong class=\"d-block mb-1\">{{ \"details\" | i18n }}</strong>\n      <table class=\"table\">\n        <tbody>\n          <tr *ngFor=\"let i of subscription.items\">\n            <td>\n              {{ i.name }} {{ i.quantity > 1 ? \"&times;\" + i.quantity : \"\" }} @\n              {{ i.amount | currency: \"$\" }}\n            </td>\n            <td>{{ i.quantity * i.amount | currency: \"$\" }} /{{ i.interval | i18n }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n  <ng-container *ngIf=\"selfHosted\">\n    <div>\n      <button type=\"button\" bitButton buttonType=\"secondary\" (click)=\"updateLicense()\">\n        {{ \"updateLicense\" | i18n }}\n      </button>\n      <a\n        bitButton\n        buttonType=\"secondary\"\n        href=\"https://vault.bitwarden.com/#/settings/subscription\"\n        target=\"_blank\"\n        rel=\"noopener\"\n      >\n        {{ \"launchCloudSubscription\" | i18n }}\n      </a>\n    </div>\n    <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n      <div class=\"card-body\">\n        <button\n          type=\"button\"\n          class=\"close\"\n          appA11yTitle=\"{{ 'cancel' | i18n }}\"\n          (click)=\"closeUpdateLicense(false)\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <h3 class=\"card-body-header\">{{ \"updateLicense\" | i18n }}</h3>\n        <app-update-license\n          (onUpdated)=\"closeUpdateLicense(true)\"\n          (onCanceled)=\"closeUpdateLicense(false)\"\n        >\n        </app-update-license>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!selfHosted\">\n    <div class=\"d-flex\">\n      <button\n        bitButton\n        type=\"button\"\n        buttonType=\"secondary\"\n        (click)=\"downloadLicense()\"\n        *ngIf=\"!subscription || !subscription.cancelled\"\n      >\n        {{ \"downloadLicense\" | i18n }}\n      </button>\n      <button\n        bitButton\n        #cancelBtn\n        type=\"button\"\n        buttonType=\"danger\"\n        class=\"btn-submit tw-ml-auto\"\n        (click)=\"cancel()\"\n        [appApiAction]=\"cancelPromise\"\n        [disabled]=\"$any(cancelBtn).loading\"\n        *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\"\n      >\n        <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n        <span>{{ \"cancelSubscription\" | i18n }}</span>\n      </button>\n    </div>\n    <h2 class=\"spaced-header\">{{ \"storage\" | i18n }}</h2>\n    <p>{{ \"subscriptionStorage\" | i18n: sub.maxStorageGb || 0:sub.storageName || \"0 MB\" }}</p>\n    <div class=\"progress\">\n      <div\n        class=\"progress-bar bg-success\"\n        role=\"progressbar\"\n        [ngStyle]=\"{ width: storageProgressWidth + '%' }\"\n        [attr.aria-valuenow]=\"storagePercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n      >\n        {{ storagePercentage / 100 | percent }}\n      </div>\n    </div>\n    <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n      <div class=\"mt-3\">\n        <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n          <button bitButton type=\"button\" buttonType=\"secondary\" (click)=\"adjustStorage(true)\">\n            {{ \"addStorage\" | i18n }}\n          </button>\n          <button\n            bitButton\n            type=\"button\"\n            buttonType=\"secondary\"\n            class=\"tw-ml-1\"\n            (click)=\"adjustStorage(false)\"\n          >\n            {{ \"removeStorage\" | i18n }}\n          </button>\n        </div>\n        <app-adjust-storage\n          [storageGbPrice]=\"4\"\n          [add]=\"adjustStorageAdd\"\n          (onAdjusted)=\"closeStorage(true)\"\n          (onCanceled)=\"closeStorage(false)\"\n          *ngIf=\"showAdjustStorage\"\n        ></app-adjust-storage>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { FileDownloadService } from \"@bitwarden/common/abstractions/fileDownload/fileDownload.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { SubscriptionResponse } from \"@bitwarden/common/models/response/subscription.response\";\n\n@Component({\n  selector: \"app-user-subscription\",\n  templateUrl: \"user-subscription.component.html\",\n})\nexport class UserSubscriptionComponent implements OnInit {\n  loading = false;\n  firstLoaded = false;\n  adjustStorageAdd = true;\n  showAdjustStorage = false;\n  showUpdateLicense = false;\n  sub: SubscriptionResponse;\n  selfHosted = false;\n\n  cancelPromise: Promise<any>;\n  reinstatePromise: Promise<any>;\n\n  constructor(\n    private stateService: StateService,\n    private apiService: ApiService,\n    private platformUtilsService: PlatformUtilsService,\n    private i18nService: I18nService,\n    private router: Router,\n    private logService: LogService,\n    private fileDownloadService: FileDownloadService\n  ) {\n    this.selfHosted = platformUtilsService.isSelfHost();\n  }\n\n  async ngOnInit() {\n    await this.load();\n    this.firstLoaded = true;\n  }\n\n  async load() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.stateService.getHasPremiumPersonally()) {\n      this.loading = true;\n      this.sub = await this.apiService.getUserSubscription();\n    } else {\n      this.router.navigate([\"/settings/subscription/premium\"]);\n      return;\n    }\n\n    this.loading = false;\n  }\n\n  async reinstate() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"reinstateConfirmation\"),\n      this.i18nService.t(\"reinstateSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"cancel\")\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.reinstatePromise = this.apiService.postReinstatePremium();\n      await this.reinstatePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"reinstated\"));\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  async cancel() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"manageSubscriptionFromStore\"),\n        this.i18nService.t(\"cancelSubscription\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"cancelConfirmation\"),\n      this.i18nService.t(\"cancelSubscription\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\"\n    );\n    if (!confirmed) {\n      return;\n    }\n\n    try {\n      this.cancelPromise = this.apiService.postCancelPremium();\n      await this.cancelPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(\"canceledSubscription\")\n      );\n      this.load();\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  downloadLicense() {\n    if (this.loading) {\n      return;\n    }\n\n    const licenseString = JSON.stringify(this.sub.license, null, 2);\n    this.fileDownloadService.download({\n      fileName: \"bitwarden_premium_license.json\",\n      blobData: licenseString,\n    });\n  }\n\n  updateLicense() {\n    if (this.loading) {\n      return;\n    }\n    this.showUpdateLicense = true;\n  }\n\n  closeUpdateLicense(load: boolean) {\n    this.showUpdateLicense = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  adjustStorage(add: boolean) {\n    if (this.usingInAppPurchase) {\n      this.platformUtilsService.showDialog(\n        this.i18nService.t(\"cannotPerformInAppPurchase\"),\n        this.i18nService.t(add ? \"addStorage\" : \"removeStorage\"),\n        null,\n        null,\n        \"warning\"\n      );\n      return;\n    }\n    this.adjustStorageAdd = add;\n    this.showAdjustStorage = true;\n  }\n\n  closeStorage(load: boolean) {\n    this.showAdjustStorage = false;\n    if (load) {\n      this.load();\n    }\n  }\n\n  get subscriptionMarkedForCancel() {\n    return (\n      this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate\n    );\n  }\n\n  get subscription() {\n    return this.sub != null ? this.sub.subscription : null;\n  }\n\n  get nextInvoice() {\n    return this.sub != null ? this.sub.upcomingInvoice : null;\n  }\n\n  get storagePercentage() {\n    return this.sub != null && this.sub.maxStorageGb\n      ? +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2)\n      : 0;\n  }\n\n  get storageProgressWidth() {\n    return this.storagePercentage < 5 ? 5 : 0;\n  }\n\n  get usingInAppPurchase() {\n    return this.sub != null ? this.sub.usingInAppPurchase : false;\n  }\n\n  get title(): string {\n    return this.i18nService.t(this.selfHosted ? \"subscription\" : \"premiumMembership\");\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { BillingHistoryViewComponent } from \"./billing-history-view.component\";\nimport { PaymentMethodComponent } from \"./payment-method.component\";\nimport { PremiumComponent } from \"./premium.component\";\nimport { SubscriptionComponent } from \"./subscription.component\";\nimport { UserSubscriptionComponent } from \"./user-subscription.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: SubscriptionComponent,\n    data: { titleId: \"subscription\" },\n    children: [\n      { path: \"\", pathMatch: \"full\", redirectTo: \"premium\" },\n      {\n        path: \"user-subscription\",\n        component: UserSubscriptionComponent,\n        data: { titleId: \"premiumMembership\" },\n      },\n      {\n        path: \"premium\",\n        component: PremiumComponent,\n        data: { titleId: \"goPremium\" },\n      },\n      {\n        path: \"payment-method\",\n        component: PaymentMethodComponent,\n        data: { titleId: \"paymentMethod\" },\n      },\n      {\n        path: \"billing-history\",\n        component: BillingHistoryViewComponent,\n        data: { titleId: \"billingHistory\" },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SubscriptionRoutingModule {}\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { first } from \"rxjs/operators\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { EmailForwarderOptions } from \"@bitwarden/common/models/domain/email-forwarder-options\";\nimport { PasswordGeneratorPolicyOptions } from \"@bitwarden/common/models/domain/password-generator-policy-options\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\nimport { UsernameGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/username\";\n\n@Directive()\nexport class GeneratorComponent implements OnInit {\n  @Input() comingFromAddEdit = false;\n  @Input() type: string;\n  @Output() onSelected = new EventEmitter<string>();\n\n  usernameGeneratingPromise: Promise<string>;\n  typeOptions: any[];\n  passTypeOptions: any[];\n  usernameTypeOptions: any[];\n  subaddressOptions: any[];\n  catchallOptions: any[];\n  forwardOptions: EmailForwarderOptions[];\n  usernameOptions: any = {};\n  passwordOptions: any = {};\n  username = \"-\";\n  password = \"-\";\n  showOptions = false;\n  avoidAmbiguous = false;\n  enforcedPasswordPolicyOptions: PasswordGeneratorPolicyOptions;\n  usernameWebsite: string = null;\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationServiceAbstraction,\n    protected usernameGenerationService: UsernameGenerationServiceAbstraction,\n    protected platformUtilsService: PlatformUtilsService,\n    protected stateService: StateService,\n    protected i18nService: I18nService,\n    protected logService: LogService,\n    protected route: ActivatedRoute,\n    private win: Window\n  ) {\n    this.typeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"username\"), value: \"username\" },\n    ];\n    this.passTypeOptions = [\n      { name: i18nService.t(\"password\"), value: \"password\" },\n      { name: i18nService.t(\"passphrase\"), value: \"passphrase\" },\n    ];\n    this.usernameTypeOptions = [\n      {\n        name: i18nService.t(\"plusAddressedEmail\"),\n        value: \"subaddress\",\n        desc: i18nService.t(\"plusAddressedEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"catchallEmail\"),\n        value: \"catchall\",\n        desc: i18nService.t(\"catchallEmailDesc\"),\n      },\n      {\n        name: i18nService.t(\"forwardedEmail\"),\n        value: \"forwarded\",\n        desc: i18nService.t(\"forwardedEmailDesc\"),\n      },\n      { name: i18nService.t(\"randomWord\"), value: \"word\" },\n    ];\n    this.subaddressOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.catchallOptions = [{ name: i18nService.t(\"random\"), value: \"random\" }];\n    this.initForwardOptions();\n  }\n\n  async ngOnInit() {\n    // eslint-disable-next-line rxjs/no-async-subscribe\n    this.route.queryParams.pipe(first()).subscribe(async (qParams) => {\n      const passwordOptionsResponse = await this.passwordGenerationService.getOptions();\n      this.passwordOptions = passwordOptionsResponse[0];\n      this.enforcedPasswordPolicyOptions = passwordOptionsResponse[1];\n      this.avoidAmbiguous = !this.passwordOptions.ambiguous;\n      this.passwordOptions.type =\n        this.passwordOptions.type === \"passphrase\" ? \"passphrase\" : \"password\";\n\n      this.usernameOptions = await this.usernameGenerationService.getOptions();\n      if (this.usernameOptions.type == null) {\n        this.usernameOptions.type = \"word\";\n      }\n      if (\n        this.usernameOptions.subaddressEmail == null ||\n        this.usernameOptions.subaddressEmail === \"\"\n      ) {\n        this.usernameOptions.subaddressEmail = await this.stateService.getEmail();\n      }\n      if (this.usernameWebsite == null) {\n        this.usernameOptions.subaddressType = this.usernameOptions.catchallType = \"random\";\n      } else {\n        this.usernameOptions.website = this.usernameWebsite;\n        const websiteOption = { name: this.i18nService.t(\"websiteName\"), value: \"website-name\" };\n        this.subaddressOptions.push(websiteOption);\n        this.catchallOptions.push(websiteOption);\n      }\n\n      if (this.type !== \"username\" && this.type !== \"password\") {\n        if (qParams.type === \"username\" || qParams.type === \"password\") {\n          this.type = qParams.type;\n        } else {\n          const generatorOptions = await this.stateService.getGeneratorOptions();\n          this.type = generatorOptions?.type ?? \"password\";\n        }\n      }\n      if (this.regenerateWithoutButtonPress()) {\n        await this.regenerate();\n      }\n    });\n  }\n\n  async typeChanged() {\n    await this.stateService.setGeneratorOptions({ type: this.type });\n    if (this.regenerateWithoutButtonPress()) {\n      await this.regenerate();\n    }\n  }\n\n  async regenerate() {\n    if (this.type === \"password\") {\n      await this.regeneratePassword();\n    } else if (this.type === \"username\") {\n      await this.regenerateUsername();\n    }\n  }\n\n  async sliderChanged() {\n    this.savePasswordOptions(false);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  async sliderInput() {\n    this.normalizePasswordOptions();\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n  }\n\n  async savePasswordOptions(regenerate = true) {\n    this.normalizePasswordOptions();\n    await this.passwordGenerationService.saveOptions(this.passwordOptions);\n\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regeneratePassword();\n    }\n  }\n\n  async saveUsernameOptions(regenerate = true) {\n    await this.usernameGenerationService.saveOptions(this.usernameOptions);\n    if (this.usernameOptions.type === \"forwarded\") {\n      this.username = \"-\";\n    }\n    if (regenerate && this.regenerateWithoutButtonPress()) {\n      await this.regenerateUsername();\n    }\n  }\n\n  async regeneratePassword() {\n    this.password = await this.passwordGenerationService.generatePassword(this.passwordOptions);\n    await this.passwordGenerationService.addHistory(this.password);\n  }\n\n  regenerateUsername() {\n    return this.generateUsername();\n  }\n\n  async generateUsername() {\n    try {\n      this.usernameGeneratingPromise = this.usernameGenerationService.generateUsername(\n        this.usernameOptions\n      );\n      this.username = await this.usernameGeneratingPromise;\n      if (this.username === \"\" || this.username === null) {\n        this.username = \"-\";\n      }\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  copy() {\n    const password = this.type === \"password\";\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(\n      password ? this.password : this.username,\n      copyOptions\n    );\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(password ? \"password\" : \"username\"))\n    );\n  }\n\n  select() {\n    this.onSelected.emit(this.type === \"password\" ? this.password : this.username);\n  }\n\n  toggleOptions() {\n    this.showOptions = !this.showOptions;\n  }\n\n  regenerateWithoutButtonPress() {\n    return this.type !== \"username\" || this.usernameOptions.type !== \"forwarded\";\n  }\n\n  private normalizePasswordOptions() {\n    // Application level normalize options depedent on class variables\n    this.passwordOptions.ambiguous = !this.avoidAmbiguous;\n\n    if (\n      !this.passwordOptions.uppercase &&\n      !this.passwordOptions.lowercase &&\n      !this.passwordOptions.number &&\n      !this.passwordOptions.special\n    ) {\n      this.passwordOptions.lowercase = true;\n      if (this.win != null) {\n        const lowercase = this.win.document.querySelector(\"#lowercase\") as HTMLInputElement;\n        if (lowercase) {\n          lowercase.checked = true;\n        }\n      }\n    }\n\n    this.passwordGenerationService.normalizeOptions(\n      this.passwordOptions,\n      this.enforcedPasswordPolicyOptions\n    );\n  }\n\n  private async initForwardOptions() {\n    this.forwardOptions = [\n      { name: \"AnonAddy\", value: \"anonaddy\", validForSelfHosted: true },\n      { name: \"DuckDuckGo\", value: \"duckduckgo\", validForSelfHosted: false },\n      { name: \"Fastmail\", value: \"fastmail\", validForSelfHosted: true },\n      { name: \"Firefox Relay\", value: \"firefoxrelay\", validForSelfHosted: false },\n      { name: \"SimpleLogin\", value: \"simplelogin\", validForSelfHosted: true },\n    ];\n\n    this.usernameOptions = await this.usernameGenerationService.getOptions();\n    if (\n      this.usernameOptions.forwardedService == null ||\n      this.usernameOptions.forwardedService === \"\"\n    ) {\n      this.forwardOptions.push({ name: \"\", value: null, validForSelfHosted: false });\n    }\n\n    this.forwardOptions = this.forwardOptions.sort((a, b) => a.name.localeCompare(b.name));\n  }\n}\n","import { Directive, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport {\n  GeneratedPasswordHistory,\n  PasswordGenerationServiceAbstraction,\n} from \"@bitwarden/common/tools/generator/password\";\n\n@Directive()\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n  history: GeneratedPasswordHistory[] = [];\n\n  constructor(\n    protected passwordGenerationService: PasswordGenerationServiceAbstraction,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    private win: Window\n  ) {}\n\n  async ngOnInit() {\n    this.history = await this.passwordGenerationService.getHistory();\n  }\n\n  clear() {\n    this.history = [];\n    this.passwordGenerationService.clear();\n  }\n\n  copy(password: string) {\n    const copyOptions = this.win != null ? { window: this.win } : null;\n    this.platformUtilsService.copyToClipboard(password, copyOptions);\n    this.platformUtilsService.showToast(\n      \"info\",\n      null,\n      this.i18nService.t(\"valueCopied\", this.i18nService.t(\"password\"))\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\n\n@Directive({\n  selector: \"[appSelectCopy]\",\n})\nexport class SelectCopyDirective {\n  constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) {}\n\n  @HostListener(\"copy\") onCopy() {\n    if (window == null) {\n      return;\n    }\n    let copyText = \"\";\n    const selection = window.getSelection();\n    for (let i = 0; i < selection.rangeCount; i++) {\n      const range = selection.getRangeAt(i);\n      const text = range.toString();\n\n      // The selection should only contain one line of text. In some cases however, the\n      // selection contains newlines and space characters from the indentation of following\n      // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n      // that aren't part of the password, the selection has to be trimmed.\n      let stringEndPos = text.length;\n      const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n      if (newLinePos > -1) {\n        const otherPart = text.substr(newLinePos).trim();\n        if (otherPart === \"\") {\n          stringEndPos = newLinePos;\n        }\n      }\n      copyText += text.substring(0, stringEndPos);\n    }\n    this.platformUtilsService.copyToClipboard(copyText, { window: window });\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable @angular-eslint/template/button-has-type -->\n<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"passHistoryTitle\">{{ \"passwordHistory\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"history.length\">\n        <ul class=\"list-group list-group-flush\">\n          <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n            <div class=\"tw-min-w-0\">\n              <bit-color-password\n                [password]=\"h.password\"\n                class=\"tw-block tw-font-mono\"\n                appSelectCopy\n              ></bit-color-password>\n              <small class=\"text-muted\">{{ h.date | date: \"medium\" }}</small>\n            </div>\n            <div class=\"ml-auto\">\n              <button\n                class=\"btn btn-link\"\n                appA11yTitle=\"{{ 'copyPassword' | i18n }}\"\n                (click)=\"copy(h.password)\"\n              >\n                <i class=\"bwi bwi-lg bwi-clone\" aria-hidden=\"true\"></i>\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n      <div class=\"modal-body\" *ngIf=\"!history.length\">\n        {{ \"noPasswordsInList\" | i18n }}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            type=\"button\"\n            (click)=\"clear()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'clear' | i18n }}\"\n          >\n            <i class=\"bwi bwi-trash bwi-lg bwi-fw\" aria-hidden=\"true\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent } from \"@bitwarden/angular/tools/generator/components/password-generator-history.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\n\n@Component({\n  selector: \"app-password-generator-history\",\n  templateUrl: \"password-generator-history.component.html\",\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n  constructor(\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService\n  ) {\n    super(passwordGenerationService, platformUtilsService, i18nService, window);\n  }\n}\n","<div class=\"page-header\">\n  <h1>{{ \"generator\" | i18n }}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPasswordPolicyOptions?.inEffect() && type === 'password'\">\n  {{ \"passwordGeneratorPolicyInEffect\" | i18n }}\n</app-callout>\n<div class=\"card card-generated bg-light my-4\">\n  <div class=\"card-body\">\n    <bit-color-password\n      [password]=\"type === 'password' ? password : username\"\n      appSelectCopy\n    ></bit-color-password>\n  </div>\n</div>\n<div class=\"form-group\" role=\"radiogroup\" aria-labelledby=\"typeHeading\">\n  <label id=\"typeHeading\" class=\"d-block\">{{ \"whatWouldYouLikeToGenerate\" | i18n }}</label>\n  <div class=\"form-check form-check-inline\" *ngFor=\"let o of typeOptions\">\n    <input\n      class=\"form-check-input\"\n      type=\"radio\"\n      [(ngModel)]=\"type\"\n      name=\"Type\"\n      id=\"type_{{ o.value }}\"\n      [value]=\"o.value\"\n      (change)=\"typeChanged()\"\n      [checked]=\"type === o.value\"\n    />\n    <label class=\"form-check-label\" for=\"type_{{ o.value }}\">\n      {{ o.name }}\n    </label>\n  </div>\n</div>\n<ng-container *ngIf=\"type === 'password'\">\n  <div aria-labelledby=\"passwordTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <label id=\"passwordTypeHeading\" class=\"d-block\">{{ \"passwordType\" | i18n }}</label>\n    <div class=\"form-check form-check-inline\" *ngFor=\"let o of passTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"passwordOptions.type\"\n        name=\"PasswordType\"\n        id=\"passwordType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"savePasswordOptions()\"\n        [checked]=\"passwordOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"passwordType_{{ o.value }}\">\n        {{ o.name }}\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"passwordOptions.type === 'passphrase'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"num-words\">{{ \"numWords\" | i18n }}</label>\n        <input\n          id=\"num-words\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"3\"\n          max=\"20\"\n          [(ngModel)]=\"passwordOptions.numWords\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"word-separator\">{{ \"wordSeparator\" | i18n }}</label>\n        <input\n          id=\"word-separator\"\n          class=\"form-control\"\n          type=\"text\"\n          maxlength=\"1\"\n          [(ngModel)]=\"passwordOptions.wordSeparator\"\n          (blur)=\"savePasswordOptions()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"capitalize\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.capitalize\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.capitalize\"\n        />\n        <label for=\"capitalize\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"include-number\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.includeNumber\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.includeNumber\"\n        />\n        <label for=\"include-number\" class=\"form-check-label\">{{ \"includeNumber\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"passwordOptions.type === 'password'\">\n    <div class=\"row\">\n      <div class=\"form-group col-4\">\n        <label for=\"length\">{{ \"length\" | i18n }}</label>\n        <input\n          id=\"length\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"5\"\n          max=\"128\"\n          [(ngModel)]=\"passwordOptions.length\"\n          (blur)=\"savePasswordOptions()\"\n          (change)=\"lengthChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-number\">{{ \"minNumbers\" | i18n }}</label>\n        <input\n          id=\"min-number\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minNumber\"\n          (change)=\"minNumberChanged()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"min-special\">{{ \"minSpecial\" | i18n }}</label>\n        <input\n          id=\"min-special\"\n          class=\"form-control\"\n          type=\"number\"\n          min=\"0\"\n          max=\"9\"\n          (blur)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.minSpecial\"\n          (change)=\"minSpecialChanged()\"\n        />\n      </div>\n    </div>\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          id=\"uppercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.uppercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useUppercase\"\n          attr.aria-label=\"{{ 'uppercase' | i18n }}\"\n        />\n        <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"lowercase\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.lowercase\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useLowercase\"\n          attr.aria-label=\"{{ 'lowercase' | i18n }}\"\n        />\n        <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"numbers\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.number\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useNumbers\"\n          attr.aria-label=\"{{ 'numbers' | i18n }}\"\n        />\n        <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"special\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"passwordOptions.special\"\n          [disabled]=\"enforcedPasswordPolicyOptions?.useSpecial\"\n          attr.aria-label=\"{{ 'specialCharacters' | i18n }}\"\n        />\n        <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n      </div>\n      <div class=\"form-check\">\n        <input\n          id=\"ambiguous\"\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          (change)=\"savePasswordOptions()\"\n          [(ngModel)]=\"avoidAmbiguous\"\n        />\n        <label for=\"ambiguous\" class=\"form-check-label\">{{ \"ambiguous\" | i18n }}</label>\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"d-flex\">\n    <div>\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n        {{ \"regeneratePassword\" | i18n }}\n      </button>\n      <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n        {{ \"copyPassword\" | i18n }}\n      </button>\n    </div>\n    <div class=\"ml-auto\">\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-secondary\"\n        (click)=\"history()\"\n        appA11yTitle=\"{{ 'passwordHistory' | i18n }}\"\n      >\n        <i class=\"bwi bwi-clock bwi-lg\" aria-hidden=\"true\"></i>\n      </button>\n    </div>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"type === 'username'\">\n  <div aria-labelledby=\"usernameTypeHeading\" class=\"form-group\" role=\"radiogroup\">\n    <div class=\"d-block\">\n      <label id=\"usernameTypeHeading\">{{ \"usernameType\" | i18n }}</label>\n      <a\n        class=\"ml-auto\"\n        href=\"https://bitwarden.com/help/generator/#username-types\"\n        target=\"_blank\"\n        rel=\"noopener\"\n        appA11yTitle=\"{{ 'learnMore' | i18n }}\"\n      >\n        <i class=\"bwi bwi-question-circle\" aria-hidden=\"true\"></i>\n      </a>\n    </div>\n    <div class=\"form-check\" *ngFor=\"let o of usernameTypeOptions\">\n      <input\n        class=\"form-check-input\"\n        type=\"radio\"\n        [(ngModel)]=\"usernameOptions.type\"\n        name=\"UsernameType\"\n        id=\"usernameType_{{ o.value }}\"\n        [value]=\"o.value\"\n        (change)=\"saveUsernameOptions()\"\n        [checked]=\"usernameOptions.type === o.value\"\n      />\n      <label class=\"form-check-label\" for=\"usernameType_{{ o.value }}\">\n        {{ o.name }}\n        <div class=\"small text-muted\">{{ o.desc }}</div>\n      </label>\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'forwarded'\">\n    <div class=\"form-group\" role=\"listbox\">\n      <label class=\"d-block\">{{ \"service\" | i18n }}</label>\n      <select\n        id=\"ForwardTypeDropdown\"\n        name=\"ForwardType\"\n        [(ngModel)]=\"usernameOptions.forwardedService\"\n        (change)=\"saveUsernameOptions()\"\n        class=\"form-control w-auto\"\n      >\n        <option *ngFor=\"let o of forwardOptions\" [ngValue]=\"o.value\" role=\"option\">\n          {{ o.name }}\n        </option>\n      </select>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'simplelogin'\">\n      <div class=\"form-group col-4\">\n        <label for=\"simplelogin-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"simplelogin-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedSimpleLoginApiKey\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'duckduckgo'\">\n      <div class=\"form-group col-4\">\n        <label for=\"duckduckgo-apikey\">{{ \"apiKey\" | i18n }}</label>\n        <input\n          id=\"duckduckgo-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"DuckDuckGoApiKey\"\n          [(ngModel)]=\"usernameOptions.forwardedDuckDuckGoToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'anonaddy'\">\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"anonaddy-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n      <div class=\"form-group col-4\">\n        <label for=\"anonaddy-domain\">{{ \"domainName\" | i18n }}</label>\n        <input\n          id=\"anonaddy-domain\"\n          class=\"form-control\"\n          type=\"text\"\n          [(ngModel)]=\"usernameOptions.forwardedAnonAddyDomain\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'firefoxrelay'\">\n      <div class=\"form-group col-4\">\n        <label for=\"firefox-apikey\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"firefox-apikey\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFirefoxApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"usernameOptions.forwardedService === 'fastmail'\">\n      <div class=\"form-group col-4\">\n        <label for=\"fastmail-apiToken\">{{ \"apiAccessToken\" | i18n }}</label>\n        <input\n          id=\"fastmail-apiToken\"\n          class=\"form-control\"\n          type=\"password\"\n          [(ngModel)]=\"usernameOptions.forwardedFastmailApiToken\"\n          (blur)=\"saveUsernameOptions()\"\n        />\n      </div>\n    </div>\n  </ng-container>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'subaddress'\">\n    <div class=\"form-group col-4\">\n      <label for=\"subaddress-email\">{{ \"emailAddress\" | i18n }}</label>\n      <input\n        id=\"subaddress-email\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.subaddressEmail\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <div class=\"row\" *ngIf=\"usernameOptions.type === 'catchall'\">\n    <div class=\"form-group col-4\">\n      <label for=\"catchall-domain\">{{ \"domainName\" | i18n }}</label>\n      <input\n        id=\"catchall-domain\"\n        class=\"form-control\"\n        type=\"text\"\n        [(ngModel)]=\"usernameOptions.catchallDomain\"\n        (blur)=\"saveUsernameOptions()\"\n      />\n    </div>\n  </div>\n  <ng-container *ngIf=\"usernameOptions.type === 'word'\">\n    <label class=\"d-block\">{{ \"options\" | i18n }}</label>\n    <div class=\"row\">\n      <div class=\"form-group\">\n        <div class=\"form-check\">\n          <input\n            id=\"capitalizeUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordCapitalize\"\n          />\n          <label for=\"capitalizeUsername\" class=\"form-check-label\">{{ \"capitalize\" | i18n }}</label>\n        </div>\n        <div class=\"form-check\">\n          <input\n            id=\"includeNumberUsername\"\n            type=\"checkbox\"\n            (change)=\"saveUsernameOptions()\"\n            [(ngModel)]=\"usernameOptions.wordIncludeNumber\"\n          />\n          <label for=\"includeNumberUsername\" class=\"form-check-label\">{{\n            \"includeNumber\" | i18n\n          }}</label>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <div #form [appApiAction]=\"usernameGeneratingPromise\">\n    <button\n      type=\"button\"\n      class=\"btn btn-submit btn-primary\"\n      (click)=\"$any(form).loading ? false : regenerate()\"\n      [attr.aria-disabled]=\"$any(form).loading ? 'true' : null\"\n    >\n      <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n      <span>{{ \"regenerateUsername\" | i18n }}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n      {{ \"copyUsername\" | i18n }}\n    </button>\n  </div>\n</ng-container>\n<ng-template #historyTemplate></ng-template>\n","import { Component, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { GeneratorComponent as BaseGeneratorComponent } from \"@bitwarden/angular/tools/generator/components/generator.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\nimport { UsernameGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/username\";\n\nimport { PasswordGeneratorHistoryComponent } from \"./password-generator-history.component\";\n\n@Component({\n  selector: \"app-generator\",\n  templateUrl: \"generator.component.html\",\n})\nexport class GeneratorComponent extends BaseGeneratorComponent {\n  @ViewChild(\"historyTemplate\", { read: ViewContainerRef, static: true })\n  historyModalRef: ViewContainerRef;\n\n  constructor(\n    passwordGenerationService: PasswordGenerationServiceAbstraction,\n    usernameGenerationService: UsernameGenerationServiceAbstraction,\n    stateService: StateService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    logService: LogService,\n    route: ActivatedRoute,\n    private modalService: ModalService\n  ) {\n    super(\n      passwordGenerationService,\n      usernameGenerationService,\n      platformUtilsService,\n      stateService,\n      i18nService,\n      logService,\n      route,\n      window\n    );\n    if (true) {\n      // Allow only valid email forwarders for self host\n      this.forwardOptions = this.forwardOptions.filter((forwarder) => forwarder.validForSelfHosted);\n    }\n  }\n\n  async history() {\n    await this.modalService.openViewRef(PasswordGeneratorHistoryComponent, this.historyModalRef);\n  }\n\n  lengthChanged() {\n    document.getElementById(\"length\").focus();\n  }\n\n  minNumberChanged() {\n    document.getElementById(\"min-number\").focus();\n  }\n\n  minSpecialChanged() {\n    document.getElementById(\"min-special\").focus();\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\n\n@Component({\n  selector: \"app-tools\",\n  templateUrl: \"tools.component.html\",\n})\nexport class ToolsComponent implements OnInit {\n  canAccessPremium = false;\n\n  constructor(private stateService: StateService, private messagingService: MessagingService) {}\n\n  async ngOnInit() {\n    this.canAccessPremium = await this.stateService.getCanAccessPremium();\n  }\n\n  premiumRequired() {\n    if (!this.canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    }\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"card mb-4\">\n        <div class=\"card-header\">{{ \"tools\" | i18n }}</div>\n        <div class=\"list-group list-group-flush\">\n          <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"generator\" | i18n }}\n          </a>\n          <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"importData\" | i18n }}\n          </a>\n          <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n            {{ \"exportVault\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-9\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { BulkDeleteDialogComponent } from \"./bulk-delete-dialog/bulk-delete-dialog.component\";\nimport { BulkMoveDialogComponent } from \"./bulk-move-dialog/bulk-move-dialog.component\";\nimport { BulkRestoreDialogComponent } from \"./bulk-restore-dialog/bulk-restore-dialog.component\";\nimport { BulkShareDialogComponent } from \"./bulk-share-dialog/bulk-share-dialog.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [\n    BulkDeleteDialogComponent,\n    BulkMoveDialogComponent,\n    BulkRestoreDialogComponent,\n    BulkShareDialogComponent,\n  ],\n  exports: [\n    BulkDeleteDialogComponent,\n    BulkMoveDialogComponent,\n    BulkRestoreDialogComponent,\n    BulkShareDialogComponent,\n  ],\n})\nexport class BulkDialogsModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { VaultFilterSharedModule } from \"../../individual-vault/vault-filter/shared/vault-filter-shared.module\";\n\nimport { LinkSsoComponent } from \"./components/link-sso.component\";\nimport { OrganizationOptionsComponent } from \"./components/organization-options.component\";\nimport { VaultFilterComponent } from \"./components/vault-filter.component\";\nimport { VaultFilterService as VaultFilterServiceAbstraction } from \"./services/abstractions/vault-filter.service\";\nimport { VaultFilterService } from \"./services/vault-filter.service\";\n\n@NgModule({\n  imports: [VaultFilterSharedModule],\n  declarations: [VaultFilterComponent, OrganizationOptionsComponent, LinkSsoComponent],\n  exports: [VaultFilterComponent],\n  providers: [\n    {\n      provide: VaultFilterServiceAbstraction,\n      useClass: VaultFilterService,\n    },\n  ],\n})\nexport class VaultFilterModule {}\n","import { Component } from \"@angular/core\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { EncString } from \"@bitwarden/common/models/domain/enc-string\";\nimport { UpdateKeyRequest } from \"@bitwarden/common/models/request/update-key.request\";\nimport { CipherWithIdRequest } from \"@bitwarden/common/vault//models/request/cipher-with-id.request\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { FolderService } from \"@bitwarden/common/vault/abstractions/folder/folder.service.abstraction\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\nimport { FolderWithIdRequest } from \"@bitwarden/common/vault/models/request/folder-with-id.request\";\n\n@Component({\n  selector: \"app-update-key\",\n  templateUrl: \"update-key.component.html\",\n})\nexport class UpdateKeyComponent {\n  masterPassword: string;\n  formPromise: Promise<any>;\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private syncService: SyncService,\n    private folderService: FolderService,\n    private cipherService: CipherService,\n    private logService: LogService\n  ) {}\n\n  async submit() {\n    const hasEncKey = await this.cryptoService.hasEncKey();\n    if (hasEncKey) {\n      return;\n    }\n\n    if (this.masterPassword == null || this.masterPassword === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"masterPasswordRequired\")\n      );\n      return;\n    }\n\n    try {\n      this.formPromise = this.makeRequest().then((request) => {\n        return this.apiService.postAccountKey(request);\n      });\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        this.i18nService.t(\"keyUpdated\"),\n        this.i18nService.t(\"logBackInOthersToo\"),\n        { timeout: 15000 }\n      );\n      this.messagingService.send(\"logout\");\n    } catch (e) {\n      this.logService.error(e);\n    }\n  }\n\n  private async makeRequest(): Promise<UpdateKeyRequest> {\n    const key = await this.cryptoService.getKey();\n    const encKey = await this.cryptoService.makeEncKey(key);\n    const privateKey = await this.cryptoService.getPrivateKey();\n    let encPrivateKey: EncString = null;\n    if (privateKey != null) {\n      encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n    }\n    const request = new UpdateKeyRequest();\n    request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n    request.key = encKey[1].encryptedString;\n    request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n    await this.syncService.fullSync(true);\n\n    const folders = await firstValueFrom(this.folderService.folderViews$);\n    for (let i = 0; i < folders.length; i++) {\n      if (folders[i].id == null) {\n        continue;\n      }\n      const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n      request.folders.push(new FolderWithIdRequest(folder));\n    }\n\n    const ciphers = await this.cipherService.getAllDecrypted();\n    for (let i = 0; i < ciphers.length; i++) {\n      if (ciphers[i].organizationId != null) {\n        continue;\n      }\n      const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n      request.ciphers.push(new CipherWithIdRequest(cipher));\n    }\n\n    return request;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"updateEncKeyTitle\">{{ \"updateEncryptionKey\" | i18n }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <p>\n          {{ \"updateEncryptionKeyShortDesc\" | i18n }} {{ \"updateEncryptionKeyDesc\" | i18n }}\n          <a\n            href=\"https://bitwarden.com/help/account-encryption-key/#rotate-your-encryption-key\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            >{{ \"learnMore\" | i18n }}</a\n          >\n        </p>\n        <app-callout type=\"warning\">{{ \"updateEncryptionKeyWarning\" | i18n }}</app-callout>\n        <label for=\"masterPassword\">{{ \"masterPass\" | i18n }}</label>\n        <input\n          id=\"masterPassword\"\n          type=\"password\"\n          name=\"MasterPasswordHash\"\n          class=\"form-control\"\n          [(ngModel)]=\"masterPassword\"\n          required\n          appAutofocus\n          appInputVerbatim\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"updateEncryptionKey\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"close\" | i18n }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Directive, EventEmitter, Input, OnInit, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/vault/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/vault/abstractions/folder/folder.service.abstraction\";\nimport { FolderView } from \"@bitwarden/common/vault/models/view/folder.view\";\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n  @Input() folderId: string;\n  @Output() onSavedFolder = new EventEmitter<FolderView>();\n  @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n  editMode = false;\n  folder: FolderView = new FolderView();\n  title: string;\n  formPromise: Promise<any>;\n  deletePromise: Promise<any>;\n  protected componentName = \"\";\n\n  constructor(\n    protected folderService: FolderService,\n    protected folderApiService: FolderApiServiceAbstraction,\n    protected i18nService: I18nService,\n    protected platformUtilsService: PlatformUtilsService,\n    private logService: LogService\n  ) {}\n\n  async ngOnInit() {\n    await this.init();\n  }\n\n  async submit(): Promise<boolean> {\n    if (this.folder.name == null || this.folder.name === \"\") {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"nameRequired\")\n      );\n      return false;\n    }\n\n    try {\n      const folder = await this.folderService.encrypt(this.folder);\n      this.formPromise = this.folderApiService.save(folder);\n      await this.formPromise;\n      this.platformUtilsService.showToast(\n        \"success\",\n        null,\n        this.i18nService.t(this.editMode ? \"editedFolder\" : \"addedFolder\")\n      );\n      this.onSavedFolder.emit(this.folder);\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return false;\n  }\n\n  async delete(): Promise<boolean> {\n    const confirmed = await this.platformUtilsService.showDialog(\n      this.i18nService.t(\"deleteFolderConfirmation\"),\n      this.i18nService.t(\"deleteFolder\"),\n      this.i18nService.t(\"yes\"),\n      this.i18nService.t(\"no\"),\n      \"warning\",\n      false,\n      this.componentName != \"\" ? this.componentName + \" .modal-content\" : null\n    );\n    if (!confirmed) {\n      return false;\n    }\n\n    try {\n      this.deletePromise = this.folderApiService.delete(this.folder.id);\n      await this.deletePromise;\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"deletedFolder\"));\n      this.onDeletedFolder.emit(this.folder);\n    } catch (e) {\n      this.logService.error(e);\n    }\n\n    return true;\n  }\n\n  protected async init() {\n    this.editMode = this.folderId != null;\n\n    if (this.editMode) {\n      this.editMode = true;\n      this.title = this.i18nService.t(\"editFolder\");\n      const folder = await this.folderService.get(this.folderId);\n      this.folder = await folder.decrypt();\n    } else {\n      this.title = this.i18nService.t(\"addFolder\");\n    }\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable modal-sm\" role=\"document\">\n    <form\n      class=\"modal-content\"\n      #form\n      (ngSubmit)=\"submit()\"\n      [appApiAction]=\"formPromise\"\n      ngNativeValidate\n    >\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"folderAddEditTitle\">{{ title }}</h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <label for=\"name\">{{ \"name\" | i18n }}</label>\n        <input\n          id=\"name\"\n          class=\"form-control\"\n          type=\"text\"\n          name=\"Name\"\n          [(ngModel)]=\"folder.name\"\n          required\n          appAutofocus\n        />\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n          <i class=\"bwi bwi-spinner bwi-spin\" title=\"{{ 'loading' | i18n }}\" aria-hidden=\"true\"></i>\n          <span>{{ \"save\" | i18n }}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n          {{ \"cancel\" | i18n }}\n        </button>\n        <div class=\"ml-auto\">\n          <button\n            #deleteBtn\n            type=\"button\"\n            (click)=\"delete()\"\n            class=\"btn btn-outline-danger\"\n            appA11yTitle=\"{{ 'delete' | i18n }}\"\n            *ngIf=\"editMode\"\n            [disabled]=\"$any(deleteBtn).loading\"\n            [appApiAction]=\"deletePromise\"\n          >\n            <i\n              class=\"bwi bwi-trash bwi-lg bwi-fw\"\n              [hidden]=\"$any(deleteBtn).loading\"\n              aria-hidden=\"true\"\n            ></i>\n            <i\n              class=\"bwi bwi-spinner bwi-spin bwi-lg bwi-fw\"\n              [hidden]=\"!$any(deleteBtn).loading\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\nimport { FolderAddEditComponent as BaseFolderAddEditComponent } from \"@bitwarden/angular/vault/components/folder-add-edit.component\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { FolderApiServiceAbstraction } from \"@bitwarden/common/vault/abstractions/folder/folder-api.service.abstraction\";\nimport { FolderService } from \"@bitwarden/common/vault/abstractions/folder/folder.service.abstraction\";\n\n@Component({\n  selector: \"app-folder-add-edit\",\n  templateUrl: \"folder-add-edit.component.html\",\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n  protected override componentName = \"app-folder-add-edit\";\n  constructor(\n    folderService: FolderService,\n    folderApiService: FolderApiServiceAbstraction,\n    i18nService: I18nService,\n    platformUtilsService: PlatformUtilsService,\n    logService: LogService\n  ) {\n    super(folderService, folderApiService, i18nService, platformUtilsService, logService);\n  }\n}\n","import { Directive, EventEmitter, Input, OnDestroy, OnInit, Output } from \"@angular/core\";\nimport { firstValueFrom, map, Observable, Subject, takeUntil } from \"rxjs\";\n\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport {\n  isNotProviderUser,\n  OrganizationService,\n} from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { OrganizationUserStatusType } from \"@bitwarden/common/enums/organizationUserStatusType\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { Organization } from \"@bitwarden/common/models/domain/organization\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { Checkable, isChecked } from \"@bitwarden/common/types/checkable\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\n\n@Directive()\nexport class ShareComponent implements OnInit, OnDestroy {\n  @Input() cipherId: string;\n  @Input() organizationId: string;\n  @Output() onSharedCipher = new EventEmitter();\n\n  formPromise: Promise<void>;\n  cipher: CipherView;\n  collections: Checkable<CollectionView>[] = [];\n  organizations$: Observable<Organization[]>;\n\n  protected writeableCollections: Checkable<CollectionView>[] = [];\n\n  private _destroy = new Subject<void>();\n\n  constructor(\n    protected collectionService: CollectionService,\n    protected platformUtilsService: PlatformUtilsService,\n    protected i18nService: I18nService,\n    protected cipherService: CipherService,\n    private logService: LogService,\n    protected organizationService: OrganizationService\n  ) {}\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  ngOnDestroy(): void {\n    this._destroy.next();\n    this._destroy.complete();\n  }\n\n  async load() {\n    const allCollections = await this.collectionService.getAllDecrypted();\n    this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n\n    this.organizations$ = this.organizationService.organizations$.pipe(\n      map((orgs) => {\n        return orgs\n          .filter(\n            (o) =>\n              o.enabled && o.status === OrganizationUserStatusType.Confirmed && isNotProviderUser(o)\n          )\n          .sort(Utils.getSortFunction(this.i18nService, \"name\"));\n      })\n    );\n\n    this.organizations$.pipe(takeUntil(this._destroy)).subscribe((orgs) => {\n      if (this.organizationId == null && orgs.length > 0) {\n        this.organizationId = orgs[0].id;\n      }\n    });\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    this.cipher = await cipherDomain.decrypt();\n\n    this.filterCollections();\n  }\n\n  filterCollections() {\n    this.writeableCollections.forEach((c) => (c.checked = false));\n    if (this.organizationId == null || this.writeableCollections.length === 0) {\n      this.collections = [];\n    } else {\n      this.collections = this.writeableCollections.filter(\n        (c) => c.organizationId === this.organizationId\n      );\n    }\n  }\n\n  async submit(): Promise<boolean> {\n    const selectedCollectionIds = this.collections.filter(isChecked).map((c) => c.id);\n    if (selectedCollectionIds.length === 0) {\n      this.platformUtilsService.showToast(\n        \"error\",\n        this.i18nService.t(\"errorOccurred\"),\n        this.i18nService.t(\"selectOneCollection\")\n      );\n      return;\n    }\n\n    const cipherDomain = await this.cipherService.get(this.cipherId);\n    const cipherView = await cipherDomain.decrypt();\n    const orgs = await firstValueFrom(this.organizations$);\n    const orgName =\n      orgs.find((o) => o.id === this.organizationId)?.name ?? this.i18nService.t(\"organization\");\n\n    try {\n      this.formPromise = this.cipherService\n        .shareWithServer(cipherView, this.organizationId, selectedCollectionIds)\n        .then(async () => {\n          this.onSharedCipher.emit();\n          this.platformUtilsService.showToast(\n            \"success\",\n            null,\n            this.i18nService.t(\"movedItemToOrg\", cipherView.name, orgName)\n          );\n        });\n      await this.formPromise;\n      return true;\n    } catch (e) {\n      this.logService.error(e);\n    }\n    return false;\n  }\n\n  get canSave() {\n    if (this.collections != null) {\n      for (let i = 0; i < this.collections.length; i++) {\n        if (this.collections[i].checked) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n","<div class=\"modal fade\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n  <div class=\"modal-dialog modal-dialog-scrollable\" role=\"document\">\n    <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n      <div class=\"modal-header\">\n        <h1 class=\"modal-title\" id=\"shareTitle\">\n          {{ \"moveToOrganization\" | i18n }}\n          <small *ngIf=\"cipher\">{{ cipher.name }}</small>\n        </h1>\n        <button\n          type=\"button\"\n          class=\"close\"\n          data-dismiss=\"modal\"\n          appA11yTitle=\"{{ 'close' | i18n }}\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <ng-container *ngIf=\"organizations$ | async as organizations\">\n        <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n          {{ \"noOrganizationsList\" | i18n }}\n        </div>\n        <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n          <p>{{ \"moveToOrgDesc\" | i18n }}</p>\n          <div class=\"form-group\">\n            <label for=\"organization\">{{ \"organization\" | i18n }}</label>\n            <select\n              id=\"organization\"\n              name=\"OrganizationId\"\n              [(ngModel)]=\"organizationId\"\n              class=\"form-control\"\n              (change)=\"filterCollections()\"\n            >\n              <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{ o.name }}</option>\n            </select>\n          </div>\n          <div class=\"d-flex\">\n            <h3>{{ \"collections\" | i18n }}</h3>\n            <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n              <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"selectAll\" | i18n }}\n              </button>\n              <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                {{ \"unselectAll\" | i18n }}\n              </button>\n            </div>\n          </div>\n          <div *ngIf=\"!collections || !collections.length\">\n            {{ \"noCollectionsInList\" | i18n }}\n          </div>\n          <table\n            class=\"table table-hover table-list mb-0\"\n            *ngIf=\"collections && collections.length\"\n          >\n            <tbody>\n              <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n                <td class=\"table-list-checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    [(ngModel)]=\"c.checked\"\n                    name=\"Collection[{{ i }}].Checked\"\n                    appStopProp\n                  />\n                </td>\n                <td>\n                  {{ c.name }}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class=\"modal-footer\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary btn-submit manual\"\n            [disabled]=\"form.loading || !canSave\"\n            [ngClass]=\"{ loading: form.loading }\"\n            *ngIf=\"organizations && organizations.length\"\n          >\n            <i\n              class=\"bwi bwi-spinner bwi-spin\"\n              title=\"{{ 'loading' | i18n }}\"\n              aria-hidden=\"true\"\n            ></i>\n            <span>{{ \"save\" | i18n }}</span>\n          </button>\n          <a\n            href=\"#\"\n            routerLink=\"/create-organization\"\n            class=\"btn btn-primary\"\n            *ngIf=\"!organizations || !organizations.length\"\n          >\n            {{ \"newOrganization\" | i18n }}\n          </a>\n          <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n            {{ \"cancel\" | i18n }}\n          </button>\n        </div>\n      </ng-container>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy } from \"@angular/core\";\n\nimport { ShareComponent as BaseShareComponent } from \"@bitwarden/angular/components/share.component\";\nimport { CollectionService } from \"@bitwarden/common/abstractions/collection.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { CollectionView } from \"@bitwarden/common/models/view/collection.view\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\n\n@Component({\n  selector: \"app-vault-share\",\n  templateUrl: \"share.component.html\",\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n  constructor(\n    collectionService: CollectionService,\n    platformUtilsService: PlatformUtilsService,\n    i18nService: I18nService,\n    cipherService: CipherService,\n    organizationService: OrganizationService,\n    logService: LogService\n  ) {\n    super(\n      collectionService,\n      platformUtilsService,\n      i18nService,\n      cipherService,\n      logService,\n      organizationService\n    );\n  }\n\n  ngOnDestroy() {\n    this.selectAll(false);\n  }\n\n  check(c: CollectionView, select?: boolean) {\n    (c as any).checked = select == null ? !(c as any).checked : select;\n  }\n\n  selectAll(select: boolean) {\n    const collections = select ? this.collections : this.writeableCollections;\n    collections.forEach((c) => this.check(c, select));\n  }\n}\n","import { Component, EventEmitter, Output } from \"@angular/core\";\n\nimport { ApiService } from \"@bitwarden/common/abstractions/api.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { TokenService } from \"@bitwarden/common/auth/abstractions/token.service\";\n\n@Component({\n  selector: \"app-verify-email\",\n  templateUrl: \"verify-email.component.html\",\n})\nexport class VerifyEmailComponent {\n  actionPromise: Promise<unknown>;\n\n  @Output() onVerified = new EventEmitter<boolean>();\n\n  constructor(\n    private apiService: ApiService,\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService,\n    private logService: LogService,\n    private tokenService: TokenService\n  ) {}\n\n  async verifyEmail(): Promise<void> {\n    await this.apiService.refreshIdentityToken();\n    if (await this.tokenService.getEmailVerified()) {\n      this.onVerified.emit(true);\n      this.platformUtilsService.showToast(\"success\", null, this.i18nService.t(\"emailVerified\"));\n      return;\n    }\n\n    await this.apiService.postAccountVerifyEmail();\n    this.platformUtilsService.showToast(\n      \"success\",\n      null,\n      this.i18nService.t(\"checkInboxForVerification\")\n    );\n  }\n\n  send = async () => {\n    await this.verifyEmail();\n  };\n}\n","<div class=\"tw-rounded tw-border tw-border-solid tw-border-warning-500 tw-bg-background\">\n  <div class=\"tw-bg-warning-500 tw-px-5 tw-py-2.5 tw-font-bold tw-uppercase tw-text-contrast\">\n    <i class=\"bwi bwi-envelope bwi-fw\" aria-hidden=\"true\"></i> {{ \"verifyEmail\" | i18n }}\n  </div>\n  <div class=\"tw-p-5\">\n    <p>{{ \"verifyEmailDesc\" | i18n }}</p>\n    <button id=\"sendBtn\" bitButton type=\"button\" block [bitAction]=\"send\">\n      {{ \"sendEmail\" | i18n }}\n    </button>\n  </div>\n</div>\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-low-kdf\",\n  templateUrl: \"low-kdf.component.html\",\n})\nexport class LowKdfComponent {}\n","<div class=\"tw-mb-4 tw-flex tw-items-start tw-justify-between\">\n  <div>\n    <bit-breadcrumbs *ngIf=\"activeFilter.collectionBreadcrumbs.length > 0\">\n      <bit-breadcrumb\n        *ngFor=\"let collection of activeFilter.collectionBreadcrumbs; let first = first\"\n        [icon]=\"first ? undefined : 'bwi-collection'\"\n        (click)=\"applyCollectionFilter(collection)\"\n      >\n        <!-- First node in the tree is the \"Org Name Vault\" item. The rest come from user input. -->\n        <ng-container *ngIf=\"first\">\n          {{ activeOrganizationId | orgNameFromId: (organizations$ | async) }}\n          {{ \"vault\" | i18n | lowercase }}\n        </ng-container>\n        <ng-container *ngIf=\"!first\">{{ collection.node.name }}</ng-container>\n      </bit-breadcrumb>\n    </bit-breadcrumbs>\n    <h1 class=\"tw-mb-0 tw-mt-1 tw-flex tw-items-center tw-space-x-2\">\n      <i\n        *ngIf=\"activeFilter.isCollectionSelected\"\n        class=\"bwi bwi-collection\"\n        aria-hidden=\"true\"\n      ></i>\n      <span>{{ title }}</span>\n      <small #actionSpinner [appApiAction]=\"actionPromise\">\n        <ng-container *ngIf=\"$any(actionSpinner).loading\">\n          <i\n            class=\"bwi bwi-spinner bwi-spin text-muted\"\n            title=\"{{ 'loading' | i18n }}\"\n            aria-hidden=\"true\"\n          ></i>\n          <span class=\"sr-only\">{{ \"loading\" | i18n }}</span>\n        </ng-container>\n      </small>\n    </h1>\n  </div>\n\n  <div *ngIf=\"!activeFilter.isDeleted\" class=\"tw-shrink-0\">\n    <button type=\"button\" bitButton buttonType=\"primary\" (click)=\"addCipher()\">\n      <i class=\"bwi bwi-plus bwi-fw\" aria-hidden=\"true\"></i>\n      {{ \"newItem\" | i18n }}\n    </button>\n  </div>\n</div>\n","<div class=\"tw-rounded tw-border tw-border-solid tw-border-warning-500 tw-bg-background\">\n  <div class=\"tw-bg-warning-500 tw-px-5 tw-py-2.5 tw-font-bold tw-uppercase tw-text-contrast\">\n    <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n    {{ \"lowKdfIterations\" | i18n }}\n  </div>\n  <div class=\"tw-p-5\">\n    <p>{{ \"lowKdfIterationsDesc\" | i18n }}</p>\n    <a\n      bitButton\n      buttonType=\"secondary\"\n      [block]=\"true\"\n      routerLink=\"/settings/security/security-keys\"\n    >\n      {{ \"changeKdfSettings\" | i18n }}\n    </a>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\n\nimport { VaultFilter } from \"../vault-filter/shared/models/vault-filter.model\";\nimport { CollectionFilter } from \"../vault-filter/shared/models/vault-filter.type\";\n\n@Component({\n  selector: \"app-vault-header\",\n  templateUrl: \"./vault-header.component.html\",\n})\nexport class VaultHeaderComponent {\n  /**\n   * Promise that is used to determine the loading state of the header via the ApiAction directive.\n   * When the promise exists and is not resolved, the loading spinner will be shown.\n   */\n  @Input() actionPromise: Promise<any>;\n\n  /**\n   * The filter being actively applied to the vault view\n   */\n  @Input() activeFilter: VaultFilter;\n\n  /**\n   * Emits when the active filter has been modified by the header\n   */\n  @Output() activeFilterChanged = new EventEmitter<VaultFilter>();\n\n  /**\n   * Emits an event when the new item button is clicked in the header\n   */\n  @Output() onAddCipher = new EventEmitter<void>();\n\n  organizations$ = this.organizationService.organizations$;\n\n  constructor(private organizationService: OrganizationService, private i18nService: I18nService) {}\n\n  /**\n   * The id of the organization that is currently being filtered on.\n   * This can come from a collection filter or organization filter, if applied.\n   */\n  get activeOrganizationId() {\n    if (this.activeFilter.selectedCollectionNode != null) {\n      return this.activeFilter.selectedCollectionNode.node.organizationId;\n    }\n    if (this.activeFilter.selectedOrganizationNode != null) {\n      return this.activeFilter.selectedOrganizationNode.node.id;\n    }\n    return undefined;\n  }\n\n  get title() {\n    if (this.activeFilter.isCollectionSelected) {\n      if (this.activeFilter.isUnassignedCollectionSelected) {\n        return this.i18nService.t(\"unassigned\");\n      }\n      return this.activeFilter.selectedCollectionNode.node.name;\n    }\n\n    if (this.activeFilter.isMyVaultSelected) {\n      return this.i18nService.t(\"myVault\");\n    }\n\n    if (this.activeFilter?.selectedOrganizationNode != null) {\n      return `${this.activeFilter.selectedOrganizationNode.node.name} ${this.i18nService\n        .t(\"vault\")\n        .toLowerCase()}`;\n    }\n\n    return this.i18nService.t(\"allVaults\");\n  }\n\n  applyCollectionFilter(collection: TreeNode<CollectionFilter>) {\n    const filter = this.activeFilter;\n    filter.resetFilter();\n    filter.selectedCollectionNode = collection;\n    this.activeFilterChanged.emit(filter);\n  }\n\n  addCipher() {\n    this.onAddCipher.emit();\n  }\n}\n","<div class=\"container page-content\">\n  <div class=\"row\">\n    <div class=\"col-3\">\n      <div class=\"groupings\">\n        <div class=\"content\">\n          <div class=\"inner-content\">\n            <app-vault-filter\n              #vaultFilter\n              [activeFilter]=\"activeFilter\"\n              (onSearchTextChanged)=\"filterSearchText($event)\"\n              (onAddFolder)=\"addFolder()\"\n              (onEditFolder)=\"editFolder($event)\"\n            ></app-vault-filter>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div [ngClass]=\"{ 'col-6': isShowingCards, 'col-9': !isShowingCards }\">\n      <app-vault-header\n        [activeFilter]=\"activeFilter\"\n        [actionPromise]=\"vaultItemsComponent.actionPromise\"\n        (onAddCipher)=\"addCipher()\"\n      ></app-vault-header>\n      <app-callout type=\"warning\" *ngIf=\"activeFilter.isDeleted\" icon=\"bwi-exclamation-triangle\">\n        {{ trashCleanupWarning }}\n      </app-callout>\n      <app-vault-items\n        [activeFilter]=\"activeFilter\"\n        (onCipherClicked)=\"navigateToCipher($event)\"\n        (onAttachmentsClicked)=\"editCipherAttachments($event)\"\n        (onAddCipher)=\"addCipher()\"\n        (onShareClicked)=\"shareCipher($event)\"\n        (onEditCipherCollectionsClicked)=\"editCipherCollections($event)\"\n        (onCloneClicked)=\"cloneCipher($event)\"\n        (onOrganzationBadgeClicked)=\"applyOrganizationFilter($event)\"\n      >\n      </app-vault-items>\n    </div>\n    <div class=\"col-3\">\n      <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateKeyTitle\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateEncryptionKeyShortDesc\" | i18n }}</p>\n          <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n            {{ \"updateEncryptionKey\" | i18n }}\n          </button>\n        </div>\n      </div>\n\n      <app-low-kdf class=\"d-block mb-4\" *ngIf=\"showLowKdf\"> </app-low-kdf>\n\n      <app-verify-email\n        *ngIf=\"showVerifyEmail\"\n        class=\"d-block mb-4\"\n        (onVerified)=\"emailVerified($event)\"\n      ></app-verify-email>\n\n      <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n        <div class=\"card-header bg-warning text-white\">\n          <i class=\"bwi bwi-exclamation-triangle bwi-fw\" aria-hidden=\"true\"></i>\n          {{ \"updateBrowser\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"updateBrowserDesc\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            target=\"_blank\"\n            href=\"https://browser-update.org/update-browser.html\"\n            rel=\"noopener\"\n          >\n            {{ \"updateBrowser\" | i18n }}\n          </a>\n        </div>\n      </div>\n      <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n        <div class=\"card-header bg-success text-white\">\n          <i class=\"bwi bwi-star-f bwi-fw\" aria-hidden=\"true\"></i> {{ \"goPremium\" | i18n }}\n        </div>\n        <div class=\"card-body\">\n          <p>{{ \"premiumUpgradeUnlockFeatures\" | i18n }}</p>\n          <a\n            class=\"btn btn-block btn-outline-secondary\"\n            routerLink=\"/settings/subscription/premium\"\n          >\n            {{ \"goPremium\" | i18n }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { firstValueFrom, Subject } from \"rxjs\";\nimport { first, switchMap, takeUntil } from \"rxjs/operators\";\n\nimport { ModalService } from \"@bitwarden/angular/services/modal.service\";\nimport { BroadcasterService } from \"@bitwarden/common/abstractions/broadcaster.service\";\nimport { CryptoService } from \"@bitwarden/common/abstractions/crypto.service\";\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { OrganizationService } from \"@bitwarden/common/abstractions/organization/organization.service.abstraction\";\nimport { PlatformUtilsService } from \"@bitwarden/common/abstractions/platformUtils.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { TokenService } from \"@bitwarden/common/auth/abstractions/token.service\";\nimport { KdfType, DEFAULT_PBKDF2_ITERATIONS } from \"@bitwarden/common/enums/kdfType\";\nimport { ServiceUtils } from \"@bitwarden/common/misc/serviceUtils\";\nimport { TreeNode } from \"@bitwarden/common/models/domain/tree-node\";\nimport { CipherService } from \"@bitwarden/common/vault/abstractions/cipher.service\";\nimport { PasswordRepromptService } from \"@bitwarden/common/vault/abstractions/password-reprompt.service\";\nimport { SyncService } from \"@bitwarden/common/vault/abstractions/sync/sync.service.abstraction\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\n\nimport { UpdateKeyComponent } from \"../../settings/update-key.component\";\n\nimport { AddEditComponent } from \"./add-edit.component\";\nimport { AttachmentsComponent } from \"./attachments.component\";\nimport { CollectionsComponent } from \"./collections.component\";\nimport { FolderAddEditComponent } from \"./folder-add-edit.component\";\nimport { ShareComponent } from \"./share.component\";\nimport { VaultFilterComponent } from \"./vault-filter/components/vault-filter.component\";\nimport { VaultFilterService } from \"./vault-filter/services/abstractions/vault-filter.service\";\nimport { RoutedVaultFilterBridgeService } from \"./vault-filter/services/routed-vault-filter-bridge.service\";\nimport { RoutedVaultFilterService } from \"./vault-filter/services/routed-vault-filter.service\";\nimport { VaultFilter } from \"./vault-filter/shared/models/vault-filter.model\";\nimport { FolderFilter, OrganizationFilter } from \"./vault-filter/shared/models/vault-filter.type\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\n\nconst BroadcasterSubscriptionId = \"VaultComponent\";\n\n@Component({\n  selector: \"app-vault\",\n  templateUrl: \"vault.component.html\",\n  providers: [RoutedVaultFilterService, RoutedVaultFilterBridgeService],\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n  @ViewChild(\"vaultFilter\", { static: true }) filterComponent: VaultFilterComponent;\n  @ViewChild(VaultItemsComponent, { static: true }) vaultItemsComponent: VaultItemsComponent;\n  @ViewChild(\"attachments\", { read: ViewContainerRef, static: true })\n  attachmentsModalRef: ViewContainerRef;\n  @ViewChild(\"folderAddEdit\", { read: ViewContainerRef, static: true })\n  folderAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"cipherAddEdit\", { read: ViewContainerRef, static: true })\n  cipherAddEditModalRef: ViewContainerRef;\n  @ViewChild(\"share\", { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n  @ViewChild(\"collections\", { read: ViewContainerRef, static: true })\n  collectionsModalRef: ViewContainerRef;\n  @ViewChild(\"updateKeyTemplate\", { read: ViewContainerRef, static: true })\n  updateKeyModalRef: ViewContainerRef;\n\n  showVerifyEmail = false;\n  showBrowserOutdated = false;\n  showUpdateKey = false;\n  showPremiumCallout = false;\n  showLowKdf = false;\n  trashCleanupWarning: string = null;\n  kdfIterations: number;\n  activeFilter: VaultFilter = new VaultFilter();\n  private destroy$ = new Subject<void>();\n\n  constructor(\n    private syncService: SyncService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private changeDetectorRef: ChangeDetectorRef,\n    private i18nService: I18nService,\n    private modalService: ModalService,\n    private tokenService: TokenService,\n    private cryptoService: CryptoService,\n    private messagingService: MessagingService,\n    private platformUtilsService: PlatformUtilsService,\n    private broadcasterService: BroadcasterService,\n    private ngZone: NgZone,\n    private stateService: StateService,\n    private organizationService: OrganizationService,\n    private vaultFilterService: VaultFilterService,\n    private routedVaultFilterBridgeService: RoutedVaultFilterBridgeService,\n    private cipherService: CipherService,\n    private passwordRepromptService: PasswordRepromptService\n  ) {}\n\n  async ngOnInit() {\n    this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n    this.showBrowserOutdated = window.navigator.userAgent.indexOf(\"MSIE\") !== -1;\n    // disable warning for March release -> add await this.isLowKdfIteration(); when ready\n    this.showLowKdf = false;\n    this.trashCleanupWarning = this.i18nService.t(\"trashCleanupWarningSelfHosted\");\n\n    this.route.queryParams\n      .pipe(\n        first(),\n        switchMap(async (params: Params) => {\n          await this.syncService.fullSync(false);\n          await this.vaultFilterService.reloadCollections();\n          await this.vaultItemsComponent.reload();\n\n          const canAccessPremium = await this.stateService.getCanAccessPremium();\n          this.showPremiumCallout =\n            !this.showVerifyEmail && !canAccessPremium && !this.platformUtilsService.isSelfHost();\n          this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n\n          const cipherId = getCipherIdFromParams(params);\n          if (!cipherId) {\n            return;\n          }\n          const cipherView = new CipherView();\n          cipherView.id = cipherId;\n          if (params.action === \"clone\") {\n            await this.cloneCipher(cipherView);\n          } else if (params.action === \"edit\") {\n            await this.editCipher(cipherView);\n          }\n        }),\n        switchMap(() => this.route.queryParams),\n        switchMap(async (params) => {\n          const cipherId = getCipherIdFromParams(params);\n          if (cipherId) {\n            if ((await this.cipherService.get(cipherId)) != null) {\n              this.editCipherId(cipherId);\n            } else {\n              this.platformUtilsService.showToast(\n                \"error\",\n                this.i18nService.t(\"errorOccurred\"),\n                this.i18nService.t(\"unknownCipher\")\n              );\n              this.router.navigate([], {\n                queryParams: { itemId: null, cipherId: null },\n                queryParamsHandling: \"merge\",\n              });\n            }\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n\n    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n      this.ngZone.run(async () => {\n        switch (message.command) {\n          case \"syncCompleted\":\n            if (message.successfully) {\n              await Promise.all([\n                this.vaultFilterService.reloadCollections(),\n                this.vaultItemsComponent.load(this.vaultItemsComponent.filter),\n              ]);\n              this.changeDetectorRef.detectChanges();\n            }\n            break;\n        }\n      });\n    });\n\n    this.routedVaultFilterBridgeService.activeFilter$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((activeFilter) => {\n        this.activeFilter = activeFilter;\n      });\n  }\n\n  get isShowingCards() {\n    return (\n      this.showBrowserOutdated ||\n      this.showPremiumCallout ||\n      this.showUpdateKey ||\n      this.showVerifyEmail ||\n      this.showLowKdf\n    );\n  }\n\n  emailVerified(verified: boolean) {\n    this.showVerifyEmail = !verified;\n  }\n\n  ngOnDestroy() {\n    this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async applyOrganizationFilter(orgId: string) {\n    if (orgId == null) {\n      orgId = \"MyVault\";\n    }\n    const orgs = await firstValueFrom(this.filterComponent.filters.organizationFilter.data$);\n    const orgNode = ServiceUtils.getTreeNodeObject(orgs, orgId) as TreeNode<OrganizationFilter>;\n    this.filterComponent.filters?.organizationFilter?.action(orgNode);\n  }\n\n  addFolder = async (): Promise<void> => {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = null;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n        });\n      }\n    );\n  };\n\n  editFolder = async (folder: FolderFilter): Promise<void> => {\n    const [modal] = await this.modalService.openViewRef(\n      FolderAddEditComponent,\n      this.folderAddEditModalRef,\n      (comp) => {\n        comp.folderId = folder.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedFolder.subscribe(async () => {\n          modal.close();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedFolder.subscribe(async () => {\n          modal.close();\n        });\n      }\n    );\n  };\n\n  filterSearchText(searchText: string) {\n    this.vaultItemsComponent.searchText = searchText;\n    this.vaultItemsComponent.search(200);\n  }\n\n  async editCipherAttachments(cipher: CipherView) {\n    const canAccessPremium = await this.stateService.getCanAccessPremium();\n    if (cipher.organizationId == null && !canAccessPremium) {\n      this.messagingService.send(\"premiumRequired\");\n      return;\n    } else if (cipher.organizationId != null) {\n      const org = this.organizationService.get(cipher.organizationId);\n      if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n        this.messagingService.send(\"upgradeOrganization\", {\n          organizationId: cipher.organizationId,\n        });\n        return;\n      }\n    }\n\n    let madeAttachmentChanges = false;\n    const [modal] = await this.modalService.openViewRef(\n      AttachmentsComponent,\n      this.attachmentsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onUploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onDeletedAttachment.subscribe(() => (madeAttachmentChanges = true));\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil\n        comp.onReuploadedAttachment.subscribe(() => (madeAttachmentChanges = true));\n      }\n    );\n\n    // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n    modal.onClosed.subscribe(async () => {\n      if (madeAttachmentChanges) {\n        await this.vaultItemsComponent.refresh();\n      }\n      madeAttachmentChanges = false;\n    });\n  }\n\n  async shareCipher(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      ShareComponent,\n      this.shareModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSharedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async editCipherCollections(cipher: CipherView) {\n    const [modal] = await this.modalService.openViewRef(\n      CollectionsComponent,\n      this.collectionsModalRef,\n      (comp) => {\n        comp.cipherId = cipher.id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCollections.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n  }\n\n  async addCipher() {\n    const component = await this.editCipher(null);\n    component.type = this.activeFilter.cipherType;\n    if (this.activeFilter.organizationId !== \"MyVault\") {\n      component.organizationId = this.activeFilter.organizationId;\n      component.collections = (\n        await firstValueFrom(this.vaultFilterService.filteredCollections$)\n      ).filter((c) => !c.readOnly && c.id != null);\n    }\n    const selectedColId = this.activeFilter.collectionId;\n    if (selectedColId !== \"AllCollections\") {\n      component.collectionIds = [selectedColId];\n    }\n    component.folderId = this.activeFilter.folderId;\n  }\n\n  async navigateToCipher(cipher: CipherView) {\n    this.go({ itemId: cipher?.id });\n  }\n\n  async editCipher(cipher: CipherView) {\n    return this.editCipherId(cipher?.id);\n  }\n\n  async editCipherId(id: string) {\n    const cipher = await this.cipherService.get(id);\n    if (cipher != null && cipher.reprompt != 0) {\n      if (!(await this.passwordRepromptService.showPasswordPrompt())) {\n        this.go({ cipherId: null, itemId: null });\n        return;\n      }\n    }\n\n    const [modal, childComponent] = await this.modalService.openViewRef(\n      AddEditComponent,\n      this.cipherAddEditModalRef,\n      (comp) => {\n        comp.cipherId = id;\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onSavedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onDeletedCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n        // eslint-disable-next-line rxjs-angular/prefer-takeuntil, rxjs/no-async-subscribe\n        comp.onRestoredCipher.subscribe(async () => {\n          modal.close();\n          await this.vaultItemsComponent.refresh();\n        });\n      }\n    );\n\n    modal.onClosedPromise().then(() => {\n      this.go({ cipherId: null, itemId: null });\n    });\n\n    return childComponent;\n  }\n\n  async cloneCipher(cipher: CipherView) {\n    const component = await this.editCipher(cipher);\n    component.cloneMode = true;\n  }\n\n  async updateKey() {\n    await this.modalService.openViewRef(UpdateKeyComponent, this.updateKeyModalRef);\n  }\n\n  async isLowKdfIteration() {\n    const kdfType = await this.stateService.getKdfType();\n    const kdfOptions = await this.stateService.getKdfConfig();\n    return kdfType === KdfType.PBKDF2_SHA256 && kdfOptions.iterations < DEFAULT_PBKDF2_ITERATIONS;\n  }\n\n  private go(queryParams: any = null) {\n    if (queryParams == null) {\n      queryParams = {\n        favorites: this.activeFilter.isFavorites || null,\n        type: this.activeFilter.cipherType,\n        folderId: this.activeFilter.folderId,\n        collectionId: this.activeFilter.collectionId,\n        deleted: this.activeFilter.isDeleted || null,\n      };\n    }\n\n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams: queryParams,\n      queryParamsHandling: \"merge\",\n      replaceUrl: true,\n    });\n  }\n}\n\n/**\n * Allows backwards compatibility with\n * old links that used the original `cipherId` param\n */\nconst getCipherIdFromParams = (params: Params): string => {\n  return params[\"itemId\"] || params[\"cipherId\"];\n};\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { VaultComponent } from \"./vault.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: VaultComponent,\n    data: { titleId: \"vaults\" },\n  },\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaultRoutingModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { BreadcrumbsModule } from \"@bitwarden/components\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\nimport { CollectionBadgeModule } from \"../org-vault/collection-badge/collection-badge.module\";\nimport { GroupBadgeModule } from \"../org-vault/group-badge/group-badge.module\";\n\nimport { BulkDialogsModule } from \"./bulk-action-dialogs/bulk-dialogs.module\";\nimport { OrganizationBadgeModule } from \"./organization-badge/organization-badge.module\";\nimport { PipesModule } from \"./pipes/pipes.module\";\nimport { VaultFilterModule } from \"./vault-filter/vault-filter.module\";\nimport { VaultHeaderComponent } from \"./vault-header/vault-header.component\";\nimport { VaultItemsComponent } from \"./vault-items.component\";\nimport { VaultRoutingModule } from \"./vault-routing.module\";\nimport { VaultComponent } from \"./vault.component\";\n\n@NgModule({\n  imports: [\n    VaultFilterModule,\n    VaultRoutingModule,\n    OrganizationBadgeModule,\n    GroupBadgeModule,\n    CollectionBadgeModule,\n    PipesModule,\n    SharedModule,\n    LooseComponentsModule,\n    BulkDialogsModule,\n    BreadcrumbsModule,\n  ],\n  declarations: [VaultComponent, VaultItemsComponent, VaultHeaderComponent],\n  exports: [VaultComponent],\n})\nexport class VaultModule {}\n","import { NgModule } from \"@angular/core\";\nimport { Route, RouterModule, Routes } from \"@angular/router\";\n\nimport { AuthGuard } from \"@bitwarden/angular/auth/guards/auth.guard\";\nimport { LockGuard } from \"@bitwarden/angular/auth/guards/lock.guard\";\nimport { UnauthGuard } from \"@bitwarden/angular/auth/guards/unauth.guard\";\n\nimport { AcceptEmergencyComponent } from \"../auth/accept-emergency.component\";\nimport { AcceptOrganizationComponent } from \"../auth/accept-organization.component\";\nimport { HintComponent } from \"../auth/hint.component\";\nimport { LockComponent } from \"../auth/lock.component\";\nimport { LoginWithDeviceComponent } from \"../auth/login/login-with-device.component\";\nimport { LoginComponent } from \"../auth/login/login.component\";\nimport { RecoverDeleteComponent } from \"../auth/recover-delete.component\";\nimport { RecoverTwoFactorComponent } from \"../auth/recover-two-factor.component\";\nimport { RemovePasswordComponent } from \"../auth/remove-password.component\";\nimport { SetPasswordComponent } from \"../auth/set-password.component\";\nimport { EmergencyAccessViewComponent } from \"../auth/settings/emergency-access/emergency-access-view.component\";\nimport { EmergencyAccessComponent } from \"../auth/settings/emergency-access/emergency-access.component\";\nimport { SsoComponent } from \"../auth/sso.component\";\nimport { TwoFactorComponent } from \"../auth/two-factor.component\";\nimport { UpdatePasswordComponent } from \"../auth/update-password.component\";\nimport { UpdateTempPasswordComponent } from \"../auth/update-temp-password.component\";\nimport { VerifyEmailTokenComponent } from \"../auth/verify-email-token.component\";\nimport { VerifyRecoverDeleteComponent } from \"../auth/verify-recover-delete.component\";\nimport { flagEnabled, Flags } from \"../utils/flags\";\n\nimport { TrialInitiationComponent } from \"./accounts/trial-initiation/trial-initiation.component\";\nimport { HomeGuard } from \"./guards/home.guard\";\nimport { FrontendLayoutComponent } from \"./layouts/frontend-layout.component\";\nimport { UserLayoutComponent } from \"./layouts/user-layout.component\";\nimport { OrganizationModule } from \"./organizations/organization.module\";\nimport { AcceptFamilySponsorshipComponent } from \"./organizations/sponsorships/accept-family-sponsorship.component\";\nimport { FamiliesForEnterpriseSetupComponent } from \"./organizations/sponsorships/families-for-enterprise-setup.component\";\nimport { ReportsModule } from \"./reports\";\nimport { AccessComponent } from \"./send/access.component\";\nimport { SendComponent } from \"./send/send.component\";\nimport { AccountComponent } from \"./settings/account.component\";\nimport { CreateOrganizationComponent } from \"./settings/create-organization.component\";\nimport { DomainRulesComponent } from \"./settings/domain-rules.component\";\nimport { PreferencesComponent } from \"./settings/preferences.component\";\nimport { SecurityRoutingModule } from \"./settings/security-routing.module\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { SponsoredFamiliesComponent } from \"./settings/sponsored-families.component\";\nimport { SubscriptionRoutingModule } from \"./settings/subscription-routing.module\";\nimport { GeneratorComponent } from \"./tools/generator.component\";\nimport { ToolsComponent } from \"./tools/tools.component\";\nimport { VaultModule } from \"./vault/individual-vault/vault.module\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: FrontendLayoutComponent,\n    data: { doNotSaveUrl: true },\n    children: [\n      {\n        path: \"\",\n        pathMatch: \"full\",\n        children: [], // Children lets us have an empty component.\n        canActivate: [HomeGuard], // Redirects either to vault, login or lock page.\n      },\n      { path: \"login\", component: LoginComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"login-with-device\",\n        component: LoginWithDeviceComponent,\n        data: { titleId: \"loginWithDevice\" },\n      },\n      { path: \"2fa\", component: TwoFactorComponent, canActivate: [UnauthGuard] },\n      {\n        path: \"register\",\n        component: TrialInitiationComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"createAccount\" },\n      },\n      {\n        path: \"trial\",\n        redirectTo: \"register\",\n        pathMatch: \"full\",\n      },\n      {\n        path: \"sso\",\n        component: SsoComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"enterpriseSingleSignOn\" },\n      },\n      {\n        path: \"set-password\",\n        component: SetPasswordComponent,\n        data: { titleId: \"setMasterPassword\" },\n      },\n      {\n        path: \"hint\",\n        component: HintComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"passwordHint\" },\n      },\n      {\n        path: \"lock\",\n        component: LockComponent,\n        canActivate: [LockGuard],\n      },\n      { path: \"verify-email\", component: VerifyEmailTokenComponent },\n      {\n        path: \"accept-organization\",\n        component: AcceptOrganizationComponent,\n        data: { titleId: \"joinOrganization\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-emergency\",\n        component: AcceptEmergencyComponent,\n        data: { titleId: \"acceptEmergency\", doNotSaveUrl: false },\n      },\n      {\n        path: \"accept-families-for-enterprise\",\n        component: AcceptFamilySponsorshipComponent,\n        data: { titleId: \"acceptFamilySponsorship\", doNotSaveUrl: false },\n      },\n      { path: \"recover\", pathMatch: \"full\", redirectTo: \"recover-2fa\" },\n      {\n        path: \"recover-2fa\",\n        component: RecoverTwoFactorComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"recoverAccountTwoStep\" },\n      },\n      {\n        path: \"recover-delete\",\n        component: RecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"verify-recover-delete\",\n        component: VerifyRecoverDeleteComponent,\n        canActivate: [UnauthGuard],\n        data: { titleId: \"deleteAccount\" },\n      },\n      {\n        path: \"send/:sendId/:key\",\n        component: AccessComponent,\n        data: { title: \"Bitwarden Send\" },\n      },\n      {\n        path: \"update-temp-password\",\n        component: UpdateTempPasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updateTempPassword\" },\n      },\n      {\n        path: \"update-password\",\n        component: UpdatePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"updatePassword\" },\n      },\n      {\n        path: \"remove-password\",\n        component: RemovePasswordComponent,\n        canActivate: [AuthGuard],\n        data: { titleId: \"removeMasterPassword\" },\n      },\n    ],\n  },\n  {\n    path: \"\",\n    component: UserLayoutComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: \"vault\",\n        loadChildren: () => VaultModule,\n      },\n      { path: \"sends\", component: SendComponent, data: { title: \"Send\" } },\n      {\n        path: \"create-organization\",\n        component: CreateOrganizationComponent,\n        data: { titleId: \"newOrganization\" },\n      },\n      {\n        path: \"settings\",\n        component: SettingsComponent,\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"account\" },\n          { path: \"account\", component: AccountComponent, data: { titleId: \"myAccount\" } },\n          {\n            path: \"preferences\",\n            component: PreferencesComponent,\n            data: { titleId: \"preferences\" },\n          },\n          {\n            path: \"security\",\n            loadChildren: () => SecurityRoutingModule,\n          },\n          {\n            path: \"domain-rules\",\n            component: DomainRulesComponent,\n            data: { titleId: \"domainRules\" },\n          },\n          {\n            path: \"subscription\",\n            loadChildren: () => SubscriptionRoutingModule,\n          },\n          {\n            path: \"emergency-access\",\n            children: [\n              {\n                path: \"\",\n                component: EmergencyAccessComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n              {\n                path: \":id\",\n                component: EmergencyAccessViewComponent,\n                data: { titleId: \"emergencyAccess\" },\n              },\n            ],\n          },\n          {\n            path: \"sponsored-families\",\n            component: SponsoredFamiliesComponent,\n            data: { titleId: \"sponsoredFamilies\" },\n          },\n        ],\n      },\n      {\n        path: \"tools\",\n        component: ToolsComponent,\n        canActivate: [AuthGuard],\n        children: [\n          { path: \"\", pathMatch: \"full\", redirectTo: \"generator\" },\n          {\n            path: \"\",\n            loadChildren: () =>\n              import(\"./tools/import-export/import-export.module\").then(\n                (m) => m.ImportExportModule\n              ),\n          },\n          {\n            path: \"generator\",\n            component: GeneratorComponent,\n            data: { titleId: \"generator\" },\n          },\n        ],\n      },\n      {\n        path: \"reports\",\n        loadChildren: () => ReportsModule,\n      },\n      { path: \"setup/families-for-enterprise\", component: FamiliesForEnterpriseSetupComponent },\n    ],\n  },\n  {\n    path: \"organizations\",\n    loadChildren: () => OrganizationModule,\n  },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      paramsInheritanceStrategy: \"always\",\n      // enableTracing: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class OssRoutingModule {}\n\nexport function buildFlaggedRoute(flagName: keyof Flags, route: Route): Route {\n  return flagEnabled(flagName)\n    ? route\n    : {\n        path: route.path,\n        redirectTo: \"/\",\n      };\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { CheckboxModule } from \"@bitwarden/components\";\n\nimport { SharedModule } from \"../../app/shared\";\n\nimport { LoginWithDeviceComponent } from \"./login-with-device.component\";\nimport { LoginComponent } from \"./login.component\";\n\n@NgModule({\n  imports: [SharedModule, CheckboxModule],\n  declarations: [LoginComponent, LoginWithDeviceComponent],\n  exports: [LoginComponent, LoginWithDeviceComponent],\n})\nexport class LoginModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../../shared\";\n\nimport { VerticalStepContentComponent } from \"./vertical-step-content.component\";\nimport { VerticalStep } from \"./vertical-step.component\";\nimport { VerticalStepperComponent } from \"./vertical-stepper.component\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [VerticalStepperComponent, VerticalStep, VerticalStepContentComponent],\n  exports: [VerticalStepperComponent, VerticalStep],\n})\nexport class VerticalStepperModule {}\n","import { CdkStepperModule } from \"@angular/cdk/stepper\";\nimport { TitleCasePipe } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormFieldModule } from \"@bitwarden/components\";\n\nimport { RegisterFormModule } from \"../../../auth/register-form/register-form.module\";\nimport { OrganizationCreateModule } from \"../../organizations/create/organization-create.module\";\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { BillingComponent } from \"./billing.component\";\nimport { ConfirmationDetailsComponent } from \"./confirmation-details.component\";\nimport { AbmEnterpriseContentComponent } from \"./content/abm-enterprise-content.component\";\nimport { AbmTeamsContentComponent } from \"./content/abm-teams-content.component\";\nimport { CnetEnterpriseContentComponent } from \"./content/cnet-enterprise-content.component\";\nimport { CnetIndividualContentComponent } from \"./content/cnet-individual-content.component\";\nimport { CnetTeamsContentComponent } from \"./content/cnet-teams-content.component\";\nimport { DefaultContentComponent } from \"./content/default-content.component\";\nimport { EnterpriseContentComponent } from \"./content/enterprise-content.component\";\nimport { Enterprise1ContentComponent } from \"./content/enterprise1-content.component\";\nimport { Enterprise2ContentComponent } from \"./content/enterprise2-content.component\";\nimport { LogoCnetComponent } from \"./content/logo-cnet.component\";\nimport { LogoForbesComponent } from \"./content/logo-forbes.component\";\nimport { LogoUSNewsComponent } from \"./content/logo-us-news.component\";\nimport { TeamsContentComponent } from \"./content/teams-content.component\";\nimport { Teams1ContentComponent } from \"./content/teams1-content.component\";\nimport { Teams2ContentComponent } from \"./content/teams2-content.component\";\nimport { TrialInitiationComponent } from \"./trial-initiation.component\";\nimport { VerticalStepperModule } from \"./vertical-stepper/vertical-stepper.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    CdkStepperModule,\n    VerticalStepperModule,\n    FormFieldModule,\n    RegisterFormModule,\n    OrganizationCreateModule,\n    LooseComponentsModule,\n  ],\n  declarations: [\n    TrialInitiationComponent,\n    EnterpriseContentComponent,\n    TeamsContentComponent,\n    ConfirmationDetailsComponent,\n    BillingComponent,\n    DefaultContentComponent,\n    EnterpriseContentComponent,\n    Enterprise1ContentComponent,\n    Enterprise2ContentComponent,\n    TeamsContentComponent,\n    Teams1ContentComponent,\n    Teams2ContentComponent,\n    CnetEnterpriseContentComponent,\n    CnetIndividualContentComponent,\n    CnetTeamsContentComponent,\n    AbmEnterpriseContentComponent,\n    AbmTeamsContentComponent,\n    LogoCnetComponent,\n    LogoForbesComponent,\n    LogoUSNewsComponent,\n  ],\n  exports: [TrialInitiationComponent],\n  providers: [TitleCasePipe],\n})\nexport class TrialInitiationModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../../shared\";\n\nimport { EntityUsersComponent } from \"./entity-users.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule],\n  declarations: [EntityUsersComponent],\n  exports: [EntityUsersComponent],\n})\nexport class OrganizationManageModule {}\n","import { ScrollingModule } from \"@angular/cdk/scrolling\";\nimport { NgModule } from \"@angular/core\";\n\nimport { LooseComponentsModule, SharedModule } from \"../../shared\";\n\nimport { EnrollMasterPasswordReset } from \"./enroll-master-password-reset.component\";\n\n@NgModule({\n  imports: [SharedModule, ScrollingModule, LooseComponentsModule],\n  declarations: [EnrollMasterPasswordReset],\n  exports: [EnrollMasterPasswordReset],\n})\nexport class OrganizationUserModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { LoginModule } from \"../auth/login/login.module\";\n\nimport { TrialInitiationModule } from \"./accounts/trial-initiation/trial-initiation.module\";\nimport { OrganizationCreateModule } from \"./organizations/create/organization-create.module\";\nimport { OrganizationManageModule } from \"./organizations/manage/organization-manage.module\";\nimport { OrganizationUserModule } from \"./organizations/users/organization-user.module\";\nimport { LooseComponentsModule, SharedModule } from \"./shared\";\nimport { OrganizationBadgeModule } from \"./vault/individual-vault/organization-badge/organization-badge.module\";\nimport { VaultFilterModule } from \"./vault/individual-vault/vault-filter/vault-filter.module\";\n\n@NgModule({\n  imports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    OrganizationManageModule,\n    OrganizationUserModule,\n    OrganizationCreateModule,\n    LoginModule,\n  ],\n  exports: [\n    SharedModule,\n    LooseComponentsModule,\n    TrialInitiationModule,\n    VaultFilterModule,\n    OrganizationBadgeModule,\n    LoginModule,\n  ],\n  bootstrap: [],\n})\nexport class OssModule {}\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nconst routes: Routes = [{ path: \"**\", redirectTo: \"\" }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class WildcardRoutingModule {}\n","import { DragDropModule } from \"@angular/cdk/drag-drop\";\nimport { LayoutModule } from \"@angular/cdk/layout\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { InfiniteScrollModule } from \"ngx-infinite-scroll\";\n\nimport { AppComponent } from \"./app.component\";\nimport { CoreModule } from \"./core\";\nimport { OssRoutingModule } from \"./oss-routing.module\";\nimport { OssModule } from \"./oss.module\";\nimport { WildcardRoutingModule } from \"./wildcard-routing.module\";\n\n@NgModule({\n  imports: [\n    OssModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    CoreModule,\n    InfiniteScrollModule,\n    DragDropModule,\n    LayoutModule,\n    OssRoutingModule,\n    WildcardRoutingModule, // Needs to be last to catch all non-existing routes\n  ],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport \"bootstrap\";\nimport \"jquery\";\nimport \"popper.js\";\n\nrequire(\"./scss/styles.scss\");\nrequire(\"./scss/tailwind.css\");\n\nimport { AppModule } from \"./app/app.module\";\n\nif (process.env.NODE_ENV === \"production\") {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","import {\n  flagEnabled as baseFlagEnabled,\n  devFlagEnabled as baseDevFlagEnabled,\n  devFlagValue as baseDevFlagValue,\n  SharedFlags,\n  SharedDevFlags,\n} from \"@bitwarden/common/misc/flags\";\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type Flags = {\n  secretsManager?: boolean;\n  showPasswordless?: boolean;\n} & SharedFlags;\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable-next-line @typescript-eslint/ban-types */\nexport type DevFlags = {} & SharedDevFlags;\n\nexport function flagEnabled(flag: keyof Flags): boolean {\n  return baseFlagEnabled<Flags>(flag);\n}\n\nexport function devFlagEnabled(flag: keyof DevFlags) {\n  return baseDevFlagEnabled<DevFlags>(flag);\n}\n\nexport function devFlagValue(flag: keyof DevFlags) {\n  return baseDevFlagValue(flag);\n}\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from \"@angular/router\";\n\nimport { MessagingService } from \"@bitwarden/common/abstractions/messaging.service\";\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { KeyConnectorService } from \"@bitwarden/common/auth/abstractions/key-connector.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/auth/enums/authentication-status\";\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private messagingService: MessagingService,\n    private keyConnectorService: KeyConnectorService\n  ) {}\n\n  async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      this.messagingService.send(\"authBlocked\", { url: routerState.url });\n      return false;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      if (routerState != null) {\n        this.messagingService.send(\"lockedUrl\", { url: routerState.url });\n      }\n      return this.router.createUrlTree([\"lock\"], { queryParams: { promptBiometric: true } });\n    }\n\n    if (\n      !routerState.url.includes(\"remove-password\") &&\n      (await this.keyConnectorService.getConvertAccountRequired())\n    ) {\n      return this.router.createUrlTree([\"/remove-password\"]);\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/auth/enums/authentication-status\";\n\n@Injectable()\nexport class LockGuard implements CanActivate {\n  protected homepage = \"vault\";\n  protected loginpage = \"login\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return true;\n    }\n\n    const redirectUrl =\n      authStatus === AuthenticationStatus.LoggedOut ? this.loginpage : this.homepage;\n\n    return this.router.createUrlTree([redirectUrl]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { CanActivate, Router } from \"@angular/router\";\n\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/auth/enums/authentication-status\";\n\n@Injectable()\nexport class UnauthGuard implements CanActivate {\n  protected homepage = \"vault\";\n  constructor(private authService: AuthService, private router: Router) {}\n\n  async canActivate() {\n    const authStatus = await this.authService.getAuthStatus();\n\n    if (authStatus === AuthenticationStatus.LoggedOut) {\n      return true;\n    }\n\n    if (authStatus === AuthenticationStatus.Locked) {\n      return this.router.createUrlTree([\"lock\"]);\n    }\n\n    return this.router.createUrlTree([this.homepage]);\n  }\n}\n","<div\n  #callout\n  class=\"callout callout-{{ calloutStyle }}\"\n  [ngClass]=\"{ clickable: clickable }\"\n  [attr.role]=\"useAlertRole ? 'alert' : null\"\n>\n  <h3 class=\"callout-heading\" *ngIf=\"title\">\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <div class=\"enforced-policy-options\" *ngIf=\"enforcedPolicyOptions\">\n    {{ enforcedPolicyMessage }}\n    <ul>\n      <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n        {{ \"policyInEffectMinComplexity\" | i18n: getPasswordScoreAlertDisplay() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n        {{ \"policyInEffectMinLength\" | i18n: enforcedPolicyOptions?.minLength.toString() }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n        {{ \"policyInEffectUppercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n        {{ \"policyInEffectLowercase\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n        {{ \"policyInEffectNumbers\" | i18n }}\n      </li>\n      <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n        {{ \"policyInEffectSpecial\" | i18n: \"!@#$%^&*\" }}\n      </li>\n    </ul>\n  </div>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { MasterPasswordPolicyOptions } from \"@bitwarden/common/models/domain/master-password-policy-options\";\n\n@Component({\n  selector: \"app-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() clickable: boolean;\n  @Input() enforcedPolicyOptions: MasterPasswordPolicyOptions;\n  @Input() enforcedPolicyMessage: string;\n  @Input() useAlertRole = false;\n\n  calloutStyle: string;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.calloutStyle = this.type;\n\n    if (this.enforcedPolicyMessage === undefined) {\n      this.enforcedPolicyMessage = this.i18nService.t(\"masterPasswordPolicyInEffect\");\n    }\n\n    if (this.type === \"warning\" || this.type === \"danger\") {\n      if (this.type === \"danger\") {\n        this.calloutStyle = \"danger\";\n      }\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"warning\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-exclamation-triangle\";\n      }\n    } else if (this.type === \"error\") {\n      this.calloutStyle = \"danger\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"error\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-error\";\n      }\n    } else if (this.type === \"tip\") {\n      this.calloutStyle = \"success\";\n      if (this.title === undefined) {\n        this.title = this.i18nService.t(\"tip\");\n      }\n      if (this.icon === undefined) {\n        this.icon = \"bwi-lightbulb\";\n      }\n    }\n  }\n\n  getPasswordScoreAlertDisplay() {\n    if (this.enforcedPolicyOptions == null) {\n      return \"\";\n    }\n\n    let str: string;\n    switch (this.enforcedPolicyOptions.minComplexity) {\n      case 4:\n        str = this.i18nService.t(\"strong\");\n        break;\n      case 3:\n        str = this.i18nService.t(\"good\");\n        break;\n      default:\n        str = this.i18nService.t(\"weak\");\n        break;\n    }\n    return str + \" (\" + this.enforcedPolicyOptions.minComplexity + \")\";\n  }\n}\n","import { Observable, Subject } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\n\nexport class ModalRef {\n  onCreated: Observable<HTMLElement>; // Modal added to the DOM.\n  onClose: Observable<any>; // Initiated close.\n  onClosed: Observable<any>; // Modal was closed (Remove element from DOM)\n  onShow: Observable<void>; // Start showing modal\n  onShown: Observable<void>; // Modal is fully visible\n\n  private readonly _onCreated = new Subject<HTMLElement>();\n  private readonly _onClose = new Subject<any>();\n  private readonly _onClosed = new Subject<any>();\n  private readonly _onShow = new Subject<void>();\n  private readonly _onShown = new Subject<void>();\n  private lastResult: any;\n\n  constructor() {\n    this.onCreated = this._onCreated.asObservable();\n    this.onClose = this._onClose.asObservable();\n    this.onClosed = this._onClosed.asObservable();\n    this.onShow = this._onShow.asObservable();\n    this.onShown = this._onShow.asObservable();\n  }\n\n  show() {\n    this._onShow.next();\n  }\n\n  shown() {\n    this._onShown.next();\n  }\n\n  close(result?: any) {\n    this.lastResult = result;\n    this._onClose.next(result);\n  }\n\n  closed() {\n    this._onClosed.next(this.lastResult);\n  }\n\n  created(el: HTMLElement) {\n    this._onCreated.next(el);\n  }\n\n  onClosedPromise(): Promise<any> {\n    return this.onClosed.pipe(first()).toPromise();\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appA11yTitle]\",\n})\nexport class A11yTitleDirective {\n  @Input() set appA11yTitle(title: string) {\n    this.title = title;\n  }\n\n  private title: string;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (!this.el.nativeElement.hasAttribute(\"title\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"title\", this.title);\n    }\n    if (!this.el.nativeElement.hasAttribute(\"aria-label\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"aria-label\", this.title);\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges } from \"@angular/core\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\nimport { ErrorResponse } from \"@bitwarden/common/models/response/error.response\";\n\n/**\n * Provides error handling, in particular for any error returned by the server in an api call.\n * Attach it to a <form> element and provide the name of the class property that will hold the api call promise.\n * e.g. <form [appApiAction]=\"this.formPromise\">\n * Any errors/rejections that occur will be intercepted and displayed as error toasts.\n */\n@Directive({\n  selector: \"[appApiAction]\",\n})\nexport class ApiActionDirective implements OnChanges {\n  @Input() appApiAction: Promise<any>;\n\n  constructor(\n    private el: ElementRef,\n    private validationService: ValidationService,\n    private logService: LogService\n  ) {}\n\n  ngOnChanges(changes: any) {\n    if (this.appApiAction == null || this.appApiAction.then == null) {\n      return;\n    }\n\n    this.el.nativeElement.loading = true;\n\n    this.appApiAction.then(\n      (response: any) => {\n        this.el.nativeElement.loading = false;\n      },\n      (e: any) => {\n        this.el.nativeElement.loading = false;\n\n        if ((e as ErrorResponse).captchaRequired) {\n          this.logService.error(\"Captcha required error response: \" + e.getSingleMessage());\n          return;\n        }\n        this.logService?.error(`Received API exception: ${e}`);\n        this.validationService.showError(e);\n      }\n    );\n  }\n}\n","import { Directive, ElementRef, Input, NgZone } from \"@angular/core\";\nimport { take } from \"rxjs/operators\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\n@Directive({\n  selector: \"[appAutofocus]\",\n})\nexport class AutofocusDirective {\n  @Input() set appAutofocus(condition: boolean | string) {\n    this.autofocus = condition === \"\" || condition === true;\n  }\n\n  private autofocus: boolean;\n\n  constructor(private el: ElementRef, private ngZone: NgZone) {}\n\n  ngOnInit() {\n    if (!Utils.isMobileBrowser && this.autofocus) {\n      if (this.ngZone.isStable) {\n        this.el.nativeElement.focus();\n      } else {\n        this.ngZone.onStable.pipe(take(1)).subscribe(() => this.el.nativeElement.focus());\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appInputVerbatim]\",\n})\nexport class InputVerbatimDirective {\n  @Input() set appInputVerbatim(condition: boolean | string) {\n    this.disableComplete = condition === \"\" || condition === true;\n  }\n\n  private disableComplete: boolean;\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit() {\n    if (this.disableComplete && !this.el.nativeElement.hasAttribute(\"autocomplete\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocomplete\", \"off\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocapitalize\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocapitalize\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"autocorrect\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"autocorrect\", \"none\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"spellcheck\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"spellcheck\", \"false\");\n    }\n    if (!this.el.nativeElement.hasAttribute(\"inputmode\")) {\n      this.renderer.setAttribute(this.el.nativeElement, \"inputmode\", \"verbatim\");\n    }\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopClick]\",\n})\nexport class StopClickDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.preventDefault();\n  }\n}\n","import { Directive, HostListener } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appStopProp]\",\n})\nexport class StopPropDirective {\n  @HostListener(\"click\", [\"$event\"]) onClick($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string | number, p2?: string | number, p3?: string | number): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ntype PropertyValueFunction<T> = (item: T) => { toString: () => string };\n\n@Pipe({\n  name: \"search\",\n})\nexport class SearchPipe implements PipeTransform {\n  transform<T>(\n    items: T[],\n    searchText: string,\n    prop1?: keyof T,\n    prop2?: keyof T,\n    prop3?: keyof T\n  ): T[];\n  transform<T>(\n    items: T[],\n    searchText: string,\n    prop1?: PropertyValueFunction<T>,\n    prop2?: PropertyValueFunction<T>,\n    prop3?: PropertyValueFunction<T>\n  ): T[];\n  transform<T>(\n    items: T[],\n    searchText: string,\n    prop1?: keyof T | PropertyValueFunction<T>,\n    prop2?: keyof T | PropertyValueFunction<T>,\n    prop3?: keyof T | PropertyValueFunction<T>\n  ): T[] {\n    if (items == null || items.length === 0) {\n      return [];\n    }\n\n    if (searchText == null || searchText.length < 2) {\n      return items;\n    }\n\n    searchText = searchText.trim().toLowerCase();\n    return items.filter((i) => {\n      if (prop1 != null) {\n        const propValue = typeof prop1 === \"function\" ? prop1(i) : i[prop1];\n\n        if (propValue?.toString().toLowerCase().indexOf(searchText) > -1) {\n          return true;\n        }\n      }\n\n      if (prop2 != null) {\n        const propValue = typeof prop2 === \"function\" ? prop2(i) : i[prop2];\n\n        if (propValue?.toString().toLowerCase().indexOf(searchText) > -1) {\n          return true;\n        }\n      }\n\n      if (prop3 != null) {\n        const propValue = typeof prop3 === \"function\" ? prop3(i) : i[prop3];\n\n        if (propValue?.toString().toLowerCase().indexOf(searchText) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    });\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\ninterface User {\n  name?: string;\n  email?: string;\n}\n\n@Pipe({\n  name: \"userName\",\n})\nexport class UserNamePipe implements PipeTransform {\n  transform(user?: User): string {\n    if (user == null) {\n      return null;\n    }\n\n    if (user.name == null && user.email == null) {\n      return null;\n    }\n\n    return user.name == null || user.name.trim() === \"\" ? user.email : user.name;\n  }\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { OrganizationUserType } from \"@bitwarden/common/enums/organizationUserType\";\n\n@Pipe({\n  name: \"userType\",\n})\nexport class UserTypePipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(value?: OrganizationUserType): string {\n    if (value == null) {\n      return this.i18nService.t(\"unknown\");\n    }\n    switch (value) {\n      case OrganizationUserType.Owner:\n        return this.i18nService.t(\"owner\");\n      case OrganizationUserType.Admin:\n        return this.i18nService.t(\"admin\");\n      case OrganizationUserType.User:\n        return this.i18nService.t(\"user\");\n      case OrganizationUserType.Manager:\n        return this.i18nService.t(\"manager\");\n      case OrganizationUserType.Custom:\n        return this.i18nService.t(\"custom\");\n    }\n  }\n}\n","import { ConfigurableFocusTrap, ConfigurableFocusTrapFactory } from \"@angular/cdk/a11y\";\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  OnDestroy,\n  Type,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { ModalService } from \"../../services/modal.service\";\n\nimport { ModalRef } from \"./modal.ref\";\n\n@Component({\n  selector: \"app-modal\",\n  template: \"<ng-template #modalContent></ng-template>\",\n})\nexport class DynamicModalComponent implements AfterViewInit, OnDestroy {\n  componentRef: ComponentRef<any>;\n\n  @ViewChild(\"modalContent\", { read: ViewContainerRef, static: true })\n  modalContentRef: ViewContainerRef;\n\n  childComponentType: Type<any>;\n  setComponentParameters: (component: any) => void;\n\n  private focusTrap: ConfigurableFocusTrap;\n\n  constructor(\n    private modalService: ModalService,\n    private cd: ChangeDetectorRef,\n    private el: ElementRef<HTMLElement>,\n    private focusTrapFactory: ConfigurableFocusTrapFactory,\n    public modalRef: ModalRef\n  ) {}\n\n  ngAfterViewInit() {\n    this.loadChildComponent(this.childComponentType);\n    if (this.setComponentParameters != null) {\n      this.setComponentParameters(this.componentRef.instance);\n    }\n    this.cd.detectChanges();\n\n    this.modalRef.created(this.el.nativeElement);\n    this.focusTrap = this.focusTrapFactory.create(\n      this.el.nativeElement.querySelector(\".modal-dialog\")\n    );\n    if (this.el.nativeElement.querySelector(\"[appAutoFocus]\") == null) {\n      this.focusTrap.focusFirstTabbableElementWhenReady();\n    }\n  }\n\n  loadChildComponent(componentType: Type<any>) {\n    const componentFactory = this.modalService.resolveComponentFactory(componentType);\n\n    this.modalContentRef.clear();\n    this.componentRef = this.modalContentRef.createComponent(componentFactory);\n  }\n\n  ngOnDestroy() {\n    if (this.componentRef) {\n      this.componentRef.destroy();\n    }\n    this.focusTrap.destroy();\n  }\n\n  close() {\n    this.modalRef.close();\n  }\n\n  getFocus() {\n    const autoFocusEl = this.el.nativeElement.querySelector(\"[appAutoFocus]\") as HTMLElement;\n    autoFocusEl?.focus();\n  }\n}\n","import { InjectFlags, InjectionToken, Injector, Type } from \"@angular/core\";\n\nexport class ModalInjector implements Injector {\n  constructor(private _parentInjector: Injector, private _additionalTokens: WeakMap<any, any>) {}\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T, flags?: InjectFlags): T;\n  get(token: any, notFoundValue?: any, flags?: any) {\n    return this._additionalTokens.get(token) ?? this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  Injectable,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { first } from \"rxjs/operators\";\n\nimport { DynamicModalComponent } from \"../components/modal/dynamic-modal.component\";\nimport { ModalInjector } from \"../components/modal/modal-injector\";\nimport { ModalRef } from \"../components/modal/modal.ref\";\n\nexport class ModalConfig<D = any> {\n  data?: D;\n  allowMultipleModals?: boolean;\n  replaceTopModal?: boolean;\n}\n\n@Injectable()\nexport class ModalService {\n  protected modalList: ComponentRef<DynamicModalComponent>[] = [];\n\n  // Lazy loaded modules are not available in componentFactoryResolver,\n  // therefore modules needs to manually initialize their resolvers.\n  private factoryResolvers: Map<Type<any>, ComponentFactoryResolver> = new Map();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private applicationRef: ApplicationRef,\n    private injector: Injector\n  ) {\n    document.addEventListener(\"keyup\", (event) => {\n      if (event.key === \"Escape\" && this.modalCount > 0) {\n        this.topModal.instance.close();\n      }\n    });\n  }\n\n  get modalCount() {\n    return this.modalList.length;\n  }\n\n  private get topModal() {\n    return this.modalList[this.modalCount - 1];\n  }\n\n  /**\n   * @deprecated Use `dialogService.open` (in web) or `modalService.open` (in desktop/browser) instead.\n   * If replacing an existing call to this method, also remove any `@ViewChild` and `<ng-template>` associated with the\n   * existing usage.\n   */\n  async openViewRef<T>(\n    componentType: Type<T>,\n    viewContainerRef: ViewContainerRef,\n    setComponentParameters: (component: T) => void = null\n  ): Promise<[ModalRef, T]> {\n    const [modalRef, modalComponentRef] = this.openInternal(componentType, null, false);\n    modalComponentRef.instance.setComponentParameters = setComponentParameters;\n\n    viewContainerRef.insert(modalComponentRef.hostView);\n\n    await modalRef.onCreated.pipe(first()).toPromise();\n\n    return [modalRef, modalComponentRef.instance.componentRef.instance];\n  }\n\n  open(componentType: Type<any>, config: ModalConfig = {}) {\n    const { replaceTopModal = false, allowMultipleModals = false } = config;\n\n    if (this.modalCount > 0 && replaceTopModal) {\n      this.topModal.instance.close();\n    }\n\n    if (this.modalCount > 0 && !allowMultipleModals) {\n      return;\n    }\n\n    const [modalRef] = this.openInternal(componentType, config, true);\n\n    return modalRef;\n  }\n\n  registerComponentFactoryResolver<T>(\n    componentType: Type<T>,\n    componentFactoryResolver: ComponentFactoryResolver\n  ): void {\n    this.factoryResolvers.set(componentType, componentFactoryResolver);\n  }\n\n  resolveComponentFactory<T>(componentType: Type<T>): ComponentFactory<T> {\n    if (this.factoryResolvers.has(componentType)) {\n      return this.factoryResolvers.get(componentType).resolveComponentFactory(componentType);\n    }\n\n    return this.componentFactoryResolver.resolveComponentFactory(componentType);\n  }\n\n  closeAll(): void {\n    this.modalList.forEach((modal) => modal.instance.close());\n  }\n\n  protected openInternal(\n    componentType: Type<any>,\n    config?: ModalConfig,\n    attachToDom?: boolean\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const [modalRef, componentRef] = this.createModalComponent(config);\n    componentRef.instance.childComponentType = componentType;\n\n    if (attachToDom) {\n      this.applicationRef.attachView(componentRef.hostView);\n      const domElem = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n      document.body.appendChild(domElem);\n    }\n\n    modalRef.onClosed.pipe(first()).subscribe(() => {\n      if (attachToDom) {\n        this.applicationRef.detachView(componentRef.hostView);\n      }\n      componentRef.destroy();\n\n      this.modalList.pop();\n      if (this.modalCount > 0) {\n        this.topModal.instance.getFocus();\n      }\n    });\n\n    this.setupHandlers(modalRef);\n\n    this.modalList.push(componentRef);\n\n    return [modalRef, componentRef];\n  }\n\n  protected setupHandlers(modalRef: ModalRef) {\n    let backdrop: HTMLElement = null;\n\n    // Add backdrop, setup [data-dismiss] handler.\n    modalRef.onCreated.pipe(first()).subscribe((el) => {\n      document.body.classList.add(\"modal-open\");\n\n      const modalEl: HTMLElement = el.querySelector(\".modal\");\n      const dialogEl = modalEl.querySelector(\".modal-dialog\") as HTMLElement;\n\n      backdrop = document.createElement(\"div\");\n      backdrop.className = \"modal-backdrop fade\";\n      backdrop.style.zIndex = `${this.modalCount}040`;\n      modalEl.prepend(backdrop);\n\n      dialogEl.addEventListener(\"click\", (e: Event) => {\n        e.stopPropagation();\n      });\n      dialogEl.style.zIndex = `${this.modalCount}050`;\n\n      const modals = Array.from(\n        el.querySelectorAll('.modal-backdrop, .modal *[data-dismiss=\"modal\"]')\n      );\n      for (const closeElement of modals) {\n        closeElement.addEventListener(\"click\", () => {\n          modalRef.close();\n        });\n      }\n    });\n\n    // onClose is used in Web to hook into bootstrap. On other projects we pipe it directly to closed.\n    modalRef.onClose.pipe(first()).subscribe(() => {\n      modalRef.closed();\n\n      if (this.modalCount === 0) {\n        document.body.classList.remove(\"modal-open\");\n      }\n    });\n  }\n\n  protected createModalComponent(\n    config: ModalConfig\n  ): [ModalRef, ComponentRef<DynamicModalComponent>] {\n    const modalRef = new ModalRef();\n\n    const map = new WeakMap();\n    map.set(ModalConfig, config);\n    map.set(ModalRef, modalRef);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(DynamicModalComponent);\n    const componentRef = componentFactory.create(new ModalInjector(this.injector, map));\n\n    return [modalRef, componentRef];\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ThemeType } from \"@bitwarden/common/enums/themeType\";\n\nimport { Theme } from \"./theme\";\n\nexport abstract class AbstractThemingService {\n  theme$: Observable<Theme>;\n  monitorThemeChanges: () => Promise<void>;\n  updateSystemTheme: (systemTheme: ThemeType) => void;\n  updateConfiguredTheme: (theme: ThemeType) => Promise<void>;\n}\n","<div class=\"progress\">\n  <div\n    class=\"progress-bar {{ color }}\"\n    role=\"progressbar\"\n    [ngStyle]=\"{ width: scoreWidth + '%' }\"\n    attr.aria-valuenow=\"{{ scoreWidth }}\"\n    aria-valuemin=\"0\"\n    aria-valuemax=\"100\"\n  >\n    <ng-container *ngIf=\"showText && text\">\n      {{ text }}\n    </ng-container>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnChanges, Output } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\nimport { PasswordGenerationServiceAbstraction } from \"@bitwarden/common/tools/generator/password\";\n\nexport interface PasswordColorText {\n  color: string;\n  text: string;\n}\n\n@Component({\n  selector: \"app-password-strength\",\n  templateUrl: \"password-strength.component.html\",\n})\nexport class PasswordStrengthComponent implements OnChanges {\n  @Input() showText = false;\n  @Input() email: string;\n  @Input() name: string;\n  @Input() set password(value: string) {\n    this.updatePasswordStrength(value);\n  }\n  @Output() passwordStrengthResult = new EventEmitter<any>();\n  @Output() passwordScoreColor = new EventEmitter<PasswordColorText>();\n\n  masterPasswordScore: number;\n  scoreWidth = 0;\n  color = \"bg-danger\";\n  text: string;\n\n  private masterPasswordStrengthTimeout: any;\n\n  //used by desktop and browser to display strength text color\n  get masterPasswordScoreColor() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return \"success\";\n      case 3:\n        return \"primary\";\n      case 2:\n        return \"warning\";\n      default:\n        return \"danger\";\n    }\n  }\n\n  //used by desktop and browser to display strength text\n  get masterPasswordScoreText() {\n    switch (this.masterPasswordScore) {\n      case 4:\n        return this.i18nService.t(\"strong\");\n      case 3:\n        return this.i18nService.t(\"good\");\n      case 2:\n        return this.i18nService.t(\"weak\");\n      default:\n        return this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n    }\n  }\n\n  constructor(\n    private i18nService: I18nService,\n    private passwordGenerationService: PasswordGenerationServiceAbstraction\n  ) {}\n\n  ngOnChanges(): void {\n    this.masterPasswordStrengthTimeout = setTimeout(() => {\n      this.scoreWidth = this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n\n      switch (this.masterPasswordScore) {\n        case 4:\n          this.color = \"bg-success\";\n          this.text = this.i18nService.t(\"strong\");\n          break;\n        case 3:\n          this.color = \"bg-primary\";\n          this.text = this.i18nService.t(\"good\");\n          break;\n        case 2:\n          this.color = \"bg-warning\";\n          this.text = this.i18nService.t(\"weak\");\n          break;\n        default:\n          this.color = \"bg-danger\";\n          this.text = this.masterPasswordScore != null ? this.i18nService.t(\"weak\") : null;\n          break;\n      }\n\n      this.setPasswordScoreText(this.color, this.text);\n    }, 300);\n  }\n\n  updatePasswordStrength(password: string) {\n    const masterPassword = password;\n\n    if (this.masterPasswordStrengthTimeout != null) {\n      clearTimeout(this.masterPasswordStrengthTimeout);\n    }\n\n    const strengthResult = this.passwordGenerationService.passwordStrength(\n      masterPassword,\n      this.getPasswordStrengthUserInput()\n    );\n    this.passwordStrengthResult.emit(strengthResult);\n    this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n  }\n\n  getPasswordStrengthUserInput() {\n    let userInput: string[] = [];\n    const email = this.email;\n    const name = this.name;\n    const atPosition = email?.indexOf(\"@\");\n    if (atPosition > -1) {\n      userInput = userInput.concat(\n        email\n          .substr(0, atPosition)\n          .trim()\n          .toLowerCase()\n          .split(/[^A-Za-z0-9]/)\n      );\n    }\n    if (name != null && name !== \"\") {\n      userInput = userInput.concat(name.trim().toLowerCase().split(\" \"));\n    }\n    return userInput;\n  }\n\n  setPasswordScoreText(color: string, text: string) {\n    color = color.slice(3);\n    this.passwordScoreColor.emit({ color: color, text: text });\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"[appFallbackSrc]\",\n})\nexport class FallbackSrcDirective {\n  @Input(\"appFallbackSrc\") appFallbackSrc: string;\n\n  constructor(private el: ElementRef) {}\n\n  @HostListener(\"error\") onError() {\n    this.el.nativeElement.src = this.appFallbackSrc;\n  }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n  <img\n    [src]=\"image\"\n    appFallbackSrc=\"{{ fallbackImage }}\"\n    *ngIf=\"imageEnabled && image\"\n    alt=\"\"\n    decoding=\"async\"\n    loading=\"lazy\"\n  />\n  <i class=\"tw-text-muted bwi bwi-lg {{ icon }}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { EnvironmentService } from \"@bitwarden/common/abstractions/environment.service\";\nimport { StateService } from \"@bitwarden/common/abstractions/state.service\";\nimport { Utils } from \"@bitwarden/common/misc/utils\";\nimport { CipherType } from \"@bitwarden/common/vault/enums/cipher-type\";\nimport { CipherView } from \"@bitwarden/common/vault/models/view/cipher.view\";\n\n/**\n * Provides a mapping from supported card brands to\n * the filenames of icon that should be present in images/cards folder of clients.\n */\nconst cardIcons: Record<string, string> = {\n  Visa: \"card-visa\",\n  Mastercard: \"card-mastercard\",\n  Amex: \"card-amex\",\n  Discover: \"card-discover\",\n  \"Diners Club\": \"card-diners-club\",\n  JCB: \"card-jcb\",\n  Maestro: \"card-maestro\",\n  UnionPay: \"card-union-pay\",\n  RuPay: \"card-ru-pay\",\n};\n\n@Component({\n  selector: \"app-vault-icon\",\n  templateUrl: \"icon.component.html\",\n})\nexport class IconComponent implements OnChanges {\n  @Input() cipher: CipherView;\n  icon: string;\n  image: string;\n  fallbackImage: string;\n  imageEnabled: boolean;\n\n  private iconsUrl: string;\n\n  constructor(environmentService: EnvironmentService, private stateService: StateService) {\n    this.iconsUrl = environmentService.getIconsUrl();\n  }\n\n  async ngOnChanges() {\n    // Components may be re-used when using cdk-virtual-scroll. Which puts the component in a weird state,\n    // to avoid this we reset all state variables.\n    this.image = null;\n    this.fallbackImage = null;\n    this.imageEnabled = !(await this.stateService.getDisableFavicon());\n    this.load();\n  }\n\n  protected load() {\n    switch (this.cipher.type) {\n      case CipherType.Login:\n        this.icon = \"bwi-globe\";\n        this.setLoginIcon();\n        break;\n      case CipherType.SecureNote:\n        this.icon = \"bwi-sticky-note\";\n        break;\n      case CipherType.Card:\n        this.icon = \"bwi-credit-card\";\n        this.setCardIcon();\n        break;\n      case CipherType.Identity:\n        this.icon = \"bwi-id-card\";\n        break;\n      default:\n        break;\n    }\n  }\n\n  private setLoginIcon() {\n    if (this.cipher.login.uri) {\n      let hostnameUri = this.cipher.login.uri;\n      let isWebsite = false;\n\n      if (hostnameUri.indexOf(\"androidapp://\") === 0) {\n        this.icon = \"bwi-android\";\n        this.image = null;\n      } else if (hostnameUri.indexOf(\"iosapp://\") === 0) {\n        this.icon = \"bwi-apple\";\n        this.image = null;\n      } else if (\n        this.imageEnabled &&\n        hostnameUri.indexOf(\"://\") === -1 &&\n        hostnameUri.indexOf(\".\") > -1\n      ) {\n        hostnameUri = \"http://\" + hostnameUri;\n        isWebsite = true;\n      } else if (this.imageEnabled) {\n        isWebsite = hostnameUri.indexOf(\"http\") === 0 && hostnameUri.indexOf(\".\") > -1;\n      }\n\n      if (this.imageEnabled && isWebsite) {\n        try {\n          this.image = this.iconsUrl + \"/\" + Utils.getHostname(hostnameUri) + \"/icon.png\";\n          this.fallbackImage = \"images/bwi-globe.png\";\n        } catch (e) {\n          // Ignore error since the fallback icon will be shown if image is null.\n        }\n      }\n    } else {\n      this.image = null;\n    }\n  }\n\n  private setCardIcon() {\n    const brand = this.cipher.card.brand;\n    if (this.imageEnabled && brand in cardIcons) {\n      this.icon = \"credit-card-icon \" + cardIcons[brand];\n    }\n  }\n}\n","import { Observable } from \"rxjs\";\n\nimport { ProfileResponse } from \"../../models/response/profile.response\";\nexport abstract class AvatarUpdateService {\n  avatarUpdate$ = new Observable<string | null>();\n  abstract pushUpdate(color: string): Promise<ProfileResponse | void>;\n  abstract loadColorFromState(): Promise<string | null>;\n}\n","export abstract class AnonymousHubService {\n  createHubConnection: (token: string) => void;\n  stopHubConnection: () => void;\n}\n","import { DeviceVerificationRequest } from \"../auth/models/request/device-verification.request\";\nimport { EmailTokenRequest } from \"../auth/models/request/email-token.request\";\nimport { EmailRequest } from \"../auth/models/request/email.request\";\nimport { EmergencyAccessAcceptRequest } from \"../auth/models/request/emergency-access-accept.request\";\nimport { EmergencyAccessConfirmRequest } from \"../auth/models/request/emergency-access-confirm.request\";\nimport { EmergencyAccessInviteRequest } from \"../auth/models/request/emergency-access-invite.request\";\nimport { EmergencyAccessPasswordRequest } from \"../auth/models/request/emergency-access-password.request\";\nimport { EmergencyAccessUpdateRequest } from \"../auth/models/request/emergency-access-update.request\";\nimport { PasswordTokenRequest } from \"../auth/models/request/identity-token/password-token.request\";\nimport { SsoTokenRequest } from \"../auth/models/request/identity-token/sso-token.request\";\nimport { UserApiTokenRequest } from \"../auth/models/request/identity-token/user-api-token.request\";\nimport { KeyConnectorUserKeyRequest } from \"../auth/models/request/key-connector-user-key.request\";\nimport { PasswordHintRequest } from \"../auth/models/request/password-hint.request\";\nimport { PasswordRequest } from \"../auth/models/request/password.request\";\nimport { PasswordlessAuthRequest } from \"../auth/models/request/passwordless-auth.request\";\nimport { PasswordlessCreateAuthRequest } from \"../auth/models/request/passwordless-create-auth.request\";\nimport { SecretVerificationRequest } from \"../auth/models/request/secret-verification.request\";\nimport { SetKeyConnectorKeyRequest } from \"../auth/models/request/set-key-connector-key.request\";\nimport { SetPasswordRequest } from \"../auth/models/request/set-password.request\";\nimport { TwoFactorEmailRequest } from \"../auth/models/request/two-factor-email.request\";\nimport { TwoFactorProviderRequest } from \"../auth/models/request/two-factor-provider.request\";\nimport { TwoFactorRecoveryRequest } from \"../auth/models/request/two-factor-recovery.request\";\nimport { UpdateProfileRequest } from \"../auth/models/request/update-profile.request\";\nimport { UpdateTempPasswordRequest } from \"../auth/models/request/update-temp-password.request\";\nimport { UpdateTwoFactorAuthenticatorRequest } from \"../auth/models/request/update-two-factor-authenticator.request\";\nimport { UpdateTwoFactorDuoRequest } from \"../auth/models/request/update-two-factor-duo.request\";\nimport { UpdateTwoFactorEmailRequest } from \"../auth/models/request/update-two-factor-email.request\";\nimport { UpdateTwoFactorWebAuthnDeleteRequest } from \"../auth/models/request/update-two-factor-web-authn-delete.request\";\nimport { UpdateTwoFactorWebAuthnRequest } from \"../auth/models/request/update-two-factor-web-authn.request\";\nimport { UpdateTwoFactorYubioOtpRequest } from \"../auth/models/request/update-two-factor-yubio-otp.request\";\nimport { ApiKeyResponse } from \"../auth/models/response/api-key.response\";\nimport { AuthRequestResponse } from \"../auth/models/response/auth-request.response\";\nimport { DeviceVerificationResponse } from \"../auth/models/response/device-verification.response\";\nimport {\n  EmergencyAccessGranteeDetailsResponse,\n  EmergencyAccessGrantorDetailsResponse,\n  EmergencyAccessTakeoverResponse,\n  EmergencyAccessViewResponse,\n} from \"../auth/models/response/emergency-access.response\";\nimport { IdentityCaptchaResponse } from \"../auth/models/response/identity-captcha.response\";\nimport { IdentityTokenResponse } from \"../auth/models/response/identity-token.response\";\nimport { IdentityTwoFactorResponse } from \"../auth/models/response/identity-two-factor.response\";\nimport { KeyConnectorUserKeyResponse } from \"../auth/models/response/key-connector-user-key.response\";\nimport { PreloginResponse } from \"../auth/models/response/prelogin.response\";\nimport { RegisterResponse } from \"../auth/models/response/register.response\";\nimport { SsoPreValidateResponse } from \"../auth/models/response/sso-pre-validate.response\";\nimport { TwoFactorAuthenticatorResponse } from \"../auth/models/response/two-factor-authenticator.response\";\nimport { TwoFactorDuoResponse } from \"../auth/models/response/two-factor-duo.response\";\nimport { TwoFactorEmailResponse } from \"../auth/models/response/two-factor-email.response\";\nimport { TwoFactorProviderResponse } from \"../auth/models/response/two-factor-provider.response\";\nimport { TwoFactorRecoverResponse } from \"../auth/models/response/two-factor-recover.response\";\nimport {\n  ChallengeResponse,\n  TwoFactorWebAuthnResponse,\n} from \"../auth/models/response/two-factor-web-authn.response\";\nimport { TwoFactorYubiKeyResponse } from \"../auth/models/response/two-factor-yubi-key.response\";\nimport { OrganizationConnectionType } from \"../enums/organizationConnectionType\";\nimport { BitPayInvoiceRequest } from \"../models/request/bit-pay-invoice.request\";\nimport { CollectionBulkDeleteRequest } from \"../models/request/collection-bulk-delete.request\";\nimport { CollectionRequest } from \"../models/request/collection.request\";\nimport { DeleteRecoverRequest } from \"../models/request/delete-recover.request\";\nimport { EventRequest } from \"../models/request/event.request\";\nimport { IapCheckRequest } from \"../models/request/iap-check.request\";\nimport { KdfRequest } from \"../models/request/kdf.request\";\nimport { KeysRequest } from \"../models/request/keys.request\";\nimport { OrganizationConnectionRequest } from \"../models/request/organization-connection.request\";\nimport { OrganizationImportRequest } from \"../models/request/organization-import.request\";\nimport { OrganizationSponsorshipCreateRequest } from \"../models/request/organization/organization-sponsorship-create.request\";\nimport { OrganizationSponsorshipRedeemRequest } from \"../models/request/organization/organization-sponsorship-redeem.request\";\nimport { PaymentRequest } from \"../models/request/payment.request\";\nimport { PreloginRequest } from \"../models/request/prelogin.request\";\nimport { ProviderAddOrganizationRequest } from \"../models/request/provider/provider-add-organization.request\";\nimport { ProviderOrganizationCreateRequest } from \"../models/request/provider/provider-organization-create.request\";\nimport { ProviderSetupRequest } from \"../models/request/provider/provider-setup.request\";\nimport { ProviderUpdateRequest } from \"../models/request/provider/provider-update.request\";\nimport { ProviderUserAcceptRequest } from \"../models/request/provider/provider-user-accept.request\";\nimport { ProviderUserBulkConfirmRequest } from \"../models/request/provider/provider-user-bulk-confirm.request\";\nimport { ProviderUserBulkRequest } from \"../models/request/provider/provider-user-bulk.request\";\nimport { ProviderUserConfirmRequest } from \"../models/request/provider/provider-user-confirm.request\";\nimport { ProviderUserInviteRequest } from \"../models/request/provider/provider-user-invite.request\";\nimport { ProviderUserUpdateRequest } from \"../models/request/provider/provider-user-update.request\";\nimport { RegisterRequest } from \"../models/request/register.request\";\nimport { SelectionReadOnlyRequest } from \"../models/request/selection-read-only.request\";\nimport { SendAccessRequest } from \"../models/request/send-access.request\";\nimport { SendRequest } from \"../models/request/send.request\";\nimport { StorageRequest } from \"../models/request/storage.request\";\nimport { TaxInfoUpdateRequest } from \"../models/request/tax-info-update.request\";\nimport { UpdateAvatarRequest } from \"../models/request/update-avatar.request\";\nimport { UpdateDomainsRequest } from \"../models/request/update-domains.request\";\nimport { UpdateKeyRequest } from \"../models/request/update-key.request\";\nimport { VerifyDeleteRecoverRequest } from \"../models/request/verify-delete-recover.request\";\nimport { VerifyEmailRequest } from \"../models/request/verify-email.request\";\nimport { BillingHistoryResponse } from \"../models/response/billing-history.response\";\nimport { BillingPaymentResponse } from \"../models/response/billing-payment.response\";\nimport { BreachAccountResponse } from \"../models/response/breach-account.response\";\nimport {\n  CollectionAccessDetailsResponse,\n  CollectionResponse,\n} from \"../models/response/collection.response\";\nimport { DomainsResponse } from \"../models/response/domains.response\";\nimport { EventResponse } from \"../models/response/event.response\";\nimport { ListResponse } from \"../models/response/list.response\";\nimport {\n  OrganizationConnectionConfigApis,\n  OrganizationConnectionResponse,\n} from \"../models/response/organization-connection.response\";\nimport { OrganizationExportResponse } from \"../models/response/organization-export.response\";\nimport { OrganizationSponsorshipSyncStatusResponse } from \"../models/response/organization-sponsorship-sync-status.response\";\nimport { PaymentResponse } from \"../models/response/payment.response\";\nimport { PlanResponse } from \"../models/response/plan.response\";\nimport { PolicyResponse } from \"../models/response/policy.response\";\nimport { ProfileResponse } from \"../models/response/profile.response\";\nimport {\n  ProviderOrganizationOrganizationDetailsResponse,\n  ProviderOrganizationResponse,\n} from \"../models/response/provider/provider-organization.response\";\nimport { ProviderUserBulkPublicKeyResponse } from \"../models/response/provider/provider-user-bulk-public-key.response\";\nimport { ProviderUserBulkResponse } from \"../models/response/provider/provider-user-bulk.response\";\nimport {\n  ProviderUserResponse,\n  ProviderUserUserDetailsResponse,\n} from \"../models/response/provider/provider-user.response\";\nimport { ProviderResponse } from \"../models/response/provider/provider.response\";\nimport { SelectionReadOnlyResponse } from \"../models/response/selection-read-only.response\";\nimport { SendAccessResponse } from \"../models/response/send-access.response\";\nimport { SendFileDownloadDataResponse } from \"../models/response/send-file-download-data.response\";\nimport { SendFileUploadDataResponse } from \"../models/response/send-file-upload-data.response\";\nimport { SendResponse } from \"../models/response/send.response\";\nimport { SubscriptionResponse } from \"../models/response/subscription.response\";\nimport { TaxInfoResponse } from \"../models/response/tax-info.response\";\nimport { TaxRateResponse } from \"../models/response/tax-rate.response\";\nimport { UserKeyResponse } from \"../models/response/user-key.response\";\nimport { SendAccessView } from \"../models/view/send-access.view\";\nimport { AttachmentRequest } from \"../vault/models/request/attachment.request\";\nimport { CipherBulkDeleteRequest } from \"../vault/models/request/cipher-bulk-delete.request\";\nimport { CipherBulkMoveRequest } from \"../vault/models/request/cipher-bulk-move.request\";\nimport { CipherBulkRestoreRequest } from \"../vault/models/request/cipher-bulk-restore.request\";\nimport { CipherBulkShareRequest } from \"../vault/models/request/cipher-bulk-share.request\";\nimport { CipherCollectionsRequest } from \"../vault/models/request/cipher-collections.request\";\nimport { CipherCreateRequest } from \"../vault/models/request/cipher-create.request\";\nimport { CipherPartialRequest } from \"../vault/models/request/cipher-partial.request\";\nimport { CipherShareRequest } from \"../vault/models/request/cipher-share.request\";\nimport { CipherRequest } from \"../vault/models/request/cipher.request\";\nimport { AttachmentUploadDataResponse } from \"../vault/models/response/attachment-upload-data.response\";\nimport { AttachmentResponse } from \"../vault/models/response/attachment.response\";\nimport { CipherResponse } from \"../vault/models/response/cipher.response\";\nimport { SyncResponse } from \"../vault/models/response/sync.response\";\n\n/**\n * @deprecated The `ApiService` class is deprecated and calls should be extracted into individual\n * api services. The `send` method is still allowed to be used within api services. For background\n * of this decision please read https://contributing.bitwarden.com/architecture/adr/refactor-api-service.\n */\nexport abstract class ApiService {\n  send: (\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    path: string,\n    body: any,\n    authed: boolean,\n    hasResponse: boolean,\n    apiUrl?: string,\n    alterHeaders?: (headers: Headers) => void\n  ) => Promise<any>;\n\n  postIdentityToken: (\n    request: PasswordTokenRequest | SsoTokenRequest | UserApiTokenRequest\n  ) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse | IdentityCaptchaResponse>;\n  refreshIdentityToken: () => Promise<any>;\n\n  getProfile: () => Promise<ProfileResponse>;\n  getUserSubscription: () => Promise<SubscriptionResponse>;\n  getTaxInfo: () => Promise<TaxInfoResponse>;\n  putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n  putAvatar: (request: UpdateAvatarRequest) => Promise<ProfileResponse>;\n  putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n  postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n  postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n  postEmail: (request: EmailRequest) => Promise<any>;\n  postPassword: (request: PasswordRequest) => Promise<any>;\n  setPassword: (request: SetPasswordRequest) => Promise<any>;\n  postSetKeyConnectorKey: (request: SetKeyConnectorKeyRequest) => Promise<any>;\n  postSecurityStamp: (request: SecretVerificationRequest) => Promise<any>;\n  getAccountRevisionDate: () => Promise<number>;\n  postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n  postRegister: (request: RegisterRequest) => Promise<RegisterResponse>;\n  postPremium: (data: FormData) => Promise<PaymentResponse>;\n  postIapCheck: (request: IapCheckRequest) => Promise<any>;\n  postReinstatePremium: () => Promise<any>;\n  postCancelPremium: () => Promise<any>;\n  postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n  postAccountPayment: (request: PaymentRequest) => Promise<void>;\n  postAccountLicense: (data: FormData) => Promise<any>;\n  postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n  postAccountKeys: (request: KeysRequest) => Promise<any>;\n  postAccountVerifyEmail: () => Promise<any>;\n  postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n  postAccountVerifyPassword: (request: SecretVerificationRequest) => Promise<any>;\n  postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n  postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n  postAccountKdf: (request: KdfRequest) => Promise<any>;\n  postUserApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  postUserRotateApiKey: (id: string, request: SecretVerificationRequest) => Promise<ApiKeyResponse>;\n  putUpdateTempPassword: (request: UpdateTempPasswordRequest) => Promise<any>;\n  postConvertToKeyConnector: () => Promise<void>;\n  //passwordless\n  postAuthRequest: (request: PasswordlessCreateAuthRequest) => Promise<AuthRequestResponse>;\n  getAuthResponse: (id: string, accessCode: string) => Promise<AuthRequestResponse>;\n  getAuthRequest: (id: string) => Promise<AuthRequestResponse>;\n  putAuthRequest: (id: string, request: PasswordlessAuthRequest) => Promise<AuthRequestResponse>;\n  getAuthRequests: () => Promise<ListResponse<AuthRequestResponse>>;\n  getLastAuthRequest: () => Promise<AuthRequestResponse>;\n\n  getUserBillingHistory: () => Promise<BillingHistoryResponse>;\n  getUserBillingPayment: () => Promise<BillingPaymentResponse>;\n\n  getSend: (id: string) => Promise<SendResponse>;\n  postSendAccess: (\n    id: string,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendAccessResponse>;\n  getSends: () => Promise<ListResponse<SendResponse>>;\n  postSend: (request: SendRequest) => Promise<SendResponse>;\n  postFileTypeSend: (request: SendRequest) => Promise<SendFileUploadDataResponse>;\n  postSendFile: (sendId: string, fileId: string, data: FormData) => Promise<any>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postSendFileLegacy: (data: FormData) => Promise<SendResponse>;\n  putSend: (id: string, request: SendRequest) => Promise<SendResponse>;\n  putSendRemovePassword: (id: string) => Promise<SendResponse>;\n  deleteSend: (id: string) => Promise<any>;\n  getSendFileDownloadData: (\n    send: SendAccessView,\n    request: SendAccessRequest,\n    apiUrl?: string\n  ) => Promise<SendFileDownloadDataResponse>;\n  renewSendFileUploadUrl: (sendId: string, fileId: string) => Promise<SendFileUploadDataResponse>;\n\n  getCipher: (id: string) => Promise<CipherResponse>;\n  getFullCipherDetails: (id: string) => Promise<CipherResponse>;\n  getCipherAdmin: (id: string) => Promise<CipherResponse>;\n  getAttachmentData: (\n    cipherId: string,\n    attachmentId: string,\n    emergencyAccessId?: string\n  ) => Promise<AttachmentResponse>;\n  getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n  postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n  postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n  putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  putPartialCipher: (id: string, request: CipherPartialRequest) => Promise<CipherResponse>;\n  putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n  deleteCipher: (id: string) => Promise<any>;\n  deleteCipherAdmin: (id: string) => Promise<any>;\n  deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n  putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n  putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n  putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n  postPurgeCiphers: (request: SecretVerificationRequest, organizationId?: string) => Promise<any>;\n  putDeleteCipher: (id: string) => Promise<any>;\n  putDeleteCipherAdmin: (id: string) => Promise<any>;\n  putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n  putRestoreCipher: (id: string) => Promise<CipherResponse>;\n  putRestoreCipherAdmin: (id: string) => Promise<CipherResponse>;\n  putRestoreManyCiphers: (\n    request: CipherBulkRestoreRequest\n  ) => Promise<ListResponse<CipherResponse>>;\n\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  /**\n   * @deprecated Mar 25 2021: This method has been deprecated in favor of direct uploads.\n   * This method still exists for backward compatibility with old server versions.\n   */\n  postCipherAttachmentAdminLegacy: (id: string, data: FormData) => Promise<CipherResponse>;\n  postCipherAttachment: (\n    id: string,\n    request: AttachmentRequest\n  ) => Promise<AttachmentUploadDataResponse>;\n  deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n  deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n  postShareCipherAttachment: (\n    id: string,\n    attachmentId: string,\n    data: FormData,\n    organizationId: string\n  ) => Promise<any>;\n  renewAttachmentUploadUrl: (\n    id: string,\n    attachmentId: string\n  ) => Promise<AttachmentUploadDataResponse>;\n  postAttachmentFile: (id: string, attachmentId: string, data: FormData) => Promise<any>;\n\n  getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n  getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n  getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n  getCollectionAccessDetails: (\n    organizationId: string,\n    id: string\n  ) => Promise<CollectionAccessDetailsResponse>;\n  getManyCollectionsWithAccessDetails: (\n    orgId: string\n  ) => Promise<ListResponse<CollectionAccessDetailsResponse>>;\n  postCollection: (\n    organizationId: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  putCollectionUsers: (\n    organizationId: string,\n    id: string,\n    request: SelectionReadOnlyRequest[]\n  ) => Promise<any>;\n  putCollection: (\n    organizationId: string,\n    id: string,\n    request: CollectionRequest\n  ) => Promise<CollectionResponse>;\n  deleteCollection: (organizationId: string, id: string) => Promise<any>;\n  deleteManyCollections: (request: CollectionBulkDeleteRequest) => Promise<any>;\n  deleteCollectionUser: (\n    organizationId: string,\n    id: string,\n    organizationUserId: string\n  ) => Promise<any>;\n\n  getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n  putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n  deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n  getSync: () => Promise<SyncResponse>;\n  postPublicImportDirectory: (request: OrganizationImportRequest) => Promise<any>;\n\n  getSettingsDomains: () => Promise<DomainsResponse>;\n  putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n  getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorOrganizationProviders: (\n    organizationId: string\n  ) => Promise<ListResponse<TwoFactorProviderResponse>>;\n  getTwoFactorAuthenticator: (\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  getTwoFactorEmail: (request: SecretVerificationRequest) => Promise<TwoFactorEmailResponse>;\n  getTwoFactorDuo: (request: SecretVerificationRequest) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: SecretVerificationRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  getTwoFactorYubiKey: (request: SecretVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n  getTwoFactorWebAuthn: (request: SecretVerificationRequest) => Promise<TwoFactorWebAuthnResponse>;\n  getTwoFactorWebAuthnChallenge: (request: SecretVerificationRequest) => Promise<ChallengeResponse>;\n  getTwoFactorRecover: (request: SecretVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n  putTwoFactorAuthenticator: (\n    request: UpdateTwoFactorAuthenticatorRequest\n  ) => Promise<TwoFactorAuthenticatorResponse>;\n  putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n  putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorOrganizationDuo: (\n    organizationId: string,\n    request: UpdateTwoFactorDuoRequest\n  ) => Promise<TwoFactorDuoResponse>;\n  putTwoFactorYubiKey: (\n    request: UpdateTwoFactorYubioOtpRequest\n  ) => Promise<TwoFactorYubiKeyResponse>;\n  putTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  deleteTwoFactorWebAuthn: (\n    request: UpdateTwoFactorWebAuthnDeleteRequest\n  ) => Promise<TwoFactorWebAuthnResponse>;\n  putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n  putTwoFactorOrganizationDisable: (\n    organizationId: string,\n    request: TwoFactorProviderRequest\n  ) => Promise<TwoFactorProviderResponse>;\n  postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n  postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n  postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n  getDeviceVerificationSettings: () => Promise<DeviceVerificationResponse>;\n  putDeviceVerificationSettings: (\n    request: DeviceVerificationRequest\n  ) => Promise<DeviceVerificationResponse>;\n  getKnownDevice: (email: string, deviceIdentifier: string) => Promise<boolean>;\n\n  getEmergencyAccessTrusted: () => Promise<ListResponse<EmergencyAccessGranteeDetailsResponse>>;\n  getEmergencyAccessGranted: () => Promise<ListResponse<EmergencyAccessGrantorDetailsResponse>>;\n  getEmergencyAccess: (id: string) => Promise<EmergencyAccessGranteeDetailsResponse>;\n  getEmergencyGrantorPolicies: (id: string) => Promise<ListResponse<PolicyResponse>>;\n  putEmergencyAccess: (id: string, request: EmergencyAccessUpdateRequest) => Promise<any>;\n  deleteEmergencyAccess: (id: string) => Promise<any>;\n  postEmergencyAccessInvite: (request: EmergencyAccessInviteRequest) => Promise<any>;\n  postEmergencyAccessReinvite: (id: string) => Promise<any>;\n  postEmergencyAccessAccept: (id: string, request: EmergencyAccessAcceptRequest) => Promise<any>;\n  postEmergencyAccessConfirm: (id: string, request: EmergencyAccessConfirmRequest) => Promise<any>;\n  postEmergencyAccessInitiate: (id: string) => Promise<any>;\n  postEmergencyAccessApprove: (id: string) => Promise<any>;\n  postEmergencyAccessReject: (id: string) => Promise<any>;\n  postEmergencyAccessTakeover: (id: string) => Promise<EmergencyAccessTakeoverResponse>;\n  postEmergencyAccessPassword: (\n    id: string,\n    request: EmergencyAccessPasswordRequest\n  ) => Promise<any>;\n  postEmergencyAccessView: (id: string) => Promise<EmergencyAccessViewResponse>;\n  getCloudCommunicationsEnabled: () => Promise<boolean>;\n  abstract getOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    id: string,\n    type: OrganizationConnectionType,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract createOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig }\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  abstract updateOrganizationConnection<TConfig extends OrganizationConnectionConfigApis>(\n    request: OrganizationConnectionRequest,\n    configType: { new (response: any): TConfig },\n    organizationConnectionId: string\n  ): Promise<OrganizationConnectionResponse<TConfig>>;\n  deleteOrganizationConnection: (id: string) => Promise<void>;\n  getPlans: () => Promise<ListResponse<PlanResponse>>;\n  getTaxRates: () => Promise<ListResponse<TaxRateResponse>>;\n\n  postProviderSetup: (id: string, request: ProviderSetupRequest) => Promise<ProviderResponse>;\n  getProvider: (id: string) => Promise<ProviderResponse>;\n  putProvider: (id: string, request: ProviderUpdateRequest) => Promise<ProviderResponse>;\n\n  getProviderUsers: (providerId: string) => Promise<ListResponse<ProviderUserUserDetailsResponse>>;\n  getProviderUser: (providerId: string, id: string) => Promise<ProviderUserResponse>;\n  postProviderUserInvite: (providerId: string, request: ProviderUserInviteRequest) => Promise<any>;\n  postProviderUserReinvite: (providerId: string, id: string) => Promise<any>;\n  postManyProviderUserReinvite: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  postProviderUserAccept: (\n    providerId: string,\n    id: string,\n    request: ProviderUserAcceptRequest\n  ) => Promise<any>;\n  postProviderUserConfirm: (\n    providerId: string,\n    id: string,\n    request: ProviderUserConfirmRequest\n  ) => Promise<any>;\n  postProviderUsersPublicKey: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkPublicKeyResponse>>;\n  postProviderUserBulkConfirm: (\n    providerId: string,\n    request: ProviderUserBulkConfirmRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  putProviderUser: (\n    providerId: string,\n    id: string,\n    request: ProviderUserUpdateRequest\n  ) => Promise<any>;\n  deleteProviderUser: (organizationId: string, id: string) => Promise<any>;\n  deleteManyProviderUsers: (\n    providerId: string,\n    request: ProviderUserBulkRequest\n  ) => Promise<ListResponse<ProviderUserBulkResponse>>;\n  getProviderClients: (\n    providerId: string\n  ) => Promise<ListResponse<ProviderOrganizationOrganizationDetailsResponse>>;\n  postProviderAddOrganization: (\n    providerId: string,\n    request: ProviderAddOrganizationRequest\n  ) => Promise<any>;\n  postProviderCreateOrganization: (\n    providerId: string,\n    request: ProviderOrganizationCreateRequest\n  ) => Promise<ProviderOrganizationResponse>;\n  deleteProviderOrganization: (providerId: string, organizationId: string) => Promise<any>;\n\n  getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n  getEventsCipher: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganization: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsOrganizationUser: (\n    organizationId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProvider: (\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  getEventsProviderUser: (\n    providerId: string,\n    id: string,\n    start: string,\n    end: string,\n    token: string\n  ) => Promise<ListResponse<EventResponse>>;\n  postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n  deleteSsoUser: (organizationId: string) => Promise<void>;\n  getSsoUserIdentifier: () => Promise<string>;\n\n  getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n  getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n  postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n  postSetupPayment: () => Promise<string>;\n\n  getActiveBearerToken: () => Promise<string>;\n  fetch: (request: Request) => Promise<Response>;\n  nativeFetch: (request: Request) => Promise<Response>;\n\n  preValidateSso: (identifier: string) => Promise<SsoPreValidateResponse>;\n\n  postCreateSponsorship: (\n    sponsorshipOrgId: string,\n    request: OrganizationSponsorshipCreateRequest\n  ) => Promise<void>;\n  getSponsorshipSyncStatus: (\n    sponsoredOrgId: string\n  ) => Promise<OrganizationSponsorshipSyncStatusResponse>;\n  deleteRevokeSponsorship: (sponsoringOrganizationId: string) => Promise<void>;\n  deleteRemoveSponsorship: (sponsoringOrgId: string) => Promise<void>;\n  postPreValidateSponsorshipToken: (sponsorshipToken: string) => Promise<boolean>;\n  postRedeemSponsorship: (\n    sponsorshipToken: string,\n    request: OrganizationSponsorshipRedeemRequest\n  ) => Promise<void>;\n  postResendSponsorshipOffer: (sponsoringOrgId: string) => Promise<void>;\n\n  getUserKeyFromKeyConnector: (keyConnectorUrl: string) => Promise<KeyConnectorUserKeyResponse>;\n  postUserKeyToKeyConnector: (\n    keyConnectorUrl: string,\n    request: KeyConnectorUserKeyRequest\n  ) => Promise<void>;\n  getKeyConnectorAlive: (keyConnectorUrl: string) => Promise<void>;\n  getOrganizationExport: (organizationId: string) => Promise<OrganizationExportResponse>;\n}\n","export abstract class AppIdService {\n  getAppId: () => Promise<string>;\n  getAnonymousAppId: () => Promise<string>;\n}\n","import { BreachAccountResponse } from \"../models/response/breach-account.response\";\n\nexport abstract class AuditService {\n  passwordLeaked: (password: string) => Promise<number>;\n  breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","export interface MessageBase {\n  command: string;\n}\n\nexport abstract class BroadcasterService {\n  send: (message: MessageBase, id?: string) => void;\n  subscribe: (id: string, messageCallback: (message: MessageBase) => void) => void;\n  unsubscribe: (id: string) => void;\n}\n","import { CollectionData } from \"../models/data/collection.data\";\nimport { Collection } from \"../models/domain/collection\";\nimport { TreeNode } from \"../models/domain/tree-node\";\nimport { CollectionView } from \"../models/view/collection.view\";\n\nexport abstract class CollectionService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (model: CollectionView) => Promise<Collection>;\n  decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n  get: (id: string) => Promise<Collection>;\n  getAll: () => Promise<Collection[]>;\n  getAllDecrypted: () => Promise<CollectionView[]>;\n  getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n  getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n  upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n  replace: (collections: { [id: string]: CollectionData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","import { KdfConfig } from \"../auth/models/domain/kdf-config\";\nimport { HashPurpose } from \"../enums/hashPurpose\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { KeySuffixOptions } from \"../enums/keySuffixOptions\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { ProfileOrganizationResponse } from \"../models/response/profile-organization.response\";\nimport { ProfileProviderOrganizationResponse } from \"../models/response/profile-provider-organization.response\";\nimport { ProfileProviderResponse } from \"../models/response/profile-provider.response\";\n\nexport abstract class CryptoService {\n  setKey: (key: SymmetricCryptoKey) => Promise<any>;\n  setKeyHash: (keyHash: string) => Promise<void>;\n  setEncKey: (encKey: string) => Promise<void>;\n  setEncPrivateKey: (encPrivateKey: string) => Promise<void>;\n  setOrgKeys: (\n    orgs: ProfileOrganizationResponse[],\n    providerOrgs: ProfileProviderOrganizationResponse[]\n  ) => Promise<void>;\n  setProviderKeys: (orgs: ProfileProviderResponse[]) => Promise<void>;\n  getKey: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyFromStorage: (keySuffix: KeySuffixOptions, userId?: string) => Promise<SymmetricCryptoKey>;\n  getKeyHash: () => Promise<string>;\n  compareAndUpdateKeyHash: (masterPassword: string, key: SymmetricCryptoKey) => Promise<boolean>;\n  getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  getPublicKey: () => Promise<ArrayBuffer>;\n  getPrivateKey: () => Promise<ArrayBuffer>;\n  getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n  getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n  getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n  getProviderKey: (providerId: string) => Promise<SymmetricCryptoKey>;\n  getKeyForUserEncryption: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n  hasKey: () => Promise<boolean>;\n  hasKeyInMemory: (userId?: string) => Promise<boolean>;\n  hasKeyStored: (keySuffix?: KeySuffixOptions, userId?: string) => Promise<boolean>;\n  hasEncKey: () => Promise<boolean>;\n  clearKey: (clearSecretStorage?: boolean, userId?: string) => Promise<any>;\n  clearKeyHash: () => Promise<any>;\n  clearEncKey: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearKeyPair: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearOrgKeys: (memoryOnly?: boolean, userId?: string) => Promise<any>;\n  clearProviderKeys: (memoryOnly?: boolean) => Promise<any>;\n  clearPinProtectedKey: () => Promise<any>;\n  clearKeys: (userId?: string) => Promise<any>;\n  toggleKey: () => Promise<any>;\n  makeKey: (\n    password: string,\n    salt: string,\n    kdf: KdfType,\n    kdfConfig: KdfConfig\n  ) => Promise<SymmetricCryptoKey>;\n  makeKeyFromPin: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfConfig: KdfConfig,\n    protectedKeyCs?: EncString\n  ) => Promise<SymmetricCryptoKey>;\n  makeShareKey: () => Promise<[EncString, SymmetricCryptoKey]>;\n  makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, EncString]>;\n  makePinKey: (\n    pin: string,\n    salt: string,\n    kdf: KdfType,\n    kdfConfig: KdfConfig\n  ) => Promise<SymmetricCryptoKey>;\n  makeSendKey: (keyMaterial: ArrayBuffer) => Promise<SymmetricCryptoKey>;\n  hashPassword: (\n    password: string,\n    key: SymmetricCryptoKey,\n    hashPurpose?: HashPurpose\n  ) => Promise<string>;\n  makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, EncString]>;\n  remakeEncKey: (\n    key: SymmetricCryptoKey,\n    encKey?: SymmetricCryptoKey\n  ) => Promise<[SymmetricCryptoKey, EncString]>;\n  encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncString>;\n  encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<EncArrayBuffer>;\n  rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<EncString>;\n  rsaDecrypt: (encValue: string, privateKeyValue?: ArrayBuffer) => Promise<ArrayBuffer>;\n  decryptToBytes: (encString: EncString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  decryptToUtf8: (encString: EncString, key?: SymmetricCryptoKey) => Promise<string>;\n  decryptFromBytes: (encBuffer: EncArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n  randomNumber: (min: number, max: number) => Promise<number>;\n  validateKey: (key: SymmetricCryptoKey) => Promise<boolean>;\n}\n","import { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport abstract class CryptoFunctionService {\n  pbkdf2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ) => Promise<ArrayBuffer>;\n  argon2: (\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    iterations: number,\n    memory: number,\n    parallelism: number\n  ) => Promise<ArrayBuffer>;\n  hkdf: (\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hkdfExpand: (\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  hash: (\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ) => Promise<ArrayBuffer>;\n  hmac: (\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer>;\n  compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n  hmacFast: (\n    value: ArrayBuffer | string,\n    key: ArrayBuffer | string,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ) => Promise<ArrayBuffer | string>;\n  compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n  aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  aesDecryptFastParameters: (\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ) => DecryptParameters<ArrayBuffer | string>;\n  aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n  aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaEncrypt: (\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaDecrypt: (\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ) => Promise<ArrayBuffer>;\n  rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n  rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n  randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { Observable } from \"rxjs\";\n\nexport type Urls = {\n  base?: string;\n  webVault?: string;\n  api?: string;\n  identity?: string;\n  icons?: string;\n  notifications?: string;\n  events?: string;\n  keyConnector?: string;\n  scim?: string;\n};\n\nexport type PayPalConfig = {\n  businessId?: string;\n  buttonAction?: string;\n};\n\nexport abstract class EnvironmentService {\n  urls: Observable<Urls>;\n\n  hasBaseUrl: () => boolean;\n  getNotificationsUrl: () => string;\n  getWebVaultUrl: () => string;\n  getSendUrl: () => string;\n  getIconsUrl: () => string;\n  getApiUrl: () => string;\n  getIdentityUrl: () => string;\n  getEventsUrl: () => string;\n  getKeyConnectorUrl: () => string;\n  getScimUrl: () => string;\n  setUrlsFromStorage: () => Promise<void>;\n  setUrls: (urls: Urls) => Promise<Urls>;\n  getUrls: () => Urls;\n  isCloud: () => boolean;\n  /**\n   * @remarks For desktop and browser use only.\n   * For web, use PlatformUtilsService.isSelfHost()\n   */\n  isSelfHosted: () => boolean;\n}\n","import { EventType } from \"../../enums/eventType\";\n\nexport abstract class EventCollectionService {\n  collect: (\n    eventType: EventType,\n    cipherId?: string,\n    uploadImmediately?: boolean,\n    organizationId?: string\n  ) => Promise<any>;\n}\n","export abstract class EventUploadService {\n  uploadEvents: (userId?: string) => Promise<void>;\n}\n","import { EventView } from \"../models/view/event.view\";\n\nexport type ExportFormat = \"csv\" | \"json\" | \"encrypted_json\";\n\nexport abstract class ExportService {\n  getExport: (format?: ExportFormat, organizationId?: string) => Promise<string>;\n  getPasswordProtectedExport: (password: string, organizationId?: string) => Promise<string>;\n  getOrganizationExport: (organizationId: string, format?: ExportFormat) => Promise<string>;\n  getEventExport: (events: EventView[]) => Promise<string>;\n  getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { FileDownloadRequest } from \"./fileDownloadRequest\";\n\nexport abstract class FileDownloadService {\n  download: (request: FileDownloadRequest) => void;\n}\n","import { AbstractControl } from \"@angular/forms\";\nexport interface AllValidationErrors {\n  controlName: string;\n  errorName: string;\n}\n\nexport interface FormGroupControls {\n  [key: string]: AbstractControl;\n}\n\nexport abstract class FormValidationErrorsService {\n  getFormValidationErrors: (controls: FormGroupControls) => AllValidationErrors[];\n}\n","import { Observable } from \"rxjs\";\n\nimport { TranslationService } from \"./translation.service\";\n\nexport abstract class I18nService extends TranslationService {\n  locale$: Observable<string>;\n}\n","export abstract class TranslationService {\n  supportedTranslationLocales: string[];\n  translationLocale: string;\n  collator: Intl.Collator;\n  localeNames: Map<string, string>;\n  t: (id: string, p1?: string | number, p2?: string | number, p3?: string | number) => string;\n  translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { LogLevelType } from \"../enums/logLevelType\";\n\nexport abstract class LogService {\n  debug: (message: string) => void;\n  info: (message: string) => void;\n  warning: (message: string) => void;\n  error: (message: string) => void;\n  write: (level: LogLevelType, message: string) => void;\n}\n","export abstract class MessagingService {\n  send: (subscriber: string, arg?: any) => void;\n}\n","export abstract class NotificationsService {\n  init: () => Promise<void>;\n  updateConnection: (sync?: boolean) => Promise<void>;\n  reconnectFromActivity: () => Promise<void>;\n  disconnectFromInactivity: () => Promise<void>;\n}\n","import { OrganizationDomainRequest } from \"../../services/organization-domain/requests/organization-domain.request\";\n\nimport { OrganizationDomainSsoDetailsResponse } from \"./responses/organization-domain-sso-details.response\";\nimport { OrganizationDomainResponse } from \"./responses/organization-domain.response\";\n\nexport abstract class OrgDomainApiServiceAbstraction {\n  getAllByOrgId: (orgId: string) => Promise<Array<OrganizationDomainResponse>>;\n  getByOrgIdAndOrgDomainId: (\n    orgId: string,\n    orgDomainId: string\n  ) => Promise<OrganizationDomainResponse>;\n  post: (\n    orgId: string,\n    orgDomain: OrganizationDomainRequest\n  ) => Promise<OrganizationDomainResponse>;\n  verify: (orgId: string, orgDomainId: string) => Promise<OrganizationDomainResponse>;\n  delete: (orgId: string, orgDomainId: string) => Promise<any>;\n  getClaimedOrgDomainByEmail: (email: string) => Promise<OrganizationDomainSsoDetailsResponse>;\n}\n","import { ListResponse } from \"../../models/response/list.response\";\n\nimport {\n  OrganizationUserAcceptRequest,\n  OrganizationUserBulkConfirmRequest,\n  OrganizationUserConfirmRequest,\n  OrganizationUserInviteRequest,\n  OrganizationUserResetPasswordEnrollmentRequest,\n  OrganizationUserResetPasswordRequest,\n  OrganizationUserUpdateGroupsRequest,\n  OrganizationUserUpdateRequest,\n} from \"./requests\";\nimport {\n  OrganizationUserBulkPublicKeyResponse,\n  OrganizationUserBulkResponse,\n  OrganizationUserDetailsResponse,\n  OrganizationUserResetPasswordDetailsReponse,\n  OrganizationUserUserDetailsResponse,\n} from \"./responses\";\n\n/**\n * Service for interacting with Organization Users via the API\n */\nexport abstract class OrganizationUserService {\n  /**\n   * Retrieve a single organization user by Id\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   * @param options - Options for the request\n   */\n  abstract getOrganizationUser(\n    organizationId: string,\n    id: string,\n    options?: {\n      includeGroups?: boolean;\n    }\n  ): Promise<OrganizationUserDetailsResponse>;\n\n  /**\n   * Retrieve a list of groups Ids the specified organization user belongs to\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]>;\n\n  /**\n   * Retrieve a list of all users that belong to the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param options - Options for the request\n   */\n  abstract getAllUsers(\n    organizationId: string,\n    options?: {\n      includeCollections?: boolean;\n      includeGroups?: boolean;\n    }\n  ): Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n\n  /**\n   * Retrieve reset password details for the specified organization user\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract getOrganizationUserResetPasswordDetails(\n    organizationId: string,\n    id: string\n  ): Promise<OrganizationUserResetPasswordDetailsReponse>;\n\n  /**\n   * Create new organization user invite(s) for the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param request - New user invitation request details\n   */\n  abstract postOrganizationUserInvite(\n    organizationId: string,\n    request: OrganizationUserInviteRequest\n  ): Promise<void>;\n\n  /**\n   * Re-invite the specified organization user\n   * @param organizationId - Identifier for the user's organization\n   * @param id - Organization user identifier\n   */\n  abstract postOrganizationUserReinvite(organizationId: string, id: string): Promise<any>;\n\n  /**\n   * Re-invite many organization users for the specified organization\n   * @param organizationId - Identifier for the organization\n   * @param ids - A list of organization user identifiers\n   * @return List of user ids, including both those that were successfully re-invited and those that had an error\n   */\n  abstract postManyOrganizationUserReinvite(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Accept an organization user invitation\n   * @param organizationId - Identifier for the organization to accept\n   * @param id - Organization user identifier\n   * @param request - Request details for accepting the invitation\n   */\n  abstract postOrganizationUserAccept(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserAcceptRequest\n  ): Promise<void>;\n\n  /**\n   * Confirm an organization user that has accepted their invitation\n   * @param organizationId - Identifier for the organization to confirm\n   * @param id - Organization user identifier\n   * @param request - Request details for confirming the user\n   */\n  abstract postOrganizationUserConfirm(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserConfirmRequest\n  ): Promise<void>;\n\n  /**\n   * Retrieve a list of the specified users' public keys\n   * @param organizationId - Identifier for the organization to accept\n   * @param ids - A list of organization user identifiers to retrieve public keys for\n   */\n  abstract postOrganizationUsersPublicKey(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkPublicKeyResponse>>;\n\n  /**\n   * Confirm many organization users that have accepted their invitations\n   * @param organizationId - Identifier for the organization to confirm users\n   * @param request - Bulk request details for confirming the user\n   */\n  abstract postOrganizationUserBulkConfirm(\n    organizationId: string,\n    request: OrganizationUserBulkConfirmRequest\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Update an organization users\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param request - Request details for updating the user\n   */\n  abstract putOrganizationUser(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserUpdateRequest\n  ): Promise<void>;\n\n  /**\n   * Update an organization user's groups\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param groupIds - List of group ids to associate the user with\n   */\n  abstract putOrganizationUserGroups(\n    organizationId: string,\n    id: string,\n    groupIds: OrganizationUserUpdateGroupsRequest\n  ): Promise<void>;\n\n  /**\n   * Update an organization user's reset password enrollment\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param userId - Organization user identifier\n   * @param request - Reset password enrollment details\n   */\n  abstract putOrganizationUserResetPasswordEnrollment(\n    organizationId: string,\n    userId: string,\n    request: OrganizationUserResetPasswordEnrollmentRequest\n  ): Promise<void>;\n\n  /**\n   * Reset an organization user's password\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   * @param request - Reset password details\n   */\n  abstract putOrganizationUserResetPassword(\n    organizationId: string,\n    id: string,\n    request: OrganizationUserResetPasswordRequest\n  ): Promise<void>;\n\n  /**\n   * Delete an organization user\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract deleteOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Delete many organization users\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to delete\n   * @return List of user ids, including both those that were successfully deleted and those that had an error\n   */\n  abstract deleteManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Revoke an organization user's access to the organization\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract revokeOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Revoke many organization users' access to the organization\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to revoke\n   * @return List of user ids, including both those that were successfully revoked and those that had an error\n   */\n  abstract revokeManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n\n  /**\n   * Restore an organization user's access to the organization\n   * @param organizationId - Identifier for the organization the user belongs to\n   * @param id - Organization user identifier\n   */\n  abstract restoreOrganizationUser(organizationId: string, id: string): Promise<void>;\n\n  /**\n   * Restore many organization users' access to the organization\n   * @param organizationId - Identifier for the organization the users belongs to\n   * @param ids - List of organization user identifiers to restore\n   * @return List of user ids, including both those that were successfully restored and those that had an error\n   */\n  abstract restoreManyOrganizationUsers(\n    organizationId: string,\n    ids: string[]\n  ): Promise<ListResponse<OrganizationUserBulkResponse>>;\n}\n","export class OrganizationUserResetPasswordRequest {\n  newMasterPasswordHash: string;\n  key: string;\n}\n","import { OrganizationApiKeyType } from \"../../auth/enums/organization-api-key-type\";\nimport { OrganizationSsoRequest } from \"../../auth/models/request/organization-sso.request\";\nimport { SecretVerificationRequest } from \"../../auth/models/request/secret-verification.request\";\nimport { ApiKeyResponse } from \"../../auth/models/response/api-key.response\";\nimport { OrganizationSsoResponse } from \"../../auth/models/response/organization-sso.response\";\nimport { ImportDirectoryRequest } from \"../../models/request/import-directory.request\";\nimport { OrganizationApiKeyRequest } from \"../../models/request/organization-api-key.request\";\nimport { OrganizationCreateRequest } from \"../../models/request/organization-create.request\";\nimport { OrganizationKeysRequest } from \"../../models/request/organization-keys.request\";\nimport { OrganizationSubscriptionUpdateRequest } from \"../../models/request/organization-subscription-update.request\";\nimport { OrganizationTaxInfoUpdateRequest } from \"../../models/request/organization-tax-info-update.request\";\nimport { OrganizationUpdateRequest } from \"../../models/request/organization-update.request\";\nimport { OrganizationUpgradeRequest } from \"../../models/request/organization-upgrade.request\";\nimport { OrganizationEnrollSecretsManagerRequest } from \"../../models/request/organization/organization-enroll-secrets-manager.request\";\nimport { PaymentRequest } from \"../../models/request/payment.request\";\nimport { SeatRequest } from \"../../models/request/seat.request\";\nimport { StorageRequest } from \"../../models/request/storage.request\";\nimport { VerifyBankRequest } from \"../../models/request/verify-bank.request\";\nimport { BillingResponse } from \"../../models/response/billing.response\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { OrganizationApiKeyInformationResponse } from \"../../models/response/organization-api-key-information.response\";\nimport { OrganizationAutoEnrollStatusResponse } from \"../../models/response/organization-auto-enroll-status.response\";\nimport { OrganizationKeysResponse } from \"../../models/response/organization-keys.response\";\nimport { OrganizationSubscriptionResponse } from \"../../models/response/organization-subscription.response\";\nimport { OrganizationResponse } from \"../../models/response/organization.response\";\nimport { PaymentResponse } from \"../../models/response/payment.response\";\nimport { TaxInfoResponse } from \"../../models/response/tax-info.response\";\n\nexport class OrganizationApiServiceAbstraction {\n  get: (id: string) => Promise<OrganizationResponse>;\n  getBilling: (id: string) => Promise<BillingResponse>;\n  getSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n  getLicense: (id: string, installationId: string) => Promise<unknown>;\n  getAutoEnrollStatus: (identifier: string) => Promise<OrganizationAutoEnrollStatusResponse>;\n  create: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n  createLicense: (data: FormData) => Promise<OrganizationResponse>;\n  save: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n  updatePayment: (id: string, request: PaymentRequest) => Promise<void>;\n  upgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n  updateSubscription: (id: string, request: OrganizationSubscriptionUpdateRequest) => Promise<void>;\n  updateSeats: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n  updateStorage: (id: string, request: StorageRequest) => Promise<PaymentResponse>;\n  verifyBank: (id: string, request: VerifyBankRequest) => Promise<void>;\n  cancel: (id: string) => Promise<void>;\n  reinstate: (id: string) => Promise<void>;\n  leave: (id: string) => Promise<void>;\n  delete: (id: string, request: SecretVerificationRequest) => Promise<void>;\n  updateLicense: (id: string, data: FormData) => Promise<void>;\n  importDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<void>;\n  getOrCreateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getApiKeyInformation: (\n    id: string,\n    organizationApiKeyType?: OrganizationApiKeyType\n  ) => Promise<ListResponse<OrganizationApiKeyInformationResponse>>;\n  rotateApiKey: (id: string, request: OrganizationApiKeyRequest) => Promise<ApiKeyResponse>;\n  getTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n  updateTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<void>;\n  getKeys: (id: string) => Promise<OrganizationKeysResponse>;\n  updateKeys: (id: string, request: OrganizationKeysRequest) => Promise<OrganizationKeysResponse>;\n  getSso: (id: string) => Promise<OrganizationSsoResponse>;\n  updateSso: (id: string, request: OrganizationSsoRequest) => Promise<OrganizationSsoResponse>;\n  selfHostedSyncLicense: (id: string) => Promise<void>;\n  updateEnrollSecretsManager: (\n    id: string,\n    request: OrganizationEnrollSecretsManagerRequest\n  ) => Promise<void>;\n}\n","import { map, Observable } from \"rxjs\";\n\nimport { Utils } from \"../../misc/utils\";\nimport { OrganizationData } from \"../../models/data/organization.data\";\nimport { Organization } from \"../../models/domain/organization\";\nimport { I18nService } from \"../i18n.service\";\n\nexport function canAccessVaultTab(org: Organization): boolean {\n  return org.canViewAssignedCollections || org.canViewAllCollections || org.canManageGroups;\n}\n\nexport function canAccessSettingsTab(org: Organization): boolean {\n  return (\n    org.isOwner ||\n    org.canManagePolicies ||\n    org.canManageSso ||\n    org.canManageScim ||\n    org.canAccessImportExport\n  );\n}\n\nexport function canAccessMembersTab(org: Organization): boolean {\n  return org.canManageUsers || org.canManageUsersPassword;\n}\n\nexport function canAccessGroupsTab(org: Organization): boolean {\n  return org.canManageGroups;\n}\n\nexport function canAccessReportingTab(org: Organization): boolean {\n  return org.canAccessReports || org.canAccessEventLogs;\n}\n\nexport function canAccessBillingTab(org: Organization): boolean {\n  return org.isOwner;\n}\n\nexport function canAccessOrgAdmin(org: Organization): boolean {\n  return (\n    canAccessMembersTab(org) ||\n    canAccessGroupsTab(org) ||\n    canAccessReportingTab(org) ||\n    canAccessBillingTab(org) ||\n    canAccessSettingsTab(org) ||\n    canAccessVaultTab(org)\n  );\n}\n\nexport function getOrganizationById(id: string) {\n  return map<Organization[], Organization | undefined>((orgs) => orgs.find((o) => o.id === id));\n}\n\nexport function canAccessAdmin(i18nService: I18nService) {\n  return map<Organization[], Organization[]>((orgs) =>\n    orgs.filter(canAccessOrgAdmin).sort(Utils.getSortFunction(i18nService, \"name\"))\n  );\n}\n\nexport function isNotProviderUser(org: Organization): boolean {\n  return !org.isProviderUser;\n}\n\nexport abstract class OrganizationService {\n  organizations$: Observable<Organization[]>;\n\n  get$: (id: string) => Observable<Organization | undefined>;\n  get: (id: string) => Organization;\n  getByIdentifier: (identifier: string) => Organization;\n  getAll: (userId?: string) => Promise<Organization[]>;\n  /**\n   * @deprecated For the CLI only\n   * @param id id of the organization\n   */\n  getFromState: (id: string) => Promise<Organization>;\n  canManageSponsorships: () => Promise<boolean>;\n  hasOrganizations: () => boolean;\n}\n\nexport abstract class InternalOrganizationService extends OrganizationService {\n  replace: (organizations: { [id: string]: OrganizationData }) => Promise<void>;\n}\n","import { ClientType } from \"../enums/clientType\";\nimport { DeviceType } from \"../enums/deviceType\";\n\ninterface ToastOptions {\n  timeout?: number;\n}\n\nexport abstract class PlatformUtilsService {\n  getDevice: () => DeviceType;\n  getDeviceString: () => string;\n  getClientType: () => ClientType;\n  isFirefox: () => boolean;\n  isChrome: () => boolean;\n  isEdge: () => boolean;\n  isOpera: () => boolean;\n  isVivaldi: () => boolean;\n  isSafari: () => boolean;\n  isMacAppStore: () => boolean;\n  isViewOpen: () => Promise<boolean>;\n  launchUri: (uri: string, options?: any) => void;\n  getApplicationVersion: () => Promise<string>;\n  getApplicationVersionNumber: () => Promise<string>;\n  supportsWebAuthn: (win: Window) => boolean;\n  supportsDuo: () => boolean;\n  showToast: (\n    type: \"error\" | \"success\" | \"warning\" | \"info\",\n    title: string,\n    text: string | string[],\n    options?: ToastOptions\n  ) => void;\n  showDialog: (\n    body: string,\n    title?: string,\n    confirmText?: string,\n    cancelText?: string,\n    type?: string,\n    bodyIsHtml?: boolean,\n    target?: string\n  ) => Promise<boolean>;\n  isDev: () => boolean;\n  isSelfHost: () => boolean;\n  copyToClipboard: (text: string, options?: any) => void | boolean;\n  readFromClipboard: (options?: any) => Promise<string>;\n  supportsBiometric: () => Promise<boolean>;\n  authenticateBiometric: () => Promise<boolean>;\n  supportsSecureStorage: () => boolean;\n  getAutofillKeyboardShortcut: () => Promise<string>;\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { PolicyRequest } from \"../../models/request/policy.request\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport class PolicyApiServiceAbstraction {\n  getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n  getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByToken: (\n    organizationId: string,\n    token: string,\n    email: string,\n    organizationUserId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getPoliciesByInvitedUser: (\n    organizationId: string,\n    userId: string\n  ) => Promise<ListResponse<PolicyResponse>>;\n  getMasterPasswordPoliciesForInvitedUsers: (orgId: string) => Promise<MasterPasswordPolicyOptions>;\n  putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../../models/data/policy.data\";\nimport { MasterPasswordPolicyOptions } from \"../../models/domain/master-password-policy-options\";\nimport { Policy } from \"../../models/domain/policy\";\nimport { ResetPasswordPolicyOptions } from \"../../models/domain/reset-password-policy-options\";\nimport { ListResponse } from \"../../models/response/list.response\";\nimport { PolicyResponse } from \"../../models/response/policy.response\";\n\nexport abstract class PolicyService {\n  policies$: Observable<Policy[]>;\n  masterPasswordPolicyOptions$: (policies?: Policy[]) => Observable<MasterPasswordPolicyOptions>;\n  policyAppliesToActiveUser$: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean\n  ) => Observable<boolean>;\n\n  /**\n   * @deprecated Do not call this, use the policies$ observable collection\n   */\n  getAll: (type?: PolicyType, userId?: string) => Promise<Policy[]>;\n  evaluateMasterPassword: (\n    passwordStrength: number,\n    newPassword: string,\n    enforcedPolicyOptions?: MasterPasswordPolicyOptions\n  ) => boolean;\n  getResetPasswordPolicyOptions: (\n    policies: Policy[],\n    orgId: string\n  ) => [ResetPasswordPolicyOptions, boolean];\n  mapPoliciesFromToken: (policiesResponse: ListResponse<PolicyResponse>) => Policy[];\n  policyAppliesToUser: (\n    policyType: PolicyType,\n    policyFilter?: (policy: Policy) => boolean,\n    userId?: string\n  ) => Promise<boolean>;\n}\n\nexport abstract class InternalPolicyService extends PolicyService {\n  upsert: (policy: PolicyData) => Promise<any>;\n  replace: (policies: { [id: string]: PolicyData }) => Promise<void>;\n  clear: (userId?: string) => Promise<any>;\n}\n","import { ProviderData } from \"../models/data/provider.data\";\nimport { Provider } from \"../models/domain/provider\";\n\nexport abstract class ProviderService {\n  get: (id: string) => Promise<Provider>;\n  getAll: () => Promise<Provider[]>;\n  save: (providers: { [id: string]: ProviderData }) => Promise<any>;\n}\n","import { SendView } from \"../models/view/send.view\";\nimport { CipherView } from \"../vault/models/view/cipher.view\";\n\nexport abstract class SearchService {\n  indexedEntityId?: string = null;\n  clearIndex: () => void;\n  isSearchable: (query: string) => boolean;\n  indexCiphers: (indexedEntityGuid?: string, ciphersToIndex?: CipherView[]) => Promise<void>;\n  searchCiphers: (\n    query: string,\n    filter?: ((cipher: CipherView) => boolean) | ((cipher: CipherView) => boolean)[],\n    ciphers?: CipherView[]\n  ) => Promise<CipherView[]>;\n  searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n  searchSends: (sends: SendView[], query: string) => SendView[];\n}\n","import { SendData } from \"../models/data/send.data\";\nimport { EncArrayBuffer } from \"../models/domain/enc-array-buffer\";\nimport { Send } from \"../models/domain/send\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { SendView } from \"../models/view/send.view\";\n\nexport abstract class SendService {\n  clearCache: () => Promise<void>;\n  encrypt: (\n    model: SendView,\n    file: File | ArrayBuffer,\n    password: string,\n    key?: SymmetricCryptoKey\n  ) => Promise<[Send, EncArrayBuffer]>;\n  get: (id: string) => Promise<Send>;\n  getAll: () => Promise<Send[]>;\n  getAllDecrypted: () => Promise<SendView[]>;\n  saveWithServer: (sendData: [Send, EncArrayBuffer]) => Promise<any>;\n  upsert: (send: SendData | SendData[]) => Promise<any>;\n  replace: (sends: { [id: string]: SendData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  removePasswordWithServer: (id: string) => Promise<any>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { AccountSettingsSettings } from \"../models/domain/account\";\n\nexport abstract class SettingsService {\n  settings$: Observable<AccountSettingsSettings>;\n\n  setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n  getEquivalentDomains: (url: string) => string[];\n  clear: (userId?: string) => Promise<void>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { EnvironmentUrls } from \"../auth/models/domain/environment-urls\";\nimport { KdfConfig } from \"../auth/models/domain/kdf-config\";\nimport { KdfType } from \"../enums/kdfType\";\nimport { ThemeType } from \"../enums/themeType\";\nimport { UriMatchType } from \"../enums/uriMatchType\";\nimport { CollectionData } from \"../models/data/collection.data\";\nimport { EncryptedOrganizationKeyData } from \"../models/data/encrypted-organization-key.data\";\nimport { EventData } from \"../models/data/event.data\";\nimport { OrganizationData } from \"../models/data/organization.data\";\nimport { PolicyData } from \"../models/data/policy.data\";\nimport { ProviderData } from \"../models/data/provider.data\";\nimport { SendData } from \"../models/data/send.data\";\nimport { ServerConfigData } from \"../models/data/server-config.data\";\nimport { Account, AccountSettingsSettings } from \"../models/domain/account\";\nimport { EncString } from \"../models/domain/enc-string\";\nimport { Policy } from \"../models/domain/policy\";\nimport { StorageOptions } from \"../models/domain/storage-options\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\nimport { WindowState } from \"../models/domain/window-state\";\nimport { CollectionView } from \"../models/view/collection.view\";\nimport { SendView } from \"../models/view/send.view\";\nimport { GeneratedPasswordHistory } from \"../tools/generator/password\";\nimport { CipherData } from \"../vault/models/data/cipher.data\";\nimport { FolderData } from \"../vault/models/data/folder.data\";\nimport { LocalData } from \"../vault/models/data/local.data\";\nimport { CipherView } from \"../vault/models/view/cipher.view\";\nimport { AddEditCipherInfo } from \"../vault/types/add-edit-cipher-info\";\n\nexport abstract class StateService<T extends Account = Account> {\n  accounts$: Observable<{ [userId: string]: T }>;\n  activeAccount$: Observable<string>;\n  activeAccountUnlocked$: Observable<boolean>;\n\n  addAccount: (account: T) => Promise<void>;\n  setActiveUser: (userId: string) => Promise<void>;\n  clean: (options?: StorageOptions) => Promise<void>;\n  init: () => Promise<void>;\n\n  getAccessToken: (options?: StorageOptions) => Promise<string>;\n  setAccessToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getAddEditCipherInfo: (options?: StorageOptions) => Promise<AddEditCipherInfo>;\n  setAddEditCipherInfo: (value: AddEditCipherInfo, options?: StorageOptions) => Promise<void>;\n  getAlwaysShowDock: (options?: StorageOptions) => Promise<boolean>;\n  setAlwaysShowDock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientId: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientId: (value: string, options?: StorageOptions) => Promise<void>;\n  getApiKeyClientSecret: (options?: StorageOptions) => Promise<string>;\n  setApiKeyClientSecret: (value: string, options?: StorageOptions) => Promise<void>;\n  getAutoConfirmFingerPrints: (options?: StorageOptions) => Promise<boolean>;\n  setAutoConfirmFingerprints: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getAutoFillOnPageLoadDefault: (options?: StorageOptions) => Promise<boolean>;\n  setAutoFillOnPageLoadDefault: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricAwaitingAcceptance: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricAwaitingAcceptance: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricFingerprintValidated: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricFingerprintValidated: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getBiometricText: (options?: StorageOptions) => Promise<string>;\n  setBiometricText: (value: string, options?: StorageOptions) => Promise<void>;\n  getBiometricUnlock: (options?: StorageOptions) => Promise<boolean>;\n  setBiometricUnlock: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCanAccessPremium: (options?: StorageOptions) => Promise<boolean>;\n  getHasPremiumPersonally: (options?: StorageOptions) => Promise<boolean>;\n  setHasPremiumPersonally: (value: boolean, options?: StorageOptions) => Promise<void>;\n  setHasPremiumFromOrganization: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getHasPremiumFromOrganization: (options?: StorageOptions) => Promise<boolean>;\n  getClearClipboard: (options?: StorageOptions) => Promise<number>;\n  setClearClipboard: (value: number, options?: StorageOptions) => Promise<void>;\n  getCollapsedGroupings: (options?: StorageOptions) => Promise<string[]>;\n  setCollapsedGroupings: (value: string[], options?: StorageOptions) => Promise<void>;\n  getConvertAccountToKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setConvertAccountToKeyConnector: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setCryptoMasterKey: (value: SymmetricCryptoKey, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyAuto: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyAuto: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyB64: (options?: StorageOptions) => Promise<string>;\n  setCryptoMasterKeyB64: (value: string, options?: StorageOptions) => Promise<void>;\n  getCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<string>;\n  hasCryptoMasterKeyBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setCryptoMasterKeyBiometric: (value: string, options?: StorageOptions) => Promise<void>;\n  getDecryptedCiphers: (options?: StorageOptions) => Promise<CipherView[]>;\n  setDecryptedCiphers: (value: CipherView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCollections: (options?: StorageOptions) => Promise<CollectionView[]>;\n  setDecryptedCollections: (value: CollectionView[], options?: StorageOptions) => Promise<void>;\n  getDecryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<SymmetricCryptoKey>;\n  setDecryptedCryptoSymmetricKey: (\n    value: SymmetricCryptoKey,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedOrganizationKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setDecryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedPinProtected: (options?: StorageOptions) => Promise<EncString>;\n  setDecryptedPinProtected: (value: EncString, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  getDecryptedPolicies: (options?: StorageOptions) => Promise<Policy[]>;\n  /**\n   * @deprecated Do not call this, use PolicyService\n   */\n  setDecryptedPolicies: (value: Policy[], options?: StorageOptions) => Promise<void>;\n  getDecryptedPrivateKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setDecryptedPrivateKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getDecryptedProviderKeys: (options?: StorageOptions) => Promise<Map<string, SymmetricCryptoKey>>;\n  setDecryptedProviderKeys: (\n    value: Map<string, SymmetricCryptoKey>,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDecryptedSends: (options?: StorageOptions) => Promise<SendView[]>;\n  setDecryptedSends: (value: SendView[], options?: StorageOptions) => Promise<void>;\n  getDefaultUriMatch: (options?: StorageOptions) => Promise<UriMatchType>;\n  setDefaultUriMatch: (value: UriMatchType, options?: StorageOptions) => Promise<void>;\n  getDisableAddLoginNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAddLoginNotification: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoBiometricsPrompt: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoBiometricsPrompt: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableAutoTotpCopy: (options?: StorageOptions) => Promise<boolean>;\n  setDisableAutoTotpCopy: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableBadgeCounter: (options?: StorageOptions) => Promise<boolean>;\n  setDisableBadgeCounter: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableChangedPasswordNotification: (options?: StorageOptions) => Promise<boolean>;\n  setDisableChangedPasswordNotification: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getDisableContextMenuItem: (options?: StorageOptions) => Promise<boolean>;\n  setDisableContextMenuItem: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableFavicon: (options?: StorageOptions) => Promise<boolean>;\n  setDisableFavicon: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDisableGa: (options?: StorageOptions) => Promise<boolean>;\n  setDisableGa: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDismissedAutofillCallout: (options?: StorageOptions) => Promise<boolean>;\n  setDismissedAutofillCallout: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowCardsCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowCardsCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDontShowIdentitiesCurrentTab: (options?: StorageOptions) => Promise<boolean>;\n  setDontShowIdentitiesCurrentTab: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getDuckDuckGoSharedKey: (options?: StorageOptions) => Promise<string>;\n  setDuckDuckGoSharedKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmail: (options?: StorageOptions) => Promise<string>;\n  setEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getEmailVerified: (options?: StorageOptions) => Promise<boolean>;\n  setEmailVerified: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAlwaysOnTop: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAlwaysOnTop: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableAutoFillOnPageLoad: (options?: StorageOptions) => Promise<boolean>;\n  setEnableAutoFillOnPageLoad: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBiometric: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBiometric: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegration: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableBrowserIntegrationFingerprint: (options?: StorageOptions) => Promise<boolean>;\n  setEnableBrowserIntegrationFingerprint: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableCloseToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableCloseToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableDuckDuckGoBrowserIntegration: (options?: StorageOptions) => Promise<boolean>;\n  setEnableDuckDuckGoBrowserIntegration: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEnableFullWidth: (options?: StorageOptions) => Promise<boolean>;\n  setEnableFullWidth: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableMinimizeToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableMinimizeToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableStartToTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableStartToTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEnableTray: (options?: StorageOptions) => Promise<boolean>;\n  setEnableTray: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getEncryptedCiphers: (options?: StorageOptions) => Promise<{ [id: string]: CipherData }>;\n  setEncryptedCiphers: (\n    value: { [id: string]: CipherData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCollections: (options?: StorageOptions) => Promise<{ [id: string]: CollectionData }>;\n  setEncryptedCollections: (\n    value: { [id: string]: CollectionData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedCryptoSymmetricKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedCryptoSymmetricKey: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  getEncryptedFolders: (options?: StorageOptions) => Promise<{ [id: string]: FolderData }>;\n  /**\n   * @deprecated Do not call this directly, use FolderService\n   */\n  setEncryptedFolders: (\n    value: { [id: string]: FolderData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedOrganizationKeys: (\n    options?: StorageOptions\n  ) => Promise<{ [orgId: string]: EncryptedOrganizationKeyData }>;\n  setEncryptedOrganizationKeys: (\n    value: { [orgId: string]: EncryptedOrganizationKeyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPasswordGenerationHistory: (\n    options?: StorageOptions\n  ) => Promise<GeneratedPasswordHistory[]>;\n  setEncryptedPasswordGenerationHistory: (\n    value: GeneratedPasswordHistory[],\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPinProtected: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPinProtected: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  getEncryptedPolicies: (options?: StorageOptions) => Promise<{ [id: string]: PolicyData }>;\n  /**\n   * @deprecated Do not call this directly, use PolicyService\n   */\n  setEncryptedPolicies: (\n    value: { [id: string]: PolicyData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getEncryptedPrivateKey: (options?: StorageOptions) => Promise<string>;\n  setEncryptedPrivateKey: (value: string, options?: StorageOptions) => Promise<void>;\n  getEncryptedProviderKeys: (options?: StorageOptions) => Promise<any>;\n  setEncryptedProviderKeys: (value: any, options?: StorageOptions) => Promise<void>;\n  getEncryptedSends: (options?: StorageOptions) => Promise<{ [id: string]: SendData }>;\n  setEncryptedSends: (value: { [id: string]: SendData }, options?: StorageOptions) => Promise<void>;\n  getEntityId: (options?: StorageOptions) => Promise<string>;\n  setEntityId: (value: string, options?: StorageOptions) => Promise<void>;\n  getEntityType: (options?: StorageOptions) => Promise<any>;\n  setEntityType: (value: string, options?: StorageOptions) => Promise<void>;\n  getEnvironmentUrls: (options?: StorageOptions) => Promise<EnvironmentUrls>;\n  setEnvironmentUrls: (value: EnvironmentUrls, options?: StorageOptions) => Promise<void>;\n  getEquivalentDomains: (options?: StorageOptions) => Promise<string[][]>;\n  setEquivalentDomains: (value: string, options?: StorageOptions) => Promise<void>;\n  getEventCollection: (options?: StorageOptions) => Promise<EventData[]>;\n  setEventCollection: (value: EventData[], options?: StorageOptions) => Promise<void>;\n  getEverBeenUnlocked: (options?: StorageOptions) => Promise<boolean>;\n  setEverBeenUnlocked: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getForcePasswordReset: (options?: StorageOptions) => Promise<boolean>;\n  setForcePasswordReset: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getInstalledVersion: (options?: StorageOptions) => Promise<string>;\n  setInstalledVersion: (value: string, options?: StorageOptions) => Promise<void>;\n  getIsAuthenticated: (options?: StorageOptions) => Promise<boolean>;\n  getKdfConfig: (options?: StorageOptions) => Promise<KdfConfig>;\n  setKdfConfig: (kdfConfig: KdfConfig, options?: StorageOptions) => Promise<void>;\n  getKdfType: (options?: StorageOptions) => Promise<KdfType>;\n  setKdfType: (value: KdfType, options?: StorageOptions) => Promise<void>;\n  getKeyHash: (options?: StorageOptions) => Promise<string>;\n  setKeyHash: (value: string, options?: StorageOptions) => Promise<void>;\n  getLastActive: (options?: StorageOptions) => Promise<number>;\n  setLastActive: (value: number, options?: StorageOptions) => Promise<void>;\n  getLastSync: (options?: StorageOptions) => Promise<string>;\n  setLastSync: (value: string, options?: StorageOptions) => Promise<void>;\n  getLocalData: (options?: StorageOptions) => Promise<{ [cipherId: string]: LocalData }>;\n  setLocalData: (\n    value: { [cipherId: string]: LocalData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getLocale: (options?: StorageOptions) => Promise<string>;\n  setLocale: (value: string, options?: StorageOptions) => Promise<void>;\n  getMainWindowSize: (options?: StorageOptions) => Promise<number>;\n  setMainWindowSize: (value: number, options?: StorageOptions) => Promise<void>;\n  getMinimizeOnCopyToClipboard: (options?: StorageOptions) => Promise<boolean>;\n  setMinimizeOnCopyToClipboard: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNeverDomains: (options?: StorageOptions) => Promise<{ [id: string]: any }>;\n  setNeverDomains: (value: { [id: string]: any }, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometrics: (options?: StorageOptions) => Promise<boolean>;\n  setNoAutoPromptBiometrics: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getNoAutoPromptBiometricsText: (options?: StorageOptions) => Promise<string>;\n  setNoAutoPromptBiometricsText: (value: string, options?: StorageOptions) => Promise<void>;\n  getOpenAtLogin: (options?: StorageOptions) => Promise<boolean>;\n  setOpenAtLogin: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getOrganizationInvitation: (options?: StorageOptions) => Promise<any>;\n  setOrganizationInvitation: (value: any, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  getOrganizations: (options?: StorageOptions) => Promise<{ [id: string]: OrganizationData }>;\n  /**\n   * @deprecated Do not call this directly, use OrganizationService\n   */\n  setOrganizations: (\n    value: { [id: string]: OrganizationData },\n    options?: StorageOptions\n  ) => Promise<void>;\n  getPasswordGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setPasswordGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getUsernameGenerationOptions: (options?: StorageOptions) => Promise<any>;\n  setUsernameGenerationOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getGeneratorOptions: (options?: StorageOptions) => Promise<any>;\n  setGeneratorOptions: (value: any, options?: StorageOptions) => Promise<void>;\n  getProtectedPin: (options?: StorageOptions) => Promise<string>;\n  setProtectedPin: (value: string, options?: StorageOptions) => Promise<void>;\n  getProviders: (options?: StorageOptions) => Promise<{ [id: string]: ProviderData }>;\n  setProviders: (value: { [id: string]: ProviderData }, options?: StorageOptions) => Promise<void>;\n  getPublicKey: (options?: StorageOptions) => Promise<ArrayBuffer>;\n  setPublicKey: (value: ArrayBuffer, options?: StorageOptions) => Promise<void>;\n  getRefreshToken: (options?: StorageOptions) => Promise<string>;\n  setRefreshToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getRememberedEmail: (options?: StorageOptions) => Promise<string>;\n  setRememberedEmail: (value: string, options?: StorageOptions) => Promise<void>;\n  getSecurityStamp: (options?: StorageOptions) => Promise<string>;\n  setSecurityStamp: (value: string, options?: StorageOptions) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  getSettings: (options?: StorageOptions) => Promise<AccountSettingsSettings>;\n  /**\n   * @deprecated Do not call this directly, use SettingsService\n   */\n  setSettings: (value: AccountSettingsSettings, options?: StorageOptions) => Promise<void>;\n  getSsoCodeVerifier: (options?: StorageOptions) => Promise<string>;\n  setSsoCodeVerifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoOrgIdentifier: (options?: StorageOptions) => Promise<string>;\n  setSsoOrganizationIdentifier: (value: string, options?: StorageOptions) => Promise<void>;\n  getSsoState: (options?: StorageOptions) => Promise<string>;\n  setSsoState: (value: string, options?: StorageOptions) => Promise<void>;\n  getTheme: (options?: StorageOptions) => Promise<ThemeType>;\n  setTheme: (value: ThemeType, options?: StorageOptions) => Promise<void>;\n  getTwoFactorToken: (options?: StorageOptions) => Promise<string>;\n  setTwoFactorToken: (value: string, options?: StorageOptions) => Promise<void>;\n  getUserId: (options?: StorageOptions) => Promise<string>;\n  getUsesKeyConnector: (options?: StorageOptions) => Promise<boolean>;\n  setUsesKeyConnector: (vaule: boolean, options?: StorageOptions) => Promise<void>;\n  getVaultTimeout: (options?: StorageOptions) => Promise<number>;\n  setVaultTimeout: (value: number, options?: StorageOptions) => Promise<void>;\n  getVaultTimeoutAction: (options?: StorageOptions) => Promise<string>;\n  setVaultTimeoutAction: (value: string, options?: StorageOptions) => Promise<void>;\n  getApproveLoginRequests: (options?: StorageOptions) => Promise<boolean>;\n  setApproveLoginRequests: (value: boolean, options?: StorageOptions) => Promise<void>;\n  getStateVersion: () => Promise<number>;\n  setStateVersion: (value: number) => Promise<void>;\n  getWindow: () => Promise<WindowState>;\n  setWindow: (value: WindowState) => Promise<void>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  getServerConfig: (options?: StorageOptions) => Promise<ServerConfigData>;\n  /**\n   * @deprecated Do not call this directly, use ConfigService\n   */\n  setServerConfig: (value: ServerConfigData, options?: StorageOptions) => Promise<void>;\n\n  getAvatarColor: (options?: StorageOptions) => Promise<string | null | undefined>;\n  setAvatarColor: (value: string, options?: StorageOptions) => Promise<void>;\n  getActivateAutoFillOnPageLoadFromPolicy: (\n    options?: StorageOptions\n  ) => Promise<boolean | undefined>;\n  setActivateAutoFillOnPageLoadFromPolicy: (\n    value: boolean,\n    options?: StorageOptions\n  ) => Promise<void>;\n  getSMOnboardingTasks: (\n    options?: StorageOptions\n  ) => Promise<Record<string, Record<string, boolean>>>;\n  setSMOnboardingTasks: (\n    value: Record<string, Record<string, boolean>>,\n    options?: StorageOptions\n  ) => Promise<void>;\n}\n","export abstract class TotpService {\n  getCode: (key: string) => Promise<string>;\n  getTimeInterval: (key: string) => number;\n}\n","import { SecretVerificationRequest } from \"../../auth/models/request/secret-verification.request\";\nimport { Verification } from \"../../types/verification\";\n\nexport abstract class UserVerificationService {\n  buildRequest: <T extends SecretVerificationRequest>(\n    verification: Verification,\n    requestClass?: new () => T,\n    alreadyHashed?: boolean\n  ) => Promise<T>;\n  verifyUser: (verification: Verification) => Promise<boolean>;\n  requestOTP: () => Promise<void>;\n}\n","export abstract class ValidationService {\n  showError: (data: any) => string[];\n}\n","export abstract class VaultTimeoutService {\n  checkVaultTimeout: () => Promise<void>;\n  lock: (userId?: string) => Promise<void>;\n  logOut: (userId?: string) => Promise<void>;\n}\n","export abstract class VaultTimeoutSettingsService {\n  setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n  getVaultTimeout: (userId?: string) => Promise<number>;\n  isPinLockSet: () => Promise<[boolean, boolean]>;\n  isBiometricLockSet: () => Promise<boolean>;\n  clear: (userId?: string) => Promise<void>;\n}\n","import { Verification } from \"../../types/verification\";\n\nexport abstract class AccountApiService {\n  abstract deleteAccount(verification: Verification): Promise<void>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { AuthRequestPushNotification } from \"../../models/response/notification.response\";\nimport { AuthenticationStatus } from \"../enums/authentication-status\";\nimport { AuthResult } from \"../models/domain/auth-result\";\nimport {\n  UserApiLogInCredentials,\n  PasswordLogInCredentials,\n  SsoLogInCredentials,\n  PasswordlessLogInCredentials,\n} from \"../models/domain/log-in-credentials\";\nimport { TokenTwoFactorRequest } from \"../models/request/identity-token/token-two-factor.request\";\nimport { AuthRequestResponse } from \"../models/response/auth-request.response\";\n\nexport abstract class AuthService {\n  masterPasswordHash: string;\n  email: string;\n  accessCode: string;\n  authRequestId: string;\n\n  logIn: (\n    credentials:\n      | UserApiLogInCredentials\n      | PasswordLogInCredentials\n      | SsoLogInCredentials\n      | PasswordlessLogInCredentials\n  ) => Promise<AuthResult>;\n  logInTwoFactor: (\n    twoFactor: TokenTwoFactorRequest,\n    captchaResponse: string\n  ) => Promise<AuthResult>;\n  logOut: (callback: () => void) => void;\n  makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n  authingWithUserApiKey: () => boolean;\n  authingWithSso: () => boolean;\n  authingWithPassword: () => boolean;\n  authingWithPasswordless: () => boolean;\n  getAuthStatus: (userId?: string) => Promise<AuthenticationStatus>;\n  authResponsePushNotifiction: (notification: AuthRequestPushNotification) => Promise<any>;\n  passwordlessLogin: (\n    id: string,\n    key: string,\n    requestApproved: boolean\n  ) => Promise<AuthRequestResponse>;\n  getPushNotifcationObs$: () => Observable<any>;\n}\n","import { Organization } from \"../../models/domain/organization\";\nimport { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class KeyConnectorService {\n  getAndSetKey: (url?: string) => Promise<void>;\n  getManagingOrganization: () => Promise<Organization>;\n  getUsesKeyConnector: () => Promise<boolean>;\n  migrateUser: () => Promise<void>;\n  userNeedsMigration: () => Promise<boolean>;\n  convertNewSsoUserToKeyConnector: (\n    tokenResponse: IdentityTokenResponse,\n    orgId: string\n  ) => Promise<void>;\n  setUsesKeyConnector: (enabled: boolean) => Promise<void>;\n  setConvertAccountRequired: (status: boolean) => Promise<void>;\n  getConvertAccountRequired: () => Promise<boolean>;\n  removeConvertAccountRequired: () => Promise<void>;\n  clear: () => Promise<void>;\n}\n","export abstract class LoginService {\n  getEmail: () => string;\n  getRememberEmail: () => boolean;\n  setEmail: (value: string) => void;\n  setRememberEmail: (value: boolean) => void;\n  clearValues: () => void;\n  saveEmailSettings: () => Promise<void>;\n}\n","import { IdentityTokenResponse } from \"../models/response/identity-token.response\";\n\nexport abstract class TokenService {\n  setTokens: (\n    accessToken: string,\n    refreshToken: string,\n    clientIdClientSecret: [string, string]\n  ) => Promise<any>;\n  setToken: (token: string) => Promise<any>;\n  getToken: () => Promise<string>;\n  setRefreshToken: (refreshToken: string) => Promise<any>;\n  getRefreshToken: () => Promise<string>;\n  setClientId: (clientId: string) => Promise<any>;\n  getClientId: () => Promise<string>;\n  setClientSecret: (clientSecret: string) => Promise<any>;\n  getClientSecret: () => Promise<string>;\n  setTwoFactorToken: (tokenResponse: IdentityTokenResponse) => Promise<any>;\n  getTwoFactorToken: () => Promise<string>;\n  clearTwoFactorToken: () => Promise<any>;\n  clearToken: (userId?: string) => Promise<any>;\n  decodeToken: (token?: string) => any;\n  getTokenExpirationDate: () => Promise<Date>;\n  tokenSecondsRemaining: (offsetSeconds?: number) => Promise<number>;\n  tokenNeedsRefresh: (minutes?: number) => Promise<boolean>;\n  getUserId: () => Promise<string>;\n  getEmail: () => Promise<string>;\n  getEmailVerified: () => Promise<boolean>;\n  getName: () => Promise<string>;\n  getIssuer: () => Promise<string>;\n  getIsExternal: () => Promise<boolean>;\n}\n","import { TwoFactorProviderType } from \"../enums/two-factor-provider-type\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport interface TwoFactorProviderDetails {\n  type: TwoFactorProviderType;\n  name: string;\n  description: string;\n  priority: number;\n  sort: number;\n  premium: boolean;\n}\n\nexport abstract class TwoFactorService {\n  init: () => void;\n  getSupportedProviders: (win: Window) => TwoFactorProviderDetails[];\n  getDefaultProvider: (webAuthnSupported: boolean) => TwoFactorProviderType;\n  setSelectedProvider: (type: TwoFactorProviderType) => void;\n  clearSelectedProvider: () => void;\n\n  setProviders: (response: IdentityTwoFactorResponse) => void;\n  clearProviders: () => void;\n  getProviders: () => Map<TwoFactorProviderType, { [key: string]: string }>;\n}\n","export enum AuthenticationStatus {\n  LoggedOut = 0,\n  Locked = 1,\n  Unlocked = 2,\n}\n","export enum AuthenticationType {\n  Password = 0,\n  Sso = 1,\n  UserApi = 2,\n  Passwordless = 3,\n}\n","export enum TwoFactorProviderType {\n  Authenticator = 0,\n  Email = 1,\n  Duo = 2,\n  Yubikey = 3,\n  U2f = 4,\n  Remember = 5,\n  OrganizationDuo = 6,\n  WebAuthn = 7,\n}\n","export enum VerificationType {\n  MasterPassword = 0,\n  OTP = 1,\n}\n","export class KdfConfig {\n  iterations: number;\n  memory?: number;\n  parallelism?: number;\n\n  constructor(iterations: number, memory?: number, parallelism?: number) {\n    this.iterations = iterations;\n    this.memory = memory;\n    this.parallelism = parallelism;\n  }\n}\n","import { TwoFactorProviderType } from \"../../../enums/two-factor-provider-type\";\n\nexport class TokenTwoFactorRequest {\n  constructor(\n    public provider: TwoFactorProviderType = null,\n    public token: string = null,\n    public remember: boolean = false\n  ) {}\n}\n","export class SecretVerificationRequest {\n  masterPasswordHash: string;\n  otp: string;\n  authRequestAccessCode: string;\n}\n","import { SecretVerificationRequest } from \"./secret-verification.request\";\n\nexport class TwoFactorEmailRequest extends SecretVerificationRequest {\n  email: string;\n  deviceIdentifier: string;\n  authRequestId: string;\n}\n","import { KdfType } from \"../../../enums/kdfType\";\nimport { BaseResponse } from \"../../../models/response/base.response\";\nimport { CipherResponse } from \"../../../vault/models/response/cipher.response\";\nimport { EmergencyAccessStatusType } from \"../../enums/emergency-access-status-type\";\nimport { EmergencyAccessType } from \"../../enums/emergency-access-type\";\n\nexport class EmergencyAccessGranteeDetailsResponse extends BaseResponse {\n  id: string;\n  granteeId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n  avatarColor: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.granteeId = this.getResponseProperty(\"GranteeId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.avatarColor = this.getResponseProperty(\"AvatarColor\");\n  }\n}\n\nexport class EmergencyAccessGrantorDetailsResponse extends BaseResponse {\n  id: string;\n  grantorId: string;\n  name: string;\n  email: string;\n  type: EmergencyAccessType;\n  status: EmergencyAccessStatusType;\n  waitTimeDays: number;\n  creationDate: string;\n  avatarColor: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.grantorId = this.getResponseProperty(\"GrantorId\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.status = this.getResponseProperty(\"Status\");\n    this.waitTimeDays = this.getResponseProperty(\"WaitTimeDays\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.avatarColor = this.getResponseProperty(\"AvatarColor\");\n  }\n}\n\nexport class EmergencyAccessTakeoverResponse extends BaseResponse {\n  keyEncrypted: string;\n  kdf: KdfType;\n  kdfIterations: number;\n  kdfMemory?: number;\n  kdfParallelism?: number;\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n    this.kdf = this.getResponseProperty(\"Kdf\");\n    this.kdfIterations = this.getResponseProperty(\"KdfIterations\");\n    this.kdfMemory = this.getResponseProperty(\"KdfMemory\");\n    this.kdfParallelism = this.getResponseProperty(\"KdfParallelism\");\n  }\n}\n\nexport class EmergencyAccessViewResponse extends BaseResponse {\n  keyEncrypted: string;\n  ciphers: CipherResponse[] = [];\n\n  constructor(response: any) {\n    super(response);\n\n    this.keyEncrypted = this.getResponseProperty(\"KeyEncrypted\");\n\n    const ciphers = this.getResponseProperty(\"Ciphers\");\n    if (ciphers != null) {\n      this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n    }\n  }\n}\n","import { I18nService } from \"../../abstractions/i18n.service\";\nimport { PlatformUtilsService } from \"../../abstractions/platformUtils.service\";\nimport {\n  TwoFactorProviderDetails,\n  TwoFactorService as TwoFactorServiceAbstraction,\n} from \"../abstractions/two-factor.service\";\nimport { TwoFactorProviderType } from \"../enums/two-factor-provider-type\";\nimport { IdentityTwoFactorResponse } from \"../models/response/identity-two-factor.response\";\n\nexport const TwoFactorProviders: Partial<Record<TwoFactorProviderType, TwoFactorProviderDetails>> =\n  {\n    [TwoFactorProviderType.Authenticator]: {\n      type: TwoFactorProviderType.Authenticator,\n      name: null as string,\n      description: null as string,\n      priority: 1,\n      sort: 1,\n      premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n      type: TwoFactorProviderType.Yubikey,\n      name: null as string,\n      description: null as string,\n      priority: 3,\n      sort: 2,\n      premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n      type: TwoFactorProviderType.Duo,\n      name: \"Duo\",\n      description: null as string,\n      priority: 2,\n      sort: 3,\n      premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n      type: TwoFactorProviderType.OrganizationDuo,\n      name: \"Duo (Organization)\",\n      description: null as string,\n      priority: 10,\n      sort: 4,\n      premium: false,\n    },\n    [TwoFactorProviderType.Email]: {\n      type: TwoFactorProviderType.Email,\n      name: null as string,\n      description: null as string,\n      priority: 0,\n      sort: 6,\n      premium: false,\n    },\n    [TwoFactorProviderType.WebAuthn]: {\n      type: TwoFactorProviderType.WebAuthn,\n      name: null as string,\n      description: null as string,\n      priority: 4,\n      sort: 5,\n      premium: true,\n    },\n  };\n\nexport class TwoFactorService implements TwoFactorServiceAbstraction {\n  private twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string }>;\n  private selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n  constructor(\n    private i18nService: I18nService,\n    private platformUtilsService: PlatformUtilsService\n  ) {}\n\n  init() {\n    TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t(\"emailTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t(\"emailDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].name =\n      this.i18nService.t(\"authenticatorAppTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n      this.i18nService.t(\"authenticatorAppDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t(\"duoDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n      \"Duo (\" + this.i18nService.t(\"organization\") + \")\";\n    TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n      this.i18nService.t(\"duoOrganizationDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].name = this.i18nService.t(\"webAuthnTitle\");\n    TwoFactorProviders[TwoFactorProviderType.WebAuthn].description =\n      this.i18nService.t(\"webAuthnDesc\");\n\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t(\"yubiKeyTitle\");\n    TwoFactorProviders[TwoFactorProviderType.Yubikey].description =\n      this.i18nService.t(\"yubiKeyDesc\");\n  }\n\n  getSupportedProviders(win: Window): TwoFactorProviderDetails[] {\n    const providers: any[] = [];\n    if (this.twoFactorProvidersData == null) {\n      return providers;\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) &&\n      this.platformUtilsService.supportsDuo()\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n    }\n\n    if (\n      this.twoFactorProvidersData.has(TwoFactorProviderType.WebAuthn) &&\n      this.platformUtilsService.supportsWebAuthn(win)\n    ) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.WebAuthn]);\n    }\n\n    if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n      providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n    }\n\n    return providers;\n  }\n\n  getDefaultProvider(webAuthnSupported: boolean): TwoFactorProviderType {\n    if (this.twoFactorProvidersData == null) {\n      return null;\n    }\n\n    if (\n      this.selectedTwoFactorProviderType != null &&\n      this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)\n    ) {\n      return this.selectedTwoFactorProviderType;\n    }\n\n    let providerType: TwoFactorProviderType = null;\n    let providerPriority = -1;\n    this.twoFactorProvidersData.forEach((_value, type) => {\n      const provider = (TwoFactorProviders as any)[type];\n      if (provider != null && provider.priority > providerPriority) {\n        if (type === TwoFactorProviderType.WebAuthn && !webAuthnSupported) {\n          return;\n        }\n\n        providerType = type;\n        providerPriority = provider.priority;\n      }\n    });\n\n    return providerType;\n  }\n\n  setSelectedProvider(type: TwoFactorProviderType) {\n    this.selectedTwoFactorProviderType = type;\n  }\n\n  clearSelectedProvider() {\n    this.selectedTwoFactorProviderType = null;\n  }\n\n  setProviders(response: IdentityTwoFactorResponse) {\n    this.twoFactorProvidersData = response.twoFactorProviders2;\n  }\n\n  clearProviders() {\n    this.twoFactorProvidersData = null;\n  }\n\n  getProviders() {\n    return this.twoFactorProvidersData;\n  }\n}\n","export enum DeviceType {\n  Android = 0,\n  iOS = 1,\n  ChromeExtension = 2,\n  FirefoxExtension = 3,\n  OperaExtension = 4,\n  EdgeExtension = 5,\n  WindowsDesktop = 6,\n  MacOsDesktop = 7,\n  LinuxDesktop = 8,\n  ChromeBrowser = 9,\n  FirefoxBrowser = 10,\n  OperaBrowser = 11,\n  EdgeBrowser = 12,\n  IEBrowser = 13,\n  UnknownBrowser = 14,\n  AndroidAmazon = 15,\n  UWP = 16,\n  SafariBrowser = 17,\n  VivaldiBrowser = 18,\n  VivaldiExtension = 19,\n  SafariExtension = 20,\n  SDK = 21,\n  Server = 22,\n}\n","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","// Increment by 100 for each new set of events\nexport enum EventType {\n  User_LoggedIn = 1000,\n  User_ChangedPassword = 1001,\n  User_Updated2fa = 1002,\n  User_Disabled2fa = 1003,\n  User_Recovered2fa = 1004,\n  User_FailedLogIn = 1005,\n  User_FailedLogIn2fa = 1006,\n  User_ClientExportedVault = 1007,\n  User_UpdatedTempPassword = 1008,\n  User_MigratedKeyToKeyConnector = 1009,\n\n  Cipher_Created = 1100,\n  Cipher_Updated = 1101,\n  Cipher_Deleted = 1102,\n  Cipher_AttachmentCreated = 1103,\n  Cipher_AttachmentDeleted = 1104,\n  Cipher_Shared = 1105,\n  Cipher_UpdatedCollections = 1106,\n  Cipher_ClientViewed = 1107,\n  Cipher_ClientToggledPasswordVisible = 1108,\n  Cipher_ClientToggledHiddenFieldVisible = 1109,\n  Cipher_ClientToggledCardCodeVisible = 1110,\n  Cipher_ClientCopiedPassword = 1111,\n  Cipher_ClientCopiedHiddenField = 1112,\n  Cipher_ClientCopiedCardCode = 1113,\n  Cipher_ClientAutofilled = 1114,\n  Cipher_SoftDeleted = 1115,\n  Cipher_Restored = 1116,\n  Cipher_ClientToggledCardNumberVisible = 1117,\n\n  Collection_Created = 1300,\n  Collection_Updated = 1301,\n  Collection_Deleted = 1302,\n\n  Group_Created = 1400,\n  Group_Updated = 1401,\n  Group_Deleted = 1402,\n\n  OrganizationUser_Invited = 1500,\n  OrganizationUser_Confirmed = 1501,\n  OrganizationUser_Updated = 1502,\n  OrganizationUser_Removed = 1503,\n  OrganizationUser_UpdatedGroups = 1504,\n  OrganizationUser_UnlinkedSso = 1505,\n  OrganizationUser_ResetPassword_Enroll = 1506,\n  OrganizationUser_ResetPassword_Withdraw = 1507,\n  OrganizationUser_AdminResetPassword = 1508,\n  OrganizationUser_ResetSsoLink = 1509,\n  OrganizationUser_FirstSsoLogin = 1510,\n  OrganizationUser_Revoked = 1511,\n  OrganizationUser_Restored = 1512,\n\n  Organization_Updated = 1600,\n  Organization_PurgedVault = 1601,\n  Organization_ClientExportedVault = 1602,\n  Organization_VaultAccessed = 1603,\n  Organization_EnabledSso = 1604,\n  Organization_DisabledSso = 1605,\n  Organization_EnabledKeyConnector = 1606,\n  Organization_DisabledKeyConnector = 1607,\n  Organization_SponsorshipsSynced = 1608,\n\n  Policy_Updated = 1700,\n\n  ProviderUser_Invited = 1800,\n  ProviderUser_Confirmed = 1801,\n  ProviderUser_Updated = 1802,\n  ProviderUser_Removed = 1803,\n\n  ProviderOrganization_Created = 1900,\n  ProviderOrganization_Added = 1901,\n  ProviderOrganization_Removed = 1902,\n  ProviderOrganization_VaultAccessed = 1903,\n\n  OrganizationDomain_Added = 2000,\n  OrganizationDomain_Removed = 2001,\n  OrganizationDomain_Verified = 2002,\n  OrganizationDomain_NotVerified = 2003,\n\n  Secret_Retrieved = 2100,\n}\n","export enum FieldType {\n  Text = 0,\n  Hidden = 1,\n  Boolean = 2,\n  Linked = 3,\n}\n","export enum HashPurpose {\n  ServerAuthorization = 1,\n  LocalAuthorization = 2,\n}\n","import { KdfConfig } from \"../auth/models/domain/kdf-config\";\n\nexport enum KdfType {\n  PBKDF2_SHA256 = 0,\n  Argon2id = 1,\n}\n\nexport const DEFAULT_ARGON2_MEMORY = 64;\nexport const DEFAULT_ARGON2_PARALLELISM = 4;\nexport const DEFAULT_ARGON2_ITERATIONS = 3;\n\nexport const DEFAULT_KDF_TYPE = KdfType.PBKDF2_SHA256;\nexport const DEFAULT_PBKDF2_ITERATIONS = 600000;\nexport const DEFAULT_KDF_CONFIG = new KdfConfig(DEFAULT_PBKDF2_ITERATIONS);\nexport const SEND_KDF_ITERATIONS = 100000;\n","export enum KeySuffixOptions {\n  Auto = \"auto\",\n  Biometric = \"biometric\",\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","export enum OrganizationUserStatusType {\n  Invited = 0,\n  Accepted = 1,\n  Confirmed = 2,\n  Revoked = -1,\n}\n","export enum OrganizationUserType {\n  Owner = 0,\n  Admin = 1,\n  User = 2,\n  Manager = 3,\n  Custom = 4,\n}\n","export enum PaymentMethodType {\n  Card = 0,\n  BankAccount = 1,\n  PayPal = 2,\n  BitPay = 3,\n  Credit = 4,\n  WireTransfer = 5,\n  AppleInApp = 6,\n  GoogleInApp = 7,\n  Check = 8,\n}\n","export enum PlanType {\n  Free = 0,\n  FamiliesAnnually2019 = 1,\n  TeamsMonthly2019 = 2,\n  TeamsAnnually2019 = 3,\n  EnterpriseMonthly2019 = 4,\n  EnterpriseAnnually2019 = 5,\n  Custom = 6,\n  FamiliesAnnually = 7,\n  TeamsMonthly = 8,\n  TeamsAnnually = 9,\n  EnterpriseMonthly = 10,\n  EnterpriseAnnually = 11,\n}\n","export enum PolicyType {\n  TwoFactorAuthentication = 0, // Requires users to have 2fa enabled\n  MasterPassword = 1, // Sets minimum requirements for master password complexity\n  PasswordGenerator = 2, // Sets minimum requirements/default type for generated passwords/passphrases\n  SingleOrg = 3, // Allows users to only be apart of one organization\n  RequireSso = 4, // Requires users to authenticate with SSO\n  PersonalOwnership = 5, // Disables personal vault ownership for adding/cloning items\n  DisableSend = 6, // Disables the ability to create and edit Bitwarden Sends\n  SendOptions = 7, // Sets restrictions or defaults for Bitwarden Sends\n  ResetPassword = 8, // Allows orgs to use reset password : also can enable auto-enrollment during invite flow\n  MaximumVaultTimeout = 9, // Sets the maximum allowed vault timeout\n  DisablePersonalVaultExport = 10, // Disable personal vault export\n  ActivateAutofill = 11, // Activates autofill with page load on the browser extension\n}\n","export enum ProductType {\n  Free = 0,\n  Families = 1,\n  Teams = 2,\n  Enterprise = 3,\n}\n","export enum SecureNoteType {\n  Generic = 0,\n}\n","export enum SendType {\n  Text = 0,\n  File = 1,\n}\n","export enum ThemeType {\n  System = \"system\",\n  Light = \"light\",\n  Dark = \"dark\",\n  Nord = \"nord\",\n  SolarizedDark = \"solarizedDark\",\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedFlags = {\n  multithreadDecryption: boolean;\n  showPasswordless?: boolean;\n};\n\n// required to avoid linting errors when there are no flags\n/* eslint-disable @typescript-eslint/ban-types */\nexport type SharedDevFlags = {};\n\nfunction getFlags<T>(envFlags: string | T): T {\n  if (typeof envFlags === \"string\") {\n    return JSON.parse(envFlags) as T;\n  } else {\n    return envFlags as T;\n  }\n}\n\n/**\n * Gets the value of a feature flag from environment.\n * All flags default to \"on\" (true).\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the feature flag to check\n * @returns The value of the flag\n */\nexport function flagEnabled<Flags extends SharedFlags>(flag: keyof Flags): boolean {\n  const flags = getFlags<Flags>(process.env.FLAGS);\n  return flags[flag] == null || !!flags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * Only use for shared code in `libs`, otherwise use the client-specific function.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n */\nexport function devFlagEnabled<DevFlags extends SharedDevFlags>(flag: keyof DevFlags): boolean {\n  if (process.env.ENV !== \"development\") {\n    return false;\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag] == null || !!devFlags[flag];\n}\n\n/**\n * Gets the value of a dev flag from environment.\n * Will always return false unless in development.\n * @param flag The name of the dev flag to check\n * @returns The value of the flag\n * @throws Error if the flag is not enabled\n */\nexport function devFlagValue<DevFlags extends SharedDevFlags>(\n  flag: keyof DevFlags\n): DevFlags[keyof DevFlags] {\n  if (!devFlagEnabled(flag)) {\n    throw new Error(`This method should not be called, it is protected by a disabled dev flag.`);\n  }\n\n  const devFlags = getFlags<DevFlags>(process.env.DEV_FLAGS);\n  return devFlags[flag];\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../vault/models/view/item.view\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { ITreeNodeObject, TreeNode } from \"../models/domain/tree-node\";\n\nexport class ServiceUtils {\n  /**\n   * Recursively adds a node to nodeTree\n   * @param {TreeNode<ITreeNodeObject>[]} nodeTree - An array of TreeNodes that the node will be added to\n   * @param {number} partIndex - Index of the `parts` array that is being processed\n   * @param {string[]} parts - Array of strings that represent the path to the `obj` node\n   * @param {ITreeNodeObject} obj - The node to be added to the tree\n   * @param {ITreeNodeObject} parent - The parent node of the `obj` node\n   * @param {string} delimiter - The delimiter used to split the path string, will be used to combine the path for missing nodes\n   */\n  static nestedTraverse(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    partIndex: number,\n    parts: string[],\n    obj: ITreeNodeObject,\n    parent: TreeNode<ITreeNodeObject> | undefined,\n    delimiter: string\n  ) {\n    if (parts.length <= partIndex) {\n      return;\n    }\n\n    const end: boolean = partIndex === parts.length - 1;\n    const partName: string = parts[partIndex];\n\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.name !== partName) {\n        continue;\n      }\n      if (end && nodeTree[i].node.id !== obj.id) {\n        // Another node exists with the same name as the node being added\n        nodeTree.push(new TreeNode(obj, parent, partName));\n        return;\n      }\n      // Move down the tree to the next level\n      ServiceUtils.nestedTraverse(\n        nodeTree[i].children,\n        partIndex + 1,\n        parts,\n        obj,\n        nodeTree[i],\n        delimiter\n      );\n      return;\n    }\n\n    // If there's no node here with the same name...\n    if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n      // And we're at the end of the path given, add the node\n      if (end) {\n        nodeTree.push(new TreeNode(obj, parent, partName));\n        return;\n      }\n      // And we're not at the end of the path, combine the current name with the next name\n      // 1, *1.2, 1.2.1 becomes\n      // 1, *1.2/1.2.1\n      const newPartName = partName + delimiter + parts[partIndex + 1];\n      ServiceUtils.nestedTraverse(\n        nodeTree,\n        0,\n        [newPartName, ...parts.slice(partIndex + 2)],\n        obj,\n        parent,\n        delimiter\n      );\n    }\n  }\n\n  /**\n   * Searches a tree for a node with a matching `id`\n   * @param {TreeNode<T>} nodeTree - A single TreeNode branch that will be searched\n   * @param {string} id - The id of the node to be found\n   * @returns {TreeNode<T>} The node with a matching `id`\n   */\n  static getTreeNodeObject<T extends ITreeNodeObject>(\n    nodeTree: TreeNode<T>,\n    id: string\n  ): TreeNode<T> {\n    if (nodeTree.node.id === id) {\n      return nodeTree;\n    }\n    for (let i = 0; i < nodeTree.children.length; i++) {\n      if (nodeTree.children[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObject(nodeTree.children[i], id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Searches an array of tree nodes for a node with a matching `id`\n   * @param {TreeNode<ITreeNodeObject>} nodeTree - An array of TreeNode branches that will be searched\n   * @param {string} id - The id of the node to be found\n   * @returns {TreeNode<ITreeNodeObject>} The node with a matching `id`\n   */\n  static getTreeNodeObjectFromList(\n    nodeTree: TreeNode<ITreeNodeObject>[],\n    id: string\n  ): TreeNode<ITreeNodeObject> {\n    for (let i = 0; i < nodeTree.length; i++) {\n      if (nodeTree[i].node.id === id) {\n        return nodeTree[i];\n      } else if (nodeTree[i].children != null) {\n        const node = ServiceUtils.getTreeNodeObjectFromList(nodeTree[i].children, id);\n        if (node !== null) {\n          return node;\n        }\n      }\n    }\n    return null;\n  }\n}\n","/* eslint-disable no-useless-escape */\nimport * as path from \"path\";\n\nimport { getHostname, parse } from \"tldts\";\nimport { Merge } from \"type-fest\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => EncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n  static readonly validHosts: string[] = [\"localhost\"];\n  static readonly minimumPasswordLength = 12;\n  static readonly DomainMatchBlacklist = new Map<string, Set<string>>([\n    [\"google.com\", new Set([\"script.google.com\"])],\n  ]);\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (buffer == null) {\n      return null;\n    }\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"file:\")) {\n      return null;\n    }\n\n    // Does uriString contain invalid characters\n    // TODO Needs to possibly be extended, although '!' is a reserved character\n    if (uriString.indexOf(\"!\") > 0) {\n      return null;\n    }\n\n    try {\n      const hostname = getHostname(uriString, { validHosts: this.validHosts });\n      if (hostname != null) {\n        return hostname;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    try {\n      const parseResult = parse(uriString, { validHosts: this.validHosts });\n      if (parseResult != null && parseResult.hostname != null) {\n        if (parseResult.hostname === \"localhost\" || parseResult.isIp) {\n          return parseResult.hostname;\n        }\n\n        if (parseResult.domain != null) {\n          return parseResult.domain;\n        }\n        return null;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction<T>(\n    i18nService: I18nService,\n    prop: { [K in keyof T]: T[K] extends string ? K : never }[keyof T]\n  ): (a: T, b: T) => number {\n    return (a, b) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      // The `as unknown as string` here is unfortunate because typescript doesn't property understand that the return of T[prop] will be a string\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop] as unknown as string, b[prop] as unknown as string)\n        : (a[prop] as unknown as string).localeCompare(b[prop] as unknown as string);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static isPromise(obj: any): obj is Promise<unknown> {\n    return (\n      obj != undefined && typeof obj[\"then\"] === \"function\" && typeof obj[\"catch\"] === \"function\"\n    );\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (this.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  static validateHexColor(color: string) {\n    return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(color);\n  }\n\n  /**\n   * Converts map to a Record<string, V> with the same data. Inverse of recordToMap\n   * Useful in toJSON methods, since Maps are not serializable\n   * @param map\n   * @returns\n   */\n  static mapToRecord<K extends string | number, V>(map: Map<K, V>): Record<string, V> {\n    if (map == null) {\n      return null;\n    }\n    if (!(map instanceof Map)) {\n      return map;\n    }\n    return Object.fromEntries(map);\n  }\n\n  /**\n   * Converts record to a Map<string, V> with the same data. Inverse of mapToRecord\n   * Useful in fromJSON methods, since Maps are not serializable\n   *\n   * Warning: If the record has string keys that are numbers, they will be converted to numbers in the map\n   * @param record\n   * @returns\n   */\n  static recordToMap<K extends string | number, V>(record: Record<K, V>): Map<K, V> {\n    if (record == null) {\n      return null;\n    } else if (record instanceof Map) {\n      return record;\n    }\n\n    const entries = Object.entries(record);\n    if (entries.length === 0) {\n      return new Map();\n    }\n\n    if (isNaN(Number(entries[0][0]))) {\n      return new Map(entries) as Map<K, V>;\n    } else {\n      return new Map(entries.map((e) => [Number(e[0]), e[1]])) as Map<K, V>;\n    }\n  }\n\n  /** Applies Object.assign, but converts the type nicely using Type-Fest Merge<Destination, Source> */\n  static merge<Destination, Source>(\n    destination: Destination,\n    source: Source\n  ): Merge<Destination, Source> {\n    return Object.assign(destination, source) as unknown as Merge<Destination, Source>;\n  }\n\n  /**\n   * encodeURIComponent escapes all characters except the following:\n   * alphabetic, decimal digits, - _ . ! ~ * ' ( )\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent#encoding_for_rfc3986\n   */\n  static encodeRFC3986URIComponent(str: string): string {\n    return encodeURIComponent(str).replace(\n      /[!'()*]/g,\n      (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n    );\n  }\n\n  /**\n   * Normalizes a path for defense against attacks like traversals\n   * @param denormalizedPath\n   * @returns\n   */\n  static normalizePath(denormalizedPath: string): string {\n    return path.normalize(decodeURIComponent(denormalizedPath)).replace(/^(\\.\\.(\\/|\\\\|$))+/, \"\");\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  static delay(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EFFLongWordList = [\n  \"abacus\",\n  \"abdomen\",\n  \"abdominal\",\n  \"abide\",\n  \"abiding\",\n  \"ability\",\n  \"ablaze\",\n  \"able\",\n  \"abnormal\",\n  \"abrasion\",\n  \"abrasive\",\n  \"abreast\",\n  \"abridge\",\n  \"abroad\",\n  \"abruptly\",\n  \"absence\",\n  \"absentee\",\n  \"absently\",\n  \"absinthe\",\n  \"absolute\",\n  \"absolve\",\n  \"abstain\",\n  \"abstract\",\n  \"absurd\",\n  \"accent\",\n  \"acclaim\",\n  \"acclimate\",\n  \"accompany\",\n  \"account\",\n  \"accuracy\",\n  \"accurate\",\n  \"accustom\",\n  \"acetone\",\n  \"achiness\",\n  \"aching\",\n  \"acid\",\n  \"acorn\",\n  \"acquaint\",\n  \"acquire\",\n  \"acre\",\n  \"acrobat\",\n  \"acronym\",\n  \"acting\",\n  \"action\",\n  \"activate\",\n  \"activator\",\n  \"active\",\n  \"activism\",\n  \"activist\",\n  \"activity\",\n  \"actress\",\n  \"acts\",\n  \"acutely\",\n  \"acuteness\",\n  \"aeration\",\n  \"aerobics\",\n  \"aerosol\",\n  \"aerospace\",\n  \"afar\",\n  \"affair\",\n  \"affected\",\n  \"affecting\",\n  \"affection\",\n  \"affidavit\",\n  \"affiliate\",\n  \"affirm\",\n  \"affix\",\n  \"afflicted\",\n  \"affluent\",\n  \"afford\",\n  \"affront\",\n  \"aflame\",\n  \"afloat\",\n  \"aflutter\",\n  \"afoot\",\n  \"afraid\",\n  \"afterglow\",\n  \"afterlife\",\n  \"aftermath\",\n  \"aftermost\",\n  \"afternoon\",\n  \"aged\",\n  \"ageless\",\n  \"agency\",\n  \"agenda\",\n  \"agent\",\n  \"aggregate\",\n  \"aghast\",\n  \"agile\",\n  \"agility\",\n  \"aging\",\n  \"agnostic\",\n  \"agonize\",\n  \"agonizing\",\n  \"agony\",\n  \"agreeable\",\n  \"agreeably\",\n  \"agreed\",\n  \"agreeing\",\n  \"agreement\",\n  \"aground\",\n  \"ahead\",\n  \"ahoy\",\n  \"aide\",\n  \"aids\",\n  \"aim\",\n  \"ajar\",\n  \"alabaster\",\n  \"alarm\",\n  \"albatross\",\n  \"album\",\n  \"alfalfa\",\n  \"algebra\",\n  \"algorithm\",\n  \"alias\",\n  \"alibi\",\n  \"alienable\",\n  \"alienate\",\n  \"aliens\",\n  \"alike\",\n  \"alive\",\n  \"alkaline\",\n  \"alkalize\",\n  \"almanac\",\n  \"almighty\",\n  \"almost\",\n  \"aloe\",\n  \"aloft\",\n  \"aloha\",\n  \"alone\",\n  \"alongside\",\n  \"aloof\",\n  \"alphabet\",\n  \"alright\",\n  \"although\",\n  \"altitude\",\n  \"alto\",\n  \"aluminum\",\n  \"alumni\",\n  \"always\",\n  \"amaretto\",\n  \"amaze\",\n  \"amazingly\",\n  \"amber\",\n  \"ambiance\",\n  \"ambiguity\",\n  \"ambiguous\",\n  \"ambition\",\n  \"ambitious\",\n  \"ambulance\",\n  \"ambush\",\n  \"amendable\",\n  \"amendment\",\n  \"amends\",\n  \"amenity\",\n  \"amiable\",\n  \"amicably\",\n  \"amid\",\n  \"amigo\",\n  \"amino\",\n  \"amiss\",\n  \"ammonia\",\n  \"ammonium\",\n  \"amnesty\",\n  \"amniotic\",\n  \"among\",\n  \"amount\",\n  \"amperage\",\n  \"ample\",\n  \"amplifier\",\n  \"amplify\",\n  \"amply\",\n  \"amuck\",\n  \"amulet\",\n  \"amusable\",\n  \"amused\",\n  \"amusement\",\n  \"amuser\",\n  \"amusing\",\n  \"anaconda\",\n  \"anaerobic\",\n  \"anagram\",\n  \"anatomist\",\n  \"anatomy\",\n  \"anchor\",\n  \"anchovy\",\n  \"ancient\",\n  \"android\",\n  \"anemia\",\n  \"anemic\",\n  \"aneurism\",\n  \"anew\",\n  \"angelfish\",\n  \"angelic\",\n  \"anger\",\n  \"angled\",\n  \"angler\",\n  \"angles\",\n  \"angling\",\n  \"angrily\",\n  \"angriness\",\n  \"anguished\",\n  \"angular\",\n  \"animal\",\n  \"animate\",\n  \"animating\",\n  \"animation\",\n  \"animator\",\n  \"anime\",\n  \"animosity\",\n  \"ankle\",\n  \"annex\",\n  \"annotate\",\n  \"announcer\",\n  \"annoying\",\n  \"annually\",\n  \"annuity\",\n  \"anointer\",\n  \"another\",\n  \"answering\",\n  \"antacid\",\n  \"antarctic\",\n  \"anteater\",\n  \"antelope\",\n  \"antennae\",\n  \"anthem\",\n  \"anthill\",\n  \"anthology\",\n  \"antibody\",\n  \"antics\",\n  \"antidote\",\n  \"antihero\",\n  \"antiquely\",\n  \"antiques\",\n  \"antiquity\",\n  \"antirust\",\n  \"antitoxic\",\n  \"antitrust\",\n  \"antiviral\",\n  \"antivirus\",\n  \"antler\",\n  \"antonym\",\n  \"antsy\",\n  \"anvil\",\n  \"anybody\",\n  \"anyhow\",\n  \"anymore\",\n  \"anyone\",\n  \"anyplace\",\n  \"anything\",\n  \"anytime\",\n  \"anyway\",\n  \"anywhere\",\n  \"aorta\",\n  \"apache\",\n  \"apostle\",\n  \"appealing\",\n  \"appear\",\n  \"appease\",\n  \"appeasing\",\n  \"appendage\",\n  \"appendix\",\n  \"appetite\",\n  \"appetizer\",\n  \"applaud\",\n  \"applause\",\n  \"apple\",\n  \"appliance\",\n  \"applicant\",\n  \"applied\",\n  \"apply\",\n  \"appointee\",\n  \"appraisal\",\n  \"appraiser\",\n  \"apprehend\",\n  \"approach\",\n  \"approval\",\n  \"approve\",\n  \"apricot\",\n  \"april\",\n  \"apron\",\n  \"aptitude\",\n  \"aptly\",\n  \"aqua\",\n  \"aqueduct\",\n  \"arbitrary\",\n  \"arbitrate\",\n  \"ardently\",\n  \"area\",\n  \"arena\",\n  \"arguable\",\n  \"arguably\",\n  \"argue\",\n  \"arise\",\n  \"armadillo\",\n  \"armband\",\n  \"armchair\",\n  \"armed\",\n  \"armful\",\n  \"armhole\",\n  \"arming\",\n  \"armless\",\n  \"armoire\",\n  \"armored\",\n  \"armory\",\n  \"armrest\",\n  \"army\",\n  \"aroma\",\n  \"arose\",\n  \"around\",\n  \"arousal\",\n  \"arrange\",\n  \"array\",\n  \"arrest\",\n  \"arrival\",\n  \"arrive\",\n  \"arrogance\",\n  \"arrogant\",\n  \"arson\",\n  \"art\",\n  \"ascend\",\n  \"ascension\",\n  \"ascent\",\n  \"ascertain\",\n  \"ashamed\",\n  \"ashen\",\n  \"ashes\",\n  \"ashy\",\n  \"aside\",\n  \"askew\",\n  \"asleep\",\n  \"asparagus\",\n  \"aspect\",\n  \"aspirate\",\n  \"aspire\",\n  \"aspirin\",\n  \"astonish\",\n  \"astound\",\n  \"astride\",\n  \"astrology\",\n  \"astronaut\",\n  \"astronomy\",\n  \"astute\",\n  \"atlantic\",\n  \"atlas\",\n  \"atom\",\n  \"atonable\",\n  \"atop\",\n  \"atrium\",\n  \"atrocious\",\n  \"atrophy\",\n  \"attach\",\n  \"attain\",\n  \"attempt\",\n  \"attendant\",\n  \"attendee\",\n  \"attention\",\n  \"attentive\",\n  \"attest\",\n  \"attic\",\n  \"attire\",\n  \"attitude\",\n  \"attractor\",\n  \"attribute\",\n  \"atypical\",\n  \"auction\",\n  \"audacious\",\n  \"audacity\",\n  \"audible\",\n  \"audibly\",\n  \"audience\",\n  \"audio\",\n  \"audition\",\n  \"augmented\",\n  \"august\",\n  \"authentic\",\n  \"author\",\n  \"autism\",\n  \"autistic\",\n  \"autograph\",\n  \"automaker\",\n  \"automated\",\n  \"automatic\",\n  \"autopilot\",\n  \"available\",\n  \"avalanche\",\n  \"avatar\",\n  \"avenge\",\n  \"avenging\",\n  \"avenue\",\n  \"average\",\n  \"aversion\",\n  \"avert\",\n  \"aviation\",\n  \"aviator\",\n  \"avid\",\n  \"avoid\",\n  \"await\",\n  \"awaken\",\n  \"award\",\n  \"aware\",\n  \"awhile\",\n  \"awkward\",\n  \"awning\",\n  \"awoke\",\n  \"awry\",\n  \"axis\",\n  \"babble\",\n  \"babbling\",\n  \"babied\",\n  \"baboon\",\n  \"backache\",\n  \"backboard\",\n  \"backboned\",\n  \"backdrop\",\n  \"backed\",\n  \"backer\",\n  \"backfield\",\n  \"backfire\",\n  \"backhand\",\n  \"backing\",\n  \"backlands\",\n  \"backlash\",\n  \"backless\",\n  \"backlight\",\n  \"backlit\",\n  \"backlog\",\n  \"backpack\",\n  \"backpedal\",\n  \"backrest\",\n  \"backroom\",\n  \"backshift\",\n  \"backside\",\n  \"backslid\",\n  \"backspace\",\n  \"backspin\",\n  \"backstab\",\n  \"backstage\",\n  \"backtalk\",\n  \"backtrack\",\n  \"backup\",\n  \"backward\",\n  \"backwash\",\n  \"backwater\",\n  \"backyard\",\n  \"bacon\",\n  \"bacteria\",\n  \"bacterium\",\n  \"badass\",\n  \"badge\",\n  \"badland\",\n  \"badly\",\n  \"badness\",\n  \"baffle\",\n  \"baffling\",\n  \"bagel\",\n  \"bagful\",\n  \"baggage\",\n  \"bagged\",\n  \"baggie\",\n  \"bagginess\",\n  \"bagging\",\n  \"baggy\",\n  \"bagpipe\",\n  \"baguette\",\n  \"baked\",\n  \"bakery\",\n  \"bakeshop\",\n  \"baking\",\n  \"balance\",\n  \"balancing\",\n  \"balcony\",\n  \"balmy\",\n  \"balsamic\",\n  \"bamboo\",\n  \"banana\",\n  \"banish\",\n  \"banister\",\n  \"banjo\",\n  \"bankable\",\n  \"bankbook\",\n  \"banked\",\n  \"banker\",\n  \"banking\",\n  \"banknote\",\n  \"bankroll\",\n  \"banner\",\n  \"bannister\",\n  \"banshee\",\n  \"banter\",\n  \"barbecue\",\n  \"barbed\",\n  \"barbell\",\n  \"barber\",\n  \"barcode\",\n  \"barge\",\n  \"bargraph\",\n  \"barista\",\n  \"baritone\",\n  \"barley\",\n  \"barmaid\",\n  \"barman\",\n  \"barn\",\n  \"barometer\",\n  \"barrack\",\n  \"barracuda\",\n  \"barrel\",\n  \"barrette\",\n  \"barricade\",\n  \"barrier\",\n  \"barstool\",\n  \"bartender\",\n  \"barterer\",\n  \"bash\",\n  \"basically\",\n  \"basics\",\n  \"basil\",\n  \"basin\",\n  \"basis\",\n  \"basket\",\n  \"batboy\",\n  \"batch\",\n  \"bath\",\n  \"baton\",\n  \"bats\",\n  \"battalion\",\n  \"battered\",\n  \"battering\",\n  \"battery\",\n  \"batting\",\n  \"battle\",\n  \"bauble\",\n  \"bazooka\",\n  \"blabber\",\n  \"bladder\",\n  \"blade\",\n  \"blah\",\n  \"blame\",\n  \"blaming\",\n  \"blanching\",\n  \"blandness\",\n  \"blank\",\n  \"blaspheme\",\n  \"blasphemy\",\n  \"blast\",\n  \"blatancy\",\n  \"blatantly\",\n  \"blazer\",\n  \"blazing\",\n  \"bleach\",\n  \"bleak\",\n  \"bleep\",\n  \"blemish\",\n  \"blend\",\n  \"bless\",\n  \"blighted\",\n  \"blimp\",\n  \"bling\",\n  \"blinked\",\n  \"blinker\",\n  \"blinking\",\n  \"blinks\",\n  \"blip\",\n  \"blissful\",\n  \"blitz\",\n  \"blizzard\",\n  \"bloated\",\n  \"bloating\",\n  \"blob\",\n  \"blog\",\n  \"bloomers\",\n  \"blooming\",\n  \"blooper\",\n  \"blot\",\n  \"blouse\",\n  \"blubber\",\n  \"bluff\",\n  \"bluish\",\n  \"blunderer\",\n  \"blunt\",\n  \"blurb\",\n  \"blurred\",\n  \"blurry\",\n  \"blurt\",\n  \"blush\",\n  \"blustery\",\n  \"boaster\",\n  \"boastful\",\n  \"boasting\",\n  \"boat\",\n  \"bobbed\",\n  \"bobbing\",\n  \"bobble\",\n  \"bobcat\",\n  \"bobsled\",\n  \"bobtail\",\n  \"bodacious\",\n  \"body\",\n  \"bogged\",\n  \"boggle\",\n  \"bogus\",\n  \"boil\",\n  \"bok\",\n  \"bolster\",\n  \"bolt\",\n  \"bonanza\",\n  \"bonded\",\n  \"bonding\",\n  \"bondless\",\n  \"boned\",\n  \"bonehead\",\n  \"boneless\",\n  \"bonelike\",\n  \"boney\",\n  \"bonfire\",\n  \"bonnet\",\n  \"bonsai\",\n  \"bonus\",\n  \"bony\",\n  \"boogeyman\",\n  \"boogieman\",\n  \"book\",\n  \"boondocks\",\n  \"booted\",\n  \"booth\",\n  \"bootie\",\n  \"booting\",\n  \"bootlace\",\n  \"bootleg\",\n  \"boots\",\n  \"boozy\",\n  \"borax\",\n  \"boring\",\n  \"borough\",\n  \"borrower\",\n  \"borrowing\",\n  \"boss\",\n  \"botanical\",\n  \"botanist\",\n  \"botany\",\n  \"botch\",\n  \"both\",\n  \"bottle\",\n  \"bottling\",\n  \"bottom\",\n  \"bounce\",\n  \"bouncing\",\n  \"bouncy\",\n  \"bounding\",\n  \"boundless\",\n  \"bountiful\",\n  \"bovine\",\n  \"boxcar\",\n  \"boxer\",\n  \"boxing\",\n  \"boxlike\",\n  \"boxy\",\n  \"breach\",\n  \"breath\",\n  \"breeches\",\n  \"breeching\",\n  \"breeder\",\n  \"breeding\",\n  \"breeze\",\n  \"breezy\",\n  \"brethren\",\n  \"brewery\",\n  \"brewing\",\n  \"briar\",\n  \"bribe\",\n  \"brick\",\n  \"bride\",\n  \"bridged\",\n  \"brigade\",\n  \"bright\",\n  \"brilliant\",\n  \"brim\",\n  \"bring\",\n  \"brink\",\n  \"brisket\",\n  \"briskly\",\n  \"briskness\",\n  \"bristle\",\n  \"brittle\",\n  \"broadband\",\n  \"broadcast\",\n  \"broaden\",\n  \"broadly\",\n  \"broadness\",\n  \"broadside\",\n  \"broadways\",\n  \"broiler\",\n  \"broiling\",\n  \"broken\",\n  \"broker\",\n  \"bronchial\",\n  \"bronco\",\n  \"bronze\",\n  \"bronzing\",\n  \"brook\",\n  \"broom\",\n  \"brought\",\n  \"browbeat\",\n  \"brownnose\",\n  \"browse\",\n  \"browsing\",\n  \"bruising\",\n  \"brunch\",\n  \"brunette\",\n  \"brunt\",\n  \"brush\",\n  \"brussels\",\n  \"brute\",\n  \"brutishly\",\n  \"bubble\",\n  \"bubbling\",\n  \"bubbly\",\n  \"buccaneer\",\n  \"bucked\",\n  \"bucket\",\n  \"buckle\",\n  \"buckshot\",\n  \"buckskin\",\n  \"bucktooth\",\n  \"buckwheat\",\n  \"buddhism\",\n  \"buddhist\",\n  \"budding\",\n  \"buddy\",\n  \"budget\",\n  \"buffalo\",\n  \"buffed\",\n  \"buffer\",\n  \"buffing\",\n  \"buffoon\",\n  \"buggy\",\n  \"bulb\",\n  \"bulge\",\n  \"bulginess\",\n  \"bulgur\",\n  \"bulk\",\n  \"bulldog\",\n  \"bulldozer\",\n  \"bullfight\",\n  \"bullfrog\",\n  \"bullhorn\",\n  \"bullion\",\n  \"bullish\",\n  \"bullpen\",\n  \"bullring\",\n  \"bullseye\",\n  \"bullwhip\",\n  \"bully\",\n  \"bunch\",\n  \"bundle\",\n  \"bungee\",\n  \"bunion\",\n  \"bunkbed\",\n  \"bunkhouse\",\n  \"bunkmate\",\n  \"bunny\",\n  \"bunt\",\n  \"busboy\",\n  \"bush\",\n  \"busily\",\n  \"busload\",\n  \"bust\",\n  \"busybody\",\n  \"buzz\",\n  \"cabana\",\n  \"cabbage\",\n  \"cabbie\",\n  \"cabdriver\",\n  \"cable\",\n  \"caboose\",\n  \"cache\",\n  \"cackle\",\n  \"cacti\",\n  \"cactus\",\n  \"caddie\",\n  \"caddy\",\n  \"cadet\",\n  \"cadillac\",\n  \"cadmium\",\n  \"cage\",\n  \"cahoots\",\n  \"cake\",\n  \"calamari\",\n  \"calamity\",\n  \"calcium\",\n  \"calculate\",\n  \"calculus\",\n  \"caliber\",\n  \"calibrate\",\n  \"calm\",\n  \"caloric\",\n  \"calorie\",\n  \"calzone\",\n  \"camcorder\",\n  \"cameo\",\n  \"camera\",\n  \"camisole\",\n  \"camper\",\n  \"campfire\",\n  \"camping\",\n  \"campsite\",\n  \"campus\",\n  \"canal\",\n  \"canary\",\n  \"cancel\",\n  \"candied\",\n  \"candle\",\n  \"candy\",\n  \"cane\",\n  \"canine\",\n  \"canister\",\n  \"cannabis\",\n  \"canned\",\n  \"canning\",\n  \"cannon\",\n  \"cannot\",\n  \"canola\",\n  \"canon\",\n  \"canopener\",\n  \"canopy\",\n  \"canteen\",\n  \"canyon\",\n  \"capable\",\n  \"capably\",\n  \"capacity\",\n  \"cape\",\n  \"capillary\",\n  \"capital\",\n  \"capitol\",\n  \"capped\",\n  \"capricorn\",\n  \"capsize\",\n  \"capsule\",\n  \"caption\",\n  \"captivate\",\n  \"captive\",\n  \"captivity\",\n  \"capture\",\n  \"caramel\",\n  \"carat\",\n  \"caravan\",\n  \"carbon\",\n  \"cardboard\",\n  \"carded\",\n  \"cardiac\",\n  \"cardigan\",\n  \"cardinal\",\n  \"cardstock\",\n  \"carefully\",\n  \"caregiver\",\n  \"careless\",\n  \"caress\",\n  \"caretaker\",\n  \"cargo\",\n  \"caring\",\n  \"carless\",\n  \"carload\",\n  \"carmaker\",\n  \"carnage\",\n  \"carnation\",\n  \"carnival\",\n  \"carnivore\",\n  \"carol\",\n  \"carpenter\",\n  \"carpentry\",\n  \"carpool\",\n  \"carport\",\n  \"carried\",\n  \"carrot\",\n  \"carrousel\",\n  \"carry\",\n  \"cartel\",\n  \"cartload\",\n  \"carton\",\n  \"cartoon\",\n  \"cartridge\",\n  \"cartwheel\",\n  \"carve\",\n  \"carving\",\n  \"carwash\",\n  \"cascade\",\n  \"case\",\n  \"cash\",\n  \"casing\",\n  \"casino\",\n  \"casket\",\n  \"cassette\",\n  \"casually\",\n  \"casualty\",\n  \"catacomb\",\n  \"catalog\",\n  \"catalyst\",\n  \"catalyze\",\n  \"catapult\",\n  \"cataract\",\n  \"catatonic\",\n  \"catcall\",\n  \"catchable\",\n  \"catcher\",\n  \"catching\",\n  \"catchy\",\n  \"caterer\",\n  \"catering\",\n  \"catfight\",\n  \"catfish\",\n  \"cathedral\",\n  \"cathouse\",\n  \"catlike\",\n  \"catnap\",\n  \"catnip\",\n  \"catsup\",\n  \"cattail\",\n  \"cattishly\",\n  \"cattle\",\n  \"catty\",\n  \"catwalk\",\n  \"caucasian\",\n  \"caucus\",\n  \"causal\",\n  \"causation\",\n  \"cause\",\n  \"causing\",\n  \"cauterize\",\n  \"caution\",\n  \"cautious\",\n  \"cavalier\",\n  \"cavalry\",\n  \"caviar\",\n  \"cavity\",\n  \"cedar\",\n  \"celery\",\n  \"celestial\",\n  \"celibacy\",\n  \"celibate\",\n  \"celtic\",\n  \"cement\",\n  \"census\",\n  \"ceramics\",\n  \"ceremony\",\n  \"certainly\",\n  \"certainty\",\n  \"certified\",\n  \"certify\",\n  \"cesarean\",\n  \"cesspool\",\n  \"chafe\",\n  \"chaffing\",\n  \"chain\",\n  \"chair\",\n  \"chalice\",\n  \"challenge\",\n  \"chamber\",\n  \"chamomile\",\n  \"champion\",\n  \"chance\",\n  \"change\",\n  \"channel\",\n  \"chant\",\n  \"chaos\",\n  \"chaperone\",\n  \"chaplain\",\n  \"chapped\",\n  \"chaps\",\n  \"chapter\",\n  \"character\",\n  \"charbroil\",\n  \"charcoal\",\n  \"charger\",\n  \"charging\",\n  \"chariot\",\n  \"charity\",\n  \"charm\",\n  \"charred\",\n  \"charter\",\n  \"charting\",\n  \"chase\",\n  \"chasing\",\n  \"chaste\",\n  \"chastise\",\n  \"chastity\",\n  \"chatroom\",\n  \"chatter\",\n  \"chatting\",\n  \"chatty\",\n  \"cheating\",\n  \"cheddar\",\n  \"cheek\",\n  \"cheer\",\n  \"cheese\",\n  \"cheesy\",\n  \"chef\",\n  \"chemicals\",\n  \"chemist\",\n  \"chemo\",\n  \"cherisher\",\n  \"cherub\",\n  \"chess\",\n  \"chest\",\n  \"chevron\",\n  \"chevy\",\n  \"chewable\",\n  \"chewer\",\n  \"chewing\",\n  \"chewy\",\n  \"chief\",\n  \"chihuahua\",\n  \"childcare\",\n  \"childhood\",\n  \"childish\",\n  \"childless\",\n  \"childlike\",\n  \"chili\",\n  \"chill\",\n  \"chimp\",\n  \"chip\",\n  \"chirping\",\n  \"chirpy\",\n  \"chitchat\",\n  \"chivalry\",\n  \"chive\",\n  \"chloride\",\n  \"chlorine\",\n  \"choice\",\n  \"chokehold\",\n  \"choking\",\n  \"chomp\",\n  \"chooser\",\n  \"choosing\",\n  \"choosy\",\n  \"chop\",\n  \"chosen\",\n  \"chowder\",\n  \"chowtime\",\n  \"chrome\",\n  \"chubby\",\n  \"chuck\",\n  \"chug\",\n  \"chummy\",\n  \"chump\",\n  \"chunk\",\n  \"churn\",\n  \"chute\",\n  \"cider\",\n  \"cilantro\",\n  \"cinch\",\n  \"cinema\",\n  \"cinnamon\",\n  \"circle\",\n  \"circling\",\n  \"circular\",\n  \"circulate\",\n  \"circus\",\n  \"citable\",\n  \"citadel\",\n  \"citation\",\n  \"citizen\",\n  \"citric\",\n  \"citrus\",\n  \"city\",\n  \"civic\",\n  \"civil\",\n  \"clad\",\n  \"claim\",\n  \"clambake\",\n  \"clammy\",\n  \"clamor\",\n  \"clamp\",\n  \"clamshell\",\n  \"clang\",\n  \"clanking\",\n  \"clapped\",\n  \"clapper\",\n  \"clapping\",\n  \"clarify\",\n  \"clarinet\",\n  \"clarity\",\n  \"clash\",\n  \"clasp\",\n  \"class\",\n  \"clatter\",\n  \"clause\",\n  \"clavicle\",\n  \"claw\",\n  \"clay\",\n  \"clean\",\n  \"clear\",\n  \"cleat\",\n  \"cleaver\",\n  \"cleft\",\n  \"clench\",\n  \"clergyman\",\n  \"clerical\",\n  \"clerk\",\n  \"clever\",\n  \"clicker\",\n  \"client\",\n  \"climate\",\n  \"climatic\",\n  \"cling\",\n  \"clinic\",\n  \"clinking\",\n  \"clip\",\n  \"clique\",\n  \"cloak\",\n  \"clobber\",\n  \"clock\",\n  \"clone\",\n  \"cloning\",\n  \"closable\",\n  \"closure\",\n  \"clothes\",\n  \"clothing\",\n  \"cloud\",\n  \"clover\",\n  \"clubbed\",\n  \"clubbing\",\n  \"clubhouse\",\n  \"clump\",\n  \"clumsily\",\n  \"clumsy\",\n  \"clunky\",\n  \"clustered\",\n  \"clutch\",\n  \"clutter\",\n  \"coach\",\n  \"coagulant\",\n  \"coastal\",\n  \"coaster\",\n  \"coasting\",\n  \"coastland\",\n  \"coastline\",\n  \"coat\",\n  \"coauthor\",\n  \"cobalt\",\n  \"cobbler\",\n  \"cobweb\",\n  \"cocoa\",\n  \"coconut\",\n  \"cod\",\n  \"coeditor\",\n  \"coerce\",\n  \"coexist\",\n  \"coffee\",\n  \"cofounder\",\n  \"cognition\",\n  \"cognitive\",\n  \"cogwheel\",\n  \"coherence\",\n  \"coherent\",\n  \"cohesive\",\n  \"coil\",\n  \"coke\",\n  \"cola\",\n  \"cold\",\n  \"coleslaw\",\n  \"coliseum\",\n  \"collage\",\n  \"collapse\",\n  \"collar\",\n  \"collected\",\n  \"collector\",\n  \"collide\",\n  \"collie\",\n  \"collision\",\n  \"colonial\",\n  \"colonist\",\n  \"colonize\",\n  \"colony\",\n  \"colossal\",\n  \"colt\",\n  \"coma\",\n  \"come\",\n  \"comfort\",\n  \"comfy\",\n  \"comic\",\n  \"coming\",\n  \"comma\",\n  \"commence\",\n  \"commend\",\n  \"comment\",\n  \"commerce\",\n  \"commode\",\n  \"commodity\",\n  \"commodore\",\n  \"common\",\n  \"commotion\",\n  \"commute\",\n  \"commuting\",\n  \"compacted\",\n  \"compacter\",\n  \"compactly\",\n  \"compactor\",\n  \"companion\",\n  \"company\",\n  \"compare\",\n  \"compel\",\n  \"compile\",\n  \"comply\",\n  \"component\",\n  \"composed\",\n  \"composer\",\n  \"composite\",\n  \"compost\",\n  \"composure\",\n  \"compound\",\n  \"compress\",\n  \"comprised\",\n  \"computer\",\n  \"computing\",\n  \"comrade\",\n  \"concave\",\n  \"conceal\",\n  \"conceded\",\n  \"concept\",\n  \"concerned\",\n  \"concert\",\n  \"conch\",\n  \"concierge\",\n  \"concise\",\n  \"conclude\",\n  \"concrete\",\n  \"concur\",\n  \"condense\",\n  \"condiment\",\n  \"condition\",\n  \"condone\",\n  \"conducive\",\n  \"conductor\",\n  \"conduit\",\n  \"cone\",\n  \"confess\",\n  \"confetti\",\n  \"confidant\",\n  \"confident\",\n  \"confider\",\n  \"confiding\",\n  \"configure\",\n  \"confined\",\n  \"confining\",\n  \"confirm\",\n  \"conflict\",\n  \"conform\",\n  \"confound\",\n  \"confront\",\n  \"confused\",\n  \"confusing\",\n  \"confusion\",\n  \"congenial\",\n  \"congested\",\n  \"congrats\",\n  \"congress\",\n  \"conical\",\n  \"conjoined\",\n  \"conjure\",\n  \"conjuror\",\n  \"connected\",\n  \"connector\",\n  \"consensus\",\n  \"consent\",\n  \"console\",\n  \"consoling\",\n  \"consonant\",\n  \"constable\",\n  \"constant\",\n  \"constrain\",\n  \"constrict\",\n  \"construct\",\n  \"consult\",\n  \"consumer\",\n  \"consuming\",\n  \"contact\",\n  \"container\",\n  \"contempt\",\n  \"contend\",\n  \"contented\",\n  \"contently\",\n  \"contents\",\n  \"contest\",\n  \"context\",\n  \"contort\",\n  \"contour\",\n  \"contrite\",\n  \"control\",\n  \"contusion\",\n  \"convene\",\n  \"convent\",\n  \"copartner\",\n  \"cope\",\n  \"copied\",\n  \"copier\",\n  \"copilot\",\n  \"coping\",\n  \"copious\",\n  \"copper\",\n  \"copy\",\n  \"coral\",\n  \"cork\",\n  \"cornball\",\n  \"cornbread\",\n  \"corncob\",\n  \"cornea\",\n  \"corned\",\n  \"corner\",\n  \"cornfield\",\n  \"cornflake\",\n  \"cornhusk\",\n  \"cornmeal\",\n  \"cornstalk\",\n  \"corny\",\n  \"coronary\",\n  \"coroner\",\n  \"corporal\",\n  \"corporate\",\n  \"corral\",\n  \"correct\",\n  \"corridor\",\n  \"corrode\",\n  \"corroding\",\n  \"corrosive\",\n  \"corsage\",\n  \"corset\",\n  \"cortex\",\n  \"cosigner\",\n  \"cosmetics\",\n  \"cosmic\",\n  \"cosmos\",\n  \"cosponsor\",\n  \"cost\",\n  \"cottage\",\n  \"cotton\",\n  \"couch\",\n  \"cough\",\n  \"could\",\n  \"countable\",\n  \"countdown\",\n  \"counting\",\n  \"countless\",\n  \"country\",\n  \"county\",\n  \"courier\",\n  \"covenant\",\n  \"cover\",\n  \"coveted\",\n  \"coveting\",\n  \"coyness\",\n  \"cozily\",\n  \"coziness\",\n  \"cozy\",\n  \"crabbing\",\n  \"crabgrass\",\n  \"crablike\",\n  \"crabmeat\",\n  \"cradle\",\n  \"cradling\",\n  \"crafter\",\n  \"craftily\",\n  \"craftsman\",\n  \"craftwork\",\n  \"crafty\",\n  \"cramp\",\n  \"cranberry\",\n  \"crane\",\n  \"cranial\",\n  \"cranium\",\n  \"crank\",\n  \"crate\",\n  \"crave\",\n  \"craving\",\n  \"crawfish\",\n  \"crawlers\",\n  \"crawling\",\n  \"crayfish\",\n  \"crayon\",\n  \"crazed\",\n  \"crazily\",\n  \"craziness\",\n  \"crazy\",\n  \"creamed\",\n  \"creamer\",\n  \"creamlike\",\n  \"crease\",\n  \"creasing\",\n  \"creatable\",\n  \"create\",\n  \"creation\",\n  \"creative\",\n  \"creature\",\n  \"credible\",\n  \"credibly\",\n  \"credit\",\n  \"creed\",\n  \"creme\",\n  \"creole\",\n  \"crepe\",\n  \"crept\",\n  \"crescent\",\n  \"crested\",\n  \"cresting\",\n  \"crestless\",\n  \"crevice\",\n  \"crewless\",\n  \"crewman\",\n  \"crewmate\",\n  \"crib\",\n  \"cricket\",\n  \"cried\",\n  \"crier\",\n  \"crimp\",\n  \"crimson\",\n  \"cringe\",\n  \"cringing\",\n  \"crinkle\",\n  \"crinkly\",\n  \"crisped\",\n  \"crisping\",\n  \"crisply\",\n  \"crispness\",\n  \"crispy\",\n  \"criteria\",\n  \"critter\",\n  \"croak\",\n  \"crock\",\n  \"crook\",\n  \"croon\",\n  \"crop\",\n  \"cross\",\n  \"crouch\",\n  \"crouton\",\n  \"crowbar\",\n  \"crowd\",\n  \"crown\",\n  \"crucial\",\n  \"crudely\",\n  \"crudeness\",\n  \"cruelly\",\n  \"cruelness\",\n  \"cruelty\",\n  \"crumb\",\n  \"crummiest\",\n  \"crummy\",\n  \"crumpet\",\n  \"crumpled\",\n  \"cruncher\",\n  \"crunching\",\n  \"crunchy\",\n  \"crusader\",\n  \"crushable\",\n  \"crushed\",\n  \"crusher\",\n  \"crushing\",\n  \"crust\",\n  \"crux\",\n  \"crying\",\n  \"cryptic\",\n  \"crystal\",\n  \"cubbyhole\",\n  \"cube\",\n  \"cubical\",\n  \"cubicle\",\n  \"cucumber\",\n  \"cuddle\",\n  \"cuddly\",\n  \"cufflink\",\n  \"culinary\",\n  \"culminate\",\n  \"culpable\",\n  \"culprit\",\n  \"cultivate\",\n  \"cultural\",\n  \"culture\",\n  \"cupbearer\",\n  \"cupcake\",\n  \"cupid\",\n  \"cupped\",\n  \"cupping\",\n  \"curable\",\n  \"curator\",\n  \"curdle\",\n  \"cure\",\n  \"curfew\",\n  \"curing\",\n  \"curled\",\n  \"curler\",\n  \"curliness\",\n  \"curling\",\n  \"curly\",\n  \"curry\",\n  \"curse\",\n  \"cursive\",\n  \"cursor\",\n  \"curtain\",\n  \"curtly\",\n  \"curtsy\",\n  \"curvature\",\n  \"curve\",\n  \"curvy\",\n  \"cushy\",\n  \"cusp\",\n  \"cussed\",\n  \"custard\",\n  \"custodian\",\n  \"custody\",\n  \"customary\",\n  \"customer\",\n  \"customize\",\n  \"customs\",\n  \"cut\",\n  \"cycle\",\n  \"cyclic\",\n  \"cycling\",\n  \"cyclist\",\n  \"cylinder\",\n  \"cymbal\",\n  \"cytoplasm\",\n  \"cytoplast\",\n  \"dab\",\n  \"dad\",\n  \"daffodil\",\n  \"dagger\",\n  \"daily\",\n  \"daintily\",\n  \"dainty\",\n  \"dairy\",\n  \"daisy\",\n  \"dallying\",\n  \"dance\",\n  \"dancing\",\n  \"dandelion\",\n  \"dander\",\n  \"dandruff\",\n  \"dandy\",\n  \"danger\",\n  \"dangle\",\n  \"dangling\",\n  \"daredevil\",\n  \"dares\",\n  \"daringly\",\n  \"darkened\",\n  \"darkening\",\n  \"darkish\",\n  \"darkness\",\n  \"darkroom\",\n  \"darling\",\n  \"darn\",\n  \"dart\",\n  \"darwinism\",\n  \"dash\",\n  \"dastardly\",\n  \"data\",\n  \"datebook\",\n  \"dating\",\n  \"daughter\",\n  \"daunting\",\n  \"dawdler\",\n  \"dawn\",\n  \"daybed\",\n  \"daybreak\",\n  \"daycare\",\n  \"daydream\",\n  \"daylight\",\n  \"daylong\",\n  \"dayroom\",\n  \"daytime\",\n  \"dazzler\",\n  \"dazzling\",\n  \"deacon\",\n  \"deafening\",\n  \"deafness\",\n  \"dealer\",\n  \"dealing\",\n  \"dealmaker\",\n  \"dealt\",\n  \"dean\",\n  \"debatable\",\n  \"debate\",\n  \"debating\",\n  \"debit\",\n  \"debrief\",\n  \"debtless\",\n  \"debtor\",\n  \"debug\",\n  \"debunk\",\n  \"decade\",\n  \"decaf\",\n  \"decal\",\n  \"decathlon\",\n  \"decay\",\n  \"deceased\",\n  \"deceit\",\n  \"deceiver\",\n  \"deceiving\",\n  \"december\",\n  \"decency\",\n  \"decent\",\n  \"deception\",\n  \"deceptive\",\n  \"decibel\",\n  \"decidable\",\n  \"decimal\",\n  \"decimeter\",\n  \"decipher\",\n  \"deck\",\n  \"declared\",\n  \"decline\",\n  \"decode\",\n  \"decompose\",\n  \"decorated\",\n  \"decorator\",\n  \"decoy\",\n  \"decrease\",\n  \"decree\",\n  \"dedicate\",\n  \"dedicator\",\n  \"deduce\",\n  \"deduct\",\n  \"deed\",\n  \"deem\",\n  \"deepen\",\n  \"deeply\",\n  \"deepness\",\n  \"deface\",\n  \"defacing\",\n  \"defame\",\n  \"default\",\n  \"defeat\",\n  \"defection\",\n  \"defective\",\n  \"defendant\",\n  \"defender\",\n  \"defense\",\n  \"defensive\",\n  \"deferral\",\n  \"deferred\",\n  \"defiance\",\n  \"defiant\",\n  \"defile\",\n  \"defiling\",\n  \"define\",\n  \"definite\",\n  \"deflate\",\n  \"deflation\",\n  \"deflator\",\n  \"deflected\",\n  \"deflector\",\n  \"defog\",\n  \"deforest\",\n  \"defraud\",\n  \"defrost\",\n  \"deftly\",\n  \"defuse\",\n  \"defy\",\n  \"degraded\",\n  \"degrading\",\n  \"degrease\",\n  \"degree\",\n  \"dehydrate\",\n  \"deity\",\n  \"dejected\",\n  \"delay\",\n  \"delegate\",\n  \"delegator\",\n  \"delete\",\n  \"deletion\",\n  \"delicacy\",\n  \"delicate\",\n  \"delicious\",\n  \"delighted\",\n  \"delirious\",\n  \"delirium\",\n  \"deliverer\",\n  \"delivery\",\n  \"delouse\",\n  \"delta\",\n  \"deluge\",\n  \"delusion\",\n  \"deluxe\",\n  \"demanding\",\n  \"demeaning\",\n  \"demeanor\",\n  \"demise\",\n  \"democracy\",\n  \"democrat\",\n  \"demote\",\n  \"demotion\",\n  \"demystify\",\n  \"denatured\",\n  \"deniable\",\n  \"denial\",\n  \"denim\",\n  \"denote\",\n  \"dense\",\n  \"density\",\n  \"dental\",\n  \"dentist\",\n  \"denture\",\n  \"deny\",\n  \"deodorant\",\n  \"deodorize\",\n  \"departed\",\n  \"departure\",\n  \"depict\",\n  \"deplete\",\n  \"depletion\",\n  \"deplored\",\n  \"deploy\",\n  \"deport\",\n  \"depose\",\n  \"depraved\",\n  \"depravity\",\n  \"deprecate\",\n  \"depress\",\n  \"deprive\",\n  \"depth\",\n  \"deputize\",\n  \"deputy\",\n  \"derail\",\n  \"deranged\",\n  \"derby\",\n  \"derived\",\n  \"desecrate\",\n  \"deserve\",\n  \"deserving\",\n  \"designate\",\n  \"designed\",\n  \"designer\",\n  \"designing\",\n  \"deskbound\",\n  \"desktop\",\n  \"deskwork\",\n  \"desolate\",\n  \"despair\",\n  \"despise\",\n  \"despite\",\n  \"destiny\",\n  \"destitute\",\n  \"destruct\",\n  \"detached\",\n  \"detail\",\n  \"detection\",\n  \"detective\",\n  \"detector\",\n  \"detention\",\n  \"detergent\",\n  \"detest\",\n  \"detonate\",\n  \"detonator\",\n  \"detoxify\",\n  \"detract\",\n  \"deuce\",\n  \"devalue\",\n  \"deviancy\",\n  \"deviant\",\n  \"deviate\",\n  \"deviation\",\n  \"deviator\",\n  \"device\",\n  \"devious\",\n  \"devotedly\",\n  \"devotee\",\n  \"devotion\",\n  \"devourer\",\n  \"devouring\",\n  \"devoutly\",\n  \"dexterity\",\n  \"dexterous\",\n  \"diabetes\",\n  \"diabetic\",\n  \"diabolic\",\n  \"diagnoses\",\n  \"diagnosis\",\n  \"diagram\",\n  \"dial\",\n  \"diameter\",\n  \"diaper\",\n  \"diaphragm\",\n  \"diary\",\n  \"dice\",\n  \"dicing\",\n  \"dictate\",\n  \"dictation\",\n  \"dictator\",\n  \"difficult\",\n  \"diffused\",\n  \"diffuser\",\n  \"diffusion\",\n  \"diffusive\",\n  \"dig\",\n  \"dilation\",\n  \"diligence\",\n  \"diligent\",\n  \"dill\",\n  \"dilute\",\n  \"dime\",\n  \"diminish\",\n  \"dimly\",\n  \"dimmed\",\n  \"dimmer\",\n  \"dimness\",\n  \"dimple\",\n  \"diner\",\n  \"dingbat\",\n  \"dinghy\",\n  \"dinginess\",\n  \"dingo\",\n  \"dingy\",\n  \"dining\",\n  \"dinner\",\n  \"diocese\",\n  \"dioxide\",\n  \"diploma\",\n  \"dipped\",\n  \"dipper\",\n  \"dipping\",\n  \"directed\",\n  \"direction\",\n  \"directive\",\n  \"directly\",\n  \"directory\",\n  \"direness\",\n  \"dirtiness\",\n  \"disabled\",\n  \"disagree\",\n  \"disallow\",\n  \"disarm\",\n  \"disarray\",\n  \"disaster\",\n  \"disband\",\n  \"disbelief\",\n  \"disburse\",\n  \"discard\",\n  \"discern\",\n  \"discharge\",\n  \"disclose\",\n  \"discolor\",\n  \"discount\",\n  \"discourse\",\n  \"discover\",\n  \"discuss\",\n  \"disdain\",\n  \"disengage\",\n  \"disfigure\",\n  \"disgrace\",\n  \"dish\",\n  \"disinfect\",\n  \"disjoin\",\n  \"disk\",\n  \"dislike\",\n  \"disliking\",\n  \"dislocate\",\n  \"dislodge\",\n  \"disloyal\",\n  \"dismantle\",\n  \"dismay\",\n  \"dismiss\",\n  \"dismount\",\n  \"disobey\",\n  \"disorder\",\n  \"disown\",\n  \"disparate\",\n  \"disparity\",\n  \"dispatch\",\n  \"dispense\",\n  \"dispersal\",\n  \"dispersed\",\n  \"disperser\",\n  \"displace\",\n  \"display\",\n  \"displease\",\n  \"disposal\",\n  \"dispose\",\n  \"disprove\",\n  \"dispute\",\n  \"disregard\",\n  \"disrupt\",\n  \"dissuade\",\n  \"distance\",\n  \"distant\",\n  \"distaste\",\n  \"distill\",\n  \"distinct\",\n  \"distort\",\n  \"distract\",\n  \"distress\",\n  \"district\",\n  \"distrust\",\n  \"ditch\",\n  \"ditto\",\n  \"ditzy\",\n  \"dividable\",\n  \"divided\",\n  \"dividend\",\n  \"dividers\",\n  \"dividing\",\n  \"divinely\",\n  \"diving\",\n  \"divinity\",\n  \"divisible\",\n  \"divisibly\",\n  \"division\",\n  \"divisive\",\n  \"divorcee\",\n  \"dizziness\",\n  \"dizzy\",\n  \"doable\",\n  \"docile\",\n  \"dock\",\n  \"doctrine\",\n  \"document\",\n  \"dodge\",\n  \"dodgy\",\n  \"doily\",\n  \"doing\",\n  \"dole\",\n  \"dollar\",\n  \"dollhouse\",\n  \"dollop\",\n  \"dolly\",\n  \"dolphin\",\n  \"domain\",\n  \"domelike\",\n  \"domestic\",\n  \"dominion\",\n  \"dominoes\",\n  \"donated\",\n  \"donation\",\n  \"donator\",\n  \"donor\",\n  \"donut\",\n  \"doodle\",\n  \"doorbell\",\n  \"doorframe\",\n  \"doorknob\",\n  \"doorman\",\n  \"doormat\",\n  \"doornail\",\n  \"doorpost\",\n  \"doorstep\",\n  \"doorstop\",\n  \"doorway\",\n  \"doozy\",\n  \"dork\",\n  \"dormitory\",\n  \"dorsal\",\n  \"dosage\",\n  \"dose\",\n  \"dotted\",\n  \"doubling\",\n  \"douche\",\n  \"dove\",\n  \"down\",\n  \"dowry\",\n  \"doze\",\n  \"drab\",\n  \"dragging\",\n  \"dragonfly\",\n  \"dragonish\",\n  \"dragster\",\n  \"drainable\",\n  \"drainage\",\n  \"drained\",\n  \"drainer\",\n  \"drainpipe\",\n  \"dramatic\",\n  \"dramatize\",\n  \"drank\",\n  \"drapery\",\n  \"drastic\",\n  \"draw\",\n  \"dreaded\",\n  \"dreadful\",\n  \"dreadlock\",\n  \"dreamboat\",\n  \"dreamily\",\n  \"dreamland\",\n  \"dreamless\",\n  \"dreamlike\",\n  \"dreamt\",\n  \"dreamy\",\n  \"drearily\",\n  \"dreary\",\n  \"drench\",\n  \"dress\",\n  \"drew\",\n  \"dribble\",\n  \"dried\",\n  \"drier\",\n  \"drift\",\n  \"driller\",\n  \"drilling\",\n  \"drinkable\",\n  \"drinking\",\n  \"dripping\",\n  \"drippy\",\n  \"drivable\",\n  \"driven\",\n  \"driver\",\n  \"driveway\",\n  \"driving\",\n  \"drizzle\",\n  \"drizzly\",\n  \"drone\",\n  \"drool\",\n  \"droop\",\n  \"drop-down\",\n  \"dropbox\",\n  \"dropkick\",\n  \"droplet\",\n  \"dropout\",\n  \"dropper\",\n  \"drove\",\n  \"drown\",\n  \"drowsily\",\n  \"drudge\",\n  \"drum\",\n  \"dry\",\n  \"dubbed\",\n  \"dubiously\",\n  \"duchess\",\n  \"duckbill\",\n  \"ducking\",\n  \"duckling\",\n  \"ducktail\",\n  \"ducky\",\n  \"duct\",\n  \"dude\",\n  \"duffel\",\n  \"dugout\",\n  \"duh\",\n  \"duke\",\n  \"duller\",\n  \"dullness\",\n  \"duly\",\n  \"dumping\",\n  \"dumpling\",\n  \"dumpster\",\n  \"duo\",\n  \"dupe\",\n  \"duplex\",\n  \"duplicate\",\n  \"duplicity\",\n  \"durable\",\n  \"durably\",\n  \"duration\",\n  \"duress\",\n  \"during\",\n  \"dusk\",\n  \"dust\",\n  \"dutiful\",\n  \"duty\",\n  \"duvet\",\n  \"dwarf\",\n  \"dweeb\",\n  \"dwelled\",\n  \"dweller\",\n  \"dwelling\",\n  \"dwindle\",\n  \"dwindling\",\n  \"dynamic\",\n  \"dynamite\",\n  \"dynasty\",\n  \"dyslexia\",\n  \"dyslexic\",\n  \"each\",\n  \"eagle\",\n  \"earache\",\n  \"eardrum\",\n  \"earflap\",\n  \"earful\",\n  \"earlobe\",\n  \"early\",\n  \"earmark\",\n  \"earmuff\",\n  \"earphone\",\n  \"earpiece\",\n  \"earplugs\",\n  \"earring\",\n  \"earshot\",\n  \"earthen\",\n  \"earthlike\",\n  \"earthling\",\n  \"earthly\",\n  \"earthworm\",\n  \"earthy\",\n  \"earwig\",\n  \"easeful\",\n  \"easel\",\n  \"easiest\",\n  \"easily\",\n  \"easiness\",\n  \"easing\",\n  \"eastbound\",\n  \"eastcoast\",\n  \"easter\",\n  \"eastward\",\n  \"eatable\",\n  \"eaten\",\n  \"eatery\",\n  \"eating\",\n  \"eats\",\n  \"ebay\",\n  \"ebony\",\n  \"ebook\",\n  \"ecard\",\n  \"eccentric\",\n  \"echo\",\n  \"eclair\",\n  \"eclipse\",\n  \"ecologist\",\n  \"ecology\",\n  \"economic\",\n  \"economist\",\n  \"economy\",\n  \"ecosphere\",\n  \"ecosystem\",\n  \"edge\",\n  \"edginess\",\n  \"edging\",\n  \"edgy\",\n  \"edition\",\n  \"editor\",\n  \"educated\",\n  \"education\",\n  \"educator\",\n  \"eel\",\n  \"effective\",\n  \"effects\",\n  \"efficient\",\n  \"effort\",\n  \"eggbeater\",\n  \"egging\",\n  \"eggnog\",\n  \"eggplant\",\n  \"eggshell\",\n  \"egomaniac\",\n  \"egotism\",\n  \"egotistic\",\n  \"either\",\n  \"eject\",\n  \"elaborate\",\n  \"elastic\",\n  \"elated\",\n  \"elbow\",\n  \"eldercare\",\n  \"elderly\",\n  \"eldest\",\n  \"electable\",\n  \"election\",\n  \"elective\",\n  \"elephant\",\n  \"elevate\",\n  \"elevating\",\n  \"elevation\",\n  \"elevator\",\n  \"eleven\",\n  \"elf\",\n  \"eligible\",\n  \"eligibly\",\n  \"eliminate\",\n  \"elite\",\n  \"elitism\",\n  \"elixir\",\n  \"elk\",\n  \"ellipse\",\n  \"elliptic\",\n  \"elm\",\n  \"elongated\",\n  \"elope\",\n  \"eloquence\",\n  \"eloquent\",\n  \"elsewhere\",\n  \"elude\",\n  \"elusive\",\n  \"elves\",\n  \"email\",\n  \"embargo\",\n  \"embark\",\n  \"embassy\",\n  \"embattled\",\n  \"embellish\",\n  \"ember\",\n  \"embezzle\",\n  \"emblaze\",\n  \"emblem\",\n  \"embody\",\n  \"embolism\",\n  \"emboss\",\n  \"embroider\",\n  \"emcee\",\n  \"emerald\",\n  \"emergency\",\n  \"emission\",\n  \"emit\",\n  \"emote\",\n  \"emoticon\",\n  \"emotion\",\n  \"empathic\",\n  \"empathy\",\n  \"emperor\",\n  \"emphases\",\n  \"emphasis\",\n  \"emphasize\",\n  \"emphatic\",\n  \"empirical\",\n  \"employed\",\n  \"employee\",\n  \"employer\",\n  \"emporium\",\n  \"empower\",\n  \"emptier\",\n  \"emptiness\",\n  \"empty\",\n  \"emu\",\n  \"enable\",\n  \"enactment\",\n  \"enamel\",\n  \"enchanted\",\n  \"enchilada\",\n  \"encircle\",\n  \"enclose\",\n  \"enclosure\",\n  \"encode\",\n  \"encore\",\n  \"encounter\",\n  \"encourage\",\n  \"encroach\",\n  \"encrust\",\n  \"encrypt\",\n  \"endanger\",\n  \"endeared\",\n  \"endearing\",\n  \"ended\",\n  \"ending\",\n  \"endless\",\n  \"endnote\",\n  \"endocrine\",\n  \"endorphin\",\n  \"endorse\",\n  \"endowment\",\n  \"endpoint\",\n  \"endurable\",\n  \"endurance\",\n  \"enduring\",\n  \"energetic\",\n  \"energize\",\n  \"energy\",\n  \"enforced\",\n  \"enforcer\",\n  \"engaged\",\n  \"engaging\",\n  \"engine\",\n  \"engorge\",\n  \"engraved\",\n  \"engraver\",\n  \"engraving\",\n  \"engross\",\n  \"engulf\",\n  \"enhance\",\n  \"enigmatic\",\n  \"enjoyable\",\n  \"enjoyably\",\n  \"enjoyer\",\n  \"enjoying\",\n  \"enjoyment\",\n  \"enlarged\",\n  \"enlarging\",\n  \"enlighten\",\n  \"enlisted\",\n  \"enquirer\",\n  \"enrage\",\n  \"enrich\",\n  \"enroll\",\n  \"enslave\",\n  \"ensnare\",\n  \"ensure\",\n  \"entail\",\n  \"entangled\",\n  \"entering\",\n  \"entertain\",\n  \"enticing\",\n  \"entire\",\n  \"entitle\",\n  \"entity\",\n  \"entomb\",\n  \"entourage\",\n  \"entrap\",\n  \"entree\",\n  \"entrench\",\n  \"entrust\",\n  \"entryway\",\n  \"entwine\",\n  \"enunciate\",\n  \"envelope\",\n  \"enviable\",\n  \"enviably\",\n  \"envious\",\n  \"envision\",\n  \"envoy\",\n  \"envy\",\n  \"enzyme\",\n  \"epic\",\n  \"epidemic\",\n  \"epidermal\",\n  \"epidermis\",\n  \"epidural\",\n  \"epilepsy\",\n  \"epileptic\",\n  \"epilogue\",\n  \"epiphany\",\n  \"episode\",\n  \"equal\",\n  \"equate\",\n  \"equation\",\n  \"equator\",\n  \"equinox\",\n  \"equipment\",\n  \"equity\",\n  \"equivocal\",\n  \"eradicate\",\n  \"erasable\",\n  \"erased\",\n  \"eraser\",\n  \"erasure\",\n  \"ergonomic\",\n  \"errand\",\n  \"errant\",\n  \"erratic\",\n  \"error\",\n  \"erupt\",\n  \"escalate\",\n  \"escalator\",\n  \"escapable\",\n  \"escapade\",\n  \"escapist\",\n  \"escargot\",\n  \"eskimo\",\n  \"esophagus\",\n  \"espionage\",\n  \"espresso\",\n  \"esquire\",\n  \"essay\",\n  \"essence\",\n  \"essential\",\n  \"establish\",\n  \"estate\",\n  \"esteemed\",\n  \"estimate\",\n  \"estimator\",\n  \"estranged\",\n  \"estrogen\",\n  \"etching\",\n  \"eternal\",\n  \"eternity\",\n  \"ethanol\",\n  \"ether\",\n  \"ethically\",\n  \"ethics\",\n  \"euphemism\",\n  \"evacuate\",\n  \"evacuee\",\n  \"evade\",\n  \"evaluate\",\n  \"evaluator\",\n  \"evaporate\",\n  \"evasion\",\n  \"evasive\",\n  \"even\",\n  \"everglade\",\n  \"evergreen\",\n  \"everybody\",\n  \"everyday\",\n  \"everyone\",\n  \"evict\",\n  \"evidence\",\n  \"evident\",\n  \"evil\",\n  \"evoke\",\n  \"evolution\",\n  \"evolve\",\n  \"exact\",\n  \"exalted\",\n  \"example\",\n  \"excavate\",\n  \"excavator\",\n  \"exceeding\",\n  \"exception\",\n  \"excess\",\n  \"exchange\",\n  \"excitable\",\n  \"exciting\",\n  \"exclaim\",\n  \"exclude\",\n  \"excluding\",\n  \"exclusion\",\n  \"exclusive\",\n  \"excretion\",\n  \"excretory\",\n  \"excursion\",\n  \"excusable\",\n  \"excusably\",\n  \"excuse\",\n  \"exemplary\",\n  \"exemplify\",\n  \"exemption\",\n  \"exerciser\",\n  \"exert\",\n  \"exes\",\n  \"exfoliate\",\n  \"exhale\",\n  \"exhaust\",\n  \"exhume\",\n  \"exile\",\n  \"existing\",\n  \"exit\",\n  \"exodus\",\n  \"exonerate\",\n  \"exorcism\",\n  \"exorcist\",\n  \"expand\",\n  \"expanse\",\n  \"expansion\",\n  \"expansive\",\n  \"expectant\",\n  \"expedited\",\n  \"expediter\",\n  \"expel\",\n  \"expend\",\n  \"expenses\",\n  \"expensive\",\n  \"expert\",\n  \"expire\",\n  \"expiring\",\n  \"explain\",\n  \"expletive\",\n  \"explicit\",\n  \"explode\",\n  \"exploit\",\n  \"explore\",\n  \"exploring\",\n  \"exponent\",\n  \"exporter\",\n  \"exposable\",\n  \"expose\",\n  \"exposure\",\n  \"express\",\n  \"expulsion\",\n  \"exquisite\",\n  \"extended\",\n  \"extending\",\n  \"extent\",\n  \"extenuate\",\n  \"exterior\",\n  \"external\",\n  \"extinct\",\n  \"extortion\",\n  \"extradite\",\n  \"extras\",\n  \"extrovert\",\n  \"extrude\",\n  \"extruding\",\n  \"exuberant\",\n  \"fable\",\n  \"fabric\",\n  \"fabulous\",\n  \"facebook\",\n  \"facecloth\",\n  \"facedown\",\n  \"faceless\",\n  \"facelift\",\n  \"faceplate\",\n  \"faceted\",\n  \"facial\",\n  \"facility\",\n  \"facing\",\n  \"facsimile\",\n  \"faction\",\n  \"factoid\",\n  \"factor\",\n  \"factsheet\",\n  \"factual\",\n  \"faculty\",\n  \"fade\",\n  \"fading\",\n  \"failing\",\n  \"falcon\",\n  \"fall\",\n  \"false\",\n  \"falsify\",\n  \"fame\",\n  \"familiar\",\n  \"family\",\n  \"famine\",\n  \"famished\",\n  \"fanatic\",\n  \"fancied\",\n  \"fanciness\",\n  \"fancy\",\n  \"fanfare\",\n  \"fang\",\n  \"fanning\",\n  \"fantasize\",\n  \"fantastic\",\n  \"fantasy\",\n  \"fascism\",\n  \"fastball\",\n  \"faster\",\n  \"fasting\",\n  \"fastness\",\n  \"faucet\",\n  \"favorable\",\n  \"favorably\",\n  \"favored\",\n  \"favoring\",\n  \"favorite\",\n  \"fax\",\n  \"feast\",\n  \"federal\",\n  \"fedora\",\n  \"feeble\",\n  \"feed\",\n  \"feel\",\n  \"feisty\",\n  \"feline\",\n  \"felt-tip\",\n  \"feminine\",\n  \"feminism\",\n  \"feminist\",\n  \"feminize\",\n  \"femur\",\n  \"fence\",\n  \"fencing\",\n  \"fender\",\n  \"ferment\",\n  \"fernlike\",\n  \"ferocious\",\n  \"ferocity\",\n  \"ferret\",\n  \"ferris\",\n  \"ferry\",\n  \"fervor\",\n  \"fester\",\n  \"festival\",\n  \"festive\",\n  \"festivity\",\n  \"fetal\",\n  \"fetch\",\n  \"fever\",\n  \"fiber\",\n  \"fiction\",\n  \"fiddle\",\n  \"fiddling\",\n  \"fidelity\",\n  \"fidgeting\",\n  \"fidgety\",\n  \"fifteen\",\n  \"fifth\",\n  \"fiftieth\",\n  \"fifty\",\n  \"figment\",\n  \"figure\",\n  \"figurine\",\n  \"filing\",\n  \"filled\",\n  \"filler\",\n  \"filling\",\n  \"film\",\n  \"filter\",\n  \"filth\",\n  \"filtrate\",\n  \"finale\",\n  \"finalist\",\n  \"finalize\",\n  \"finally\",\n  \"finance\",\n  \"financial\",\n  \"finch\",\n  \"fineness\",\n  \"finer\",\n  \"finicky\",\n  \"finished\",\n  \"finisher\",\n  \"finishing\",\n  \"finite\",\n  \"finless\",\n  \"finlike\",\n  \"fiscally\",\n  \"fit\",\n  \"five\",\n  \"flaccid\",\n  \"flagman\",\n  \"flagpole\",\n  \"flagship\",\n  \"flagstick\",\n  \"flagstone\",\n  \"flail\",\n  \"flakily\",\n  \"flaky\",\n  \"flame\",\n  \"flammable\",\n  \"flanked\",\n  \"flanking\",\n  \"flannels\",\n  \"flap\",\n  \"flaring\",\n  \"flashback\",\n  \"flashbulb\",\n  \"flashcard\",\n  \"flashily\",\n  \"flashing\",\n  \"flashy\",\n  \"flask\",\n  \"flatbed\",\n  \"flatfoot\",\n  \"flatly\",\n  \"flatness\",\n  \"flatten\",\n  \"flattered\",\n  \"flatterer\",\n  \"flattery\",\n  \"flattop\",\n  \"flatware\",\n  \"flatworm\",\n  \"flavored\",\n  \"flavorful\",\n  \"flavoring\",\n  \"flaxseed\",\n  \"fled\",\n  \"fleshed\",\n  \"fleshy\",\n  \"flick\",\n  \"flier\",\n  \"flight\",\n  \"flinch\",\n  \"fling\",\n  \"flint\",\n  \"flip\",\n  \"flirt\",\n  \"float\",\n  \"flock\",\n  \"flogging\",\n  \"flop\",\n  \"floral\",\n  \"florist\",\n  \"floss\",\n  \"flounder\",\n  \"flyable\",\n  \"flyaway\",\n  \"flyer\",\n  \"flying\",\n  \"flyover\",\n  \"flypaper\",\n  \"foam\",\n  \"foe\",\n  \"fog\",\n  \"foil\",\n  \"folic\",\n  \"folk\",\n  \"follicle\",\n  \"follow\",\n  \"fondling\",\n  \"fondly\",\n  \"fondness\",\n  \"fondue\",\n  \"font\",\n  \"food\",\n  \"fool\",\n  \"footage\",\n  \"football\",\n  \"footbath\",\n  \"footboard\",\n  \"footer\",\n  \"footgear\",\n  \"foothill\",\n  \"foothold\",\n  \"footing\",\n  \"footless\",\n  \"footman\",\n  \"footnote\",\n  \"footpad\",\n  \"footpath\",\n  \"footprint\",\n  \"footrest\",\n  \"footsie\",\n  \"footsore\",\n  \"footwear\",\n  \"footwork\",\n  \"fossil\",\n  \"foster\",\n  \"founder\",\n  \"founding\",\n  \"fountain\",\n  \"fox\",\n  \"foyer\",\n  \"fraction\",\n  \"fracture\",\n  \"fragile\",\n  \"fragility\",\n  \"fragment\",\n  \"fragrance\",\n  \"fragrant\",\n  \"frail\",\n  \"frame\",\n  \"framing\",\n  \"frantic\",\n  \"fraternal\",\n  \"frayed\",\n  \"fraying\",\n  \"frays\",\n  \"freckled\",\n  \"freckles\",\n  \"freebase\",\n  \"freebee\",\n  \"freebie\",\n  \"freedom\",\n  \"freefall\",\n  \"freehand\",\n  \"freeing\",\n  \"freeload\",\n  \"freely\",\n  \"freemason\",\n  \"freeness\",\n  \"freestyle\",\n  \"freeware\",\n  \"freeway\",\n  \"freewill\",\n  \"freezable\",\n  \"freezing\",\n  \"freight\",\n  \"french\",\n  \"frenzied\",\n  \"frenzy\",\n  \"frequency\",\n  \"frequent\",\n  \"fresh\",\n  \"fretful\",\n  \"fretted\",\n  \"friction\",\n  \"friday\",\n  \"fridge\",\n  \"fried\",\n  \"friend\",\n  \"frighten\",\n  \"frightful\",\n  \"frigidity\",\n  \"frigidly\",\n  \"frill\",\n  \"fringe\",\n  \"frisbee\",\n  \"frisk\",\n  \"fritter\",\n  \"frivolous\",\n  \"frolic\",\n  \"from\",\n  \"front\",\n  \"frostbite\",\n  \"frosted\",\n  \"frostily\",\n  \"frosting\",\n  \"frostlike\",\n  \"frosty\",\n  \"froth\",\n  \"frown\",\n  \"frozen\",\n  \"fructose\",\n  \"frugality\",\n  \"frugally\",\n  \"fruit\",\n  \"frustrate\",\n  \"frying\",\n  \"gab\",\n  \"gaffe\",\n  \"gag\",\n  \"gainfully\",\n  \"gaining\",\n  \"gains\",\n  \"gala\",\n  \"gallantly\",\n  \"galleria\",\n  \"gallery\",\n  \"galley\",\n  \"gallon\",\n  \"gallows\",\n  \"gallstone\",\n  \"galore\",\n  \"galvanize\",\n  \"gambling\",\n  \"game\",\n  \"gaming\",\n  \"gamma\",\n  \"gander\",\n  \"gangly\",\n  \"gangrene\",\n  \"gangway\",\n  \"gap\",\n  \"garage\",\n  \"garbage\",\n  \"garden\",\n  \"gargle\",\n  \"garland\",\n  \"garlic\",\n  \"garment\",\n  \"garnet\",\n  \"garnish\",\n  \"garter\",\n  \"gas\",\n  \"gatherer\",\n  \"gathering\",\n  \"gating\",\n  \"gauging\",\n  \"gauntlet\",\n  \"gauze\",\n  \"gave\",\n  \"gawk\",\n  \"gazing\",\n  \"gear\",\n  \"gecko\",\n  \"geek\",\n  \"geiger\",\n  \"gem\",\n  \"gender\",\n  \"generic\",\n  \"generous\",\n  \"genetics\",\n  \"genre\",\n  \"gentile\",\n  \"gentleman\",\n  \"gently\",\n  \"gents\",\n  \"geography\",\n  \"geologic\",\n  \"geologist\",\n  \"geology\",\n  \"geometric\",\n  \"geometry\",\n  \"geranium\",\n  \"gerbil\",\n  \"geriatric\",\n  \"germicide\",\n  \"germinate\",\n  \"germless\",\n  \"germproof\",\n  \"gestate\",\n  \"gestation\",\n  \"gesture\",\n  \"getaway\",\n  \"getting\",\n  \"getup\",\n  \"giant\",\n  \"gibberish\",\n  \"giblet\",\n  \"giddily\",\n  \"giddiness\",\n  \"giddy\",\n  \"gift\",\n  \"gigabyte\",\n  \"gigahertz\",\n  \"gigantic\",\n  \"giggle\",\n  \"giggling\",\n  \"giggly\",\n  \"gigolo\",\n  \"gilled\",\n  \"gills\",\n  \"gimmick\",\n  \"girdle\",\n  \"giveaway\",\n  \"given\",\n  \"giver\",\n  \"giving\",\n  \"gizmo\",\n  \"gizzard\",\n  \"glacial\",\n  \"glacier\",\n  \"glade\",\n  \"gladiator\",\n  \"gladly\",\n  \"glamorous\",\n  \"glamour\",\n  \"glance\",\n  \"glancing\",\n  \"glandular\",\n  \"glare\",\n  \"glaring\",\n  \"glass\",\n  \"glaucoma\",\n  \"glazing\",\n  \"gleaming\",\n  \"gleeful\",\n  \"glider\",\n  \"gliding\",\n  \"glimmer\",\n  \"glimpse\",\n  \"glisten\",\n  \"glitch\",\n  \"glitter\",\n  \"glitzy\",\n  \"gloater\",\n  \"gloating\",\n  \"gloomily\",\n  \"gloomy\",\n  \"glorified\",\n  \"glorifier\",\n  \"glorify\",\n  \"glorious\",\n  \"glory\",\n  \"gloss\",\n  \"glove\",\n  \"glowing\",\n  \"glowworm\",\n  \"glucose\",\n  \"glue\",\n  \"gluten\",\n  \"glutinous\",\n  \"glutton\",\n  \"gnarly\",\n  \"gnat\",\n  \"goal\",\n  \"goatskin\",\n  \"goes\",\n  \"goggles\",\n  \"going\",\n  \"goldfish\",\n  \"goldmine\",\n  \"goldsmith\",\n  \"golf\",\n  \"goliath\",\n  \"gonad\",\n  \"gondola\",\n  \"gone\",\n  \"gong\",\n  \"good\",\n  \"gooey\",\n  \"goofball\",\n  \"goofiness\",\n  \"goofy\",\n  \"google\",\n  \"goon\",\n  \"gopher\",\n  \"gore\",\n  \"gorged\",\n  \"gorgeous\",\n  \"gory\",\n  \"gosling\",\n  \"gossip\",\n  \"gothic\",\n  \"gotten\",\n  \"gout\",\n  \"gown\",\n  \"grab\",\n  \"graceful\",\n  \"graceless\",\n  \"gracious\",\n  \"gradation\",\n  \"graded\",\n  \"grader\",\n  \"gradient\",\n  \"grading\",\n  \"gradually\",\n  \"graduate\",\n  \"graffiti\",\n  \"grafted\",\n  \"grafting\",\n  \"grain\",\n  \"granddad\",\n  \"grandkid\",\n  \"grandly\",\n  \"grandma\",\n  \"grandpa\",\n  \"grandson\",\n  \"granite\",\n  \"granny\",\n  \"granola\",\n  \"grant\",\n  \"granular\",\n  \"grape\",\n  \"graph\",\n  \"grapple\",\n  \"grappling\",\n  \"grasp\",\n  \"grass\",\n  \"gratified\",\n  \"gratify\",\n  \"grating\",\n  \"gratitude\",\n  \"gratuity\",\n  \"gravel\",\n  \"graveness\",\n  \"graves\",\n  \"graveyard\",\n  \"gravitate\",\n  \"gravity\",\n  \"gravy\",\n  \"gray\",\n  \"grazing\",\n  \"greasily\",\n  \"greedily\",\n  \"greedless\",\n  \"greedy\",\n  \"green\",\n  \"greeter\",\n  \"greeting\",\n  \"grew\",\n  \"greyhound\",\n  \"grid\",\n  \"grief\",\n  \"grievance\",\n  \"grieving\",\n  \"grievous\",\n  \"grill\",\n  \"grimace\",\n  \"grimacing\",\n  \"grime\",\n  \"griminess\",\n  \"grimy\",\n  \"grinch\",\n  \"grinning\",\n  \"grip\",\n  \"gristle\",\n  \"grit\",\n  \"groggily\",\n  \"groggy\",\n  \"groin\",\n  \"groom\",\n  \"groove\",\n  \"grooving\",\n  \"groovy\",\n  \"grope\",\n  \"ground\",\n  \"grouped\",\n  \"grout\",\n  \"grove\",\n  \"grower\",\n  \"growing\",\n  \"growl\",\n  \"grub\",\n  \"grudge\",\n  \"grudging\",\n  \"grueling\",\n  \"gruffly\",\n  \"grumble\",\n  \"grumbling\",\n  \"grumbly\",\n  \"grumpily\",\n  \"grunge\",\n  \"grunt\",\n  \"guacamole\",\n  \"guidable\",\n  \"guidance\",\n  \"guide\",\n  \"guiding\",\n  \"guileless\",\n  \"guise\",\n  \"gulf\",\n  \"gullible\",\n  \"gully\",\n  \"gulp\",\n  \"gumball\",\n  \"gumdrop\",\n  \"gumminess\",\n  \"gumming\",\n  \"gummy\",\n  \"gurgle\",\n  \"gurgling\",\n  \"guru\",\n  \"gush\",\n  \"gusto\",\n  \"gusty\",\n  \"gutless\",\n  \"guts\",\n  \"gutter\",\n  \"guy\",\n  \"guzzler\",\n  \"gyration\",\n  \"habitable\",\n  \"habitant\",\n  \"habitat\",\n  \"habitual\",\n  \"hacked\",\n  \"hacker\",\n  \"hacking\",\n  \"hacksaw\",\n  \"had\",\n  \"haggler\",\n  \"haiku\",\n  \"half\",\n  \"halogen\",\n  \"halt\",\n  \"halved\",\n  \"halves\",\n  \"hamburger\",\n  \"hamlet\",\n  \"hammock\",\n  \"hamper\",\n  \"hamster\",\n  \"hamstring\",\n  \"handbag\",\n  \"handball\",\n  \"handbook\",\n  \"handbrake\",\n  \"handcart\",\n  \"handclap\",\n  \"handclasp\",\n  \"handcraft\",\n  \"handcuff\",\n  \"handed\",\n  \"handful\",\n  \"handgrip\",\n  \"handgun\",\n  \"handheld\",\n  \"handiness\",\n  \"handiwork\",\n  \"handlebar\",\n  \"handled\",\n  \"handler\",\n  \"handling\",\n  \"handmade\",\n  \"handoff\",\n  \"handpick\",\n  \"handprint\",\n  \"handrail\",\n  \"handsaw\",\n  \"handset\",\n  \"handsfree\",\n  \"handshake\",\n  \"handstand\",\n  \"handwash\",\n  \"handwork\",\n  \"handwoven\",\n  \"handwrite\",\n  \"handyman\",\n  \"hangnail\",\n  \"hangout\",\n  \"hangover\",\n  \"hangup\",\n  \"hankering\",\n  \"hankie\",\n  \"hanky\",\n  \"haphazard\",\n  \"happening\",\n  \"happier\",\n  \"happiest\",\n  \"happily\",\n  \"happiness\",\n  \"happy\",\n  \"harbor\",\n  \"hardcopy\",\n  \"hardcore\",\n  \"hardcover\",\n  \"harddisk\",\n  \"hardened\",\n  \"hardener\",\n  \"hardening\",\n  \"hardhat\",\n  \"hardhead\",\n  \"hardiness\",\n  \"hardly\",\n  \"hardness\",\n  \"hardship\",\n  \"hardware\",\n  \"hardwired\",\n  \"hardwood\",\n  \"hardy\",\n  \"harmful\",\n  \"harmless\",\n  \"harmonica\",\n  \"harmonics\",\n  \"harmonize\",\n  \"harmony\",\n  \"harness\",\n  \"harpist\",\n  \"harsh\",\n  \"harvest\",\n  \"hash\",\n  \"hassle\",\n  \"haste\",\n  \"hastily\",\n  \"hastiness\",\n  \"hasty\",\n  \"hatbox\",\n  \"hatchback\",\n  \"hatchery\",\n  \"hatchet\",\n  \"hatching\",\n  \"hatchling\",\n  \"hate\",\n  \"hatless\",\n  \"hatred\",\n  \"haunt\",\n  \"haven\",\n  \"hazard\",\n  \"hazelnut\",\n  \"hazily\",\n  \"haziness\",\n  \"hazing\",\n  \"hazy\",\n  \"headache\",\n  \"headband\",\n  \"headboard\",\n  \"headcount\",\n  \"headdress\",\n  \"headed\",\n  \"header\",\n  \"headfirst\",\n  \"headgear\",\n  \"heading\",\n  \"headlamp\",\n  \"headless\",\n  \"headlock\",\n  \"headphone\",\n  \"headpiece\",\n  \"headrest\",\n  \"headroom\",\n  \"headscarf\",\n  \"headset\",\n  \"headsman\",\n  \"headstand\",\n  \"headstone\",\n  \"headway\",\n  \"headwear\",\n  \"heap\",\n  \"heat\",\n  \"heave\",\n  \"heavily\",\n  \"heaviness\",\n  \"heaving\",\n  \"hedge\",\n  \"hedging\",\n  \"heftiness\",\n  \"hefty\",\n  \"helium\",\n  \"helmet\",\n  \"helper\",\n  \"helpful\",\n  \"helping\",\n  \"helpless\",\n  \"helpline\",\n  \"hemlock\",\n  \"hemstitch\",\n  \"hence\",\n  \"henchman\",\n  \"henna\",\n  \"herald\",\n  \"herbal\",\n  \"herbicide\",\n  \"herbs\",\n  \"heritage\",\n  \"hermit\",\n  \"heroics\",\n  \"heroism\",\n  \"herring\",\n  \"herself\",\n  \"hertz\",\n  \"hesitancy\",\n  \"hesitant\",\n  \"hesitate\",\n  \"hexagon\",\n  \"hexagram\",\n  \"hubcap\",\n  \"huddle\",\n  \"huddling\",\n  \"huff\",\n  \"hug\",\n  \"hula\",\n  \"hulk\",\n  \"hull\",\n  \"human\",\n  \"humble\",\n  \"humbling\",\n  \"humbly\",\n  \"humid\",\n  \"humiliate\",\n  \"humility\",\n  \"humming\",\n  \"hummus\",\n  \"humongous\",\n  \"humorist\",\n  \"humorless\",\n  \"humorous\",\n  \"humpback\",\n  \"humped\",\n  \"humvee\",\n  \"hunchback\",\n  \"hundredth\",\n  \"hunger\",\n  \"hungrily\",\n  \"hungry\",\n  \"hunk\",\n  \"hunter\",\n  \"hunting\",\n  \"huntress\",\n  \"huntsman\",\n  \"hurdle\",\n  \"hurled\",\n  \"hurler\",\n  \"hurling\",\n  \"hurray\",\n  \"hurricane\",\n  \"hurried\",\n  \"hurry\",\n  \"hurt\",\n  \"husband\",\n  \"hush\",\n  \"husked\",\n  \"huskiness\",\n  \"hut\",\n  \"hybrid\",\n  \"hydrant\",\n  \"hydrated\",\n  \"hydration\",\n  \"hydrogen\",\n  \"hydroxide\",\n  \"hyperlink\",\n  \"hypertext\",\n  \"hyphen\",\n  \"hypnoses\",\n  \"hypnosis\",\n  \"hypnotic\",\n  \"hypnotism\",\n  \"hypnotist\",\n  \"hypnotize\",\n  \"hypocrisy\",\n  \"hypocrite\",\n  \"ibuprofen\",\n  \"ice\",\n  \"iciness\",\n  \"icing\",\n  \"icky\",\n  \"icon\",\n  \"icy\",\n  \"idealism\",\n  \"idealist\",\n  \"idealize\",\n  \"ideally\",\n  \"idealness\",\n  \"identical\",\n  \"identify\",\n  \"identity\",\n  \"ideology\",\n  \"idiocy\",\n  \"idiom\",\n  \"idly\",\n  \"igloo\",\n  \"ignition\",\n  \"ignore\",\n  \"iguana\",\n  \"illicitly\",\n  \"illusion\",\n  \"illusive\",\n  \"image\",\n  \"imaginary\",\n  \"imagines\",\n  \"imaging\",\n  \"imbecile\",\n  \"imitate\",\n  \"imitation\",\n  \"immature\",\n  \"immerse\",\n  \"immersion\",\n  \"imminent\",\n  \"immobile\",\n  \"immodest\",\n  \"immorally\",\n  \"immortal\",\n  \"immovable\",\n  \"immovably\",\n  \"immunity\",\n  \"immunize\",\n  \"impaired\",\n  \"impale\",\n  \"impart\",\n  \"impatient\",\n  \"impeach\",\n  \"impeding\",\n  \"impending\",\n  \"imperfect\",\n  \"imperial\",\n  \"impish\",\n  \"implant\",\n  \"implement\",\n  \"implicate\",\n  \"implicit\",\n  \"implode\",\n  \"implosion\",\n  \"implosive\",\n  \"imply\",\n  \"impolite\",\n  \"important\",\n  \"importer\",\n  \"impose\",\n  \"imposing\",\n  \"impotence\",\n  \"impotency\",\n  \"impotent\",\n  \"impound\",\n  \"imprecise\",\n  \"imprint\",\n  \"imprison\",\n  \"impromptu\",\n  \"improper\",\n  \"improve\",\n  \"improving\",\n  \"improvise\",\n  \"imprudent\",\n  \"impulse\",\n  \"impulsive\",\n  \"impure\",\n  \"impurity\",\n  \"iodine\",\n  \"iodize\",\n  \"ion\",\n  \"ipad\",\n  \"iphone\",\n  \"ipod\",\n  \"irate\",\n  \"irk\",\n  \"iron\",\n  \"irregular\",\n  \"irrigate\",\n  \"irritable\",\n  \"irritably\",\n  \"irritant\",\n  \"irritate\",\n  \"islamic\",\n  \"islamist\",\n  \"isolated\",\n  \"isolating\",\n  \"isolation\",\n  \"isotope\",\n  \"issue\",\n  \"issuing\",\n  \"italicize\",\n  \"italics\",\n  \"item\",\n  \"itinerary\",\n  \"itunes\",\n  \"ivory\",\n  \"ivy\",\n  \"jab\",\n  \"jackal\",\n  \"jacket\",\n  \"jackknife\",\n  \"jackpot\",\n  \"jailbird\",\n  \"jailbreak\",\n  \"jailer\",\n  \"jailhouse\",\n  \"jalapeno\",\n  \"jam\",\n  \"janitor\",\n  \"january\",\n  \"jargon\",\n  \"jarring\",\n  \"jasmine\",\n  \"jaundice\",\n  \"jaunt\",\n  \"java\",\n  \"jawed\",\n  \"jawless\",\n  \"jawline\",\n  \"jaws\",\n  \"jaybird\",\n  \"jaywalker\",\n  \"jazz\",\n  \"jeep\",\n  \"jeeringly\",\n  \"jellied\",\n  \"jelly\",\n  \"jersey\",\n  \"jester\",\n  \"jet\",\n  \"jiffy\",\n  \"jigsaw\",\n  \"jimmy\",\n  \"jingle\",\n  \"jingling\",\n  \"jinx\",\n  \"jitters\",\n  \"jittery\",\n  \"job\",\n  \"jockey\",\n  \"jockstrap\",\n  \"jogger\",\n  \"jogging\",\n  \"john\",\n  \"joining\",\n  \"jokester\",\n  \"jokingly\",\n  \"jolliness\",\n  \"jolly\",\n  \"jolt\",\n  \"jot\",\n  \"jovial\",\n  \"joyfully\",\n  \"joylessly\",\n  \"joyous\",\n  \"joyride\",\n  \"joystick\",\n  \"jubilance\",\n  \"jubilant\",\n  \"judge\",\n  \"judgingly\",\n  \"judicial\",\n  \"judiciary\",\n  \"judo\",\n  \"juggle\",\n  \"juggling\",\n  \"jugular\",\n  \"juice\",\n  \"juiciness\",\n  \"juicy\",\n  \"jujitsu\",\n  \"jukebox\",\n  \"july\",\n  \"jumble\",\n  \"jumbo\",\n  \"jump\",\n  \"junction\",\n  \"juncture\",\n  \"june\",\n  \"junior\",\n  \"juniper\",\n  \"junkie\",\n  \"junkman\",\n  \"junkyard\",\n  \"jurist\",\n  \"juror\",\n  \"jury\",\n  \"justice\",\n  \"justifier\",\n  \"justify\",\n  \"justly\",\n  \"justness\",\n  \"juvenile\",\n  \"kabob\",\n  \"kangaroo\",\n  \"karaoke\",\n  \"karate\",\n  \"karma\",\n  \"kebab\",\n  \"keenly\",\n  \"keenness\",\n  \"keep\",\n  \"keg\",\n  \"kelp\",\n  \"kennel\",\n  \"kept\",\n  \"kerchief\",\n  \"kerosene\",\n  \"kettle\",\n  \"kick\",\n  \"kiln\",\n  \"kilobyte\",\n  \"kilogram\",\n  \"kilometer\",\n  \"kilowatt\",\n  \"kilt\",\n  \"kimono\",\n  \"kindle\",\n  \"kindling\",\n  \"kindly\",\n  \"kindness\",\n  \"kindred\",\n  \"kinetic\",\n  \"kinfolk\",\n  \"king\",\n  \"kinship\",\n  \"kinsman\",\n  \"kinswoman\",\n  \"kissable\",\n  \"kisser\",\n  \"kissing\",\n  \"kitchen\",\n  \"kite\",\n  \"kitten\",\n  \"kitty\",\n  \"kiwi\",\n  \"kleenex\",\n  \"knapsack\",\n  \"knee\",\n  \"knelt\",\n  \"knickers\",\n  \"knoll\",\n  \"koala\",\n  \"kooky\",\n  \"kosher\",\n  \"krypton\",\n  \"kudos\",\n  \"kung\",\n  \"labored\",\n  \"laborer\",\n  \"laboring\",\n  \"laborious\",\n  \"labrador\",\n  \"ladder\",\n  \"ladies\",\n  \"ladle\",\n  \"ladybug\",\n  \"ladylike\",\n  \"lagged\",\n  \"lagging\",\n  \"lagoon\",\n  \"lair\",\n  \"lake\",\n  \"lance\",\n  \"landed\",\n  \"landfall\",\n  \"landfill\",\n  \"landing\",\n  \"landlady\",\n  \"landless\",\n  \"landline\",\n  \"landlord\",\n  \"landmark\",\n  \"landmass\",\n  \"landmine\",\n  \"landowner\",\n  \"landscape\",\n  \"landside\",\n  \"landslide\",\n  \"language\",\n  \"lankiness\",\n  \"lanky\",\n  \"lantern\",\n  \"lapdog\",\n  \"lapel\",\n  \"lapped\",\n  \"lapping\",\n  \"laptop\",\n  \"lard\",\n  \"large\",\n  \"lark\",\n  \"lash\",\n  \"lasso\",\n  \"last\",\n  \"latch\",\n  \"late\",\n  \"lather\",\n  \"latitude\",\n  \"latrine\",\n  \"latter\",\n  \"latticed\",\n  \"launch\",\n  \"launder\",\n  \"laundry\",\n  \"laurel\",\n  \"lavender\",\n  \"lavish\",\n  \"laxative\",\n  \"lazily\",\n  \"laziness\",\n  \"lazy\",\n  \"lecturer\",\n  \"left\",\n  \"legacy\",\n  \"legal\",\n  \"legend\",\n  \"legged\",\n  \"leggings\",\n  \"legible\",\n  \"legibly\",\n  \"legislate\",\n  \"lego\",\n  \"legroom\",\n  \"legume\",\n  \"legwarmer\",\n  \"legwork\",\n  \"lemon\",\n  \"lend\",\n  \"length\",\n  \"lens\",\n  \"lent\",\n  \"leotard\",\n  \"lesser\",\n  \"letdown\",\n  \"lethargic\",\n  \"lethargy\",\n  \"letter\",\n  \"lettuce\",\n  \"level\",\n  \"leverage\",\n  \"levers\",\n  \"levitate\",\n  \"levitator\",\n  \"liability\",\n  \"liable\",\n  \"liberty\",\n  \"librarian\",\n  \"library\",\n  \"licking\",\n  \"licorice\",\n  \"lid\",\n  \"life\",\n  \"lifter\",\n  \"lifting\",\n  \"liftoff\",\n  \"ligament\",\n  \"likely\",\n  \"likeness\",\n  \"likewise\",\n  \"liking\",\n  \"lilac\",\n  \"lilly\",\n  \"lily\",\n  \"limb\",\n  \"limeade\",\n  \"limelight\",\n  \"limes\",\n  \"limit\",\n  \"limping\",\n  \"limpness\",\n  \"line\",\n  \"lingo\",\n  \"linguini\",\n  \"linguist\",\n  \"lining\",\n  \"linked\",\n  \"linoleum\",\n  \"linseed\",\n  \"lint\",\n  \"lion\",\n  \"lip\",\n  \"liquefy\",\n  \"liqueur\",\n  \"liquid\",\n  \"lisp\",\n  \"list\",\n  \"litigate\",\n  \"litigator\",\n  \"litmus\",\n  \"litter\",\n  \"little\",\n  \"livable\",\n  \"lived\",\n  \"lively\",\n  \"liver\",\n  \"livestock\",\n  \"lividly\",\n  \"living\",\n  \"lizard\",\n  \"lubricant\",\n  \"lubricate\",\n  \"lucid\",\n  \"luckily\",\n  \"luckiness\",\n  \"luckless\",\n  \"lucrative\",\n  \"ludicrous\",\n  \"lugged\",\n  \"lukewarm\",\n  \"lullaby\",\n  \"lumber\",\n  \"luminance\",\n  \"luminous\",\n  \"lumpiness\",\n  \"lumping\",\n  \"lumpish\",\n  \"lunacy\",\n  \"lunar\",\n  \"lunchbox\",\n  \"luncheon\",\n  \"lunchroom\",\n  \"lunchtime\",\n  \"lung\",\n  \"lurch\",\n  \"lure\",\n  \"luridness\",\n  \"lurk\",\n  \"lushly\",\n  \"lushness\",\n  \"luster\",\n  \"lustfully\",\n  \"lustily\",\n  \"lustiness\",\n  \"lustrous\",\n  \"lusty\",\n  \"luxurious\",\n  \"luxury\",\n  \"lying\",\n  \"lyrically\",\n  \"lyricism\",\n  \"lyricist\",\n  \"lyrics\",\n  \"macarena\",\n  \"macaroni\",\n  \"macaw\",\n  \"mace\",\n  \"machine\",\n  \"machinist\",\n  \"magazine\",\n  \"magenta\",\n  \"maggot\",\n  \"magical\",\n  \"magician\",\n  \"magma\",\n  \"magnesium\",\n  \"magnetic\",\n  \"magnetism\",\n  \"magnetize\",\n  \"magnifier\",\n  \"magnify\",\n  \"magnitude\",\n  \"magnolia\",\n  \"mahogany\",\n  \"maimed\",\n  \"majestic\",\n  \"majesty\",\n  \"majorette\",\n  \"majority\",\n  \"makeover\",\n  \"maker\",\n  \"makeshift\",\n  \"making\",\n  \"malformed\",\n  \"malt\",\n  \"mama\",\n  \"mammal\",\n  \"mammary\",\n  \"mammogram\",\n  \"manager\",\n  \"managing\",\n  \"manatee\",\n  \"mandarin\",\n  \"mandate\",\n  \"mandatory\",\n  \"mandolin\",\n  \"manger\",\n  \"mangle\",\n  \"mango\",\n  \"mangy\",\n  \"manhandle\",\n  \"manhole\",\n  \"manhood\",\n  \"manhunt\",\n  \"manicotti\",\n  \"manicure\",\n  \"manifesto\",\n  \"manila\",\n  \"mankind\",\n  \"manlike\",\n  \"manliness\",\n  \"manly\",\n  \"manmade\",\n  \"manned\",\n  \"mannish\",\n  \"manor\",\n  \"manpower\",\n  \"mantis\",\n  \"mantra\",\n  \"manual\",\n  \"many\",\n  \"map\",\n  \"marathon\",\n  \"marauding\",\n  \"marbled\",\n  \"marbles\",\n  \"marbling\",\n  \"march\",\n  \"mardi\",\n  \"margarine\",\n  \"margarita\",\n  \"margin\",\n  \"marigold\",\n  \"marina\",\n  \"marine\",\n  \"marital\",\n  \"maritime\",\n  \"marlin\",\n  \"marmalade\",\n  \"maroon\",\n  \"married\",\n  \"marrow\",\n  \"marry\",\n  \"marshland\",\n  \"marshy\",\n  \"marsupial\",\n  \"marvelous\",\n  \"marxism\",\n  \"mascot\",\n  \"masculine\",\n  \"mashed\",\n  \"mashing\",\n  \"massager\",\n  \"masses\",\n  \"massive\",\n  \"mastiff\",\n  \"matador\",\n  \"matchbook\",\n  \"matchbox\",\n  \"matcher\",\n  \"matching\",\n  \"matchless\",\n  \"material\",\n  \"maternal\",\n  \"maternity\",\n  \"math\",\n  \"mating\",\n  \"matriarch\",\n  \"matrimony\",\n  \"matrix\",\n  \"matron\",\n  \"matted\",\n  \"matter\",\n  \"maturely\",\n  \"maturing\",\n  \"maturity\",\n  \"mauve\",\n  \"maverick\",\n  \"maximize\",\n  \"maximum\",\n  \"maybe\",\n  \"mayday\",\n  \"mayflower\",\n  \"moaner\",\n  \"moaning\",\n  \"mobile\",\n  \"mobility\",\n  \"mobilize\",\n  \"mobster\",\n  \"mocha\",\n  \"mocker\",\n  \"mockup\",\n  \"modified\",\n  \"modify\",\n  \"modular\",\n  \"modulator\",\n  \"module\",\n  \"moisten\",\n  \"moistness\",\n  \"moisture\",\n  \"molar\",\n  \"molasses\",\n  \"mold\",\n  \"molecular\",\n  \"molecule\",\n  \"molehill\",\n  \"mollusk\",\n  \"mom\",\n  \"monastery\",\n  \"monday\",\n  \"monetary\",\n  \"monetize\",\n  \"moneybags\",\n  \"moneyless\",\n  \"moneywise\",\n  \"mongoose\",\n  \"mongrel\",\n  \"monitor\",\n  \"monkhood\",\n  \"monogamy\",\n  \"monogram\",\n  \"monologue\",\n  \"monopoly\",\n  \"monorail\",\n  \"monotone\",\n  \"monotype\",\n  \"monoxide\",\n  \"monsieur\",\n  \"monsoon\",\n  \"monstrous\",\n  \"monthly\",\n  \"monument\",\n  \"moocher\",\n  \"moodiness\",\n  \"moody\",\n  \"mooing\",\n  \"moonbeam\",\n  \"mooned\",\n  \"moonlight\",\n  \"moonlike\",\n  \"moonlit\",\n  \"moonrise\",\n  \"moonscape\",\n  \"moonshine\",\n  \"moonstone\",\n  \"moonwalk\",\n  \"mop\",\n  \"morale\",\n  \"morality\",\n  \"morally\",\n  \"morbidity\",\n  \"morbidly\",\n  \"morphine\",\n  \"morphing\",\n  \"morse\",\n  \"mortality\",\n  \"mortally\",\n  \"mortician\",\n  \"mortified\",\n  \"mortify\",\n  \"mortuary\",\n  \"mosaic\",\n  \"mossy\",\n  \"most\",\n  \"mothball\",\n  \"mothproof\",\n  \"motion\",\n  \"motivate\",\n  \"motivator\",\n  \"motive\",\n  \"motocross\",\n  \"motor\",\n  \"motto\",\n  \"mountable\",\n  \"mountain\",\n  \"mounted\",\n  \"mounting\",\n  \"mourner\",\n  \"mournful\",\n  \"mouse\",\n  \"mousiness\",\n  \"moustache\",\n  \"mousy\",\n  \"mouth\",\n  \"movable\",\n  \"move\",\n  \"movie\",\n  \"moving\",\n  \"mower\",\n  \"mowing\",\n  \"much\",\n  \"muck\",\n  \"mud\",\n  \"mug\",\n  \"mulberry\",\n  \"mulch\",\n  \"mule\",\n  \"mulled\",\n  \"mullets\",\n  \"multiple\",\n  \"multiply\",\n  \"multitask\",\n  \"multitude\",\n  \"mumble\",\n  \"mumbling\",\n  \"mumbo\",\n  \"mummified\",\n  \"mummify\",\n  \"mummy\",\n  \"mumps\",\n  \"munchkin\",\n  \"mundane\",\n  \"municipal\",\n  \"muppet\",\n  \"mural\",\n  \"murkiness\",\n  \"murky\",\n  \"murmuring\",\n  \"muscular\",\n  \"museum\",\n  \"mushily\",\n  \"mushiness\",\n  \"mushroom\",\n  \"mushy\",\n  \"music\",\n  \"musket\",\n  \"muskiness\",\n  \"musky\",\n  \"mustang\",\n  \"mustard\",\n  \"muster\",\n  \"mustiness\",\n  \"musty\",\n  \"mutable\",\n  \"mutate\",\n  \"mutation\",\n  \"mute\",\n  \"mutilated\",\n  \"mutilator\",\n  \"mutiny\",\n  \"mutt\",\n  \"mutual\",\n  \"muzzle\",\n  \"myself\",\n  \"myspace\",\n  \"mystified\",\n  \"mystify\",\n  \"myth\",\n  \"nacho\",\n  \"nag\",\n  \"nail\",\n  \"name\",\n  \"naming\",\n  \"nanny\",\n  \"nanometer\",\n  \"nape\",\n  \"napkin\",\n  \"napped\",\n  \"napping\",\n  \"nappy\",\n  \"narrow\",\n  \"nastily\",\n  \"nastiness\",\n  \"national\",\n  \"native\",\n  \"nativity\",\n  \"natural\",\n  \"nature\",\n  \"naturist\",\n  \"nautical\",\n  \"navigate\",\n  \"navigator\",\n  \"navy\",\n  \"nearby\",\n  \"nearest\",\n  \"nearly\",\n  \"nearness\",\n  \"neatly\",\n  \"neatness\",\n  \"nebula\",\n  \"nebulizer\",\n  \"nectar\",\n  \"negate\",\n  \"negation\",\n  \"negative\",\n  \"neglector\",\n  \"negligee\",\n  \"negligent\",\n  \"negotiate\",\n  \"nemeses\",\n  \"nemesis\",\n  \"neon\",\n  \"nephew\",\n  \"nerd\",\n  \"nervous\",\n  \"nervy\",\n  \"nest\",\n  \"net\",\n  \"neurology\",\n  \"neuron\",\n  \"neurosis\",\n  \"neurotic\",\n  \"neuter\",\n  \"neutron\",\n  \"never\",\n  \"next\",\n  \"nibble\",\n  \"nickname\",\n  \"nicotine\",\n  \"niece\",\n  \"nifty\",\n  \"nimble\",\n  \"nimbly\",\n  \"nineteen\",\n  \"ninetieth\",\n  \"ninja\",\n  \"nintendo\",\n  \"ninth\",\n  \"nuclear\",\n  \"nuclei\",\n  \"nucleus\",\n  \"nugget\",\n  \"nullify\",\n  \"number\",\n  \"numbing\",\n  \"numbly\",\n  \"numbness\",\n  \"numeral\",\n  \"numerate\",\n  \"numerator\",\n  \"numeric\",\n  \"numerous\",\n  \"nuptials\",\n  \"nursery\",\n  \"nursing\",\n  \"nurture\",\n  \"nutcase\",\n  \"nutlike\",\n  \"nutmeg\",\n  \"nutrient\",\n  \"nutshell\",\n  \"nuttiness\",\n  \"nutty\",\n  \"nuzzle\",\n  \"nylon\",\n  \"oaf\",\n  \"oak\",\n  \"oasis\",\n  \"oat\",\n  \"obedience\",\n  \"obedient\",\n  \"obituary\",\n  \"object\",\n  \"obligate\",\n  \"obliged\",\n  \"oblivion\",\n  \"oblivious\",\n  \"oblong\",\n  \"obnoxious\",\n  \"oboe\",\n  \"obscure\",\n  \"obscurity\",\n  \"observant\",\n  \"observer\",\n  \"observing\",\n  \"obsessed\",\n  \"obsession\",\n  \"obsessive\",\n  \"obsolete\",\n  \"obstacle\",\n  \"obstinate\",\n  \"obstruct\",\n  \"obtain\",\n  \"obtrusive\",\n  \"obtuse\",\n  \"obvious\",\n  \"occultist\",\n  \"occupancy\",\n  \"occupant\",\n  \"occupier\",\n  \"occupy\",\n  \"ocean\",\n  \"ocelot\",\n  \"octagon\",\n  \"octane\",\n  \"october\",\n  \"octopus\",\n  \"ogle\",\n  \"oil\",\n  \"oink\",\n  \"ointment\",\n  \"okay\",\n  \"old\",\n  \"olive\",\n  \"olympics\",\n  \"omega\",\n  \"omen\",\n  \"ominous\",\n  \"omission\",\n  \"omit\",\n  \"omnivore\",\n  \"onboard\",\n  \"oncoming\",\n  \"ongoing\",\n  \"onion\",\n  \"online\",\n  \"onlooker\",\n  \"only\",\n  \"onscreen\",\n  \"onset\",\n  \"onshore\",\n  \"onslaught\",\n  \"onstage\",\n  \"onto\",\n  \"onward\",\n  \"onyx\",\n  \"oops\",\n  \"ooze\",\n  \"oozy\",\n  \"opacity\",\n  \"opal\",\n  \"open\",\n  \"operable\",\n  \"operate\",\n  \"operating\",\n  \"operation\",\n  \"operative\",\n  \"operator\",\n  \"opium\",\n  \"opossum\",\n  \"opponent\",\n  \"oppose\",\n  \"opposing\",\n  \"opposite\",\n  \"oppressed\",\n  \"oppressor\",\n  \"opt\",\n  \"opulently\",\n  \"osmosis\",\n  \"other\",\n  \"otter\",\n  \"ouch\",\n  \"ought\",\n  \"ounce\",\n  \"outage\",\n  \"outback\",\n  \"outbid\",\n  \"outboard\",\n  \"outbound\",\n  \"outbreak\",\n  \"outburst\",\n  \"outcast\",\n  \"outclass\",\n  \"outcome\",\n  \"outdated\",\n  \"outdoors\",\n  \"outer\",\n  \"outfield\",\n  \"outfit\",\n  \"outflank\",\n  \"outgoing\",\n  \"outgrow\",\n  \"outhouse\",\n  \"outing\",\n  \"outlast\",\n  \"outlet\",\n  \"outline\",\n  \"outlook\",\n  \"outlying\",\n  \"outmatch\",\n  \"outmost\",\n  \"outnumber\",\n  \"outplayed\",\n  \"outpost\",\n  \"outpour\",\n  \"output\",\n  \"outrage\",\n  \"outrank\",\n  \"outreach\",\n  \"outright\",\n  \"outscore\",\n  \"outsell\",\n  \"outshine\",\n  \"outshoot\",\n  \"outsider\",\n  \"outskirts\",\n  \"outsmart\",\n  \"outsource\",\n  \"outspoken\",\n  \"outtakes\",\n  \"outthink\",\n  \"outward\",\n  \"outweigh\",\n  \"outwit\",\n  \"oval\",\n  \"ovary\",\n  \"oven\",\n  \"overact\",\n  \"overall\",\n  \"overarch\",\n  \"overbid\",\n  \"overbill\",\n  \"overbite\",\n  \"overblown\",\n  \"overboard\",\n  \"overbook\",\n  \"overbuilt\",\n  \"overcast\",\n  \"overcoat\",\n  \"overcome\",\n  \"overcook\",\n  \"overcrowd\",\n  \"overdraft\",\n  \"overdrawn\",\n  \"overdress\",\n  \"overdrive\",\n  \"overdue\",\n  \"overeager\",\n  \"overeater\",\n  \"overexert\",\n  \"overfed\",\n  \"overfeed\",\n  \"overfill\",\n  \"overflow\",\n  \"overfull\",\n  \"overgrown\",\n  \"overhand\",\n  \"overhang\",\n  \"overhaul\",\n  \"overhead\",\n  \"overhear\",\n  \"overheat\",\n  \"overhung\",\n  \"overjoyed\",\n  \"overkill\",\n  \"overlabor\",\n  \"overlaid\",\n  \"overlap\",\n  \"overlay\",\n  \"overload\",\n  \"overlook\",\n  \"overlord\",\n  \"overlying\",\n  \"overnight\",\n  \"overpass\",\n  \"overpay\",\n  \"overplant\",\n  \"overplay\",\n  \"overpower\",\n  \"overprice\",\n  \"overrate\",\n  \"overreach\",\n  \"overreact\",\n  \"override\",\n  \"overripe\",\n  \"overrule\",\n  \"overrun\",\n  \"overshoot\",\n  \"overshot\",\n  \"oversight\",\n  \"oversized\",\n  \"oversleep\",\n  \"oversold\",\n  \"overspend\",\n  \"overstate\",\n  \"overstay\",\n  \"overstep\",\n  \"overstock\",\n  \"overstuff\",\n  \"oversweet\",\n  \"overtake\",\n  \"overthrow\",\n  \"overtime\",\n  \"overtly\",\n  \"overtone\",\n  \"overture\",\n  \"overturn\",\n  \"overuse\",\n  \"overvalue\",\n  \"overview\",\n  \"overwrite\",\n  \"owl\",\n  \"oxford\",\n  \"oxidant\",\n  \"oxidation\",\n  \"oxidize\",\n  \"oxidizing\",\n  \"oxygen\",\n  \"oxymoron\",\n  \"oyster\",\n  \"ozone\",\n  \"paced\",\n  \"pacemaker\",\n  \"pacific\",\n  \"pacifier\",\n  \"pacifism\",\n  \"pacifist\",\n  \"pacify\",\n  \"padded\",\n  \"padding\",\n  \"paddle\",\n  \"paddling\",\n  \"padlock\",\n  \"pagan\",\n  \"pager\",\n  \"paging\",\n  \"pajamas\",\n  \"palace\",\n  \"palatable\",\n  \"palm\",\n  \"palpable\",\n  \"palpitate\",\n  \"paltry\",\n  \"pampered\",\n  \"pamperer\",\n  \"pampers\",\n  \"pamphlet\",\n  \"panama\",\n  \"pancake\",\n  \"pancreas\",\n  \"panda\",\n  \"pandemic\",\n  \"pang\",\n  \"panhandle\",\n  \"panic\",\n  \"panning\",\n  \"panorama\",\n  \"panoramic\",\n  \"panther\",\n  \"pantomime\",\n  \"pantry\",\n  \"pants\",\n  \"pantyhose\",\n  \"paparazzi\",\n  \"papaya\",\n  \"paper\",\n  \"paprika\",\n  \"papyrus\",\n  \"parabola\",\n  \"parachute\",\n  \"parade\",\n  \"paradox\",\n  \"paragraph\",\n  \"parakeet\",\n  \"paralegal\",\n  \"paralyses\",\n  \"paralysis\",\n  \"paralyze\",\n  \"paramedic\",\n  \"parameter\",\n  \"paramount\",\n  \"parasail\",\n  \"parasite\",\n  \"parasitic\",\n  \"parcel\",\n  \"parched\",\n  \"parchment\",\n  \"pardon\",\n  \"parish\",\n  \"parka\",\n  \"parking\",\n  \"parkway\",\n  \"parlor\",\n  \"parmesan\",\n  \"parole\",\n  \"parrot\",\n  \"parsley\",\n  \"parsnip\",\n  \"partake\",\n  \"parted\",\n  \"parting\",\n  \"partition\",\n  \"partly\",\n  \"partner\",\n  \"partridge\",\n  \"party\",\n  \"passable\",\n  \"passably\",\n  \"passage\",\n  \"passcode\",\n  \"passenger\",\n  \"passerby\",\n  \"passing\",\n  \"passion\",\n  \"passive\",\n  \"passivism\",\n  \"passover\",\n  \"passport\",\n  \"password\",\n  \"pasta\",\n  \"pasted\",\n  \"pastel\",\n  \"pastime\",\n  \"pastor\",\n  \"pastrami\",\n  \"pasture\",\n  \"pasty\",\n  \"patchwork\",\n  \"patchy\",\n  \"paternal\",\n  \"paternity\",\n  \"path\",\n  \"patience\",\n  \"patient\",\n  \"patio\",\n  \"patriarch\",\n  \"patriot\",\n  \"patrol\",\n  \"patronage\",\n  \"patronize\",\n  \"pauper\",\n  \"pavement\",\n  \"paver\",\n  \"pavestone\",\n  \"pavilion\",\n  \"paving\",\n  \"pawing\",\n  \"payable\",\n  \"payback\",\n  \"paycheck\",\n  \"payday\",\n  \"payee\",\n  \"payer\",\n  \"paying\",\n  \"payment\",\n  \"payphone\",\n  \"payroll\",\n  \"pebble\",\n  \"pebbly\",\n  \"pecan\",\n  \"pectin\",\n  \"peculiar\",\n  \"peddling\",\n  \"pediatric\",\n  \"pedicure\",\n  \"pedigree\",\n  \"pedometer\",\n  \"pegboard\",\n  \"pelican\",\n  \"pellet\",\n  \"pelt\",\n  \"pelvis\",\n  \"penalize\",\n  \"penalty\",\n  \"pencil\",\n  \"pendant\",\n  \"pending\",\n  \"penholder\",\n  \"penknife\",\n  \"pennant\",\n  \"penniless\",\n  \"penny\",\n  \"penpal\",\n  \"pension\",\n  \"pentagon\",\n  \"pentagram\",\n  \"pep\",\n  \"perceive\",\n  \"percent\",\n  \"perch\",\n  \"percolate\",\n  \"perennial\",\n  \"perfected\",\n  \"perfectly\",\n  \"perfume\",\n  \"periscope\",\n  \"perish\",\n  \"perjurer\",\n  \"perjury\",\n  \"perkiness\",\n  \"perky\",\n  \"perm\",\n  \"peroxide\",\n  \"perpetual\",\n  \"perplexed\",\n  \"persecute\",\n  \"persevere\",\n  \"persuaded\",\n  \"persuader\",\n  \"pesky\",\n  \"peso\",\n  \"pessimism\",\n  \"pessimist\",\n  \"pester\",\n  \"pesticide\",\n  \"petal\",\n  \"petite\",\n  \"petition\",\n  \"petri\",\n  \"petroleum\",\n  \"petted\",\n  \"petticoat\",\n  \"pettiness\",\n  \"petty\",\n  \"petunia\",\n  \"phantom\",\n  \"phobia\",\n  \"phoenix\",\n  \"phonebook\",\n  \"phoney\",\n  \"phonics\",\n  \"phoniness\",\n  \"phony\",\n  \"phosphate\",\n  \"photo\",\n  \"phrase\",\n  \"phrasing\",\n  \"placard\",\n  \"placate\",\n  \"placidly\",\n  \"plank\",\n  \"planner\",\n  \"plant\",\n  \"plasma\",\n  \"plaster\",\n  \"plastic\",\n  \"plated\",\n  \"platform\",\n  \"plating\",\n  \"platinum\",\n  \"platonic\",\n  \"platter\",\n  \"platypus\",\n  \"plausible\",\n  \"plausibly\",\n  \"playable\",\n  \"playback\",\n  \"player\",\n  \"playful\",\n  \"playgroup\",\n  \"playhouse\",\n  \"playing\",\n  \"playlist\",\n  \"playmaker\",\n  \"playmate\",\n  \"playoff\",\n  \"playpen\",\n  \"playroom\",\n  \"playset\",\n  \"plaything\",\n  \"playtime\",\n  \"plaza\",\n  \"pleading\",\n  \"pleat\",\n  \"pledge\",\n  \"plentiful\",\n  \"plenty\",\n  \"plethora\",\n  \"plexiglas\",\n  \"pliable\",\n  \"plod\",\n  \"plop\",\n  \"plot\",\n  \"plow\",\n  \"ploy\",\n  \"pluck\",\n  \"plug\",\n  \"plunder\",\n  \"plunging\",\n  \"plural\",\n  \"plus\",\n  \"plutonium\",\n  \"plywood\",\n  \"poach\",\n  \"pod\",\n  \"poem\",\n  \"poet\",\n  \"pogo\",\n  \"pointed\",\n  \"pointer\",\n  \"pointing\",\n  \"pointless\",\n  \"pointy\",\n  \"poise\",\n  \"poison\",\n  \"poker\",\n  \"poking\",\n  \"polar\",\n  \"police\",\n  \"policy\",\n  \"polio\",\n  \"polish\",\n  \"politely\",\n  \"polka\",\n  \"polo\",\n  \"polyester\",\n  \"polygon\",\n  \"polygraph\",\n  \"polymer\",\n  \"poncho\",\n  \"pond\",\n  \"pony\",\n  \"popcorn\",\n  \"pope\",\n  \"poplar\",\n  \"popper\",\n  \"poppy\",\n  \"popsicle\",\n  \"populace\",\n  \"popular\",\n  \"populate\",\n  \"porcupine\",\n  \"pork\",\n  \"porous\",\n  \"porridge\",\n  \"portable\",\n  \"portal\",\n  \"portfolio\",\n  \"porthole\",\n  \"portion\",\n  \"portly\",\n  \"portside\",\n  \"poser\",\n  \"posh\",\n  \"posing\",\n  \"possible\",\n  \"possibly\",\n  \"possum\",\n  \"postage\",\n  \"postal\",\n  \"postbox\",\n  \"postcard\",\n  \"posted\",\n  \"poster\",\n  \"posting\",\n  \"postnasal\",\n  \"posture\",\n  \"postwar\",\n  \"pouch\",\n  \"pounce\",\n  \"pouncing\",\n  \"pound\",\n  \"pouring\",\n  \"pout\",\n  \"powdered\",\n  \"powdering\",\n  \"powdery\",\n  \"power\",\n  \"powwow\",\n  \"pox\",\n  \"praising\",\n  \"prance\",\n  \"prancing\",\n  \"pranker\",\n  \"prankish\",\n  \"prankster\",\n  \"prayer\",\n  \"praying\",\n  \"preacher\",\n  \"preaching\",\n  \"preachy\",\n  \"preamble\",\n  \"precinct\",\n  \"precise\",\n  \"precision\",\n  \"precook\",\n  \"precut\",\n  \"predator\",\n  \"predefine\",\n  \"predict\",\n  \"preface\",\n  \"prefix\",\n  \"preflight\",\n  \"preformed\",\n  \"pregame\",\n  \"pregnancy\",\n  \"pregnant\",\n  \"preheated\",\n  \"prelaunch\",\n  \"prelaw\",\n  \"prelude\",\n  \"premiere\",\n  \"premises\",\n  \"premium\",\n  \"prenatal\",\n  \"preoccupy\",\n  \"preorder\",\n  \"prepaid\",\n  \"prepay\",\n  \"preplan\",\n  \"preppy\",\n  \"preschool\",\n  \"prescribe\",\n  \"preseason\",\n  \"preset\",\n  \"preshow\",\n  \"president\",\n  \"presoak\",\n  \"press\",\n  \"presume\",\n  \"presuming\",\n  \"preteen\",\n  \"pretended\",\n  \"pretender\",\n  \"pretense\",\n  \"pretext\",\n  \"pretty\",\n  \"pretzel\",\n  \"prevail\",\n  \"prevalent\",\n  \"prevent\",\n  \"preview\",\n  \"previous\",\n  \"prewar\",\n  \"prewashed\",\n  \"prideful\",\n  \"pried\",\n  \"primal\",\n  \"primarily\",\n  \"primary\",\n  \"primate\",\n  \"primer\",\n  \"primp\",\n  \"princess\",\n  \"print\",\n  \"prior\",\n  \"prism\",\n  \"prison\",\n  \"prissy\",\n  \"pristine\",\n  \"privacy\",\n  \"private\",\n  \"privatize\",\n  \"prize\",\n  \"proactive\",\n  \"probable\",\n  \"probably\",\n  \"probation\",\n  \"probe\",\n  \"probing\",\n  \"probiotic\",\n  \"problem\",\n  \"procedure\",\n  \"process\",\n  \"proclaim\",\n  \"procreate\",\n  \"procurer\",\n  \"prodigal\",\n  \"prodigy\",\n  \"produce\",\n  \"product\",\n  \"profane\",\n  \"profanity\",\n  \"professed\",\n  \"professor\",\n  \"profile\",\n  \"profound\",\n  \"profusely\",\n  \"progeny\",\n  \"prognosis\",\n  \"program\",\n  \"progress\",\n  \"projector\",\n  \"prologue\",\n  \"prolonged\",\n  \"promenade\",\n  \"prominent\",\n  \"promoter\",\n  \"promotion\",\n  \"prompter\",\n  \"promptly\",\n  \"prone\",\n  \"prong\",\n  \"pronounce\",\n  \"pronto\",\n  \"proofing\",\n  \"proofread\",\n  \"proofs\",\n  \"propeller\",\n  \"properly\",\n  \"property\",\n  \"proponent\",\n  \"proposal\",\n  \"propose\",\n  \"props\",\n  \"prorate\",\n  \"protector\",\n  \"protegee\",\n  \"proton\",\n  \"prototype\",\n  \"protozoan\",\n  \"protract\",\n  \"protrude\",\n  \"proud\",\n  \"provable\",\n  \"proved\",\n  \"proven\",\n  \"provided\",\n  \"provider\",\n  \"providing\",\n  \"province\",\n  \"proving\",\n  \"provoke\",\n  \"provoking\",\n  \"provolone\",\n  \"prowess\",\n  \"prowler\",\n  \"prowling\",\n  \"proximity\",\n  \"proxy\",\n  \"prozac\",\n  \"prude\",\n  \"prudishly\",\n  \"prune\",\n  \"pruning\",\n  \"pry\",\n  \"psychic\",\n  \"public\",\n  \"publisher\",\n  \"pucker\",\n  \"pueblo\",\n  \"pug\",\n  \"pull\",\n  \"pulmonary\",\n  \"pulp\",\n  \"pulsate\",\n  \"pulse\",\n  \"pulverize\",\n  \"puma\",\n  \"pumice\",\n  \"pummel\",\n  \"punch\",\n  \"punctual\",\n  \"punctuate\",\n  \"punctured\",\n  \"pungent\",\n  \"punisher\",\n  \"punk\",\n  \"pupil\",\n  \"puppet\",\n  \"puppy\",\n  \"purchase\",\n  \"pureblood\",\n  \"purebred\",\n  \"purely\",\n  \"pureness\",\n  \"purgatory\",\n  \"purge\",\n  \"purging\",\n  \"purifier\",\n  \"purify\",\n  \"purist\",\n  \"puritan\",\n  \"purity\",\n  \"purple\",\n  \"purplish\",\n  \"purposely\",\n  \"purr\",\n  \"purse\",\n  \"pursuable\",\n  \"pursuant\",\n  \"pursuit\",\n  \"purveyor\",\n  \"pushcart\",\n  \"pushchair\",\n  \"pusher\",\n  \"pushiness\",\n  \"pushing\",\n  \"pushover\",\n  \"pushpin\",\n  \"pushup\",\n  \"pushy\",\n  \"putdown\",\n  \"putt\",\n  \"puzzle\",\n  \"puzzling\",\n  \"pyramid\",\n  \"pyromania\",\n  \"python\",\n  \"quack\",\n  \"quadrant\",\n  \"quail\",\n  \"quaintly\",\n  \"quake\",\n  \"quaking\",\n  \"qualified\",\n  \"qualifier\",\n  \"qualify\",\n  \"quality\",\n  \"qualm\",\n  \"quantum\",\n  \"quarrel\",\n  \"quarry\",\n  \"quartered\",\n  \"quarterly\",\n  \"quarters\",\n  \"quartet\",\n  \"quench\",\n  \"query\",\n  \"quicken\",\n  \"quickly\",\n  \"quickness\",\n  \"quicksand\",\n  \"quickstep\",\n  \"quiet\",\n  \"quill\",\n  \"quilt\",\n  \"quintet\",\n  \"quintuple\",\n  \"quirk\",\n  \"quit\",\n  \"quiver\",\n  \"quizzical\",\n  \"quotable\",\n  \"quotation\",\n  \"quote\",\n  \"rabid\",\n  \"race\",\n  \"racing\",\n  \"racism\",\n  \"rack\",\n  \"racoon\",\n  \"radar\",\n  \"radial\",\n  \"radiance\",\n  \"radiantly\",\n  \"radiated\",\n  \"radiation\",\n  \"radiator\",\n  \"radio\",\n  \"radish\",\n  \"raffle\",\n  \"raft\",\n  \"rage\",\n  \"ragged\",\n  \"raging\",\n  \"ragweed\",\n  \"raider\",\n  \"railcar\",\n  \"railing\",\n  \"railroad\",\n  \"railway\",\n  \"raisin\",\n  \"rake\",\n  \"raking\",\n  \"rally\",\n  \"ramble\",\n  \"rambling\",\n  \"ramp\",\n  \"ramrod\",\n  \"ranch\",\n  \"rancidity\",\n  \"random\",\n  \"ranged\",\n  \"ranger\",\n  \"ranging\",\n  \"ranked\",\n  \"ranking\",\n  \"ransack\",\n  \"ranting\",\n  \"rants\",\n  \"rare\",\n  \"rarity\",\n  \"rascal\",\n  \"rash\",\n  \"rasping\",\n  \"ravage\",\n  \"raven\",\n  \"ravine\",\n  \"raving\",\n  \"ravioli\",\n  \"ravishing\",\n  \"reabsorb\",\n  \"reach\",\n  \"reacquire\",\n  \"reaction\",\n  \"reactive\",\n  \"reactor\",\n  \"reaffirm\",\n  \"ream\",\n  \"reanalyze\",\n  \"reappear\",\n  \"reapply\",\n  \"reappoint\",\n  \"reapprove\",\n  \"rearrange\",\n  \"rearview\",\n  \"reason\",\n  \"reassign\",\n  \"reassure\",\n  \"reattach\",\n  \"reawake\",\n  \"rebalance\",\n  \"rebate\",\n  \"rebel\",\n  \"rebirth\",\n  \"reboot\",\n  \"reborn\",\n  \"rebound\",\n  \"rebuff\",\n  \"rebuild\",\n  \"rebuilt\",\n  \"reburial\",\n  \"rebuttal\",\n  \"recall\",\n  \"recant\",\n  \"recapture\",\n  \"recast\",\n  \"recede\",\n  \"recent\",\n  \"recess\",\n  \"recharger\",\n  \"recipient\",\n  \"recital\",\n  \"recite\",\n  \"reckless\",\n  \"reclaim\",\n  \"recliner\",\n  \"reclining\",\n  \"recluse\",\n  \"reclusive\",\n  \"recognize\",\n  \"recoil\",\n  \"recollect\",\n  \"recolor\",\n  \"reconcile\",\n  \"reconfirm\",\n  \"reconvene\",\n  \"recopy\",\n  \"record\",\n  \"recount\",\n  \"recoup\",\n  \"recovery\",\n  \"recreate\",\n  \"rectal\",\n  \"rectangle\",\n  \"rectified\",\n  \"rectify\",\n  \"recycled\",\n  \"recycler\",\n  \"recycling\",\n  \"reemerge\",\n  \"reenact\",\n  \"reenter\",\n  \"reentry\",\n  \"reexamine\",\n  \"referable\",\n  \"referee\",\n  \"reference\",\n  \"refill\",\n  \"refinance\",\n  \"refined\",\n  \"refinery\",\n  \"refining\",\n  \"refinish\",\n  \"reflected\",\n  \"reflector\",\n  \"reflex\",\n  \"reflux\",\n  \"refocus\",\n  \"refold\",\n  \"reforest\",\n  \"reformat\",\n  \"reformed\",\n  \"reformer\",\n  \"reformist\",\n  \"refract\",\n  \"refrain\",\n  \"refreeze\",\n  \"refresh\",\n  \"refried\",\n  \"refueling\",\n  \"refund\",\n  \"refurbish\",\n  \"refurnish\",\n  \"refusal\",\n  \"refuse\",\n  \"refusing\",\n  \"refutable\",\n  \"refute\",\n  \"regain\",\n  \"regalia\",\n  \"regally\",\n  \"reggae\",\n  \"regime\",\n  \"region\",\n  \"register\",\n  \"registrar\",\n  \"registry\",\n  \"regress\",\n  \"regretful\",\n  \"regroup\",\n  \"regular\",\n  \"regulate\",\n  \"regulator\",\n  \"rehab\",\n  \"reheat\",\n  \"rehire\",\n  \"rehydrate\",\n  \"reimburse\",\n  \"reissue\",\n  \"reiterate\",\n  \"rejoice\",\n  \"rejoicing\",\n  \"rejoin\",\n  \"rekindle\",\n  \"relapse\",\n  \"relapsing\",\n  \"relatable\",\n  \"related\",\n  \"relation\",\n  \"relative\",\n  \"relax\",\n  \"relay\",\n  \"relearn\",\n  \"release\",\n  \"relenting\",\n  \"reliable\",\n  \"reliably\",\n  \"reliance\",\n  \"reliant\",\n  \"relic\",\n  \"relieve\",\n  \"relieving\",\n  \"relight\",\n  \"relish\",\n  \"relive\",\n  \"reload\",\n  \"relocate\",\n  \"relock\",\n  \"reluctant\",\n  \"rely\",\n  \"remake\",\n  \"remark\",\n  \"remarry\",\n  \"rematch\",\n  \"remedial\",\n  \"remedy\",\n  \"remember\",\n  \"reminder\",\n  \"remindful\",\n  \"remission\",\n  \"remix\",\n  \"remnant\",\n  \"remodeler\",\n  \"remold\",\n  \"remorse\",\n  \"remote\",\n  \"removable\",\n  \"removal\",\n  \"removed\",\n  \"remover\",\n  \"removing\",\n  \"rename\",\n  \"renderer\",\n  \"rendering\",\n  \"rendition\",\n  \"renegade\",\n  \"renewable\",\n  \"renewably\",\n  \"renewal\",\n  \"renewed\",\n  \"renounce\",\n  \"renovate\",\n  \"renovator\",\n  \"rentable\",\n  \"rental\",\n  \"rented\",\n  \"renter\",\n  \"reoccupy\",\n  \"reoccur\",\n  \"reopen\",\n  \"reorder\",\n  \"repackage\",\n  \"repacking\",\n  \"repaint\",\n  \"repair\",\n  \"repave\",\n  \"repaying\",\n  \"repayment\",\n  \"repeal\",\n  \"repeated\",\n  \"repeater\",\n  \"repent\",\n  \"rephrase\",\n  \"replace\",\n  \"replay\",\n  \"replica\",\n  \"reply\",\n  \"reporter\",\n  \"repose\",\n  \"repossess\",\n  \"repost\",\n  \"repressed\",\n  \"reprimand\",\n  \"reprint\",\n  \"reprise\",\n  \"reproach\",\n  \"reprocess\",\n  \"reproduce\",\n  \"reprogram\",\n  \"reps\",\n  \"reptile\",\n  \"reptilian\",\n  \"repugnant\",\n  \"repulsion\",\n  \"repulsive\",\n  \"repurpose\",\n  \"reputable\",\n  \"reputably\",\n  \"request\",\n  \"require\",\n  \"requisite\",\n  \"reroute\",\n  \"rerun\",\n  \"resale\",\n  \"resample\",\n  \"rescuer\",\n  \"reseal\",\n  \"research\",\n  \"reselect\",\n  \"reseller\",\n  \"resemble\",\n  \"resend\",\n  \"resent\",\n  \"reset\",\n  \"reshape\",\n  \"reshoot\",\n  \"reshuffle\",\n  \"residence\",\n  \"residency\",\n  \"resident\",\n  \"residual\",\n  \"residue\",\n  \"resigned\",\n  \"resilient\",\n  \"resistant\",\n  \"resisting\",\n  \"resize\",\n  \"resolute\",\n  \"resolved\",\n  \"resonant\",\n  \"resonate\",\n  \"resort\",\n  \"resource\",\n  \"respect\",\n  \"resubmit\",\n  \"result\",\n  \"resume\",\n  \"resupply\",\n  \"resurface\",\n  \"resurrect\",\n  \"retail\",\n  \"retainer\",\n  \"retaining\",\n  \"retake\",\n  \"retaliate\",\n  \"retention\",\n  \"rethink\",\n  \"retinal\",\n  \"retired\",\n  \"retiree\",\n  \"retiring\",\n  \"retold\",\n  \"retool\",\n  \"retorted\",\n  \"retouch\",\n  \"retrace\",\n  \"retract\",\n  \"retrain\",\n  \"retread\",\n  \"retreat\",\n  \"retrial\",\n  \"retrieval\",\n  \"retriever\",\n  \"retry\",\n  \"return\",\n  \"retying\",\n  \"retype\",\n  \"reunion\",\n  \"reunite\",\n  \"reusable\",\n  \"reuse\",\n  \"reveal\",\n  \"reveler\",\n  \"revenge\",\n  \"revenue\",\n  \"reverb\",\n  \"revered\",\n  \"reverence\",\n  \"reverend\",\n  \"reversal\",\n  \"reverse\",\n  \"reversing\",\n  \"reversion\",\n  \"revert\",\n  \"revisable\",\n  \"revise\",\n  \"revision\",\n  \"revisit\",\n  \"revivable\",\n  \"revival\",\n  \"reviver\",\n  \"reviving\",\n  \"revocable\",\n  \"revoke\",\n  \"revolt\",\n  \"revolver\",\n  \"revolving\",\n  \"reward\",\n  \"rewash\",\n  \"rewind\",\n  \"rewire\",\n  \"reword\",\n  \"rework\",\n  \"rewrap\",\n  \"rewrite\",\n  \"rhyme\",\n  \"ribbon\",\n  \"ribcage\",\n  \"rice\",\n  \"riches\",\n  \"richly\",\n  \"richness\",\n  \"rickety\",\n  \"ricotta\",\n  \"riddance\",\n  \"ridden\",\n  \"ride\",\n  \"riding\",\n  \"rifling\",\n  \"rift\",\n  \"rigging\",\n  \"rigid\",\n  \"rigor\",\n  \"rimless\",\n  \"rimmed\",\n  \"rind\",\n  \"rink\",\n  \"rinse\",\n  \"rinsing\",\n  \"riot\",\n  \"ripcord\",\n  \"ripeness\",\n  \"ripening\",\n  \"ripping\",\n  \"ripple\",\n  \"rippling\",\n  \"riptide\",\n  \"rise\",\n  \"rising\",\n  \"risk\",\n  \"risotto\",\n  \"ritalin\",\n  \"ritzy\",\n  \"rival\",\n  \"riverbank\",\n  \"riverbed\",\n  \"riverboat\",\n  \"riverside\",\n  \"riveter\",\n  \"riveting\",\n  \"roamer\",\n  \"roaming\",\n  \"roast\",\n  \"robbing\",\n  \"robe\",\n  \"robin\",\n  \"robotics\",\n  \"robust\",\n  \"rockband\",\n  \"rocker\",\n  \"rocket\",\n  \"rockfish\",\n  \"rockiness\",\n  \"rocking\",\n  \"rocklike\",\n  \"rockslide\",\n  \"rockstar\",\n  \"rocky\",\n  \"rogue\",\n  \"roman\",\n  \"romp\",\n  \"rope\",\n  \"roping\",\n  \"roster\",\n  \"rosy\",\n  \"rotten\",\n  \"rotting\",\n  \"rotunda\",\n  \"roulette\",\n  \"rounding\",\n  \"roundish\",\n  \"roundness\",\n  \"roundup\",\n  \"roundworm\",\n  \"routine\",\n  \"routing\",\n  \"rover\",\n  \"roving\",\n  \"royal\",\n  \"rubbed\",\n  \"rubber\",\n  \"rubbing\",\n  \"rubble\",\n  \"rubdown\",\n  \"ruby\",\n  \"ruckus\",\n  \"rudder\",\n  \"rug\",\n  \"ruined\",\n  \"rule\",\n  \"rumble\",\n  \"rumbling\",\n  \"rummage\",\n  \"rumor\",\n  \"runaround\",\n  \"rundown\",\n  \"runner\",\n  \"running\",\n  \"runny\",\n  \"runt\",\n  \"runway\",\n  \"rupture\",\n  \"rural\",\n  \"ruse\",\n  \"rush\",\n  \"rust\",\n  \"rut\",\n  \"sabbath\",\n  \"sabotage\",\n  \"sacrament\",\n  \"sacred\",\n  \"sacrifice\",\n  \"sadden\",\n  \"saddlebag\",\n  \"saddled\",\n  \"saddling\",\n  \"sadly\",\n  \"sadness\",\n  \"safari\",\n  \"safeguard\",\n  \"safehouse\",\n  \"safely\",\n  \"safeness\",\n  \"saffron\",\n  \"saga\",\n  \"sage\",\n  \"sagging\",\n  \"saggy\",\n  \"said\",\n  \"saint\",\n  \"sake\",\n  \"salad\",\n  \"salami\",\n  \"salaried\",\n  \"salary\",\n  \"saline\",\n  \"salon\",\n  \"saloon\",\n  \"salsa\",\n  \"salt\",\n  \"salutary\",\n  \"salute\",\n  \"salvage\",\n  \"salvaging\",\n  \"salvation\",\n  \"same\",\n  \"sample\",\n  \"sampling\",\n  \"sanction\",\n  \"sanctity\",\n  \"sanctuary\",\n  \"sandal\",\n  \"sandbag\",\n  \"sandbank\",\n  \"sandbar\",\n  \"sandblast\",\n  \"sandbox\",\n  \"sanded\",\n  \"sandfish\",\n  \"sanding\",\n  \"sandlot\",\n  \"sandpaper\",\n  \"sandpit\",\n  \"sandstone\",\n  \"sandstorm\",\n  \"sandworm\",\n  \"sandy\",\n  \"sanitary\",\n  \"sanitizer\",\n  \"sank\",\n  \"santa\",\n  \"sapling\",\n  \"sappiness\",\n  \"sappy\",\n  \"sarcasm\",\n  \"sarcastic\",\n  \"sardine\",\n  \"sash\",\n  \"sasquatch\",\n  \"sassy\",\n  \"satchel\",\n  \"satiable\",\n  \"satin\",\n  \"satirical\",\n  \"satisfied\",\n  \"satisfy\",\n  \"saturate\",\n  \"saturday\",\n  \"sauciness\",\n  \"saucy\",\n  \"sauna\",\n  \"savage\",\n  \"savanna\",\n  \"saved\",\n  \"savings\",\n  \"savior\",\n  \"savor\",\n  \"saxophone\",\n  \"say\",\n  \"scabbed\",\n  \"scabby\",\n  \"scalded\",\n  \"scalding\",\n  \"scale\",\n  \"scaling\",\n  \"scallion\",\n  \"scallop\",\n  \"scalping\",\n  \"scam\",\n  \"scandal\",\n  \"scanner\",\n  \"scanning\",\n  \"scant\",\n  \"scapegoat\",\n  \"scarce\",\n  \"scarcity\",\n  \"scarecrow\",\n  \"scared\",\n  \"scarf\",\n  \"scarily\",\n  \"scariness\",\n  \"scarring\",\n  \"scary\",\n  \"scavenger\",\n  \"scenic\",\n  \"schedule\",\n  \"schematic\",\n  \"scheme\",\n  \"scheming\",\n  \"schilling\",\n  \"schnapps\",\n  \"scholar\",\n  \"science\",\n  \"scientist\",\n  \"scion\",\n  \"scoff\",\n  \"scolding\",\n  \"scone\",\n  \"scoop\",\n  \"scooter\",\n  \"scope\",\n  \"scorch\",\n  \"scorebook\",\n  \"scorecard\",\n  \"scored\",\n  \"scoreless\",\n  \"scorer\",\n  \"scoring\",\n  \"scorn\",\n  \"scorpion\",\n  \"scotch\",\n  \"scoundrel\",\n  \"scoured\",\n  \"scouring\",\n  \"scouting\",\n  \"scouts\",\n  \"scowling\",\n  \"scrabble\",\n  \"scraggly\",\n  \"scrambled\",\n  \"scrambler\",\n  \"scrap\",\n  \"scratch\",\n  \"scrawny\",\n  \"screen\",\n  \"scribble\",\n  \"scribe\",\n  \"scribing\",\n  \"scrimmage\",\n  \"script\",\n  \"scroll\",\n  \"scrooge\",\n  \"scrounger\",\n  \"scrubbed\",\n  \"scrubber\",\n  \"scruffy\",\n  \"scrunch\",\n  \"scrutiny\",\n  \"scuba\",\n  \"scuff\",\n  \"sculptor\",\n  \"sculpture\",\n  \"scurvy\",\n  \"scuttle\",\n  \"secluded\",\n  \"secluding\",\n  \"seclusion\",\n  \"second\",\n  \"secrecy\",\n  \"secret\",\n  \"sectional\",\n  \"sector\",\n  \"secular\",\n  \"securely\",\n  \"security\",\n  \"sedan\",\n  \"sedate\",\n  \"sedation\",\n  \"sedative\",\n  \"sediment\",\n  \"seduce\",\n  \"seducing\",\n  \"segment\",\n  \"seismic\",\n  \"seizing\",\n  \"seldom\",\n  \"selected\",\n  \"selection\",\n  \"selective\",\n  \"selector\",\n  \"self\",\n  \"seltzer\",\n  \"semantic\",\n  \"semester\",\n  \"semicolon\",\n  \"semifinal\",\n  \"seminar\",\n  \"semisoft\",\n  \"semisweet\",\n  \"senate\",\n  \"senator\",\n  \"send\",\n  \"senior\",\n  \"senorita\",\n  \"sensation\",\n  \"sensitive\",\n  \"sensitize\",\n  \"sensually\",\n  \"sensuous\",\n  \"sepia\",\n  \"september\",\n  \"septic\",\n  \"septum\",\n  \"sequel\",\n  \"sequence\",\n  \"sequester\",\n  \"series\",\n  \"sermon\",\n  \"serotonin\",\n  \"serpent\",\n  \"serrated\",\n  \"serve\",\n  \"service\",\n  \"serving\",\n  \"sesame\",\n  \"sessions\",\n  \"setback\",\n  \"setting\",\n  \"settle\",\n  \"settling\",\n  \"setup\",\n  \"sevenfold\",\n  \"seventeen\",\n  \"seventh\",\n  \"seventy\",\n  \"severity\",\n  \"shabby\",\n  \"shack\",\n  \"shaded\",\n  \"shadily\",\n  \"shadiness\",\n  \"shading\",\n  \"shadow\",\n  \"shady\",\n  \"shaft\",\n  \"shakable\",\n  \"shakily\",\n  \"shakiness\",\n  \"shaking\",\n  \"shaky\",\n  \"shale\",\n  \"shallot\",\n  \"shallow\",\n  \"shame\",\n  \"shampoo\",\n  \"shamrock\",\n  \"shank\",\n  \"shanty\",\n  \"shape\",\n  \"shaping\",\n  \"share\",\n  \"sharpener\",\n  \"sharper\",\n  \"sharpie\",\n  \"sharply\",\n  \"sharpness\",\n  \"shawl\",\n  \"sheath\",\n  \"shed\",\n  \"sheep\",\n  \"sheet\",\n  \"shelf\",\n  \"shell\",\n  \"shelter\",\n  \"shelve\",\n  \"shelving\",\n  \"sherry\",\n  \"shield\",\n  \"shifter\",\n  \"shifting\",\n  \"shiftless\",\n  \"shifty\",\n  \"shimmer\",\n  \"shimmy\",\n  \"shindig\",\n  \"shine\",\n  \"shingle\",\n  \"shininess\",\n  \"shining\",\n  \"shiny\",\n  \"ship\",\n  \"shirt\",\n  \"shivering\",\n  \"shock\",\n  \"shone\",\n  \"shoplift\",\n  \"shopper\",\n  \"shopping\",\n  \"shoptalk\",\n  \"shore\",\n  \"shortage\",\n  \"shortcake\",\n  \"shortcut\",\n  \"shorten\",\n  \"shorter\",\n  \"shorthand\",\n  \"shortlist\",\n  \"shortly\",\n  \"shortness\",\n  \"shorts\",\n  \"shortwave\",\n  \"shorty\",\n  \"shout\",\n  \"shove\",\n  \"showbiz\",\n  \"showcase\",\n  \"showdown\",\n  \"shower\",\n  \"showgirl\",\n  \"showing\",\n  \"showman\",\n  \"shown\",\n  \"showoff\",\n  \"showpiece\",\n  \"showplace\",\n  \"showroom\",\n  \"showy\",\n  \"shrank\",\n  \"shrapnel\",\n  \"shredder\",\n  \"shredding\",\n  \"shrewdly\",\n  \"shriek\",\n  \"shrill\",\n  \"shrimp\",\n  \"shrine\",\n  \"shrink\",\n  \"shrivel\",\n  \"shrouded\",\n  \"shrubbery\",\n  \"shrubs\",\n  \"shrug\",\n  \"shrunk\",\n  \"shucking\",\n  \"shudder\",\n  \"shuffle\",\n  \"shuffling\",\n  \"shun\",\n  \"shush\",\n  \"shut\",\n  \"shy\",\n  \"siamese\",\n  \"siberian\",\n  \"sibling\",\n  \"siding\",\n  \"sierra\",\n  \"siesta\",\n  \"sift\",\n  \"sighing\",\n  \"silenced\",\n  \"silencer\",\n  \"silent\",\n  \"silica\",\n  \"silicon\",\n  \"silk\",\n  \"silliness\",\n  \"silly\",\n  \"silo\",\n  \"silt\",\n  \"silver\",\n  \"similarly\",\n  \"simile\",\n  \"simmering\",\n  \"simple\",\n  \"simplify\",\n  \"simply\",\n  \"sincere\",\n  \"sincerity\",\n  \"singer\",\n  \"singing\",\n  \"single\",\n  \"singular\",\n  \"sinister\",\n  \"sinless\",\n  \"sinner\",\n  \"sinuous\",\n  \"sip\",\n  \"siren\",\n  \"sister\",\n  \"sitcom\",\n  \"sitter\",\n  \"sitting\",\n  \"situated\",\n  \"situation\",\n  \"sixfold\",\n  \"sixteen\",\n  \"sixth\",\n  \"sixties\",\n  \"sixtieth\",\n  \"sixtyfold\",\n  \"sizable\",\n  \"sizably\",\n  \"size\",\n  \"sizing\",\n  \"sizzle\",\n  \"sizzling\",\n  \"skater\",\n  \"skating\",\n  \"skedaddle\",\n  \"skeletal\",\n  \"skeleton\",\n  \"skeptic\",\n  \"sketch\",\n  \"skewed\",\n  \"skewer\",\n  \"skid\",\n  \"skied\",\n  \"skier\",\n  \"skies\",\n  \"skiing\",\n  \"skilled\",\n  \"skillet\",\n  \"skillful\",\n  \"skimmed\",\n  \"skimmer\",\n  \"skimming\",\n  \"skimpily\",\n  \"skincare\",\n  \"skinhead\",\n  \"skinless\",\n  \"skinning\",\n  \"skinny\",\n  \"skintight\",\n  \"skipper\",\n  \"skipping\",\n  \"skirmish\",\n  \"skirt\",\n  \"skittle\",\n  \"skydiver\",\n  \"skylight\",\n  \"skyline\",\n  \"skype\",\n  \"skyrocket\",\n  \"skyward\",\n  \"slab\",\n  \"slacked\",\n  \"slacker\",\n  \"slacking\",\n  \"slackness\",\n  \"slacks\",\n  \"slain\",\n  \"slam\",\n  \"slander\",\n  \"slang\",\n  \"slapping\",\n  \"slapstick\",\n  \"slashed\",\n  \"slashing\",\n  \"slate\",\n  \"slather\",\n  \"slaw\",\n  \"sled\",\n  \"sleek\",\n  \"sleep\",\n  \"sleet\",\n  \"sleeve\",\n  \"slept\",\n  \"sliceable\",\n  \"sliced\",\n  \"slicer\",\n  \"slicing\",\n  \"slick\",\n  \"slider\",\n  \"slideshow\",\n  \"sliding\",\n  \"slighted\",\n  \"slighting\",\n  \"slightly\",\n  \"slimness\",\n  \"slimy\",\n  \"slinging\",\n  \"slingshot\",\n  \"slinky\",\n  \"slip\",\n  \"slit\",\n  \"sliver\",\n  \"slobbery\",\n  \"slogan\",\n  \"sloped\",\n  \"sloping\",\n  \"sloppily\",\n  \"sloppy\",\n  \"slot\",\n  \"slouching\",\n  \"slouchy\",\n  \"sludge\",\n  \"slug\",\n  \"slum\",\n  \"slurp\",\n  \"slush\",\n  \"sly\",\n  \"small\",\n  \"smartly\",\n  \"smartness\",\n  \"smasher\",\n  \"smashing\",\n  \"smashup\",\n  \"smell\",\n  \"smelting\",\n  \"smile\",\n  \"smilingly\",\n  \"smirk\",\n  \"smite\",\n  \"smith\",\n  \"smitten\",\n  \"smock\",\n  \"smog\",\n  \"smoked\",\n  \"smokeless\",\n  \"smokiness\",\n  \"smoking\",\n  \"smoky\",\n  \"smolder\",\n  \"smooth\",\n  \"smother\",\n  \"smudge\",\n  \"smudgy\",\n  \"smuggler\",\n  \"smuggling\",\n  \"smugly\",\n  \"smugness\",\n  \"snack\",\n  \"snagged\",\n  \"snaking\",\n  \"snap\",\n  \"snare\",\n  \"snarl\",\n  \"snazzy\",\n  \"sneak\",\n  \"sneer\",\n  \"sneeze\",\n  \"sneezing\",\n  \"snide\",\n  \"sniff\",\n  \"snippet\",\n  \"snipping\",\n  \"snitch\",\n  \"snooper\",\n  \"snooze\",\n  \"snore\",\n  \"snoring\",\n  \"snorkel\",\n  \"snort\",\n  \"snout\",\n  \"snowbird\",\n  \"snowboard\",\n  \"snowbound\",\n  \"snowcap\",\n  \"snowdrift\",\n  \"snowdrop\",\n  \"snowfall\",\n  \"snowfield\",\n  \"snowflake\",\n  \"snowiness\",\n  \"snowless\",\n  \"snowman\",\n  \"snowplow\",\n  \"snowshoe\",\n  \"snowstorm\",\n  \"snowsuit\",\n  \"snowy\",\n  \"snub\",\n  \"snuff\",\n  \"snuggle\",\n  \"snugly\",\n  \"snugness\",\n  \"speak\",\n  \"spearfish\",\n  \"spearhead\",\n  \"spearman\",\n  \"spearmint\",\n  \"species\",\n  \"specimen\",\n  \"specked\",\n  \"speckled\",\n  \"specks\",\n  \"spectacle\",\n  \"spectator\",\n  \"spectrum\",\n  \"speculate\",\n  \"speech\",\n  \"speed\",\n  \"spellbind\",\n  \"speller\",\n  \"spelling\",\n  \"spendable\",\n  \"spender\",\n  \"spending\",\n  \"spent\",\n  \"spew\",\n  \"sphere\",\n  \"spherical\",\n  \"sphinx\",\n  \"spider\",\n  \"spied\",\n  \"spiffy\",\n  \"spill\",\n  \"spilt\",\n  \"spinach\",\n  \"spinal\",\n  \"spindle\",\n  \"spinner\",\n  \"spinning\",\n  \"spinout\",\n  \"spinster\",\n  \"spiny\",\n  \"spiral\",\n  \"spirited\",\n  \"spiritism\",\n  \"spirits\",\n  \"spiritual\",\n  \"splashed\",\n  \"splashing\",\n  \"splashy\",\n  \"splatter\",\n  \"spleen\",\n  \"splendid\",\n  \"splendor\",\n  \"splice\",\n  \"splicing\",\n  \"splinter\",\n  \"splotchy\",\n  \"splurge\",\n  \"spoilage\",\n  \"spoiled\",\n  \"spoiler\",\n  \"spoiling\",\n  \"spoils\",\n  \"spoken\",\n  \"spokesman\",\n  \"sponge\",\n  \"spongy\",\n  \"sponsor\",\n  \"spoof\",\n  \"spookily\",\n  \"spooky\",\n  \"spool\",\n  \"spoon\",\n  \"spore\",\n  \"sporting\",\n  \"sports\",\n  \"sporty\",\n  \"spotless\",\n  \"spotlight\",\n  \"spotted\",\n  \"spotter\",\n  \"spotting\",\n  \"spotty\",\n  \"spousal\",\n  \"spouse\",\n  \"spout\",\n  \"sprain\",\n  \"sprang\",\n  \"sprawl\",\n  \"spray\",\n  \"spree\",\n  \"sprig\",\n  \"spring\",\n  \"sprinkled\",\n  \"sprinkler\",\n  \"sprint\",\n  \"sprite\",\n  \"sprout\",\n  \"spruce\",\n  \"sprung\",\n  \"spry\",\n  \"spud\",\n  \"spur\",\n  \"sputter\",\n  \"spyglass\",\n  \"squabble\",\n  \"squad\",\n  \"squall\",\n  \"squander\",\n  \"squash\",\n  \"squatted\",\n  \"squatter\",\n  \"squatting\",\n  \"squeak\",\n  \"squealer\",\n  \"squealing\",\n  \"squeamish\",\n  \"squeegee\",\n  \"squeeze\",\n  \"squeezing\",\n  \"squid\",\n  \"squiggle\",\n  \"squiggly\",\n  \"squint\",\n  \"squire\",\n  \"squirt\",\n  \"squishier\",\n  \"squishy\",\n  \"stability\",\n  \"stabilize\",\n  \"stable\",\n  \"stack\",\n  \"stadium\",\n  \"staff\",\n  \"stage\",\n  \"staging\",\n  \"stagnant\",\n  \"stagnate\",\n  \"stainable\",\n  \"stained\",\n  \"staining\",\n  \"stainless\",\n  \"stalemate\",\n  \"staleness\",\n  \"stalling\",\n  \"stallion\",\n  \"stamina\",\n  \"stammer\",\n  \"stamp\",\n  \"stand\",\n  \"stank\",\n  \"staple\",\n  \"stapling\",\n  \"starboard\",\n  \"starch\",\n  \"stardom\",\n  \"stardust\",\n  \"starfish\",\n  \"stargazer\",\n  \"staring\",\n  \"stark\",\n  \"starless\",\n  \"starlet\",\n  \"starlight\",\n  \"starlit\",\n  \"starring\",\n  \"starry\",\n  \"starship\",\n  \"starter\",\n  \"starting\",\n  \"startle\",\n  \"startling\",\n  \"startup\",\n  \"starved\",\n  \"starving\",\n  \"stash\",\n  \"state\",\n  \"static\",\n  \"statistic\",\n  \"statue\",\n  \"stature\",\n  \"status\",\n  \"statute\",\n  \"statutory\",\n  \"staunch\",\n  \"stays\",\n  \"steadfast\",\n  \"steadier\",\n  \"steadily\",\n  \"steadying\",\n  \"steam\",\n  \"steed\",\n  \"steep\",\n  \"steerable\",\n  \"steering\",\n  \"steersman\",\n  \"stegosaur\",\n  \"stellar\",\n  \"stem\",\n  \"stench\",\n  \"stencil\",\n  \"step\",\n  \"stereo\",\n  \"sterile\",\n  \"sterility\",\n  \"sterilize\",\n  \"sterling\",\n  \"sternness\",\n  \"sternum\",\n  \"stew\",\n  \"stick\",\n  \"stiffen\",\n  \"stiffly\",\n  \"stiffness\",\n  \"stifle\",\n  \"stifling\",\n  \"stillness\",\n  \"stilt\",\n  \"stimulant\",\n  \"stimulate\",\n  \"stimuli\",\n  \"stimulus\",\n  \"stinger\",\n  \"stingily\",\n  \"stinging\",\n  \"stingray\",\n  \"stingy\",\n  \"stinking\",\n  \"stinky\",\n  \"stipend\",\n  \"stipulate\",\n  \"stir\",\n  \"stitch\",\n  \"stock\",\n  \"stoic\",\n  \"stoke\",\n  \"stole\",\n  \"stomp\",\n  \"stonewall\",\n  \"stoneware\",\n  \"stonework\",\n  \"stoning\",\n  \"stony\",\n  \"stood\",\n  \"stooge\",\n  \"stool\",\n  \"stoop\",\n  \"stoplight\",\n  \"stoppable\",\n  \"stoppage\",\n  \"stopped\",\n  \"stopper\",\n  \"stopping\",\n  \"stopwatch\",\n  \"storable\",\n  \"storage\",\n  \"storeroom\",\n  \"storewide\",\n  \"storm\",\n  \"stout\",\n  \"stove\",\n  \"stowaway\",\n  \"stowing\",\n  \"straddle\",\n  \"straggler\",\n  \"strained\",\n  \"strainer\",\n  \"straining\",\n  \"strangely\",\n  \"stranger\",\n  \"strangle\",\n  \"strategic\",\n  \"strategy\",\n  \"stratus\",\n  \"straw\",\n  \"stray\",\n  \"streak\",\n  \"stream\",\n  \"street\",\n  \"strength\",\n  \"strenuous\",\n  \"strep\",\n  \"stress\",\n  \"stretch\",\n  \"strewn\",\n  \"stricken\",\n  \"strict\",\n  \"stride\",\n  \"strife\",\n  \"strike\",\n  \"striking\",\n  \"strive\",\n  \"striving\",\n  \"strobe\",\n  \"strode\",\n  \"stroller\",\n  \"strongbox\",\n  \"strongly\",\n  \"strongman\",\n  \"struck\",\n  \"structure\",\n  \"strudel\",\n  \"struggle\",\n  \"strum\",\n  \"strung\",\n  \"strut\",\n  \"stubbed\",\n  \"stubble\",\n  \"stubbly\",\n  \"stubborn\",\n  \"stucco\",\n  \"stuck\",\n  \"student\",\n  \"studied\",\n  \"studio\",\n  \"study\",\n  \"stuffed\",\n  \"stuffing\",\n  \"stuffy\",\n  \"stumble\",\n  \"stumbling\",\n  \"stump\",\n  \"stung\",\n  \"stunned\",\n  \"stunner\",\n  \"stunning\",\n  \"stunt\",\n  \"stupor\",\n  \"sturdily\",\n  \"sturdy\",\n  \"styling\",\n  \"stylishly\",\n  \"stylist\",\n  \"stylized\",\n  \"stylus\",\n  \"suave\",\n  \"subarctic\",\n  \"subatomic\",\n  \"subdivide\",\n  \"subdued\",\n  \"subduing\",\n  \"subfloor\",\n  \"subgroup\",\n  \"subheader\",\n  \"subject\",\n  \"sublease\",\n  \"sublet\",\n  \"sublevel\",\n  \"sublime\",\n  \"submarine\",\n  \"submerge\",\n  \"submersed\",\n  \"submitter\",\n  \"subpanel\",\n  \"subpar\",\n  \"subplot\",\n  \"subprime\",\n  \"subscribe\",\n  \"subscript\",\n  \"subsector\",\n  \"subside\",\n  \"subsiding\",\n  \"subsidize\",\n  \"subsidy\",\n  \"subsoil\",\n  \"subsonic\",\n  \"substance\",\n  \"subsystem\",\n  \"subtext\",\n  \"subtitle\",\n  \"subtly\",\n  \"subtotal\",\n  \"subtract\",\n  \"subtype\",\n  \"suburb\",\n  \"subway\",\n  \"subwoofer\",\n  \"subzero\",\n  \"succulent\",\n  \"such\",\n  \"suction\",\n  \"sudden\",\n  \"sudoku\",\n  \"suds\",\n  \"sufferer\",\n  \"suffering\",\n  \"suffice\",\n  \"suffix\",\n  \"suffocate\",\n  \"suffrage\",\n  \"sugar\",\n  \"suggest\",\n  \"suing\",\n  \"suitable\",\n  \"suitably\",\n  \"suitcase\",\n  \"suitor\",\n  \"sulfate\",\n  \"sulfide\",\n  \"sulfite\",\n  \"sulfur\",\n  \"sulk\",\n  \"sullen\",\n  \"sulphate\",\n  \"sulphuric\",\n  \"sultry\",\n  \"superbowl\",\n  \"superglue\",\n  \"superhero\",\n  \"superior\",\n  \"superjet\",\n  \"superman\",\n  \"supermom\",\n  \"supernova\",\n  \"supervise\",\n  \"supper\",\n  \"supplier\",\n  \"supply\",\n  \"support\",\n  \"supremacy\",\n  \"supreme\",\n  \"surcharge\",\n  \"surely\",\n  \"sureness\",\n  \"surface\",\n  \"surfacing\",\n  \"surfboard\",\n  \"surfer\",\n  \"surgery\",\n  \"surgical\",\n  \"surging\",\n  \"surname\",\n  \"surpass\",\n  \"surplus\",\n  \"surprise\",\n  \"surreal\",\n  \"surrender\",\n  \"surrogate\",\n  \"surround\",\n  \"survey\",\n  \"survival\",\n  \"survive\",\n  \"surviving\",\n  \"survivor\",\n  \"sushi\",\n  \"suspect\",\n  \"suspend\",\n  \"suspense\",\n  \"sustained\",\n  \"sustainer\",\n  \"swab\",\n  \"swaddling\",\n  \"swagger\",\n  \"swampland\",\n  \"swan\",\n  \"swapping\",\n  \"swarm\",\n  \"sway\",\n  \"swear\",\n  \"sweat\",\n  \"sweep\",\n  \"swell\",\n  \"swept\",\n  \"swerve\",\n  \"swifter\",\n  \"swiftly\",\n  \"swiftness\",\n  \"swimmable\",\n  \"swimmer\",\n  \"swimming\",\n  \"swimsuit\",\n  \"swimwear\",\n  \"swinger\",\n  \"swinging\",\n  \"swipe\",\n  \"swirl\",\n  \"switch\",\n  \"swivel\",\n  \"swizzle\",\n  \"swooned\",\n  \"swoop\",\n  \"swoosh\",\n  \"swore\",\n  \"sworn\",\n  \"swung\",\n  \"sycamore\",\n  \"sympathy\",\n  \"symphonic\",\n  \"symphony\",\n  \"symptom\",\n  \"synapse\",\n  \"syndrome\",\n  \"synergy\",\n  \"synopses\",\n  \"synopsis\",\n  \"synthesis\",\n  \"synthetic\",\n  \"syrup\",\n  \"system\",\n  \"t-shirt\",\n  \"tabasco\",\n  \"tabby\",\n  \"tableful\",\n  \"tables\",\n  \"tablet\",\n  \"tableware\",\n  \"tabloid\",\n  \"tackiness\",\n  \"tacking\",\n  \"tackle\",\n  \"tackling\",\n  \"tacky\",\n  \"taco\",\n  \"tactful\",\n  \"tactical\",\n  \"tactics\",\n  \"tactile\",\n  \"tactless\",\n  \"tadpole\",\n  \"taekwondo\",\n  \"tag\",\n  \"tainted\",\n  \"take\",\n  \"taking\",\n  \"talcum\",\n  \"talisman\",\n  \"tall\",\n  \"talon\",\n  \"tamale\",\n  \"tameness\",\n  \"tamer\",\n  \"tamper\",\n  \"tank\",\n  \"tanned\",\n  \"tannery\",\n  \"tanning\",\n  \"tantrum\",\n  \"tapeless\",\n  \"tapered\",\n  \"tapering\",\n  \"tapestry\",\n  \"tapioca\",\n  \"tapping\",\n  \"taps\",\n  \"tarantula\",\n  \"target\",\n  \"tarmac\",\n  \"tarnish\",\n  \"tarot\",\n  \"tartar\",\n  \"tartly\",\n  \"tartness\",\n  \"task\",\n  \"tassel\",\n  \"taste\",\n  \"tastiness\",\n  \"tasting\",\n  \"tasty\",\n  \"tattered\",\n  \"tattle\",\n  \"tattling\",\n  \"tattoo\",\n  \"taunt\",\n  \"tavern\",\n  \"thank\",\n  \"that\",\n  \"thaw\",\n  \"theater\",\n  \"theatrics\",\n  \"thee\",\n  \"theft\",\n  \"theme\",\n  \"theology\",\n  \"theorize\",\n  \"thermal\",\n  \"thermos\",\n  \"thesaurus\",\n  \"these\",\n  \"thesis\",\n  \"thespian\",\n  \"thicken\",\n  \"thicket\",\n  \"thickness\",\n  \"thieving\",\n  \"thievish\",\n  \"thigh\",\n  \"thimble\",\n  \"thing\",\n  \"think\",\n  \"thinly\",\n  \"thinner\",\n  \"thinness\",\n  \"thinning\",\n  \"thirstily\",\n  \"thirsting\",\n  \"thirsty\",\n  \"thirteen\",\n  \"thirty\",\n  \"thong\",\n  \"thorn\",\n  \"those\",\n  \"thousand\",\n  \"thrash\",\n  \"thread\",\n  \"threaten\",\n  \"threefold\",\n  \"thrift\",\n  \"thrill\",\n  \"thrive\",\n  \"thriving\",\n  \"throat\",\n  \"throbbing\",\n  \"throng\",\n  \"throttle\",\n  \"throwaway\",\n  \"throwback\",\n  \"thrower\",\n  \"throwing\",\n  \"thud\",\n  \"thumb\",\n  \"thumping\",\n  \"thursday\",\n  \"thus\",\n  \"thwarting\",\n  \"thyself\",\n  \"tiara\",\n  \"tibia\",\n  \"tidal\",\n  \"tidbit\",\n  \"tidiness\",\n  \"tidings\",\n  \"tidy\",\n  \"tiger\",\n  \"tighten\",\n  \"tightly\",\n  \"tightness\",\n  \"tightrope\",\n  \"tightwad\",\n  \"tigress\",\n  \"tile\",\n  \"tiling\",\n  \"till\",\n  \"tilt\",\n  \"timid\",\n  \"timing\",\n  \"timothy\",\n  \"tinderbox\",\n  \"tinfoil\",\n  \"tingle\",\n  \"tingling\",\n  \"tingly\",\n  \"tinker\",\n  \"tinkling\",\n  \"tinsel\",\n  \"tinsmith\",\n  \"tint\",\n  \"tinwork\",\n  \"tiny\",\n  \"tipoff\",\n  \"tipped\",\n  \"tipper\",\n  \"tipping\",\n  \"tiptoeing\",\n  \"tiptop\",\n  \"tiring\",\n  \"tissue\",\n  \"trace\",\n  \"tracing\",\n  \"track\",\n  \"traction\",\n  \"tractor\",\n  \"trade\",\n  \"trading\",\n  \"tradition\",\n  \"traffic\",\n  \"tragedy\",\n  \"trailing\",\n  \"trailside\",\n  \"train\",\n  \"traitor\",\n  \"trance\",\n  \"tranquil\",\n  \"transfer\",\n  \"transform\",\n  \"translate\",\n  \"transpire\",\n  \"transport\",\n  \"transpose\",\n  \"trapdoor\",\n  \"trapeze\",\n  \"trapezoid\",\n  \"trapped\",\n  \"trapper\",\n  \"trapping\",\n  \"traps\",\n  \"trash\",\n  \"travel\",\n  \"traverse\",\n  \"travesty\",\n  \"tray\",\n  \"treachery\",\n  \"treading\",\n  \"treadmill\",\n  \"treason\",\n  \"treat\",\n  \"treble\",\n  \"tree\",\n  \"trekker\",\n  \"tremble\",\n  \"trembling\",\n  \"tremor\",\n  \"trench\",\n  \"trend\",\n  \"trespass\",\n  \"triage\",\n  \"trial\",\n  \"triangle\",\n  \"tribesman\",\n  \"tribunal\",\n  \"tribune\",\n  \"tributary\",\n  \"tribute\",\n  \"triceps\",\n  \"trickery\",\n  \"trickily\",\n  \"tricking\",\n  \"trickle\",\n  \"trickster\",\n  \"tricky\",\n  \"tricolor\",\n  \"tricycle\",\n  \"trident\",\n  \"tried\",\n  \"trifle\",\n  \"trifocals\",\n  \"trillion\",\n  \"trilogy\",\n  \"trimester\",\n  \"trimmer\",\n  \"trimming\",\n  \"trimness\",\n  \"trinity\",\n  \"trio\",\n  \"tripod\",\n  \"tripping\",\n  \"triumph\",\n  \"trivial\",\n  \"trodden\",\n  \"trolling\",\n  \"trombone\",\n  \"trophy\",\n  \"tropical\",\n  \"tropics\",\n  \"trouble\",\n  \"troubling\",\n  \"trough\",\n  \"trousers\",\n  \"trout\",\n  \"trowel\",\n  \"truce\",\n  \"truck\",\n  \"truffle\",\n  \"trump\",\n  \"trunks\",\n  \"trustable\",\n  \"trustee\",\n  \"trustful\",\n  \"trusting\",\n  \"trustless\",\n  \"truth\",\n  \"try\",\n  \"tubby\",\n  \"tubeless\",\n  \"tubular\",\n  \"tucking\",\n  \"tuesday\",\n  \"tug\",\n  \"tuition\",\n  \"tulip\",\n  \"tumble\",\n  \"tumbling\",\n  \"tummy\",\n  \"turban\",\n  \"turbine\",\n  \"turbofan\",\n  \"turbojet\",\n  \"turbulent\",\n  \"turf\",\n  \"turkey\",\n  \"turmoil\",\n  \"turret\",\n  \"turtle\",\n  \"tusk\",\n  \"tutor\",\n  \"tutu\",\n  \"tux\",\n  \"tweak\",\n  \"tweed\",\n  \"tweet\",\n  \"tweezers\",\n  \"twelve\",\n  \"twentieth\",\n  \"twenty\",\n  \"twerp\",\n  \"twice\",\n  \"twiddle\",\n  \"twiddling\",\n  \"twig\",\n  \"twilight\",\n  \"twine\",\n  \"twins\",\n  \"twirl\",\n  \"twistable\",\n  \"twisted\",\n  \"twister\",\n  \"twisting\",\n  \"twisty\",\n  \"twitch\",\n  \"twitter\",\n  \"tycoon\",\n  \"tying\",\n  \"tyke\",\n  \"udder\",\n  \"ultimate\",\n  \"ultimatum\",\n  \"ultra\",\n  \"umbilical\",\n  \"umbrella\",\n  \"umpire\",\n  \"unabashed\",\n  \"unable\",\n  \"unadorned\",\n  \"unadvised\",\n  \"unafraid\",\n  \"unaired\",\n  \"unaligned\",\n  \"unaltered\",\n  \"unarmored\",\n  \"unashamed\",\n  \"unaudited\",\n  \"unawake\",\n  \"unaware\",\n  \"unbaked\",\n  \"unbalance\",\n  \"unbeaten\",\n  \"unbend\",\n  \"unbent\",\n  \"unbiased\",\n  \"unbitten\",\n  \"unblended\",\n  \"unblessed\",\n  \"unblock\",\n  \"unbolted\",\n  \"unbounded\",\n  \"unboxed\",\n  \"unbraided\",\n  \"unbridle\",\n  \"unbroken\",\n  \"unbuckled\",\n  \"unbundle\",\n  \"unburned\",\n  \"unbutton\",\n  \"uncanny\",\n  \"uncapped\",\n  \"uncaring\",\n  \"uncertain\",\n  \"unchain\",\n  \"unchanged\",\n  \"uncharted\",\n  \"uncheck\",\n  \"uncivil\",\n  \"unclad\",\n  \"unclaimed\",\n  \"unclamped\",\n  \"unclasp\",\n  \"uncle\",\n  \"unclip\",\n  \"uncloak\",\n  \"unclog\",\n  \"unclothed\",\n  \"uncoated\",\n  \"uncoiled\",\n  \"uncolored\",\n  \"uncombed\",\n  \"uncommon\",\n  \"uncooked\",\n  \"uncork\",\n  \"uncorrupt\",\n  \"uncounted\",\n  \"uncouple\",\n  \"uncouth\",\n  \"uncover\",\n  \"uncross\",\n  \"uncrown\",\n  \"uncrushed\",\n  \"uncured\",\n  \"uncurious\",\n  \"uncurled\",\n  \"uncut\",\n  \"undamaged\",\n  \"undated\",\n  \"undaunted\",\n  \"undead\",\n  \"undecided\",\n  \"undefined\",\n  \"underage\",\n  \"underarm\",\n  \"undercoat\",\n  \"undercook\",\n  \"undercut\",\n  \"underdog\",\n  \"underdone\",\n  \"underfed\",\n  \"underfeed\",\n  \"underfoot\",\n  \"undergo\",\n  \"undergrad\",\n  \"underhand\",\n  \"underline\",\n  \"underling\",\n  \"undermine\",\n  \"undermost\",\n  \"underpaid\",\n  \"underpass\",\n  \"underpay\",\n  \"underrate\",\n  \"undertake\",\n  \"undertone\",\n  \"undertook\",\n  \"undertow\",\n  \"underuse\",\n  \"underwear\",\n  \"underwent\",\n  \"underwire\",\n  \"undesired\",\n  \"undiluted\",\n  \"undivided\",\n  \"undocked\",\n  \"undoing\",\n  \"undone\",\n  \"undrafted\",\n  \"undress\",\n  \"undrilled\",\n  \"undusted\",\n  \"undying\",\n  \"unearned\",\n  \"unearth\",\n  \"unease\",\n  \"uneasily\",\n  \"uneasy\",\n  \"uneatable\",\n  \"uneaten\",\n  \"unedited\",\n  \"unelected\",\n  \"unending\",\n  \"unengaged\",\n  \"unenvied\",\n  \"unequal\",\n  \"unethical\",\n  \"uneven\",\n  \"unexpired\",\n  \"unexposed\",\n  \"unfailing\",\n  \"unfair\",\n  \"unfasten\",\n  \"unfazed\",\n  \"unfeeling\",\n  \"unfiled\",\n  \"unfilled\",\n  \"unfitted\",\n  \"unfitting\",\n  \"unfixable\",\n  \"unfixed\",\n  \"unflawed\",\n  \"unfocused\",\n  \"unfold\",\n  \"unfounded\",\n  \"unframed\",\n  \"unfreeze\",\n  \"unfrosted\",\n  \"unfrozen\",\n  \"unfunded\",\n  \"unglazed\",\n  \"ungloved\",\n  \"unglue\",\n  \"ungodly\",\n  \"ungraded\",\n  \"ungreased\",\n  \"unguarded\",\n  \"unguided\",\n  \"unhappily\",\n  \"unhappy\",\n  \"unharmed\",\n  \"unhealthy\",\n  \"unheard\",\n  \"unhearing\",\n  \"unheated\",\n  \"unhelpful\",\n  \"unhidden\",\n  \"unhinge\",\n  \"unhitched\",\n  \"unholy\",\n  \"unhook\",\n  \"unicorn\",\n  \"unicycle\",\n  \"unified\",\n  \"unifier\",\n  \"uniformed\",\n  \"uniformly\",\n  \"unify\",\n  \"unimpeded\",\n  \"uninjured\",\n  \"uninstall\",\n  \"uninsured\",\n  \"uninvited\",\n  \"union\",\n  \"uniquely\",\n  \"unisexual\",\n  \"unison\",\n  \"unissued\",\n  \"unit\",\n  \"universal\",\n  \"universe\",\n  \"unjustly\",\n  \"unkempt\",\n  \"unkind\",\n  \"unknotted\",\n  \"unknowing\",\n  \"unknown\",\n  \"unlaced\",\n  \"unlatch\",\n  \"unlawful\",\n  \"unleaded\",\n  \"unlearned\",\n  \"unleash\",\n  \"unless\",\n  \"unleveled\",\n  \"unlighted\",\n  \"unlikable\",\n  \"unlimited\",\n  \"unlined\",\n  \"unlinked\",\n  \"unlisted\",\n  \"unlit\",\n  \"unlivable\",\n  \"unloaded\",\n  \"unloader\",\n  \"unlocked\",\n  \"unlocking\",\n  \"unlovable\",\n  \"unloved\",\n  \"unlovely\",\n  \"unloving\",\n  \"unluckily\",\n  \"unlucky\",\n  \"unmade\",\n  \"unmanaged\",\n  \"unmanned\",\n  \"unmapped\",\n  \"unmarked\",\n  \"unmasked\",\n  \"unmasking\",\n  \"unmatched\",\n  \"unmindful\",\n  \"unmixable\",\n  \"unmixed\",\n  \"unmolded\",\n  \"unmoral\",\n  \"unmovable\",\n  \"unmoved\",\n  \"unmoving\",\n  \"unnamable\",\n  \"unnamed\",\n  \"unnatural\",\n  \"unneeded\",\n  \"unnerve\",\n  \"unnerving\",\n  \"unnoticed\",\n  \"unopened\",\n  \"unopposed\",\n  \"unpack\",\n  \"unpadded\",\n  \"unpaid\",\n  \"unpainted\",\n  \"unpaired\",\n  \"unpaved\",\n  \"unpeeled\",\n  \"unpicked\",\n  \"unpiloted\",\n  \"unpinned\",\n  \"unplanned\",\n  \"unplanted\",\n  \"unpleased\",\n  \"unpledged\",\n  \"unplowed\",\n  \"unplug\",\n  \"unpopular\",\n  \"unproven\",\n  \"unquote\",\n  \"unranked\",\n  \"unrated\",\n  \"unraveled\",\n  \"unreached\",\n  \"unread\",\n  \"unreal\",\n  \"unreeling\",\n  \"unrefined\",\n  \"unrelated\",\n  \"unrented\",\n  \"unrest\",\n  \"unretired\",\n  \"unrevised\",\n  \"unrigged\",\n  \"unripe\",\n  \"unrivaled\",\n  \"unroasted\",\n  \"unrobed\",\n  \"unroll\",\n  \"unruffled\",\n  \"unruly\",\n  \"unrushed\",\n  \"unsaddle\",\n  \"unsafe\",\n  \"unsaid\",\n  \"unsalted\",\n  \"unsaved\",\n  \"unsavory\",\n  \"unscathed\",\n  \"unscented\",\n  \"unscrew\",\n  \"unsealed\",\n  \"unseated\",\n  \"unsecured\",\n  \"unseeing\",\n  \"unseemly\",\n  \"unseen\",\n  \"unselect\",\n  \"unselfish\",\n  \"unsent\",\n  \"unsettled\",\n  \"unshackle\",\n  \"unshaken\",\n  \"unshaved\",\n  \"unshaven\",\n  \"unsheathe\",\n  \"unshipped\",\n  \"unsightly\",\n  \"unsigned\",\n  \"unskilled\",\n  \"unsliced\",\n  \"unsmooth\",\n  \"unsnap\",\n  \"unsocial\",\n  \"unsoiled\",\n  \"unsold\",\n  \"unsolved\",\n  \"unsorted\",\n  \"unspoiled\",\n  \"unspoken\",\n  \"unstable\",\n  \"unstaffed\",\n  \"unstamped\",\n  \"unsteady\",\n  \"unsterile\",\n  \"unstirred\",\n  \"unstitch\",\n  \"unstopped\",\n  \"unstuck\",\n  \"unstuffed\",\n  \"unstylish\",\n  \"unsubtle\",\n  \"unsubtly\",\n  \"unsuited\",\n  \"unsure\",\n  \"unsworn\",\n  \"untagged\",\n  \"untainted\",\n  \"untaken\",\n  \"untamed\",\n  \"untangled\",\n  \"untapped\",\n  \"untaxed\",\n  \"unthawed\",\n  \"unthread\",\n  \"untidy\",\n  \"untie\",\n  \"until\",\n  \"untimed\",\n  \"untimely\",\n  \"untitled\",\n  \"untoasted\",\n  \"untold\",\n  \"untouched\",\n  \"untracked\",\n  \"untrained\",\n  \"untreated\",\n  \"untried\",\n  \"untrimmed\",\n  \"untrue\",\n  \"untruth\",\n  \"unturned\",\n  \"untwist\",\n  \"untying\",\n  \"unusable\",\n  \"unused\",\n  \"unusual\",\n  \"unvalued\",\n  \"unvaried\",\n  \"unvarying\",\n  \"unveiled\",\n  \"unveiling\",\n  \"unvented\",\n  \"unviable\",\n  \"unvisited\",\n  \"unvocal\",\n  \"unwanted\",\n  \"unwarlike\",\n  \"unwary\",\n  \"unwashed\",\n  \"unwatched\",\n  \"unweave\",\n  \"unwed\",\n  \"unwelcome\",\n  \"unwell\",\n  \"unwieldy\",\n  \"unwilling\",\n  \"unwind\",\n  \"unwired\",\n  \"unwitting\",\n  \"unwomanly\",\n  \"unworldly\",\n  \"unworn\",\n  \"unworried\",\n  \"unworthy\",\n  \"unwound\",\n  \"unwoven\",\n  \"unwrapped\",\n  \"unwritten\",\n  \"unzip\",\n  \"upbeat\",\n  \"upchuck\",\n  \"upcoming\",\n  \"upcountry\",\n  \"update\",\n  \"upfront\",\n  \"upgrade\",\n  \"upheaval\",\n  \"upheld\",\n  \"uphill\",\n  \"uphold\",\n  \"uplifted\",\n  \"uplifting\",\n  \"upload\",\n  \"upon\",\n  \"upper\",\n  \"upright\",\n  \"uprising\",\n  \"upriver\",\n  \"uproar\",\n  \"uproot\",\n  \"upscale\",\n  \"upside\",\n  \"upstage\",\n  \"upstairs\",\n  \"upstart\",\n  \"upstate\",\n  \"upstream\",\n  \"upstroke\",\n  \"upswing\",\n  \"uptake\",\n  \"uptight\",\n  \"uptown\",\n  \"upturned\",\n  \"upward\",\n  \"upwind\",\n  \"uranium\",\n  \"urban\",\n  \"urchin\",\n  \"urethane\",\n  \"urgency\",\n  \"urgent\",\n  \"urging\",\n  \"urologist\",\n  \"urology\",\n  \"usable\",\n  \"usage\",\n  \"useable\",\n  \"used\",\n  \"uselessly\",\n  \"user\",\n  \"usher\",\n  \"usual\",\n  \"utensil\",\n  \"utility\",\n  \"utilize\",\n  \"utmost\",\n  \"utopia\",\n  \"utter\",\n  \"vacancy\",\n  \"vacant\",\n  \"vacate\",\n  \"vacation\",\n  \"vagabond\",\n  \"vagrancy\",\n  \"vagrantly\",\n  \"vaguely\",\n  \"vagueness\",\n  \"valiant\",\n  \"valid\",\n  \"valium\",\n  \"valley\",\n  \"valuables\",\n  \"value\",\n  \"vanilla\",\n  \"vanish\",\n  \"vanity\",\n  \"vanquish\",\n  \"vantage\",\n  \"vaporizer\",\n  \"variable\",\n  \"variably\",\n  \"varied\",\n  \"variety\",\n  \"various\",\n  \"varmint\",\n  \"varnish\",\n  \"varsity\",\n  \"varying\",\n  \"vascular\",\n  \"vaseline\",\n  \"vastly\",\n  \"vastness\",\n  \"veal\",\n  \"vegan\",\n  \"veggie\",\n  \"vehicular\",\n  \"velcro\",\n  \"velocity\",\n  \"velvet\",\n  \"vendetta\",\n  \"vending\",\n  \"vendor\",\n  \"veneering\",\n  \"vengeful\",\n  \"venomous\",\n  \"ventricle\",\n  \"venture\",\n  \"venue\",\n  \"venus\",\n  \"verbalize\",\n  \"verbally\",\n  \"verbose\",\n  \"verdict\",\n  \"verify\",\n  \"verse\",\n  \"version\",\n  \"versus\",\n  \"vertebrae\",\n  \"vertical\",\n  \"vertigo\",\n  \"very\",\n  \"vessel\",\n  \"vest\",\n  \"veteran\",\n  \"veto\",\n  \"vexingly\",\n  \"viability\",\n  \"viable\",\n  \"vibes\",\n  \"vice\",\n  \"vicinity\",\n  \"victory\",\n  \"video\",\n  \"viewable\",\n  \"viewer\",\n  \"viewing\",\n  \"viewless\",\n  \"viewpoint\",\n  \"vigorous\",\n  \"village\",\n  \"villain\",\n  \"vindicate\",\n  \"vineyard\",\n  \"vintage\",\n  \"violate\",\n  \"violation\",\n  \"violator\",\n  \"violet\",\n  \"violin\",\n  \"viper\",\n  \"viral\",\n  \"virtual\",\n  \"virtuous\",\n  \"virus\",\n  \"visa\",\n  \"viscosity\",\n  \"viscous\",\n  \"viselike\",\n  \"visible\",\n  \"visibly\",\n  \"vision\",\n  \"visiting\",\n  \"visitor\",\n  \"visor\",\n  \"vista\",\n  \"vitality\",\n  \"vitalize\",\n  \"vitally\",\n  \"vitamins\",\n  \"vivacious\",\n  \"vividly\",\n  \"vividness\",\n  \"vixen\",\n  \"vocalist\",\n  \"vocalize\",\n  \"vocally\",\n  \"vocation\",\n  \"voice\",\n  \"voicing\",\n  \"void\",\n  \"volatile\",\n  \"volley\",\n  \"voltage\",\n  \"volumes\",\n  \"voter\",\n  \"voting\",\n  \"voucher\",\n  \"vowed\",\n  \"vowel\",\n  \"voyage\",\n  \"wackiness\",\n  \"wad\",\n  \"wafer\",\n  \"waffle\",\n  \"waged\",\n  \"wager\",\n  \"wages\",\n  \"waggle\",\n  \"wagon\",\n  \"wake\",\n  \"waking\",\n  \"walk\",\n  \"walmart\",\n  \"walnut\",\n  \"walrus\",\n  \"waltz\",\n  \"wand\",\n  \"wannabe\",\n  \"wanted\",\n  \"wanting\",\n  \"wasabi\",\n  \"washable\",\n  \"washbasin\",\n  \"washboard\",\n  \"washbowl\",\n  \"washcloth\",\n  \"washday\",\n  \"washed\",\n  \"washer\",\n  \"washhouse\",\n  \"washing\",\n  \"washout\",\n  \"washroom\",\n  \"washstand\",\n  \"washtub\",\n  \"wasp\",\n  \"wasting\",\n  \"watch\",\n  \"water\",\n  \"waviness\",\n  \"waving\",\n  \"wavy\",\n  \"whacking\",\n  \"whacky\",\n  \"wham\",\n  \"wharf\",\n  \"wheat\",\n  \"whenever\",\n  \"whiff\",\n  \"whimsical\",\n  \"whinny\",\n  \"whiny\",\n  \"whisking\",\n  \"whoever\",\n  \"whole\",\n  \"whomever\",\n  \"whoopee\",\n  \"whooping\",\n  \"whoops\",\n  \"why\",\n  \"wick\",\n  \"widely\",\n  \"widen\",\n  \"widget\",\n  \"widow\",\n  \"width\",\n  \"wieldable\",\n  \"wielder\",\n  \"wife\",\n  \"wifi\",\n  \"wikipedia\",\n  \"wildcard\",\n  \"wildcat\",\n  \"wilder\",\n  \"wildfire\",\n  \"wildfowl\",\n  \"wildland\",\n  \"wildlife\",\n  \"wildly\",\n  \"wildness\",\n  \"willed\",\n  \"willfully\",\n  \"willing\",\n  \"willow\",\n  \"willpower\",\n  \"wilt\",\n  \"wimp\",\n  \"wince\",\n  \"wincing\",\n  \"wind\",\n  \"wing\",\n  \"winking\",\n  \"winner\",\n  \"winnings\",\n  \"winter\",\n  \"wipe\",\n  \"wired\",\n  \"wireless\",\n  \"wiring\",\n  \"wiry\",\n  \"wisdom\",\n  \"wise\",\n  \"wish\",\n  \"wisplike\",\n  \"wispy\",\n  \"wistful\",\n  \"wizard\",\n  \"wobble\",\n  \"wobbling\",\n  \"wobbly\",\n  \"wok\",\n  \"wolf\",\n  \"wolverine\",\n  \"womanhood\",\n  \"womankind\",\n  \"womanless\",\n  \"womanlike\",\n  \"womanly\",\n  \"womb\",\n  \"woof\",\n  \"wooing\",\n  \"wool\",\n  \"woozy\",\n  \"word\",\n  \"work\",\n  \"worried\",\n  \"worrier\",\n  \"worrisome\",\n  \"worry\",\n  \"worsening\",\n  \"worshiper\",\n  \"worst\",\n  \"wound\",\n  \"woven\",\n  \"wow\",\n  \"wrangle\",\n  \"wrath\",\n  \"wreath\",\n  \"wreckage\",\n  \"wrecker\",\n  \"wrecking\",\n  \"wrench\",\n  \"wriggle\",\n  \"wriggly\",\n  \"wrinkle\",\n  \"wrinkly\",\n  \"wrist\",\n  \"writing\",\n  \"written\",\n  \"wrongdoer\",\n  \"wronged\",\n  \"wrongful\",\n  \"wrongly\",\n  \"wrongness\",\n  \"wrought\",\n  \"xbox\",\n  \"xerox\",\n  \"yahoo\",\n  \"yam\",\n  \"yanking\",\n  \"yapping\",\n  \"yard\",\n  \"yarn\",\n  \"yeah\",\n  \"yearbook\",\n  \"yearling\",\n  \"yearly\",\n  \"yearning\",\n  \"yeast\",\n  \"yelling\",\n  \"yelp\",\n  \"yen\",\n  \"yesterday\",\n  \"yiddish\",\n  \"yield\",\n  \"yin\",\n  \"yippee\",\n  \"yo-yo\",\n  \"yodel\",\n  \"yoga\",\n  \"yogurt\",\n  \"yonder\",\n  \"yoyo\",\n  \"yummy\",\n  \"zap\",\n  \"zealous\",\n  \"zebra\",\n  \"zen\",\n  \"zeppelin\",\n  \"zero\",\n  \"zestfully\",\n  \"zesty\",\n  \"zigzagged\",\n  \"zipfile\",\n  \"zipping\",\n  \"zippy\",\n  \"zips\",\n  \"zit\",\n  \"zodiac\",\n  \"zombie\",\n  \"zone\",\n  \"zoning\",\n  \"zookeeper\",\n  \"zoologist\",\n  \"zoology\",\n  \"zoom\",\n];\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class CardApi extends BaseResponse {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.cardholderName = this.getResponseProperty(\"CardholderName\");\n    this.brand = this.getResponseProperty(\"Brand\");\n    this.number = this.getResponseProperty(\"Number\");\n    this.expMonth = this.getResponseProperty(\"ExpMonth\");\n    this.expYear = this.getResponseProperty(\"ExpYear\");\n    this.code = this.getResponseProperty(\"Code\");\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class FieldApi extends BaseResponse {\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.value = this.getResponseProperty(\"Value\");\n    this.linkedId = this.getResponseProperty(\"linkedId\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class IdentityApi extends BaseResponse {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.title = this.getResponseProperty(\"Title\");\n    this.firstName = this.getResponseProperty(\"FirstName\");\n    this.middleName = this.getResponseProperty(\"MiddleName\");\n    this.lastName = this.getResponseProperty(\"LastName\");\n    this.address1 = this.getResponseProperty(\"Address1\");\n    this.address2 = this.getResponseProperty(\"Address2\");\n    this.address3 = this.getResponseProperty(\"Address3\");\n    this.city = this.getResponseProperty(\"City\");\n    this.state = this.getResponseProperty(\"State\");\n    this.postalCode = this.getResponseProperty(\"PostalCode\");\n    this.country = this.getResponseProperty(\"Country\");\n    this.company = this.getResponseProperty(\"Company\");\n    this.email = this.getResponseProperty(\"Email\");\n    this.phone = this.getResponseProperty(\"Phone\");\n    this.ssn = this.getResponseProperty(\"SSN\");\n    this.username = this.getResponseProperty(\"Username\");\n    this.passportNumber = this.getResponseProperty(\"PassportNumber\");\n    this.licenseNumber = this.getResponseProperty(\"LicenseNumber\");\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class LoginUriApi extends BaseResponse {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.uri = this.getResponseProperty(\"Uri\");\n    const match = this.getResponseProperty(\"Match\");\n    this.match = match != null ? match : null;\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nimport { LoginUriApi } from \"./login-uri.api\";\n\nexport class LoginApi extends BaseResponse {\n  uris: LoginUriApi[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.username = this.getResponseProperty(\"Username\");\n    this.password = this.getResponseProperty(\"Password\");\n    this.passwordRevisionDate = this.getResponseProperty(\"PasswordRevisionDate\");\n    this.totp = this.getResponseProperty(\"Totp\");\n    this.autofillOnPageLoad = this.getResponseProperty(\"AutofillOnPageLoad\");\n\n    const uris = this.getResponseProperty(\"Uris\");\n    if (uris != null) {\n      this.uris = uris.map((u: any) => new LoginUriApi(u));\n    }\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class PermissionsApi extends BaseResponse {\n  accessEventLogs: boolean;\n  accessImportExport: boolean;\n  accessReports: boolean;\n  createNewCollections: boolean;\n  editAnyCollection: boolean;\n  deleteAnyCollection: boolean;\n  editAssignedCollections: boolean;\n  deleteAssignedCollections: boolean;\n  manageCiphers: boolean;\n  manageGroups: boolean;\n  manageSso: boolean;\n  managePolicies: boolean;\n  manageUsers: boolean;\n  manageResetPassword: boolean;\n  manageScim: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return this;\n    }\n    this.accessEventLogs = this.getResponseProperty(\"AccessEventLogs\");\n    this.accessImportExport = this.getResponseProperty(\"AccessImportExport\");\n    this.accessReports = this.getResponseProperty(\"AccessReports\");\n\n    this.createNewCollections = this.getResponseProperty(\"CreateNewCollections\");\n    this.editAnyCollection = this.getResponseProperty(\"EditAnyCollection\");\n    this.deleteAnyCollection = this.getResponseProperty(\"DeleteAnyCollection\");\n    this.editAssignedCollections = this.getResponseProperty(\"EditAssignedCollections\");\n    this.deleteAssignedCollections = this.getResponseProperty(\"DeleteAssignedCollections\");\n\n    this.manageCiphers = this.getResponseProperty(\"ManageCiphers\");\n    this.manageGroups = this.getResponseProperty(\"ManageGroups\");\n    this.manageSso = this.getResponseProperty(\"ManageSso\");\n    this.managePolicies = this.getResponseProperty(\"ManagePolicies\");\n    this.manageUsers = this.getResponseProperty(\"ManageUsers\");\n    this.manageResetPassword = this.getResponseProperty(\"ManageResetPassword\");\n    this.manageScim = this.getResponseProperty(\"ManageScim\");\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { BaseResponse } from \"../response/base.response\";\n\nexport class SecureNoteApi extends BaseResponse {\n  type: SecureNoteType;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.type = this.getResponseProperty(\"Type\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendFileApi extends BaseResponse {\n  id: string;\n  fileName: string;\n  size: string;\n  sizeName: string;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.id = this.getResponseProperty(\"Id\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../response/base.response\";\n\nexport class SendTextApi extends BaseResponse {\n  text: string;\n  hidden: boolean;\n\n  constructor(data: any = null) {\n    super(data);\n    if (data == null) {\n      return;\n    }\n    this.text = this.getResponseProperty(\"Text\");\n    this.hidden = this.getResponseProperty(\"Hidden\") || false;\n  }\n}\n","import { CollectionDetailsResponse } from \"../response/collection.response\";\n\nexport class CollectionData {\n  id: string;\n  organizationId: string;\n  name: string;\n  externalId: string;\n  readOnly: boolean;\n\n  constructor(response: CollectionDetailsResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.name = response.name;\n    this.externalId = response.externalId;\n    this.readOnly = response.readOnly;\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyResponse } from \"../response/policy.response\";\n\nexport class PolicyData {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: PolicyResponse) {\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.type = response.type;\n    this.data = response.data;\n    this.enabled = response.enabled;\n  }\n}\n","import { CollectionData } from \"../data/collection.data\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\n\nexport class Collection extends Domain {\n  id: string;\n  organizationId: string;\n  name: EncString;\n  externalId: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(obj?: CollectionData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        name: null,\n        externalId: null,\n        readOnly: null,\n        hidePasswords: null,\n      },\n      [\"id\", \"organizationId\", \"externalId\", \"readOnly\", \"hidePasswords\"]\n    );\n  }\n\n  decrypt(): Promise<CollectionView> {\n    return this.decryptObj(\n      new CollectionView(this),\n      {\n        name: null,\n      },\n      this.organizationId\n    );\n  }\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\n// https://contributing.bitwarden.com/architecture/clients/data-model#domain\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    if (obj == null) {\n      return null;\n    }\n\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n}\n","import Domain from \"./domain-base\";\n\nexport class MasterPasswordPolicyOptions extends Domain {\n  minComplexity = 0;\n  minLength = 0;\n  requireUpper = false;\n  requireLower = false;\n  requireNumbers = false;\n  requireSpecial = false;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { OrganizationUserStatusType } from \"../../enums/organizationUserStatusType\";\nimport { OrganizationUserType } from \"../../enums/organizationUserType\";\nimport { ProductType } from \"../../enums/productType\";\nimport { PermissionsApi } from \"../api/permissions.api\";\nimport { OrganizationData } from \"../data/organization.data\";\n\nexport class Organization {\n  id: string;\n  name: string;\n  status: OrganizationUserStatusType;\n  type: OrganizationUserType;\n  enabled: boolean;\n  usePolicies: boolean;\n  useGroups: boolean;\n  useDirectory: boolean;\n  useEvents: boolean;\n  useTotp: boolean;\n  use2fa: boolean;\n  useApi: boolean;\n  useSso: boolean;\n  useKeyConnector: boolean;\n  useScim: boolean;\n  useCustomPermissions: boolean;\n  useResetPassword: boolean;\n  useSecretsManager: boolean;\n  useActivateAutofillPolicy: boolean;\n  selfHost: boolean;\n  usersGetPremium: boolean;\n  seats: number;\n  maxCollections: number;\n  maxStorageGb?: number;\n  ssoBound: boolean;\n  identifier: string;\n  permissions: PermissionsApi;\n  resetPasswordEnrolled: boolean;\n  userId: string;\n  hasPublicAndPrivateKeys: boolean;\n  providerId: string;\n  providerName: string;\n  isProviderUser: boolean;\n  familySponsorshipFriendlyName: string;\n  familySponsorshipAvailable: boolean;\n  planProductType: ProductType;\n  keyConnectorEnabled: boolean;\n  keyConnectorUrl: string;\n  familySponsorshipLastSyncDate?: Date;\n  familySponsorshipValidUntil?: Date;\n  familySponsorshipToDelete?: boolean;\n  accessSecretsManager: boolean;\n\n  constructor(obj?: OrganizationData) {\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.name = obj.name;\n    this.status = obj.status;\n    this.type = obj.type;\n    this.enabled = obj.enabled;\n    this.usePolicies = obj.usePolicies;\n    this.useGroups = obj.useGroups;\n    this.useDirectory = obj.useDirectory;\n    this.useEvents = obj.useEvents;\n    this.useTotp = obj.useTotp;\n    this.use2fa = obj.use2fa;\n    this.useApi = obj.useApi;\n    this.useSso = obj.useSso;\n    this.useKeyConnector = obj.useKeyConnector;\n    this.useScim = obj.useScim;\n    this.useCustomPermissions = obj.useCustomPermissions;\n    this.useResetPassword = obj.useResetPassword;\n    this.useSecretsManager = obj.useSecretsManager;\n    this.useActivateAutofillPolicy = obj.useActivateAutofillPolicy;\n    this.selfHost = obj.selfHost;\n    this.usersGetPremium = obj.usersGetPremium;\n    this.seats = obj.seats;\n    this.maxCollections = obj.maxCollections;\n    this.maxStorageGb = obj.maxStorageGb;\n    this.ssoBound = obj.ssoBound;\n    this.identifier = obj.identifier;\n    this.permissions = obj.permissions;\n    this.resetPasswordEnrolled = obj.resetPasswordEnrolled;\n    this.userId = obj.userId;\n    this.hasPublicAndPrivateKeys = obj.hasPublicAndPrivateKeys;\n    this.providerId = obj.providerId;\n    this.providerName = obj.providerName;\n    this.isProviderUser = obj.isProviderUser;\n    this.familySponsorshipFriendlyName = obj.familySponsorshipFriendlyName;\n    this.familySponsorshipAvailable = obj.familySponsorshipAvailable;\n    this.planProductType = obj.planProductType;\n    this.keyConnectorEnabled = obj.keyConnectorEnabled;\n    this.keyConnectorUrl = obj.keyConnectorUrl;\n    this.familySponsorshipLastSyncDate = obj.familySponsorshipLastSyncDate;\n    this.familySponsorshipValidUntil = obj.familySponsorshipValidUntil;\n    this.familySponsorshipToDelete = obj.familySponsorshipToDelete;\n    this.accessSecretsManager = obj.accessSecretsManager;\n  }\n\n  get canAccess() {\n    if (this.type === OrganizationUserType.Owner) {\n      return true;\n    }\n    return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n  }\n\n  get isManager() {\n    return (\n      this.type === OrganizationUserType.Manager ||\n      this.type === OrganizationUserType.Owner ||\n      this.type === OrganizationUserType.Admin\n    );\n  }\n\n  get isAdmin() {\n    return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n  }\n\n  get isOwner() {\n    return this.type === OrganizationUserType.Owner || this.isProviderUser;\n  }\n\n  get canAccessEventLogs() {\n    return (this.isAdmin || this.permissions.accessEventLogs) && this.useEvents;\n  }\n\n  get canAccessImportExport() {\n    return this.isAdmin || this.permissions.accessImportExport;\n  }\n\n  get canAccessReports() {\n    return this.isAdmin || this.permissions.accessReports;\n  }\n\n  get canCreateNewCollections() {\n    return this.isManager || this.permissions.createNewCollections;\n  }\n\n  get canEditAnyCollection() {\n    return this.isAdmin || this.permissions.editAnyCollection;\n  }\n\n  get canUseAdminCollections() {\n    return this.canEditAnyCollection;\n  }\n\n  get canDeleteAnyCollection() {\n    return this.isAdmin || this.permissions.deleteAnyCollection;\n  }\n\n  get canViewAllCollections() {\n    return this.canCreateNewCollections || this.canEditAnyCollection || this.canDeleteAnyCollection;\n  }\n\n  get canEditAssignedCollections() {\n    return this.isManager || this.permissions.editAssignedCollections;\n  }\n\n  get canDeleteAssignedCollections() {\n    return this.isManager || this.permissions.deleteAssignedCollections;\n  }\n\n  get canViewAssignedCollections() {\n    return this.canDeleteAssignedCollections || this.canEditAssignedCollections;\n  }\n\n  get canManageGroups() {\n    return (this.isAdmin || this.permissions.manageGroups) && this.useGroups;\n  }\n\n  get canManageSso() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageDomainVerification() {\n    return (this.isAdmin || this.permissions.manageSso) && this.useSso;\n  }\n\n  get canManageScim() {\n    return (this.isAdmin || this.permissions.manageScim) && this.useScim;\n  }\n\n  get canManagePolicies() {\n    return (this.isAdmin || this.permissions.managePolicies) && this.usePolicies;\n  }\n\n  get canManageUsers() {\n    return this.isAdmin || this.permissions.manageUsers;\n  }\n\n  get canManageUsersPassword() {\n    return this.isAdmin || this.permissions.manageResetPassword;\n  }\n\n  get isExemptFromPolicies() {\n    return this.canManagePolicies;\n  }\n\n  get canManageBilling() {\n    return this.isOwner && (this.isProviderUser || !this.hasProvider);\n  }\n\n  get hasProvider() {\n    return this.providerId != null || this.providerName != null;\n  }\n\n  get canAccessSecretsManager() {\n    return this.useSecretsManager && this.accessSecretsManager;\n  }\n\n  static fromJSON(json: Jsonify<Organization>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new Organization(), json, {\n      familySponsorshipLastSyncDate: new Date(json.familySponsorshipLastSyncDate),\n      familySponsorshipValidUntil: new Date(json.familySponsorshipValidUntil),\n    });\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\nimport { PolicyData } from \"../data/policy.data\";\n\nimport Domain from \"./domain-base\";\n\nexport class Policy extends Domain {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(obj?: PolicyData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.id = obj.id;\n    this.organizationId = obj.organizationId;\n    this.type = obj.type;\n    this.data = obj.data;\n    this.enabled = obj.enabled;\n  }\n}\n","import { SendFileData } from \"../data/send-file.data\";\nimport { SendFileView } from \"../view/send-file.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendFile extends Domain {\n  id: string;\n  size: string;\n  sizeName: string;\n  fileName: EncString;\n\n  constructor(obj?: SendFileData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        sizeName: null,\n        fileName: null,\n      },\n      [\"id\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(key: SymmetricCryptoKey): Promise<SendFileView> {\n    const view = await this.decryptObj(\n      new SendFileView(this),\n      {\n        fileName: null,\n      },\n      null,\n      key\n    );\n    return view;\n  }\n}\n","import { SendTextData } from \"../data/send-text.data\";\nimport { SendTextView } from \"../view/send-text.view\";\n\nimport Domain from \"./domain-base\";\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class SendText extends Domain {\n  text: EncString;\n  hidden: boolean;\n\n  constructor(obj?: SendTextData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.hidden = obj.hidden;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        text: null,\n      },\n      []\n    );\n  }\n\n  decrypt(key: SymmetricCryptoKey): Promise<SendTextView> {\n    return this.decryptObj(\n      new SendTextView(this),\n      {\n        text: null,\n      },\n      null,\n      key\n    );\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n  node: T;\n  parent: TreeNode<T>;\n  children: TreeNode<T>[] = [];\n\n  constructor(node: T, parent: TreeNode<T>, name?: string, id?: string) {\n    this.parent = parent;\n    this.node = node;\n    if (name) {\n      this.node.name = name;\n    }\n    if (id) {\n      this.node.id = id;\n    }\n  }\n}\n\nexport interface ITreeNodeObject {\n  id: string;\n  name: string;\n}\n","import { Card as CardDomain } from \"../../vault/models/domain/card\";\nimport { CardView } from \"../../vault/models/view/card.view\";\nimport { EncString } from \"../domain/enc-string\";\n\nexport class CardExport {\n  static template(): CardExport {\n    const req = new CardExport();\n    req.cardholderName = \"John Doe\";\n    req.brand = \"visa\";\n    req.number = \"4242424242424242\";\n    req.expMonth = \"04\";\n    req.expYear = \"2023\";\n    req.code = \"123\";\n    return req;\n  }\n\n  static toView(req: CardExport, view = new CardView()) {\n    view.cardholderName = req.cardholderName;\n    view.brand = req.brand;\n    view.number = req.number;\n    view.expMonth = req.expMonth;\n    view.expYear = req.expYear;\n    view.code = req.code;\n    return view;\n  }\n\n  static toDomain(req: CardExport, domain = new CardDomain()) {\n    domain.cardholderName = req.cardholderName != null ? new EncString(req.cardholderName) : null;\n    domain.brand = req.brand != null ? new EncString(req.brand) : null;\n    domain.number = req.number != null ? new EncString(req.number) : null;\n    domain.expMonth = req.expMonth != null ? new EncString(req.expMonth) : null;\n    domain.expYear = req.expYear != null ? new EncString(req.expYear) : null;\n    domain.code = req.code != null ? new EncString(req.code) : null;\n    return domain;\n  }\n\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(o?: CardView | CardDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof CardView) {\n      this.cardholderName = o.cardholderName;\n      this.brand = o.brand;\n      this.number = o.number;\n      this.expMonth = o.expMonth;\n      this.expYear = o.expYear;\n      this.code = o.code;\n    } else {\n      this.cardholderName = o.cardholderName?.encryptedString;\n      this.brand = o.brand?.encryptedString;\n      this.number = o.number?.encryptedString;\n      this.expMonth = o.expMonth?.encryptedString;\n      this.expYear = o.expYear?.encryptedString;\n      this.code = o.code?.encryptedString;\n    }\n  }\n}\n","import { FieldType } from \"../../enums/fieldType\";\nimport { LinkedIdType } from \"../../enums/linkedIdType\";\nimport { Field as FieldDomain } from \"../../vault/models/domain/field\";\nimport { FieldView } from \"../../vault/models/view/field.view\";\nimport { EncString } from \"../domain/enc-string\";\n\nexport class FieldExport {\n  static template(): FieldExport {\n    const req = new FieldExport();\n    req.name = \"Field name\";\n    req.value = \"Some value\";\n    req.type = FieldType.Text;\n    return req;\n  }\n\n  static toView(req: FieldExport, view = new FieldView()) {\n    view.type = req.type;\n    view.value = req.value;\n    view.name = req.name;\n    view.linkedId = req.linkedId;\n    return view;\n  }\n\n  static toDomain(req: FieldExport, domain = new FieldDomain()) {\n    domain.type = req.type;\n    domain.value = req.value != null ? new EncString(req.value) : null;\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.linkedId = req.linkedId;\n    return domain;\n  }\n\n  name: string;\n  value: string;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(o?: FieldView | FieldDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof FieldView) {\n      this.name = o.name;\n      this.value = o.value;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.value = o.value?.encryptedString;\n    }\n    this.type = o.type;\n    this.linkedId = o.linkedId;\n  }\n}\n","import { Identity as IdentityDomain } from \"../../vault/models/domain/identity\";\nimport { IdentityView } from \"../../vault/models/view/identity.view\";\nimport { EncString } from \"../domain/enc-string\";\n\nexport class IdentityExport {\n  static template(): IdentityExport {\n    const req = new IdentityExport();\n    req.title = \"Mr\";\n    req.firstName = \"John\";\n    req.middleName = \"William\";\n    req.lastName = \"Doe\";\n    req.address1 = \"123 Any St\";\n    req.address2 = \"Apt #123\";\n    req.address3 = null;\n    req.city = \"New York\";\n    req.state = \"NY\";\n    req.postalCode = \"10001\";\n    req.country = \"US\";\n    req.company = \"Acme Inc.\";\n    req.email = \"john@company.com\";\n    req.phone = \"5555551234\";\n    req.ssn = \"000-123-4567\";\n    req.username = \"jdoe\";\n    req.passportNumber = \"US-123456789\";\n    req.licenseNumber = \"D123-12-123-12333\";\n    return req;\n  }\n\n  static toView(req: IdentityExport, view = new IdentityView()) {\n    view.title = req.title;\n    view.firstName = req.firstName;\n    view.middleName = req.middleName;\n    view.lastName = req.lastName;\n    view.address1 = req.address1;\n    view.address2 = req.address2;\n    view.address3 = req.address3;\n    view.city = req.city;\n    view.state = req.state;\n    view.postalCode = req.postalCode;\n    view.country = req.country;\n    view.company = req.company;\n    view.email = req.email;\n    view.phone = req.phone;\n    view.ssn = req.ssn;\n    view.username = req.username;\n    view.passportNumber = req.passportNumber;\n    view.licenseNumber = req.licenseNumber;\n    return view;\n  }\n\n  static toDomain(req: IdentityExport, domain = new IdentityDomain()) {\n    domain.title = req.title != null ? new EncString(req.title) : null;\n    domain.firstName = req.firstName != null ? new EncString(req.firstName) : null;\n    domain.middleName = req.middleName != null ? new EncString(req.middleName) : null;\n    domain.lastName = req.lastName != null ? new EncString(req.lastName) : null;\n    domain.address1 = req.address1 != null ? new EncString(req.address1) : null;\n    domain.address2 = req.address2 != null ? new EncString(req.address2) : null;\n    domain.address3 = req.address3 != null ? new EncString(req.address3) : null;\n    domain.city = req.city != null ? new EncString(req.city) : null;\n    domain.state = req.state != null ? new EncString(req.state) : null;\n    domain.postalCode = req.postalCode != null ? new EncString(req.postalCode) : null;\n    domain.country = req.country != null ? new EncString(req.country) : null;\n    domain.company = req.company != null ? new EncString(req.company) : null;\n    domain.email = req.email != null ? new EncString(req.email) : null;\n    domain.phone = req.phone != null ? new EncString(req.phone) : null;\n    domain.ssn = req.ssn != null ? new EncString(req.ssn) : null;\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.passportNumber = req.passportNumber != null ? new EncString(req.passportNumber) : null;\n    domain.licenseNumber = req.licenseNumber != null ? new EncString(req.licenseNumber) : null;\n    return domain;\n  }\n\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(o?: IdentityView | IdentityDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof IdentityView) {\n      this.title = o.title;\n      this.firstName = o.firstName;\n      this.middleName = o.middleName;\n      this.lastName = o.lastName;\n      this.address1 = o.address1;\n      this.address2 = o.address2;\n      this.address3 = o.address3;\n      this.city = o.city;\n      this.state = o.state;\n      this.postalCode = o.postalCode;\n      this.country = o.country;\n      this.company = o.company;\n      this.email = o.email;\n      this.phone = o.phone;\n      this.ssn = o.ssn;\n      this.username = o.username;\n      this.passportNumber = o.passportNumber;\n      this.licenseNumber = o.licenseNumber;\n    } else {\n      this.title = o.title?.encryptedString;\n      this.firstName = o.firstName?.encryptedString;\n      this.middleName = o.middleName?.encryptedString;\n      this.lastName = o.lastName?.encryptedString;\n      this.address1 = o.address1?.encryptedString;\n      this.address2 = o.address2?.encryptedString;\n      this.address3 = o.address3?.encryptedString;\n      this.city = o.city?.encryptedString;\n      this.state = o.state?.encryptedString;\n      this.postalCode = o.postalCode?.encryptedString;\n      this.country = o.country?.encryptedString;\n      this.company = o.company?.encryptedString;\n      this.email = o.email?.encryptedString;\n      this.phone = o.phone?.encryptedString;\n      this.ssn = o.ssn?.encryptedString;\n      this.username = o.username?.encryptedString;\n      this.passportNumber = o.passportNumber?.encryptedString;\n      this.licenseNumber = o.licenseNumber?.encryptedString;\n    }\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { LoginUri as LoginUriDomain } from \"../../vault/models/domain/login-uri\";\nimport { LoginUriView } from \"../../vault/models/view/login-uri.view\";\nimport { EncString } from \"../domain/enc-string\";\n\nexport class LoginUriExport {\n  static template(): LoginUriExport {\n    const req = new LoginUriExport();\n    req.uri = \"https://google.com\";\n    req.match = null;\n    return req;\n  }\n\n  static toView(req: LoginUriExport, view = new LoginUriView()) {\n    view.uri = req.uri;\n    view.match = req.match;\n    return view;\n  }\n\n  static toDomain(req: LoginUriExport, domain = new LoginUriDomain()) {\n    domain.uri = req.uri != null ? new EncString(req.uri) : null;\n    domain.match = req.match;\n    return domain;\n  }\n\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(o?: LoginUriView | LoginUriDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o instanceof LoginUriView) {\n      this.uri = o.uri;\n    } else {\n      this.uri = o.uri?.encryptedString;\n    }\n    this.match = o.match;\n  }\n}\n","import { Login as LoginDomain } from \"../../vault/models/domain/login\";\nimport { LoginView } from \"../../vault/models/view/login.view\";\nimport { EncString } from \"../domain/enc-string\";\n\nimport { LoginUriExport } from \"./login-uri.export\";\n\nexport class LoginExport {\n  static template(): LoginExport {\n    const req = new LoginExport();\n    req.uris = [];\n    req.username = \"jdoe\";\n    req.password = \"myp@ssword123\";\n    req.totp = \"JBSWY3DPEHPK3PXP\";\n    return req;\n  }\n\n  static toView(req: LoginExport, view = new LoginView()) {\n    if (req.uris != null) {\n      view.uris = req.uris.map((u) => LoginUriExport.toView(u));\n    }\n    view.username = req.username;\n    view.password = req.password;\n    view.totp = req.totp;\n    return view;\n  }\n\n  static toDomain(req: LoginExport, domain = new LoginDomain()) {\n    if (req.uris != null) {\n      domain.uris = req.uris.map((u) => LoginUriExport.toDomain(u));\n    }\n    domain.username = req.username != null ? new EncString(req.username) : null;\n    domain.password = req.password != null ? new EncString(req.password) : null;\n    domain.totp = req.totp != null ? new EncString(req.totp) : null;\n    return domain;\n  }\n\n  uris: LoginUriExport[];\n  username: string;\n  password: string;\n  totp: string;\n\n  constructor(o?: LoginView | LoginDomain) {\n    if (o == null) {\n      return;\n    }\n\n    if (o.uris != null) {\n      if (o instanceof LoginView) {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      } else {\n        this.uris = o.uris.map((u) => new LoginUriExport(u));\n      }\n    }\n\n    if (o instanceof LoginView) {\n      this.username = o.username;\n      this.password = o.password;\n      this.totp = o.totp;\n    } else {\n      this.username = o.username?.encryptedString;\n      this.password = o.password?.encryptedString;\n      this.totp = o.totp?.encryptedString;\n    }\n  }\n}\n","import { SecureNoteType } from \"../../enums/secureNoteType\";\nimport { SecureNote as SecureNoteDomain } from \"../../vault/models/domain/secure-note\";\nimport { SecureNoteView } from \"../../vault/models/view/secure-note.view\";\n\nexport class SecureNoteExport {\n  static template(): SecureNoteExport {\n    const req = new SecureNoteExport();\n    req.type = SecureNoteType.Generic;\n    return req;\n  }\n\n  static toView(req: SecureNoteExport, view = new SecureNoteView()) {\n    view.type = req.type;\n    return view;\n  }\n\n  static toDomain(req: SecureNoteExport, view = new SecureNoteDomain()) {\n    view.type = req.type;\n    return view;\n  }\n\n  type: SecureNoteType;\n\n  constructor(o?: SecureNoteView | SecureNoteDomain) {\n    if (o == null) {\n      return;\n    }\n\n    this.type = o.type;\n  }\n}\n","import { CipherRepromptType } from \"../../vault/enums/cipher-reprompt-type\";\nimport { CipherType } from \"../../vault/enums/cipher-type\";\nimport { Cipher as CipherDomain } from \"../../vault/models/domain/cipher\";\nimport { CipherView } from \"../../vault/models/view/cipher.view\";\nimport { EncString } from \"../domain/enc-string\";\n\nimport { CardExport } from \"./card.export\";\nimport { FieldExport } from \"./field.export\";\nimport { IdentityExport } from \"./identity.export\";\nimport { LoginExport } from \"./login.export\";\nimport { SecureNoteExport } from \"./secure-note.export\";\n\nexport class CipherExport {\n  static template(): CipherExport {\n    const req = new CipherExport();\n    req.organizationId = null;\n    req.collectionIds = null;\n    req.folderId = null;\n    req.type = CipherType.Login;\n    req.name = \"Item name\";\n    req.notes = \"Some notes about this item.\";\n    req.favorite = false;\n    req.fields = [];\n    req.login = null;\n    req.secureNote = null;\n    req.card = null;\n    req.identity = null;\n    req.reprompt = CipherRepromptType.None;\n    return req;\n  }\n\n  static toView(req: CipherExport, view = new CipherView()) {\n    view.type = req.type;\n    view.folderId = req.folderId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    if (view.collectionIds || req.collectionIds) {\n      const set = new Set((view.collectionIds ?? []).concat(req.collectionIds ?? []));\n      view.collectionIds = Array.from(set.values());\n    }\n    view.name = req.name;\n    view.notes = req.notes;\n    view.favorite = req.favorite;\n    view.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      view.fields = req.fields.map((f) => FieldExport.toView(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        view.login = LoginExport.toView(req.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteExport.toView(req.secureNote);\n        break;\n      case CipherType.Card:\n        view.card = CardExport.toView(req.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityExport.toView(req.identity);\n        break;\n    }\n\n    return view;\n  }\n\n  static toDomain(req: CipherExport, domain = new CipherDomain()) {\n    domain.type = req.type;\n    domain.folderId = req.folderId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.notes = req.notes != null ? new EncString(req.notes) : null;\n    domain.favorite = req.favorite;\n    domain.reprompt = req.reprompt ?? CipherRepromptType.None;\n\n    if (req.fields != null) {\n      domain.fields = req.fields.map((f) => FieldExport.toDomain(f));\n    }\n\n    switch (req.type) {\n      case CipherType.Login:\n        domain.login = LoginExport.toDomain(req.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNoteExport.toDomain(req.secureNote);\n        break;\n      case CipherType.Card:\n        domain.card = CardExport.toDomain(req.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = IdentityExport.toDomain(req.identity);\n        break;\n    }\n\n    return domain;\n  }\n\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  collectionIds: string[];\n  name: string;\n  notes: string;\n  favorite: boolean;\n  fields: FieldExport[];\n  login: LoginExport;\n  secureNote: SecureNoteExport;\n  card: CardExport;\n  identity: IdentityExport;\n  reprompt: CipherRepromptType;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.organizationId = o.organizationId;\n    this.folderId = o.folderId;\n    this.type = o.type;\n    this.reprompt = o.reprompt;\n\n    if (o instanceof CipherView) {\n      this.name = o.name;\n      this.notes = o.notes;\n    } else {\n      this.name = o.name?.encryptedString;\n      this.notes = o.notes?.encryptedString;\n    }\n\n    this.favorite = o.favorite;\n\n    if (o.fields != null) {\n      if (o instanceof CipherView) {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      } else {\n        this.fields = o.fields.map((f) => new FieldExport(f));\n      }\n    }\n\n    switch (o.type) {\n      case CipherType.Login:\n        this.login = new LoginExport(o.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteExport(o.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardExport(o.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityExport(o.identity);\n        break;\n    }\n  }\n}\n","import { Cipher as CipherDomain } from \"../../vault/models/domain/cipher\";\nimport { CipherView } from \"../../vault/models/view/cipher.view\";\n\nimport { CipherExport } from \"./cipher.export\";\n\nexport class CipherWithIdExport extends CipherExport {\n  id: string;\n  collectionIds: string[];\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CipherView | CipherDomain) {\n    this.id = o.id;\n    super.build(o);\n    this.collectionIds = o.collectionIds;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { EncString } from \"../domain/enc-string\";\nimport { CollectionView } from \"../view/collection.view\";\n\nexport class CollectionExport {\n  static template(): CollectionExport {\n    const req = new CollectionExport();\n    req.organizationId = \"00000000-0000-0000-0000-000000000000\";\n    req.name = \"Collection name\";\n    req.externalId = null;\n    return req;\n  }\n\n  static toView(req: CollectionExport, view = new CollectionView()) {\n    view.name = req.name;\n    view.externalId = req.externalId;\n    if (view.organizationId == null) {\n      view.organizationId = req.organizationId;\n    }\n    return view;\n  }\n\n  static toDomain(req: CollectionExport, domain = new CollectionDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    domain.externalId = req.externalId;\n    if (domain.organizationId == null) {\n      domain.organizationId = req.organizationId;\n    }\n    return domain;\n  }\n\n  organizationId: string;\n  name: string;\n  externalId: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.organizationId = o.organizationId;\n    if (o instanceof CollectionView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n    this.externalId = o.externalId;\n  }\n}\n","import { Collection as CollectionDomain } from \"../domain/collection\";\nimport { CollectionView } from \"../view/collection.view\";\n\nimport { CollectionExport } from \"./collection.export\";\n\nexport class CollectionWithIdExport extends CollectionExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: CollectionView | CollectionDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { Folder as FolderDomain } from \"../../vault/models/domain/folder\";\nimport { FolderView } from \"../../vault/models/view/folder.view\";\nimport { EncString } from \"../domain/enc-string\";\n\nexport class FolderExport {\n  static template(): FolderExport {\n    const req = new FolderExport();\n    req.name = \"Folder name\";\n    return req;\n  }\n\n  static toView(req: FolderExport, view = new FolderView()) {\n    view.name = req.name;\n    return view;\n  }\n\n  static toDomain(req: FolderExport, domain = new FolderDomain()) {\n    domain.name = req.name != null ? new EncString(req.name) : null;\n    return domain;\n  }\n\n  name: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    if (o instanceof FolderView) {\n      this.name = o.name;\n    } else {\n      this.name = o.name?.encryptedString;\n    }\n  }\n}\n","import { Folder as FolderDomain } from \"../../vault/models/domain/folder\";\nimport { FolderView } from \"../../vault/models/view/folder.view\";\n\nimport { FolderExport } from \"./folder.export\";\n\nexport class FolderWithIdExport extends FolderExport {\n  id: string;\n\n  // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n  build(o: FolderView | FolderDomain) {\n    this.id = o.id;\n    super.build(o);\n  }\n}\n","import { Collection } from \"../domain/collection\";\n\nimport { SelectionReadOnlyRequest } from \"./selection-read-only.request\";\n\nexport class CollectionRequest {\n  name: string;\n  externalId: string;\n  groups: SelectionReadOnlyRequest[] = [];\n  users: SelectionReadOnlyRequest[] = [];\n\n  constructor(collection?: Collection) {\n    if (collection == null) {\n      return;\n    }\n    this.name = collection.name ? collection.name.encryptedString : null;\n    this.externalId = collection.externalId;\n  }\n}\n","export class KeysRequest {\n  publicKey: string;\n  encryptedPrivateKey: string;\n\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    this.publicKey = publicKey;\n    this.encryptedPrivateKey = encryptedPrivateKey;\n  }\n}\n","import { KeysRequest } from \"./keys.request\";\n\nexport class OrganizationKeysRequest extends KeysRequest {\n  constructor(publicKey: string, encryptedPrivateKey: string) {\n    super(publicKey, encryptedPrivateKey);\n  }\n}\n","import { TaxInfoUpdateRequest } from \"./tax-info-update.request\";\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n  taxId: string;\n  line1: string;\n  line2: string;\n  city: string;\n  state: string;\n}\n","export class SelectionReadOnlyRequest {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n    this.id = id;\n    this.readOnly = readOnly;\n    this.hidePasswords = hidePasswords;\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { SendFileApi } from \"../api/send-file.api\";\nimport { SendTextApi } from \"../api/send-text.api\";\nimport { Send } from \"../domain/send\";\n\nexport class SendRequest {\n  type: SendType;\n  fileLength?: number;\n  name: string;\n  notes: string;\n  key: string;\n  maxAccessCount?: number;\n  expirationDate: string;\n  deletionDate: string;\n  text: SendTextApi;\n  file: SendFileApi;\n  password: string;\n  disabled: boolean;\n  hideEmail: boolean;\n\n  constructor(send: Send, fileLength?: number) {\n    this.type = send.type;\n    this.fileLength = fileLength;\n    this.name = send.name ? send.name.encryptedString : null;\n    this.notes = send.notes ? send.notes.encryptedString : null;\n    this.maxAccessCount = send.maxAccessCount;\n    this.expirationDate = send.expirationDate != null ? send.expirationDate.toISOString() : null;\n    this.deletionDate = send.deletionDate != null ? send.deletionDate.toISOString() : null;\n    this.key = send.key != null ? send.key.encryptedString : null;\n    this.password = send.password;\n    this.disabled = send.disabled;\n    this.hideEmail = send.hideEmail;\n\n    switch (this.type) {\n      case SendType.Text:\n        this.text = new SendTextApi();\n        this.text.text = send.text.text != null ? send.text.text.encryptedString : null;\n        this.text.hidden = send.text.hidden;\n        break;\n      case SendType.File:\n        this.file = new SendFileApi();\n        this.file.fileName = send.file.fileName != null ? send.file.fileName.encryptedString : null;\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export class TaxInfoUpdateRequest {\n  country: string;\n  postalCode: string;\n}\n","export abstract class BaseResponse {\n  private response: any;\n\n  constructor(response: any) {\n    this.response = response;\n  }\n\n  protected getResponseProperty(\n    propertyName: string,\n    response: any = null,\n    exactName = false\n  ): any {\n    if (propertyName == null || propertyName === \"\") {\n      throw new Error(\"propertyName must not be null/empty.\");\n    }\n    if (response == null && this.response != null) {\n      response = this.response;\n    }\n    if (response == null) {\n      return null;\n    }\n    if (!exactName && response[propertyName] === undefined) {\n      let otherCasePropertyName: string = null;\n      if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n        otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n      } else {\n        otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n      }\n      if (propertyName.length > 1) {\n        otherCasePropertyName += propertyName.slice(1);\n      }\n\n      propertyName = otherCasePropertyName;\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toLowerCase();\n      }\n      if (response[propertyName] === undefined) {\n        propertyName = propertyName.toUpperCase();\n      }\n    }\n    return response[propertyName];\n  }\n}\n","import { Utils } from \"../../misc/utils\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class ErrorResponse extends BaseResponse {\n  message: string;\n  validationErrors: { [key: string]: string[] };\n  statusCode: number;\n  captchaRequired: boolean;\n  captchaSiteKey: string;\n\n  constructor(response: any, status: number, identityResponse?: boolean) {\n    super(response);\n    let errorModel = null;\n    if (response != null) {\n      const responseErrorModel = this.getResponseProperty(\"ErrorModel\");\n      if (responseErrorModel && identityResponse) {\n        errorModel = responseErrorModel;\n      } else {\n        errorModel = response;\n      }\n    }\n\n    if (status === 429) {\n      this.message = \"Rate limit exceeded. Try again later.\";\n    } else if (errorModel) {\n      this.message = this.getResponseProperty(\"Message\", errorModel);\n      this.validationErrors = this.getResponseProperty(\"ValidationErrors\", errorModel);\n      this.captchaSiteKey = this.validationErrors?.HCaptcha_SiteKey?.[0];\n      this.captchaRequired = !Utils.isNullOrWhitespace(this.captchaSiteKey);\n    }\n    this.statusCode = status;\n  }\n\n  getSingleMessage(): string {\n    if (this.validationErrors == null) {\n      return this.message;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      if (this.validationErrors[key].length) {\n        return this.validationErrors[key][0];\n      }\n    }\n    return this.message;\n  }\n\n  getAllMessages(): string[] {\n    const messages: string[] = [];\n    if (this.validationErrors == null) {\n      return messages;\n    }\n    for (const key in this.validationErrors) {\n      // eslint-disable-next-line\n      if (!this.validationErrors.hasOwnProperty(key)) {\n        continue;\n      }\n      this.validationErrors[key].forEach((item: string) => {\n        let prefix = \"\";\n        if (key.indexOf(\"[\") > -1 && key.indexOf(\"]\") > -1) {\n          const lastSep = key.lastIndexOf(\".\");\n          prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + \": \";\n        }\n        messages.push(prefix + item);\n      });\n    }\n    return messages;\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class ListResponse<T> extends BaseResponse {\n  data: T[];\n  continuationToken: string;\n\n  constructor(response: any, t: new (dataResponse: any) => T) {\n    super(response);\n    const data = this.getResponseProperty(\"Data\");\n    this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n    this.continuationToken = this.getResponseProperty(\"ContinuationToken\");\n  }\n}\n","import { PolicyType } from \"../../enums/policyType\";\n\nimport { BaseResponse } from \"./base.response\";\n\nexport class PolicyResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  type: PolicyType;\n  data: any;\n  enabled: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.type = this.getResponseProperty(\"Type\");\n    this.data = this.getResponseProperty(\"Data\");\n    this.enabled = this.getResponseProperty(\"Enabled\");\n  }\n}\n","import { BaseResponse } from \"./base.response\";\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n  id: string;\n  readOnly: boolean;\n  hidePasswords: boolean;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.readOnly = this.getResponseProperty(\"ReadOnly\");\n    this.hidePasswords = this.getResponseProperty(\"HidePasswords\");\n  }\n}\n","import { Collection } from \"../domain/collection\";\nimport { ITreeNodeObject } from \"../domain/tree-node\";\nimport { CollectionAccessDetailsResponse } from \"../response/collection.response\";\n\nimport { View } from \"./view\";\n\nexport class CollectionView implements View, ITreeNodeObject {\n  id: string = null;\n  organizationId: string = null;\n  name: string = null;\n  externalId: string = null;\n  readOnly: boolean = null;\n  hidePasswords: boolean = null;\n\n  constructor(c?: Collection | CollectionAccessDetailsResponse) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.externalId = c.externalId;\n    if (c instanceof Collection) {\n      this.readOnly = c.readOnly;\n      this.hidePasswords = c.hidePasswords;\n    }\n  }\n}\n","import { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { SendFile } from \"../domain/send-file\";\n\nimport { View } from \"./view\";\n\nexport class SendFileView implements View {\n  id: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n\n  constructor(f?: SendFile) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.size = f.size;\n    this.sizeName = f.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(json: DeepJsonify<SendFileView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendFileView(), json);\n  }\n}\n","import { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { SendText } from \"../domain/send-text\";\n\nimport { View } from \"./view\";\n\nexport class SendTextView implements View {\n  text: string = null;\n  hidden: boolean;\n\n  constructor(t?: SendText) {\n    if (!t) {\n      return;\n    }\n\n    this.hidden = t.hidden;\n  }\n\n  get maskedText(): string {\n    return this.text != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(json: DeepJsonify<SendTextView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendTextView(), json);\n  }\n}\n","import { SendType } from \"../../enums/sendType\";\nimport { Utils } from \"../../misc/utils\";\nimport { DeepJsonify } from \"../../types/deep-jsonify\";\nimport { Send } from \"../domain/send\";\nimport { SymmetricCryptoKey } from \"../domain/symmetric-crypto-key\";\n\nimport { SendFileView } from \"./send-file.view\";\nimport { SendTextView } from \"./send-text.view\";\nimport { View } from \"./view\";\n\nexport class SendView implements View {\n  id: string = null;\n  accessId: string = null;\n  name: string = null;\n  notes: string = null;\n  key: ArrayBuffer;\n  cryptoKey: SymmetricCryptoKey;\n  type: SendType = null;\n  text = new SendTextView();\n  file = new SendFileView();\n  maxAccessCount?: number = null;\n  accessCount = 0;\n  revisionDate: Date = null;\n  deletionDate: Date = null;\n  expirationDate: Date = null;\n  password: string = null;\n  disabled = false;\n  hideEmail = false;\n\n  constructor(s?: Send) {\n    if (!s) {\n      return;\n    }\n\n    this.id = s.id;\n    this.accessId = s.accessId;\n    this.type = s.type;\n    this.maxAccessCount = s.maxAccessCount;\n    this.accessCount = s.accessCount;\n    this.revisionDate = s.revisionDate;\n    this.deletionDate = s.deletionDate;\n    this.expirationDate = s.expirationDate;\n    this.disabled = s.disabled;\n    this.password = s.password;\n    this.hideEmail = s.hideEmail;\n  }\n\n  get urlB64Key(): string {\n    return Utils.fromBufferToUrlB64(this.key);\n  }\n\n  get maxAccessCountReached(): boolean {\n    if (this.maxAccessCount == null) {\n      return false;\n    }\n    return this.accessCount >= this.maxAccessCount;\n  }\n\n  get expired(): boolean {\n    if (this.expirationDate == null) {\n      return false;\n    }\n    return this.expirationDate <= new Date();\n  }\n\n  get pendingDelete(): boolean {\n    return this.deletionDate <= new Date();\n  }\n\n  toJSON() {\n    return Utils.merge(this, {\n      key: Utils.fromBufferToB64(this.key),\n    });\n  }\n\n  static fromJSON(json: DeepJsonify<SendView>) {\n    if (json == null) {\n      return null;\n    }\n\n    return Object.assign(new SendView(), json, {\n      key: Utils.fromB64ToArray(json.key)?.buffer,\n      cryptoKey: SymmetricCryptoKey.fromJSON(json.cryptoKey),\n      text: SendTextView.fromJSON(json.text),\n      file: SendFileView.fromJSON(json.file),\n      revisionDate: json.revisionDate == null ? null : new Date(json.revisionDate),\n      deletionDate: json.deletionDate == null ? null : new Date(json.deletionDate),\n      expirationDate: json.expirationDate == null ? null : new Date(json.expirationDate),\n    });\n  }\n}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","export enum InitializerKey {\n  Cipher = 0,\n  CipherView = 1,\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { PasswordGeneratorPolicyOptions } from \"../../../models/domain/password-generator-policy-options\";\n\nimport { GeneratedPasswordHistory } from \"./generated-password-history\";\nimport { PasswordGeneratorOptions } from \"./password-generator-options\";\n\nexport abstract class PasswordGenerationServiceAbstraction {\n  generatePassword: (options: PasswordGeneratorOptions) => Promise<string>;\n  generatePassphrase: (options: PasswordGeneratorOptions) => Promise<string>;\n  getOptions: () => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  enforcePasswordGeneratorPoliciesOnOptions: (\n    options: PasswordGeneratorOptions\n  ) => Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]>;\n  getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n  saveOptions: (options: PasswordGeneratorOptions) => Promise<void>;\n  getHistory: () => Promise<GeneratedPasswordHistory[]>;\n  addHistory: (password: string) => Promise<void>;\n  clear: (userId?: string) => Promise<void>;\n  passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n  normalizeOptions: (\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) => void;\n}\n","import Domain from \"./domain-base\";\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n  defaultType = \"\";\n  minLength = 0;\n  useUppercase = false;\n  useLowercase = false;\n  useNumbers = false;\n  numberCount = 0;\n  useSpecial = false;\n  specialCount = 0;\n  minNumberWords = 0;\n  capitalize = false;\n  includeNumber = false;\n\n  inEffect() {\n    return (\n      this.defaultType !== \"\" ||\n      this.minLength > 0 ||\n      this.numberCount > 0 ||\n      this.specialCount > 0 ||\n      this.useUppercase ||\n      this.useLowercase ||\n      this.useNumbers ||\n      this.useSpecial ||\n      this.minNumberWords > 0 ||\n      this.capitalize ||\n      this.includeNumber\n    );\n  }\n}\n","export class GeneratedPasswordHistory {\n  password: string;\n  date: number;\n\n  constructor(password: string, date: number) {\n    this.password = password;\n    this.date = date;\n  }\n}\n","import * as zxcvbn from \"zxcvbn\";\n\nimport { CryptoService } from \"../../../abstractions/crypto.service\";\nimport { PolicyService } from \"../../../abstractions/policy/policy.service.abstraction\";\nimport { StateService } from \"../../../abstractions/state.service\";\nimport { PolicyType } from \"../../../enums/policyType\";\nimport { EFFLongWordList } from \"../../../misc/wordlist\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { PasswordGeneratorPolicyOptions } from \"../../../models/domain/password-generator-policy-options\";\n\nimport { GeneratedPasswordHistory } from \"./generated-password-history\";\nimport { PasswordGenerationServiceAbstraction } from \"./password-generation.service.abstraction\";\nimport { PasswordGeneratorOptions } from \"./password-generator-options\";\n\nconst DefaultOptions: PasswordGeneratorOptions = {\n  length: 14,\n  ambiguous: false,\n  number: true,\n  minNumber: 1,\n  uppercase: true,\n  minUppercase: 0,\n  lowercase: true,\n  minLowercase: 0,\n  special: false,\n  minSpecial: 1,\n  type: \"password\",\n  numWords: 3,\n  wordSeparator: \"-\",\n  capitalize: false,\n  includeNumber: false,\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private policyService: PolicyService,\n    private stateService: StateService\n  ) {}\n\n  async generatePassword(options: PasswordGeneratorOptions): Promise<string> {\n    // overload defaults with given options\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.type === \"passphrase\") {\n      return this.generatePassphrase(options);\n    }\n\n    // sanitize\n    this.sanitizePasswordLength(o, true);\n\n    const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n    if (o.length < minLength) {\n      o.length = minLength;\n    }\n\n    const positions: string[] = [];\n    if (o.lowercase && o.minLowercase > 0) {\n      for (let i = 0; i < o.minLowercase; i++) {\n        positions.push(\"l\");\n      }\n    }\n    if (o.uppercase && o.minUppercase > 0) {\n      for (let i = 0; i < o.minUppercase; i++) {\n        positions.push(\"u\");\n      }\n    }\n    if (o.number && o.minNumber > 0) {\n      for (let i = 0; i < o.minNumber; i++) {\n        positions.push(\"n\");\n      }\n    }\n    if (o.special && o.minSpecial > 0) {\n      for (let i = 0; i < o.minSpecial; i++) {\n        positions.push(\"s\");\n      }\n    }\n    while (positions.length < o.length) {\n      positions.push(\"a\");\n    }\n\n    // shuffle\n    await this.shuffleArray(positions);\n\n    // build out the char sets\n    let allCharSet = \"\";\n\n    let lowercaseCharSet = \"abcdefghijkmnopqrstuvwxyz\";\n    if (o.ambiguous) {\n      lowercaseCharSet += \"l\";\n    }\n    if (o.lowercase) {\n      allCharSet += lowercaseCharSet;\n    }\n\n    let uppercaseCharSet = \"ABCDEFGHJKLMNPQRSTUVWXYZ\";\n    if (o.ambiguous) {\n      uppercaseCharSet += \"IO\";\n    }\n    if (o.uppercase) {\n      allCharSet += uppercaseCharSet;\n    }\n\n    let numberCharSet = \"23456789\";\n    if (o.ambiguous) {\n      numberCharSet += \"01\";\n    }\n    if (o.number) {\n      allCharSet += numberCharSet;\n    }\n\n    const specialCharSet = \"!@#$%^&*\";\n    if (o.special) {\n      allCharSet += specialCharSet;\n    }\n\n    let password = \"\";\n    for (let i = 0; i < o.length; i++) {\n      let positionChars: string;\n      switch (positions[i]) {\n        case \"l\":\n          positionChars = lowercaseCharSet;\n          break;\n        case \"u\":\n          positionChars = uppercaseCharSet;\n          break;\n        case \"n\":\n          positionChars = numberCharSet;\n          break;\n        case \"s\":\n          positionChars = specialCharSet;\n          break;\n        case \"a\":\n          positionChars = allCharSet;\n          break;\n        default:\n          break;\n      }\n\n      const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n      password += positionChars.charAt(randomCharIndex);\n    }\n\n    return password;\n  }\n\n  async generatePassphrase(options: PasswordGeneratorOptions): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.numWords == null || o.numWords <= 2) {\n      o.numWords = DefaultOptions.numWords;\n    }\n    if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n      o.wordSeparator = \" \";\n    }\n    if (o.capitalize == null) {\n      o.capitalize = false;\n    }\n    if (o.includeNumber == null) {\n      o.includeNumber = false;\n    }\n\n    const listLength = EFFLongWordList.length - 1;\n    const wordList = new Array(o.numWords);\n    for (let i = 0; i < o.numWords; i++) {\n      const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n      if (o.capitalize) {\n        wordList[i] = this.capitalize(EFFLongWordList[wordIndex]);\n      } else {\n        wordList[i] = EFFLongWordList[wordIndex];\n      }\n    }\n\n    if (o.includeNumber) {\n      await this.appendRandomNumberToRandomWord(wordList);\n    }\n    return wordList.join(o.wordSeparator);\n  }\n\n  async getOptions(): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let options = await this.stateService.getPasswordGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setPasswordGenerationOptions(options);\n    const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(options);\n    options = enforcedOptions[0];\n    return [options, enforcedOptions[1]];\n  }\n\n  async enforcePasswordGeneratorPoliciesOnOptions(\n    options: PasswordGeneratorOptions\n  ): Promise<[PasswordGeneratorOptions, PasswordGeneratorPolicyOptions]> {\n    let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n    if (enforcedPolicyOptions != null) {\n      if (options.length < enforcedPolicyOptions.minLength) {\n        options.length = enforcedPolicyOptions.minLength;\n      }\n\n      if (enforcedPolicyOptions.useUppercase) {\n        options.uppercase = true;\n      }\n\n      if (enforcedPolicyOptions.useLowercase) {\n        options.lowercase = true;\n      }\n\n      if (enforcedPolicyOptions.useNumbers) {\n        options.number = true;\n      }\n\n      if (options.minNumber < enforcedPolicyOptions.numberCount) {\n        options.minNumber = enforcedPolicyOptions.numberCount;\n      }\n\n      if (enforcedPolicyOptions.useSpecial) {\n        options.special = true;\n      }\n\n      if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n        options.minSpecial = enforcedPolicyOptions.specialCount;\n      }\n\n      // Must normalize these fields because the receiving call expects all options to pass the current rules\n      if (options.minSpecial + options.minNumber > options.length) {\n        options.minSpecial = options.length - options.minNumber;\n      }\n\n      if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n        options.numWords = enforcedPolicyOptions.minNumberWords;\n      }\n\n      if (enforcedPolicyOptions.capitalize) {\n        options.capitalize = true;\n      }\n\n      if (enforcedPolicyOptions.includeNumber) {\n        options.includeNumber = true;\n      }\n\n      // Force default type if password/passphrase selected via policy\n      if (\n        enforcedPolicyOptions.defaultType === \"password\" ||\n        enforcedPolicyOptions.defaultType === \"passphrase\"\n      ) {\n        options.type = enforcedPolicyOptions.defaultType;\n      }\n    } else {\n      // UI layer expects an instantiated object to prevent more explicit null checks\n      enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n    }\n    return [options, enforcedPolicyOptions];\n  }\n\n  async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n    const policies = await this.policyService?.getAll(PolicyType.PasswordGenerator);\n    let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n    if (policies == null || policies.length === 0) {\n      return enforcedOptions;\n    }\n\n    policies.forEach((currentPolicy) => {\n      if (!currentPolicy.enabled || currentPolicy.data == null) {\n        return;\n      }\n\n      if (enforcedOptions == null) {\n        enforcedOptions = new PasswordGeneratorPolicyOptions();\n      }\n\n      // Password wins in multi-org collisions\n      if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== \"password\") {\n        enforcedOptions.defaultType = currentPolicy.data.defaultType;\n      }\n\n      if (\n        currentPolicy.data.minLength != null &&\n        currentPolicy.data.minLength > enforcedOptions.minLength\n      ) {\n        enforcedOptions.minLength = currentPolicy.data.minLength;\n      }\n\n      if (currentPolicy.data.useUpper) {\n        enforcedOptions.useUppercase = true;\n      }\n\n      if (currentPolicy.data.useLower) {\n        enforcedOptions.useLowercase = true;\n      }\n\n      if (currentPolicy.data.useNumbers) {\n        enforcedOptions.useNumbers = true;\n      }\n\n      if (\n        currentPolicy.data.minNumbers != null &&\n        currentPolicy.data.minNumbers > enforcedOptions.numberCount\n      ) {\n        enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n      }\n\n      if (currentPolicy.data.useSpecial) {\n        enforcedOptions.useSpecial = true;\n      }\n\n      if (\n        currentPolicy.data.minSpecial != null &&\n        currentPolicy.data.minSpecial > enforcedOptions.specialCount\n      ) {\n        enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n      }\n\n      if (\n        currentPolicy.data.minNumberWords != null &&\n        currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords\n      ) {\n        enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n      }\n\n      if (currentPolicy.data.capitalize) {\n        enforcedOptions.capitalize = true;\n      }\n\n      if (currentPolicy.data.includeNumber) {\n        enforcedOptions.includeNumber = true;\n      }\n    });\n\n    return enforcedOptions;\n  }\n\n  async saveOptions(options: PasswordGeneratorOptions) {\n    await this.stateService.setPasswordGenerationOptions(options);\n  }\n\n  async getHistory(): Promise<GeneratedPasswordHistory[]> {\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return new Array<GeneratedPasswordHistory>();\n    }\n\n    if ((await this.stateService.getDecryptedPasswordGenerationHistory()) == null) {\n      const encrypted = await this.stateService.getEncryptedPasswordGenerationHistory();\n      const decrypted = await this.decryptHistory(encrypted);\n      await this.stateService.setDecryptedPasswordGenerationHistory(decrypted);\n    }\n\n    const passwordGenerationHistory =\n      await this.stateService.getDecryptedPasswordGenerationHistory();\n    return passwordGenerationHistory != null\n      ? passwordGenerationHistory\n      : new Array<GeneratedPasswordHistory>();\n  }\n\n  async addHistory(password: string): Promise<void> {\n    // Cannot add new history if no key is available\n    const hasKey = await this.cryptoService.hasKey();\n    if (!hasKey) {\n      return;\n    }\n\n    const currentHistory = await this.getHistory();\n\n    // Prevent duplicates\n    if (this.matchesPrevious(password, currentHistory)) {\n      return;\n    }\n\n    currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n    // Remove old items.\n    if (currentHistory.length > MaxPasswordsInHistory) {\n      currentHistory.pop();\n    }\n\n    const newHistory = await this.encryptHistory(currentHistory);\n    await this.stateService.setDecryptedPasswordGenerationHistory(currentHistory);\n    return await this.stateService.setEncryptedPasswordGenerationHistory(newHistory);\n  }\n\n  async clear(userId?: string): Promise<void> {\n    await this.stateService.setEncryptedPasswordGenerationHistory(null, { userId: userId });\n    await this.stateService.setDecryptedPasswordGenerationHistory(null, { userId: userId });\n  }\n\n  passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n    if (password == null || password.length === 0) {\n      return null;\n    }\n    let globalUserInputs = [\"bitwarden\", \"bit\", \"warden\"];\n    if (userInputs != null && userInputs.length > 0) {\n      globalUserInputs = globalUserInputs.concat(userInputs);\n    }\n    // Use a hash set to get rid of any duplicate user inputs\n    const finalUserInputs = Array.from(new Set(globalUserInputs));\n    const result = zxcvbn(password, finalUserInputs);\n    return result;\n  }\n\n  normalizeOptions(\n    options: PasswordGeneratorOptions,\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions\n  ) {\n    options.minLowercase = 0;\n    options.minUppercase = 0;\n\n    if (!options.length || options.length < 5) {\n      options.length = 5;\n    } else if (options.length > 128) {\n      options.length = 128;\n    }\n\n    if (options.length < enforcedPolicyOptions.minLength) {\n      options.length = enforcedPolicyOptions.minLength;\n    }\n\n    if (!options.minNumber) {\n      options.minNumber = 0;\n    } else if (options.minNumber > options.length) {\n      options.minNumber = options.length;\n    } else if (options.minNumber > 9) {\n      options.minNumber = 9;\n    }\n\n    if (options.minNumber < enforcedPolicyOptions.numberCount) {\n      options.minNumber = enforcedPolicyOptions.numberCount;\n    }\n\n    if (!options.minSpecial) {\n      options.minSpecial = 0;\n    } else if (options.minSpecial > options.length) {\n      options.minSpecial = options.length;\n    } else if (options.minSpecial > 9) {\n      options.minSpecial = 9;\n    }\n\n    if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n      options.minSpecial = enforcedPolicyOptions.specialCount;\n    }\n\n    if (options.minSpecial + options.minNumber > options.length) {\n      options.minSpecial = options.length - options.minNumber;\n    }\n\n    if (options.numWords == null || options.length < 3) {\n      options.numWords = 3;\n    } else if (options.numWords > 20) {\n      options.numWords = 20;\n    }\n\n    if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n      options.numWords = enforcedPolicyOptions.minNumberWords;\n    }\n\n    if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n      options.wordSeparator = options.wordSeparator[0];\n    }\n\n    this.sanitizePasswordLength(options, false);\n  }\n\n  private capitalize(str: string) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private async appendRandomNumberToRandomWord(wordList: string[]) {\n    if (wordList == null || wordList.length <= 0) {\n      return;\n    }\n    const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n    const num = await this.cryptoService.randomNumber(0, 9);\n    wordList[index] = wordList[index] + num;\n  }\n\n  private async encryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const encrypted = await this.cryptoService.encrypt(item.password);\n      return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private async decryptHistory(\n    history: GeneratedPasswordHistory[]\n  ): Promise<GeneratedPasswordHistory[]> {\n    if (history == null || history.length === 0) {\n      return Promise.resolve([]);\n    }\n\n    const promises = history.map(async (item) => {\n      const decrypted = await this.cryptoService.decryptToUtf8(new EncString(item.password));\n      return new GeneratedPasswordHistory(decrypted, item.date);\n    });\n\n    return await Promise.all(promises);\n  }\n\n  private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n    if (history == null || history.length === 0) {\n      return false;\n    }\n\n    return history[history.length - 1].password === password;\n  }\n\n  // ref: https://stackoverflow.com/a/12646864/1090359\n  private async shuffleArray(array: string[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = await this.cryptoService.randomNumber(0, i);\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  private sanitizePasswordLength(options: any, forGeneration: boolean) {\n    let minUppercaseCalc = 0;\n    let minLowercaseCalc = 0;\n    let minNumberCalc: number = options.minNumber;\n    let minSpecialCalc: number = options.minSpecial;\n\n    if (options.uppercase && options.minUppercase <= 0) {\n      minUppercaseCalc = 1;\n    } else if (!options.uppercase) {\n      minUppercaseCalc = 0;\n    }\n\n    if (options.lowercase && options.minLowercase <= 0) {\n      minLowercaseCalc = 1;\n    } else if (!options.lowercase) {\n      minLowercaseCalc = 0;\n    }\n\n    if (options.number && options.minNumber <= 0) {\n      minNumberCalc = 1;\n    } else if (!options.number) {\n      minNumberCalc = 0;\n    }\n\n    if (options.special && options.minSpecial <= 0) {\n      minSpecialCalc = 1;\n    } else if (!options.special) {\n      minSpecialCalc = 0;\n    }\n\n    // This should never happen but is a final safety net\n    if (!options.length || options.length < 1) {\n      options.length = 10;\n    }\n\n    const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n    // Normalize and Generation both require this modification\n    if (options.length < minLength) {\n      options.length = minLength;\n    }\n\n    // Apply other changes if the options object passed in is for generation\n    if (forGeneration) {\n      options.minUppercase = minUppercaseCalc;\n      options.minLowercase = minLowercaseCalc;\n      options.minNumber = minNumberCalc;\n      options.minSpecial = minSpecialCalc;\n    }\n  }\n}\n","export abstract class UsernameGenerationServiceAbstraction {\n  generateUsername: (options: any) => Promise<string>;\n  generateWord: (options: any) => Promise<string>;\n  generateSubaddress: (options: any) => Promise<string>;\n  generateCatchall: (options: any) => Promise<string>;\n  generateForwarded: (options: any) => Promise<string>;\n  getOptions: () => Promise<any>;\n  saveOptions: (options: any) => Promise<void>;\n}\n","import { ApiService } from \"../../../../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class AnonAddyForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    if (options.anonaddy?.domain == null || options.anonaddy.domain === \"\") {\n      throw \"Invalid AnonAddy domain.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://app.anonaddy.com/api/v1/aliases\";\n    requestInit.body = JSON.stringify({\n      domain: options.anonaddy.domain,\n      description:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.data?.email;\n    }\n    if (response.status === 401) {\n      throw \"Invalid AnonAddy API token.\";\n    }\n    throw \"Unknown AnonAddy error occurred.\";\n  }\n}\n","import { ApiService } from \"../../../../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class DuckDuckGoForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://quack.duckduckgo.com/api/email/addresses\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      if (json.address) {\n        return `${json.address}@duck.com`;\n      }\n    } else if (response.status === 401) {\n      throw \"Invalid DuckDuckGo API token.\";\n    }\n    throw \"Unknown DuckDuckGo error occurred.\";\n  }\n}\n","import { ApiService } from \"../../../../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class FastmailForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Fastmail API token.\";\n    }\n\n    const accountId = await this.getAccountId(apiService, options);\n    if (accountId == null || accountId === \"\") {\n      throw \"Unable to obtain Fastmail masked email account ID.\";\n    }\n\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://api.fastmail.com/jmap/api/\";\n    requestInit.body = JSON.stringify({\n      using: [\"https://www.fastmail.com/dev/maskedemail\", \"urn:ietf:params:jmap:core\"],\n      methodCalls: [\n        [\n          \"MaskedEmail/set\",\n          {\n            accountId: accountId,\n            create: {\n              \"new-masked-email\": {\n                state: \"enabled\",\n                description: \"\",\n                url: options.website,\n                emailPrefix: options.fastmail.prefix,\n              },\n            },\n          },\n          \"0\",\n        ],\n      ],\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (\n        json.methodResponses != null &&\n        json.methodResponses.length > 0 &&\n        json.methodResponses[0].length > 0\n      ) {\n        if (json.methodResponses[0][0] === \"MaskedEmail/set\") {\n          if (json.methodResponses[0][1]?.created?.[\"new-masked-email\"] != null) {\n            return json.methodResponses[0][1]?.created?.[\"new-masked-email\"]?.email;\n          }\n          if (json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"] != null) {\n            throw (\n              \"Fastmail error: \" +\n              json.methodResponses[0][1]?.notCreated?.[\"new-masked-email\"]?.description\n            );\n          }\n        } else if (json.methodResponses[0][0] === \"error\") {\n          throw \"Fastmail error: \" + json.methodResponses[0][1]?.description;\n        }\n      }\n    }\n    if (response.status === 401 || response.status === 403) {\n      throw \"Invalid Fastmail API token.\";\n    }\n    throw \"Unknown Fastmail error occurred.\";\n  }\n\n  private async getAccountId(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    const requestInit: RequestInit = {\n      cache: \"no-store\",\n      method: \"GET\",\n      headers: new Headers({\n        Authorization: \"Bearer \" + options.apiKey,\n      }),\n    };\n    const url = \"https://api.fastmail.com/.well-known/jmap\";\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200) {\n      const json = await response.json();\n      if (json.primaryAccounts != null) {\n        return json.primaryAccounts[\"https://www.fastmail.com/dev/maskedemail\"];\n      }\n    }\n    return null;\n  }\n}\n","import { ApiService } from \"../../../../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class FirefoxRelayForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authorization: \"Token \" + options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    const url = \"https://relay.firefox.com/api/v1/relayaddresses/\";\n    requestInit.body = JSON.stringify({\n      enabled: true,\n      generated_for: options.website,\n      description:\n        (options.website != null ? options.website + \" - \" : \"\") + \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json?.full_address;\n    }\n    if (response.status === 401) {\n      throw \"Invalid Firefox Relay API token.\";\n    }\n    throw \"Unknown Firefox Relay error occurred.\";\n  }\n}\n","export class ForwarderOptions {\n  apiKey: string;\n  website: string;\n  fastmail = new FastmailForwarderOptions();\n  anonaddy = new AnonAddyForwarderOptions();\n}\n\nexport class FastmailForwarderOptions {\n  prefix: string;\n}\n\nexport class AnonAddyForwarderOptions {\n  domain: string;\n}\n","import { ApiService } from \"../../../../abstractions/api.service\";\n\nimport { Forwarder } from \"./forwarder\";\nimport { ForwarderOptions } from \"./forwarder-options\";\n\nexport class SimpleLoginForwarder implements Forwarder {\n  async generate(apiService: ApiService, options: ForwarderOptions): Promise<string> {\n    if (options.apiKey == null || options.apiKey === \"\") {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    const requestInit: RequestInit = {\n      redirect: \"manual\",\n      cache: \"no-store\",\n      method: \"POST\",\n      headers: new Headers({\n        Authentication: options.apiKey,\n        \"Content-Type\": \"application/json\",\n      }),\n    };\n    let url = \"https://app.simplelogin.io/api/alias/random/new\";\n    if (options.website != null) {\n      url += \"?hostname=\" + options.website;\n    }\n    requestInit.body = JSON.stringify({\n      note:\n        (options.website != null ? \"Website: \" + options.website + \". \" : \"\") +\n        \"Generated by Bitwarden.\",\n    });\n    const request = new Request(url, requestInit);\n    const response = await apiService.nativeFetch(request);\n    if (response.status === 200 || response.status === 201) {\n      const json = await response.json();\n      return json.alias;\n    }\n    if (response.status === 401) {\n      throw \"Invalid SimpleLogin API key.\";\n    }\n    try {\n      const json = await response.json();\n      if (json?.error != null) {\n        throw \"SimpleLogin error:\" + json.error;\n      }\n    } catch {\n      // Do nothing...\n    }\n    throw \"Unknown SimpleLogin error occurred.\";\n  }\n}\n","import { ApiService } from \"../../../abstractions/api.service\";\nimport { CryptoService } from \"../../../abstractions/crypto.service\";\nimport { StateService } from \"../../../abstractions/state.service\";\nimport { EFFLongWordList } from \"../../../misc/wordlist\";\n\nimport {\n  AnonAddyForwarder,\n  DuckDuckGoForwarder,\n  FastmailForwarder,\n  FirefoxRelayForwarder,\n  Forwarder,\n  ForwarderOptions,\n  SimpleLoginForwarder,\n} from \"./email-forwarders\";\nimport { UsernameGenerationServiceAbstraction } from \"./username-generation.service.abstraction\";\n\nconst DefaultOptions = {\n  type: \"word\",\n  wordCapitalize: true,\n  wordIncludeNumber: true,\n  subaddressType: \"random\",\n  catchallType: \"random\",\n  forwardedService: \"\",\n  forwardedAnonAddyDomain: \"anonaddy.me\",\n};\n\nexport class UsernameGenerationService implements UsernameGenerationServiceAbstraction {\n  constructor(\n    private cryptoService: CryptoService,\n    private stateService: StateService,\n    private apiService: ApiService\n  ) {}\n\n  generateUsername(options: any): Promise<string> {\n    if (options.type === \"catchall\") {\n      return this.generateCatchall(options);\n    } else if (options.type === \"subaddress\") {\n      return this.generateSubaddress(options);\n    } else if (options.type === \"forwarded\") {\n      return this.generateForwarded(options);\n    } else {\n      return this.generateWord(options);\n    }\n  }\n\n  async generateWord(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.wordCapitalize == null) {\n      o.wordCapitalize = true;\n    }\n    if (o.wordIncludeNumber == null) {\n      o.wordIncludeNumber = true;\n    }\n\n    const wordIndex = await this.cryptoService.randomNumber(0, EFFLongWordList.length - 1);\n    let word = EFFLongWordList[wordIndex];\n    if (o.wordCapitalize) {\n      word = word.charAt(0).toUpperCase() + word.slice(1);\n    }\n    if (o.wordIncludeNumber) {\n      const num = await this.cryptoService.randomNumber(1, 9999);\n      word = word + this.zeroPad(num.toString(), 4);\n    }\n    return word;\n  }\n\n  async generateSubaddress(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    const subaddressEmail = o.subaddressEmail;\n    if (subaddressEmail == null || subaddressEmail.length < 3) {\n      return o.subaddressEmail;\n    }\n    const atIndex = subaddressEmail.indexOf(\"@\");\n    if (atIndex < 1 || atIndex >= subaddressEmail.length - 1) {\n      return subaddressEmail;\n    }\n    if (o.subaddressType == null) {\n      o.subaddressType = \"random\";\n    }\n\n    const emailBeginning = subaddressEmail.substr(0, atIndex);\n    const emailEnding = subaddressEmail.substr(atIndex + 1, subaddressEmail.length);\n\n    let subaddressString = \"\";\n    if (o.subaddressType === \"random\") {\n      subaddressString = await this.randomString(8);\n    } else if (o.subaddressType === \"website-name\") {\n      subaddressString = o.website;\n    }\n    return emailBeginning + \"+\" + subaddressString + \"@\" + emailEnding;\n  }\n\n  async generateCatchall(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.catchallDomain == null || o.catchallDomain === \"\") {\n      return null;\n    }\n    if (o.catchallType == null) {\n      o.catchallType = \"random\";\n    }\n\n    let startString = \"\";\n    if (o.catchallType === \"random\") {\n      startString = await this.randomString(8);\n    } else if (o.catchallType === \"website-name\") {\n      startString = o.website;\n    }\n    return startString + \"@\" + o.catchallDomain;\n  }\n\n  async generateForwarded(options: any): Promise<string> {\n    const o = Object.assign({}, DefaultOptions, options);\n\n    if (o.forwardedService == null) {\n      return null;\n    }\n\n    let forwarder: Forwarder = null;\n    const forwarderOptions = new ForwarderOptions();\n    forwarderOptions.website = o.website;\n    if (o.forwardedService === \"simplelogin\") {\n      forwarder = new SimpleLoginForwarder();\n      forwarderOptions.apiKey = o.forwardedSimpleLoginApiKey;\n    } else if (o.forwardedService === \"anonaddy\") {\n      forwarder = new AnonAddyForwarder();\n      forwarderOptions.apiKey = o.forwardedAnonAddyApiToken;\n      forwarderOptions.anonaddy.domain = o.forwardedAnonAddyDomain;\n    } else if (o.forwardedService === \"firefoxrelay\") {\n      forwarder = new FirefoxRelayForwarder();\n      forwarderOptions.apiKey = o.forwardedFirefoxApiToken;\n    } else if (o.forwardedService === \"fastmail\") {\n      forwarder = new FastmailForwarder();\n      forwarderOptions.apiKey = o.forwardedFastmailApiToken;\n    } else if (o.forwardedService === \"duckduckgo\") {\n      forwarder = new DuckDuckGoForwarder();\n      forwarderOptions.apiKey = o.forwardedDuckDuckGoToken;\n    }\n\n    if (forwarder == null) {\n      return null;\n    }\n\n    return forwarder.generate(this.apiService, forwarderOptions);\n  }\n\n  async getOptions(): Promise<any> {\n    let options = await this.stateService.getUsernameGenerationOptions();\n    if (options == null) {\n      options = Object.assign({}, DefaultOptions);\n    } else {\n      options = Object.assign({}, DefaultOptions, options);\n    }\n    await this.stateService.setUsernameGenerationOptions(options);\n    return options;\n  }\n\n  async saveOptions(options: any) {\n    await this.stateService.setUsernameGenerationOptions(options);\n  }\n\n  private async randomString(length: number) {\n    let str = \"\";\n    const charSet = \"abcdefghijklmnopqrstuvwxyz1234567890\";\n    for (let i = 0; i < length; i++) {\n      const randomCharIndex = await this.cryptoService.randomNumber(0, charSet.length - 1);\n      str += charSet.charAt(randomCharIndex);\n    }\n    return str;\n  }\n\n  // ref: https://stackoverflow.com/a/10073788\n  private zeroPad(number: string, width: number) {\n    return number.length >= width\n      ? number\n      : new Array(width - number.length + 1).join(\"0\") + number;\n  }\n}\n","import { UriMatchType } from \"../../enums/uriMatchType\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { CipherType } from \"../enums/cipher-type\";\nimport { CipherData } from \"../models/data/cipher.data\";\nimport { Cipher } from \"../models/domain/cipher\";\nimport { Field } from \"../models/domain/field\";\nimport { CipherView } from \"../models/view/cipher.view\";\nimport { FieldView } from \"../models/view/field.view\";\n\nexport abstract class CipherService {\n  clearCache: (userId?: string) => Promise<void>;\n  encrypt: (\n    model: CipherView,\n    key?: SymmetricCryptoKey,\n    originalCipher?: Cipher\n  ) => Promise<Cipher>;\n  encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n  encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n  get: (id: string) => Promise<Cipher>;\n  getAll: () => Promise<Cipher[]>;\n  getAllDecrypted: () => Promise<CipherView[]>;\n  getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n  getAllDecryptedForUrl: (\n    url: string,\n    includeOtherTypes?: CipherType[],\n    defaultMatch?: UriMatchType\n  ) => Promise<CipherView[]>;\n  getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n  getLastUsedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getLastLaunchedForUrl: (url: string, autofillOnPageLoad: boolean) => Promise<CipherView>;\n  getNextCipherForUrl: (url: string) => Promise<CipherView>;\n  updateLastUsedIndexForUrl: (url: string) => void;\n  updateLastUsedDate: (id: string) => Promise<void>;\n  updateLastLaunchedDate: (id: string) => Promise<void>;\n  saveNeverDomain: (domain: string) => Promise<void>;\n  createWithServer: (cipher: Cipher) => Promise<any>;\n  updateWithServer: (cipher: Cipher) => Promise<any>;\n  shareWithServer: (\n    cipher: CipherView,\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  shareManyWithServer: (\n    ciphers: CipherView[],\n    organizationId: string,\n    collectionIds: string[]\n  ) => Promise<any>;\n  saveAttachmentWithServer: (\n    cipher: Cipher,\n    unencryptedFile: any,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveAttachmentRawWithServer: (\n    cipher: Cipher,\n    filename: string,\n    data: ArrayBuffer,\n    admin?: boolean\n  ) => Promise<Cipher>;\n  saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n  upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n  replace: (ciphers: { [id: string]: CipherData }) => Promise<any>;\n  clear: (userId: string) => Promise<any>;\n  moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n  deleteWithServer: (id: string) => Promise<any>;\n  deleteManyWithServer: (ids: string[]) => Promise<any>;\n  deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n  deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n  sortCiphersByLastUsed: (a: CipherView, b: CipherView) => number;\n  sortCiphersByLastUsedThenName: (a: CipherView, b: CipherView) => number;\n  getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n  softDelete: (id: string | string[]) => Promise<any>;\n  softDeleteWithServer: (id: string) => Promise<any>;\n  softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n  restore: (\n    cipher: { id: string; revisionDate: string } | { id: string; revisionDate: string }[]\n  ) => Promise<any>;\n  restoreWithServer: (id: string) => Promise<any>;\n  restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { Folder } from \"../../models/domain/folder\";\nimport { FolderResponse } from \"../../models/response/folder.response\";\n\nexport class FolderApiServiceAbstraction {\n  save: (folder: Folder) => Promise<any>;\n  delete: (id: string) => Promise<any>;\n  get: (id: string) => Promise<FolderResponse>;\n}\n","import { Observable } from \"rxjs\";\n\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { FolderData } from \"../../models/data/folder.data\";\nimport { Folder } from \"../../models/domain/folder\";\nimport { FolderView } from \"../../models/view/folder.view\";\n\nexport abstract class FolderService {\n  folders$: Observable<Folder[]>;\n  folderViews$: Observable<FolderView[]>;\n\n  clearCache: () => Promise<void>;\n  encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n  get: (id: string) => Promise<Folder>;\n  getAllFromState: () => Promise<Folder[]>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getFromState: (id: string) => Promise<Folder>;\n  /**\n   * @deprecated Only use in CLI!\n   */\n  getAllDecryptedFromState: () => Promise<FolderView[]>;\n}\n\nexport abstract class InternalFolderService extends FolderService {\n  upsert: (folder: FolderData | FolderData[]) => Promise<void>;\n  replace: (folders: { [id: string]: FolderData }) => Promise<void>;\n  clear: (userId: string) => Promise<any>;\n  delete: (id: string | string[]) => Promise<any>;\n}\n","export abstract class PasswordRepromptService {\n  protectedFields: () => string[];\n  showPasswordPrompt: () => Promise<boolean>;\n  enabled: () => Promise<boolean>;\n}\n","import {\n  SyncCipherNotification,\n  SyncFolderNotification,\n  SyncSendNotification,\n} from \"../../../models/response/notification.response\";\n\nexport abstract class SyncService {\n  syncInProgress: boolean;\n\n  getLastSync: () => Promise<Date>;\n  setLastSync: (date: Date, userId?: string) => Promise<any>;\n  fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n  syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n  syncUpsertSend: (notification: SyncSendNotification, isEdit: boolean) => Promise<boolean>;\n  syncDeleteSend: (notification: SyncSendNotification) => Promise<boolean>;\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","import { AttachmentResponse } from \"../response/attachment.response\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../../../models/api/card.api\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipher-reprompt-type\";\nimport { CipherType } from \"../../enums/cipher-type\";\nimport { CipherResponse } from \"../response/cipher.response\";\n\nimport { AttachmentData } from \"./attachment.data\";\nimport { CardData } from \"./card.data\";\nimport { FieldData } from \"./field.data\";\nimport { IdentityData } from \"./identity.data\";\nimport { LoginData } from \"./login.data\";\nimport { PasswordHistoryData } from \"./password-history.data\";\nimport { SecureNoteData } from \"./secure-note.data\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.creationDate = response.creationDate;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { FieldType } from \"../../../enums/fieldType\";\nimport { LinkedIdType } from \"../../../enums/linkedIdType\";\nimport { FieldApi } from \"../../../models/api/field.api\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../../../models/api/identity.api\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../../../models/api/login-uri.api\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../../../models/api/login.api\";\n\nimport { LoginUriData } from \"./login-uri.data\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/password-history.response\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../../../models/api/secure-note.api\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"../../../misc/utils\";\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { AttachmentData } from \"../data/attachment.data\";\nimport { AttachmentView } from \"../view/attachment.view\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Attachment>>): Attachment {\n    if (obj == null) {\n      return null;\n    }\n\n    const key = EncString.fromJSON(obj.key);\n    const fileName = EncString.fromJSON(obj.fileName);\n\n    return Object.assign(new Attachment(), obj, {\n      key,\n      fileName,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { CardData } from \"../data/card.data\";\nimport { CardView } from \"../view/card.view\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Card>>): Card {\n    if (obj == null) {\n      return null;\n    }\n\n    const cardholderName = EncString.fromJSON(obj.cardholderName);\n    const brand = EncString.fromJSON(obj.brand);\n    const number = EncString.fromJSON(obj.number);\n    const expMonth = EncString.fromJSON(obj.expMonth);\n    const expYear = EncString.fromJSON(obj.expYear);\n    const code = EncString.fromJSON(obj.code);\n    return Object.assign(new Card(), obj, {\n      cardholderName,\n      brand,\n      number,\n      expMonth,\n      expYear,\n      code,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../../interfaces/decryptable.interface\";\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { InitializerKey } from \"../../../services/cryptography/initializer-key\";\nimport { CipherRepromptType } from \"../../enums/cipher-reprompt-type\";\nimport { CipherType } from \"../../enums/cipher-type\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { LocalData } from \"../data/local.data\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secure-note\";\n\nexport class Cipher extends Domain implements Decryptable<CipherView> {\n  readonly initializerKey = InitializerKey.Cipher;\n\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  creationDate: Date;\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.creationDate = this.creationDate != null ? this.creationDate.toISOString() : null;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n\n  static fromJSON(obj: Jsonify<Cipher>) {\n    if (obj == null) {\n      return null;\n    }\n\n    const domain = new Cipher();\n    const name = EncString.fromJSON(obj.name);\n    const notes = EncString.fromJSON(obj.notes);\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => Attachment.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => Field.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => Password.fromJSON(ph));\n\n    Object.assign(domain, obj, {\n      name,\n      notes,\n      revisionDate,\n      deletedDate,\n      attachments,\n      fields,\n      passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        domain.card = Card.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        domain.login = Login.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return domain;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../../enums/fieldType\";\nimport { LinkedIdType } from \"../../../enums/linkedIdType\";\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { FieldData } from \"../data/field.data\";\nimport { FieldView } from \"../view/field.view\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Field>>): Field {\n    if (obj == null) {\n      return null;\n    }\n\n    const name = EncString.fromJSON(obj.name);\n    const value = EncString.fromJSON(obj.value);\n\n    return Object.assign(new Field(), obj, {\n      name,\n      value,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { FolderData } from \"../data/folder.data\";\nimport { FolderView } from \"../view/folder.view\";\n\nexport class Folder extends Domain {\n  id: string;\n  name: EncString;\n  revisionDate: Date;\n\n  constructor(obj?: FolderData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        name: null,\n      },\n      [\"id\"]\n    );\n\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n  }\n\n  decrypt(): Promise<FolderView> {\n    return this.decryptObj(\n      new FolderView(this),\n      {\n        name: null,\n      },\n      null\n    );\n  }\n\n  static fromJSON(obj: Jsonify<Folder>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new Folder(), obj, { name: EncString.fromJSON(obj.name), revisionDate });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { IdentityData } from \"../data/identity.data\";\nimport { IdentityView } from \"../view/identity.view\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n\n  static fromJSON(obj: Jsonify<Identity>): Identity {\n    if (obj == null) {\n      return null;\n    }\n\n    const title = EncString.fromJSON(obj.title);\n    const firstName = EncString.fromJSON(obj.firstName);\n    const middleName = EncString.fromJSON(obj.middleName);\n    const lastName = EncString.fromJSON(obj.lastName);\n    const address1 = EncString.fromJSON(obj.address1);\n    const address2 = EncString.fromJSON(obj.address2);\n    const address3 = EncString.fromJSON(obj.address3);\n    const city = EncString.fromJSON(obj.city);\n    const state = EncString.fromJSON(obj.state);\n    const postalCode = EncString.fromJSON(obj.postalCode);\n    const country = EncString.fromJSON(obj.country);\n    const company = EncString.fromJSON(obj.company);\n    const email = EncString.fromJSON(obj.email);\n    const phone = EncString.fromJSON(obj.phone);\n    const ssn = EncString.fromJSON(obj.ssn);\n    const username = EncString.fromJSON(obj.username);\n    const passportNumber = EncString.fromJSON(obj.passportNumber);\n    const licenseNumber = EncString.fromJSON(obj.licenseNumber);\n\n    return Object.assign(new Identity(), obj, {\n      title,\n      firstName,\n      middleName,\n      lastName,\n      address1,\n      address2,\n      address3,\n      city,\n      state,\n      postalCode,\n      country,\n      company,\n      email,\n      phone,\n      ssn,\n      username,\n      passportNumber,\n      licenseNumber,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../../enums/uriMatchType\";\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { LoginUriData } from \"../data/login-uri.data\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n\n  static fromJSON(obj: Jsonify<LoginUri>): LoginUri {\n    if (obj == null) {\n      return null;\n    }\n\n    const uri = EncString.fromJSON(obj.uri);\n    return Object.assign(new LoginUri(), obj, {\n      uri,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { LoginData } from \"../data/login.data\";\nimport { LoginView } from \"../view/login.view\";\n\nimport { LoginUri } from \"./login-uri\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Login>>): Login {\n    if (obj == null) {\n      return null;\n    }\n\n    const username = EncString.fromJSON(obj.username);\n    const password = EncString.fromJSON(obj.password);\n    const totp = EncString.fromJSON(obj.totp);\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUri.fromJSON(uri));\n\n    return Object.assign(new Login(), obj, {\n      username,\n      password,\n      totp,\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { PasswordHistoryData } from \"../data/password-history.data\";\nimport { PasswordHistoryView } from \"../view/password-history.view\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Password>>): Password {\n    if (obj == null) {\n      return null;\n    }\n\n    const password = EncString.fromJSON(obj.password);\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new Password(), obj, {\n      password,\n      lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../../enums/secureNoteType\";\nimport Domain from \"../../../models/domain/domain-base\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { SecureNoteData } from \"../data/secure-note.data\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n\n  static fromJSON(obj: Jsonify<SecureNote>): SecureNote {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new SecureNote(), obj);\n  }\n}\n","export class CipherBulkDeleteRequest {\n  ids: string[];\n  organizationId: string;\n\n  constructor(ids: string[], organizationId?: string) {\n    this.ids = ids == null ? [] : ids;\n    this.organizationId = organizationId;\n  }\n}\n","export class CipherCollectionsRequest {\n  collectionIds: string[];\n\n  constructor(collectionIds: string[]) {\n    this.collectionIds = collectionIds == null ? [] : collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherCreateRequest {\n  cipher: CipherRequest;\n  collectionIds: string[];\n\n  constructor(cipher: Cipher) {\n    this.cipher = new CipherRequest(cipher);\n    this.collectionIds = cipher.collectionIds;\n  }\n}\n","import { Cipher } from \"../domain/cipher\";\n\nimport { CipherRequest } from \"./cipher.request\";\n\nexport class CipherWithIdRequest extends CipherRequest {\n  id: string;\n\n  constructor(cipher: Cipher) {\n    super(cipher);\n    this.id = cipher.id;\n  }\n}\n","export class AttachmentRequest {\n  fileName: string;\n  key: string;\n  fileSize: number;\n  adminRequest: boolean;\n}\n","import { CardApi } from \"../../../models/api/card.api\";\nimport { FieldApi } from \"../../../models/api/field.api\";\nimport { IdentityApi } from \"../../../models/api/identity.api\";\nimport { LoginUriApi } from \"../../../models/api/login-uri.api\";\nimport { LoginApi } from \"../../../models/api/login.api\";\nimport { SecureNoteApi } from \"../../../models/api/secure-note.api\";\nimport { CipherRepromptType } from \"../../enums/cipher-reprompt-type\";\nimport { CipherType } from \"../../enums/cipher-type\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentRequest } from \"./attachment.request\";\nimport { PasswordHistoryRequest } from \"./password-history.request\";\n\nexport class CipherRequest {\n  type: CipherType;\n  folderId: string;\n  organizationId: string;\n  name: string;\n  notes: string;\n  favorite: boolean;\n  login: LoginApi;\n  secureNote: SecureNoteApi;\n  card: CardApi;\n  identity: IdentityApi;\n  fields: FieldApi[];\n  passwordHistory: PasswordHistoryRequest[];\n  // Deprecated, remove at some point and rename attachments2 to attachments\n  attachments: { [id: string]: string };\n  attachments2: { [id: string]: AttachmentRequest };\n  lastKnownRevisionDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(cipher: Cipher) {\n    this.type = cipher.type;\n    this.folderId = cipher.folderId;\n    this.organizationId = cipher.organizationId;\n    this.name = cipher.name ? cipher.name.encryptedString : null;\n    this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n    this.favorite = cipher.favorite;\n    this.lastKnownRevisionDate = cipher.revisionDate;\n    this.reprompt = cipher.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginApi();\n        this.login.uris = null;\n        this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n        this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n        this.login.passwordRevisionDate =\n          cipher.login.passwordRevisionDate != null\n            ? cipher.login.passwordRevisionDate.toISOString()\n            : null;\n        this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n        this.login.autofillOnPageLoad = cipher.login.autofillOnPageLoad;\n\n        if (cipher.login.uris != null) {\n          this.login.uris = cipher.login.uris.map((u) => {\n            const uri = new LoginUriApi();\n            uri.uri = u.uri != null ? u.uri.encryptedString : null;\n            uri.match = u.match != null ? u.match : null;\n            return uri;\n          });\n        }\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteApi();\n        this.secureNote.type = cipher.secureNote.type;\n        break;\n      case CipherType.Card:\n        this.card = new CardApi();\n        this.card.cardholderName =\n          cipher.card.cardholderName != null ? cipher.card.cardholderName.encryptedString : null;\n        this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n        this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n        this.card.expMonth =\n          cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n        this.card.expYear =\n          cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n        this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityApi();\n        this.identity.title =\n          cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n        this.identity.firstName =\n          cipher.identity.firstName != null ? cipher.identity.firstName.encryptedString : null;\n        this.identity.middleName =\n          cipher.identity.middleName != null ? cipher.identity.middleName.encryptedString : null;\n        this.identity.lastName =\n          cipher.identity.lastName != null ? cipher.identity.lastName.encryptedString : null;\n        this.identity.address1 =\n          cipher.identity.address1 != null ? cipher.identity.address1.encryptedString : null;\n        this.identity.address2 =\n          cipher.identity.address2 != null ? cipher.identity.address2.encryptedString : null;\n        this.identity.address3 =\n          cipher.identity.address3 != null ? cipher.identity.address3.encryptedString : null;\n        this.identity.city =\n          cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n        this.identity.state =\n          cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n        this.identity.postalCode =\n          cipher.identity.postalCode != null ? cipher.identity.postalCode.encryptedString : null;\n        this.identity.country =\n          cipher.identity.country != null ? cipher.identity.country.encryptedString : null;\n        this.identity.company =\n          cipher.identity.company != null ? cipher.identity.company.encryptedString : null;\n        this.identity.email =\n          cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n        this.identity.phone =\n          cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n        this.identity.ssn =\n          cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n        this.identity.username =\n          cipher.identity.username != null ? cipher.identity.username.encryptedString : null;\n        this.identity.passportNumber =\n          cipher.identity.passportNumber != null\n            ? cipher.identity.passportNumber.encryptedString\n            : null;\n        this.identity.licenseNumber =\n          cipher.identity.licenseNumber != null\n            ? cipher.identity.licenseNumber.encryptedString\n            : null;\n        break;\n      default:\n        break;\n    }\n\n    if (cipher.fields != null) {\n      this.fields = cipher.fields.map((f) => {\n        const field = new FieldApi();\n        field.type = f.type;\n        field.name = f.name ? f.name.encryptedString : null;\n        field.value = f.value ? f.value.encryptedString : null;\n        field.linkedId = f.linkedId;\n        return field;\n      });\n    }\n\n    if (cipher.passwordHistory != null) {\n      this.passwordHistory = [];\n      cipher.passwordHistory.forEach((ph) => {\n        this.passwordHistory.push({\n          lastUsedDate: ph.lastUsedDate,\n          password: ph.password ? ph.password.encryptedString : null,\n        });\n      });\n    }\n\n    if (cipher.attachments != null) {\n      this.attachments = {};\n      this.attachments2 = {};\n      cipher.attachments.forEach((attachment) => {\n        const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n        this.attachments[attachment.id] = fileName;\n        const attachmentRequest = new AttachmentRequest();\n        attachmentRequest.fileName = fileName;\n        if (attachment.key != null) {\n          attachmentRequest.key = attachment.key.encryptedString;\n        }\n        this.attachments2[attachment.id] = attachmentRequest;\n      });\n    }\n  }\n}\n","import { Folder } from \"../domain/folder\";\n\nexport class FolderRequest {\n  name: string;\n\n  constructor(folder: Folder) {\n    this.name = folder.name ? folder.name.encryptedString : null;\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class AttachmentResponse extends BaseResponse {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.url = this.getResponseProperty(\"Url\");\n    this.fileName = this.getResponseProperty(\"FileName\");\n    this.key = this.getResponseProperty(\"Key\");\n    this.size = this.getResponseProperty(\"Size\");\n    this.sizeName = this.getResponseProperty(\"SizeName\");\n  }\n}\n","import { BaseResponse } from \"../../../models/response/base.response\";\n\nexport class PasswordHistoryResponse extends BaseResponse {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response: any) {\n    super(response);\n    this.password = this.getResponseProperty(\"Password\");\n    this.lastUsedDate = this.getResponseProperty(\"LastUsedDate\");\n  }\n}\n","import { CardApi } from \"../../../models/api/card.api\";\nimport { FieldApi } from \"../../../models/api/field.api\";\nimport { IdentityApi } from \"../../../models/api/identity.api\";\nimport { LoginApi } from \"../../../models/api/login.api\";\nimport { SecureNoteApi } from \"../../../models/api/secure-note.api\";\nimport { BaseResponse } from \"../../../models/response/base.response\";\nimport { CipherRepromptType } from \"../../enums/cipher-reprompt-type\";\n\nimport { AttachmentResponse } from \"./attachment.response\";\nimport { PasswordHistoryResponse } from \"./password-history.response\";\n\nexport class CipherResponse extends BaseResponse {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  type: number;\n  name: string;\n  notes: string;\n  fields: FieldApi[];\n  login: LoginApi;\n  card: CardApi;\n  identity: IdentityApi;\n  secureNote: SecureNoteApi;\n  favorite: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  revisionDate: string;\n  attachments: AttachmentResponse[];\n  passwordHistory: PasswordHistoryResponse[];\n  collectionIds: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response: any) {\n    super(response);\n    this.id = this.getResponseProperty(\"Id\");\n    this.organizationId = this.getResponseProperty(\"OrganizationId\");\n    this.folderId = this.getResponseProperty(\"FolderId\") || null;\n    this.type = this.getResponseProperty(\"Type\");\n    this.name = this.getResponseProperty(\"Name\");\n    this.notes = this.getResponseProperty(\"Notes\");\n    this.favorite = this.getResponseProperty(\"Favorite\") || false;\n    this.edit = !!this.getResponseProperty(\"Edit\");\n    if (this.getResponseProperty(\"ViewPassword\") == null) {\n      this.viewPassword = true;\n    } else {\n      this.viewPassword = this.getResponseProperty(\"ViewPassword\");\n    }\n    this.organizationUseTotp = this.getResponseProperty(\"OrganizationUseTotp\");\n    this.revisionDate = this.getResponseProperty(\"RevisionDate\");\n    this.collectionIds = this.getResponseProperty(\"CollectionIds\");\n    this.creationDate = this.getResponseProperty(\"CreationDate\");\n    this.deletedDate = this.getResponseProperty(\"DeletedDate\");\n\n    const login = this.getResponseProperty(\"Login\");\n    if (login != null) {\n      this.login = new LoginApi(login);\n    }\n\n    const card = this.getResponseProperty(\"Card\");\n    if (card != null) {\n      this.card = new CardApi(card);\n    }\n\n    const identity = this.getResponseProperty(\"Identity\");\n    if (identity != null) {\n      this.identity = new IdentityApi(identity);\n    }\n\n    const secureNote = this.getResponseProperty(\"SecureNote\");\n    if (secureNote != null) {\n      this.secureNote = new SecureNoteApi(secureNote);\n    }\n\n    const fields = this.getResponseProperty(\"Fields\");\n    if (fields != null) {\n      this.fields = fields.map((f: any) => new FieldApi(f));\n    }\n\n    const attachments = this.getResponseProperty(\"Attachments\");\n    if (attachments != null) {\n      this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n    }\n\n    const passwordHistory = this.getResponseProperty(\"PasswordHistory\");\n    if (passwordHistory != null) {\n      this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n    }\n\n    this.reprompt = this.getResponseProperty(\"Reprompt\") || CipherRepromptType.None;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { View } from \"../../../models/view/view\";\nimport { Attachment } from \"../domain/attachment\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LinkedIdType } from \"../../../enums/linkedIdType\";\nimport { InitializerMetadata } from \"../../../interfaces/initializer-metadata.interface\";\nimport { View } from \"../../../models/view/view\";\nimport { InitializerKey } from \"../../../services/cryptography/initializer-key\";\nimport { CipherRepromptType } from \"../../enums/cipher-reprompt-type\";\nimport { CipherType } from \"../../enums/cipher-type\";\nimport { LocalData } from \"../data/local.data\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachment.view\";\nimport { CardView } from \"./card.view\";\nimport { FieldView } from \"./field.view\";\nimport { IdentityView } from \"./identity.view\";\nimport { LoginView } from \"./login.view\";\nimport { PasswordHistoryView } from \"./password-history.view\";\nimport { SecureNoteView } from \"./secure-note.view\";\n\nexport class CipherView implements View, InitializerMetadata {\n  readonly initializerKey = InitializerKey.CipherView;\n\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  creationDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.creationDate = c.creationDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../../enums/fieldType\";\nimport { LinkedIdType } from \"../../../enums/linkedIdType\";\nimport { View } from \"../../../models/view/view\";\nimport { Field } from \"../domain/field\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { ITreeNodeObject } from \"../../../models/domain/tree-node\";\nimport { View } from \"../../../models/view/view\";\nimport { Folder } from \"../domain/folder\";\n\nexport class FolderView implements View, ITreeNodeObject {\n  id: string = null;\n  name: string = null;\n  revisionDate: Date = null;\n\n  constructor(f?: Folder) {\n    if (!f) {\n      return;\n    }\n\n    this.id = f.id;\n    this.revisionDate = f.revisionDate;\n  }\n\n  static fromJSON(obj: Jsonify<FolderView>) {\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    return Object.assign(new FolderView(), obj, { revisionDate });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../../misc/utils\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { LinkedMetadata } from \"../../../misc/linkedFieldOption.decorator\";\nimport { View } from \"../../../models/view/view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../../enums/uriMatchType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { View } from \"../../../models/view/view\";\nimport { LoginUri } from \"../domain/login-uri\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./item.view\";\nimport { LoginUriView } from \"./login-uri.view\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { View } from \"../../../models/view/view\";\nimport { Password } from \"../domain/password\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secure-note\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","import { Directive, HostListener, Input, OnDestroy, Optional } from \"@angular/core\";\nimport { BehaviorSubject, finalize, Subject, takeUntil, tap } from \"rxjs\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\nimport { FunctionReturningAwaitable, functionToObservable } from \"../utils/function-to-observable\";\n\n/**\n * Allow a single button to perform async actions on click and reflect the progress in the UI by automatically\n * activating the loading effect while the action is processed.\n */\n@Directive({\n  selector: \"[bitAction]\",\n})\nexport class BitActionDirective implements OnDestroy {\n  private destroy$ = new Subject<void>();\n  private _loading$ = new BehaviorSubject<boolean>(false);\n\n  disabled = false;\n\n  @Input(\"bitAction\") protected handler: FunctionReturningAwaitable;\n\n  readonly loading$ = this._loading$.asObservable();\n\n  constructor(\n    private buttonComponent: ButtonLikeAbstraction,\n    @Optional() private validationService?: ValidationService,\n    @Optional() private logService?: LogService\n  ) {}\n\n  get loading() {\n    return this._loading$.value;\n  }\n\n  set loading(value: boolean) {\n    this._loading$.next(value);\n    this.buttonComponent.loading = value;\n  }\n\n  @HostListener(\"click\")\n  protected async onClick() {\n    if (!this.handler || this.loading || this.disabled || this.buttonComponent.disabled) {\n      return;\n    }\n\n    this.loading = true;\n    functionToObservable(this.handler)\n      .pipe(\n        tap({\n          error: (err: unknown) => {\n            this.logService?.error(`Async action exception: ${err}`);\n            this.validationService?.showError(err);\n          },\n        }),\n        finalize(() => (this.loading = false)),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Directive, Input, OnDestroy, OnInit, Optional } from \"@angular/core\";\nimport { FormGroupDirective } from \"@angular/forms\";\nimport { BehaviorSubject, catchError, filter, of, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { LogService } from \"@bitwarden/common/abstractions/log.service\";\nimport { ValidationService } from \"@bitwarden/common/abstractions/validation.service\";\n\nimport { FunctionReturningAwaitable, functionToObservable } from \"../utils/function-to-observable\";\n\n/**\n * Allow a form to perform async actions on submit, disabling the form while the action is processing.\n */\n@Directive({\n  selector: \"[formGroup][bitSubmit]\",\n})\nexport class BitSubmitDirective implements OnInit, OnDestroy {\n  private destroy$ = new Subject<void>();\n  private _loading$ = new BehaviorSubject<boolean>(false);\n  private _disabled$ = new BehaviorSubject<boolean>(false);\n\n  @Input(\"bitSubmit\") protected handler: FunctionReturningAwaitable;\n\n  @Input() allowDisabledFormSubmit?: boolean = false;\n\n  readonly loading$ = this._loading$.asObservable();\n  readonly disabled$ = this._disabled$.asObservable();\n\n  constructor(\n    private formGroupDirective: FormGroupDirective,\n    @Optional() validationService?: ValidationService,\n    @Optional() logService?: LogService\n  ) {\n    formGroupDirective.ngSubmit\n      .pipe(\n        filter(() => !this.disabled),\n        switchMap(() => {\n          // Calling functionToObservable exectues the sync part of the handler\n          // allowing the function to check form validity before it gets disabled.\n          const awaitable = functionToObservable(this.handler);\n\n          // Disable form\n          this.loading = true;\n\n          return awaitable.pipe(\n            catchError((err: unknown) => {\n              logService?.error(`Async submit exception: ${err}`);\n              validationService?.showError(err);\n              return of(undefined);\n            })\n          );\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe({\n        next: () => (this.loading = false),\n        complete: () => (this.loading = false),\n      });\n  }\n\n  ngOnInit(): void {\n    this.formGroupDirective.statusChanges.pipe(takeUntil(this.destroy$)).subscribe((c) => {\n      if (this.allowDisabledFormSubmit) {\n        this._disabled$.next(false);\n      } else {\n        this._disabled$.next(c === \"DISABLED\");\n      }\n    });\n  }\n\n  get disabled() {\n    return this._disabled$.value;\n  }\n\n  set disabled(value: boolean) {\n    this._disabled$.next(value);\n  }\n\n  get loading() {\n    return this._loading$.value;\n  }\n\n  set loading(value: boolean) {\n    this.disabled = value;\n    this._loading$.next(value);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Directive, Input, OnDestroy, Optional } from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nimport { BitActionDirective } from \"./bit-action.directive\";\nimport { BitSubmitDirective } from \"./bit-submit.directive\";\n\n/**\n * This directive has two purposes:\n *\n * When attached to a submit button:\n * - Activates the button loading effect while the form is processing an async submit action.\n * - Disables the button while a `bitAction` directive on another button is being processed.\n *\n * When attached to a button with `bitAction` directive inside of a form:\n * - Disables the button while the `bitSubmit` directive is processing an async submit action.\n * - Disables the button while a `bitAction` directive on another button is being processed.\n * - Disables form submission while the `bitAction` directive is processing an async action.\n *\n * Note: you must use a directive that implements the ButtonLikeAbstraction (bitButton or bitIconButton for example)\n * along with this one in order to avoid provider errors.\n */\n@Directive({\n  selector: \"button[bitFormButton]\",\n})\nexport class BitFormButtonDirective implements OnDestroy {\n  private destroy$ = new Subject<void>();\n\n  @Input() type: string;\n\n  constructor(\n    buttonComponent: ButtonLikeAbstraction,\n    @Optional() submitDirective?: BitSubmitDirective,\n    @Optional() actionDirective?: BitActionDirective\n  ) {\n    if (submitDirective && buttonComponent) {\n      submitDirective.loading$.pipe(takeUntil(this.destroy$)).subscribe((loading) => {\n        if (this.type === \"submit\") {\n          buttonComponent.loading = loading;\n        } else {\n          buttonComponent.disabled = loading;\n        }\n      });\n\n      submitDirective.disabled$.pipe(takeUntil(this.destroy$)).subscribe((disabled) => {\n        buttonComponent.disabled = disabled;\n      });\n    }\n\n    if (submitDirective && actionDirective) {\n      actionDirective.loading$.pipe(takeUntil(this.destroy$)).subscribe((disabled) => {\n        submitDirective.disabled = disabled;\n      });\n\n      submitDirective.disabled$.pipe(takeUntil(this.destroy$)).subscribe((disabled) => {\n        actionDirective.disabled = disabled;\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","import { Component, Input, OnChanges } from \"@angular/core\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\ntype SizeTypes = \"xlarge\" | \"large\" | \"default\" | \"small\" | \"xsmall\";\n\nconst SizeClasses: Record<SizeTypes, string[]> = {\n  xlarge: [\"tw-h-24\", \"tw-w-24\"],\n  large: [\"tw-h-16\", \"tw-w-16\"],\n  default: [\"tw-h-10\", \"tw-w-10\"],\n  small: [\"tw-h-7\", \"tw-w-7\"],\n  xsmall: [\"tw-h-6\", \"tw-w-6\"],\n};\n\n@Component({\n  selector: \"bit-avatar\",\n  template: `<img *ngIf=\"src\" [src]=\"src\" title=\"{{ title || text }}\" [ngClass]=\"classList\" />`,\n})\nexport class AvatarComponent implements OnChanges {\n  @Input() border = false;\n  @Input() color?: string;\n  @Input() id?: string;\n  @Input() text?: string;\n  @Input() title: string;\n  @Input() size: SizeTypes = \"default\";\n\n  private svgCharCount = 2;\n  private svgFontSize = 20;\n  private svgFontWeight = 300;\n  private svgSize = 48;\n  src: SafeResourceUrl;\n\n  constructor(public sanitizer: DomSanitizer) {}\n\n  ngOnChanges() {\n    this.generate();\n  }\n\n  get classList() {\n    return [\"tw-rounded-full\"]\n      .concat(SizeClasses[this.size] ?? [])\n      .concat(this.border ? [\"tw-border\", \"tw-border-solid\", \"tw-border-secondary-500\"] : []);\n  }\n\n  private generate() {\n    let chars: string = null;\n    const upperCaseText = this.text?.toUpperCase() ?? \"\";\n\n    chars = this.getFirstLetters(upperCaseText, this.svgCharCount);\n\n    if (chars == null) {\n      chars = this.unicodeSafeSubstring(upperCaseText, this.svgCharCount);\n    }\n\n    // If the chars contain an emoji, only show it.\n    if (chars.match(Utils.regexpEmojiPresentation)) {\n      chars = chars.match(Utils.regexpEmojiPresentation)[0];\n    }\n\n    let svg: HTMLElement;\n    let hexColor = this.color;\n\n    if (!Utils.isNullOrWhitespace(this.color)) {\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    } else if (!Utils.isNullOrWhitespace(this.id)) {\n      hexColor = Utils.stringToColor(this.id.toString());\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    } else {\n      hexColor = Utils.stringToColor(upperCaseText);\n      svg = this.createSvgElement(this.svgSize, hexColor);\n    }\n\n    const charObj = this.createTextElement(chars, hexColor);\n    svg.appendChild(charObj);\n    const html = window.document.createElement(\"div\").appendChild(svg).outerHTML;\n    const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n    this.src = this.sanitizer.bypassSecurityTrustResourceUrl(\n      \"data:image/svg+xml;base64,\" + svgHtml\n    );\n  }\n\n  private getFirstLetters(data: string, count: number): string {\n    const parts = data.split(\" \");\n    if (parts.length > 1) {\n      let text = \"\";\n      for (let i = 0; i < count; i++) {\n        text += this.unicodeSafeSubstring(parts[i], 1);\n      }\n      return text;\n    }\n    return null;\n  }\n\n  private createSvgElement(size: number, color: string): HTMLElement {\n    const svgTag = window.document.createElement(\"svg\");\n    svgTag.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    svgTag.setAttribute(\"pointer-events\", \"none\");\n    svgTag.setAttribute(\"width\", size.toString());\n    svgTag.setAttribute(\"height\", size.toString());\n    svgTag.style.backgroundColor = color;\n    svgTag.style.width = size + \"px\";\n    svgTag.style.height = size + \"px\";\n    return svgTag;\n  }\n\n  private createTextElement(character: string, color: string): HTMLElement {\n    const textTag = window.document.createElement(\"text\");\n    textTag.setAttribute(\"text-anchor\", \"middle\");\n    textTag.setAttribute(\"y\", \"50%\");\n    textTag.setAttribute(\"x\", \"50%\");\n    textTag.setAttribute(\"dy\", \"0.35em\");\n    textTag.setAttribute(\"pointer-events\", \"auto\");\n    textTag.setAttribute(\"fill\", Utils.pickTextColorBasedOnBgColor(color, 135, true));\n    textTag.setAttribute(\n      \"font-family\",\n      '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n        'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"'\n    );\n    textTag.textContent = character;\n    textTag.style.fontWeight = this.svgFontWeight.toString();\n    textTag.style.fontSize = this.svgFontSize + \"px\";\n    return textTag;\n  }\n\n  private unicodeSafeSubstring(str: string, count: number) {\n    const characters = str.match(/./gu);\n    return characters != null ? characters.slice(0, count).join(\"\") : \"\";\n  }\n}\n","<div class=\"tw-inline-flex tw-gap-2\">\n  <span *ngFor=\"let item of filteredItems; let last = last\" bitBadge [badgeType]=\"badgeType\">\n    {{ item }}\n    <span class=\"tw-sr-only\" *ngIf=\"!last || isFiltered\">, </span>\n  </span>\n  <span *ngIf=\"isFiltered\" bitBadge [badgeType]=\"badgeType\">\n    {{ \"plusNMore\" | i18n: (items.length - filteredItems.length).toString() }}\n  </span>\n</div>\n","import { Component, Input, OnChanges } from \"@angular/core\";\n\nimport { BadgeTypes } from \"../badge\";\n\n@Component({\n  selector: \"bit-badge-list\",\n  templateUrl: \"badge-list.component.html\",\n})\nexport class BadgeListComponent implements OnChanges {\n  private _maxItems: number;\n\n  protected filteredItems: string[] = [];\n  protected isFiltered = false;\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n  @Input() items: string[] = [];\n\n  @Input()\n  get maxItems(): number | undefined {\n    return this._maxItems;\n  }\n\n  set maxItems(value: number | undefined) {\n    this._maxItems = value == undefined ? undefined : Math.max(1, value);\n  }\n\n  ngOnChanges() {\n    if (this.maxItems == undefined || this.items.length <= this.maxItems) {\n      this.filteredItems = this.items;\n    } else {\n      this.filteredItems = this.items.slice(0, this.maxItems - 1);\n    }\n    this.isFiltered = this.items.length > this.filteredItems.length;\n  }\n}\n","import { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\nexport type BadgeTypes = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\";\n\nconst styles: Record<BadgeTypes, string[]> = {\n  primary: [\"tw-bg-primary-500\"],\n  secondary: [\"tw-bg-text-muted\"],\n  success: [\"tw-bg-success-500\"],\n  danger: [\"tw-bg-danger-500\"],\n  warning: [\"tw-bg-warning-500\"],\n  info: [\"tw-bg-info-500\"],\n};\n\nconst hoverStyles: Record<BadgeTypes, string[]> = {\n  primary: [\"hover:tw-bg-primary-700\"],\n  secondary: [\"hover:tw-bg-secondary-700\"],\n  success: [\"hover:tw-bg-success-700\"],\n  danger: [\"hover:tw-bg-danger-700\"],\n  warning: [\"hover:tw-bg-warning-700\"],\n  info: [\"hover:tw-bg-info-700\"],\n};\n\n@Directive({\n  selector: \"span[bitBadge], a[bitBadge], button[bitBadge]\",\n})\nexport class BadgeDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-inline\",\n      \"tw-py-0.5\",\n      \"tw-px-1.5\",\n      \"tw-font-bold\",\n      \"tw-text-center\",\n      \"!tw-text-contrast\",\n      \"tw-rounded\",\n      \"tw-border-none\",\n      \"tw-box-border\",\n      \"tw-whitespace-nowrap\",\n      \"tw-text-xs\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n      \"focus:tw-ring\",\n      \"focus:tw-ring-offset-2\",\n      \"focus:tw-ring-primary-700\",\n    ]\n      .concat(styles[this.badgeType])\n      .concat(this.hasHoverEffects ? hoverStyles[this.badgeType] : []);\n  }\n\n  @Input() badgeType: BadgeTypes = \"primary\";\n\n  private hasHoverEffects = false;\n\n  constructor(el: ElementRef<Element>) {\n    this.hasHoverEffects = el?.nativeElement?.nodeName != \"SPAN\";\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BadgeDirective } from \"./badge.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [BadgeDirective],\n  declarations: [BadgeDirective],\n})\nexport class BadgeModule {}\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { Input, HostBinding, Component } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction, ButtonType } from \"../shared/button-like.abstraction\";\n\nconst focusRing = [\n  \"focus-visible:tw-ring\",\n  \"focus-visible:tw-ring-offset-2\",\n  \"focus-visible:tw-ring-primary-700\",\n  \"focus-visible:tw-z-10\",\n];\n\nconst buttonStyles: Record<ButtonType, string[]> = {\n  primary: [\n    \"tw-border-primary-500\",\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"disabled:tw-bg-primary-500/60\",\n    \"disabled:tw-border-primary-500/60\",\n    \"disabled:!tw-text-contrast/60\",\n    \"disabled:tw-bg-clip-padding\",\n    \"disabled:tw-cursor-not-allowed\",\n    ...focusRing,\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"tw-border-text-muted\",\n    \"!tw-text-muted\",\n    \"hover:tw-bg-text-muted\",\n    \"hover:tw-border-text-muted\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-text-muted/60\",\n    \"disabled:!tw-text-muted/60\",\n    \"disabled:tw-cursor-not-allowed\",\n    ...focusRing,\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"tw-border-danger-500\",\n    \"!tw-text-danger\",\n    \"hover:tw-bg-danger-500\",\n    \"hover:tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"disabled:tw-bg-transparent\",\n    \"disabled:tw-border-danger-500/60\",\n    \"disabled:!tw-text-danger/60\",\n    \"disabled:tw-cursor-not-allowed\",\n    ...focusRing,\n  ],\n  unstyled: [],\n};\n\n@Component({\n  selector: \"button[bitButton], a[bitButton]\",\n  templateUrl: \"button.component.html\",\n  providers: [{ provide: ButtonLikeAbstraction, useExisting: ButtonComponent }],\n})\nexport class ButtonComponent implements ButtonLikeAbstraction {\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-py-1.5\",\n      \"tw-px-3\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-text-center\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n    ]\n      .concat(this.block ? [\"tw-w-full\", \"tw-block\"] : [\"tw-inline-block\"])\n      .concat(buttonStyles[this.buttonType ?? \"secondary\"]);\n  }\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    const disabled = this.disabled != null && this.disabled !== false;\n    return disabled || this.loading ? true : null;\n  }\n\n  @Input() buttonType: ButtonType;\n\n  private _block = false;\n\n  @Input()\n  get block(): boolean {\n    return this._block;\n  }\n\n  set block(value: boolean | \"\") {\n    this._block = coerceBooleanProperty(value);\n  }\n\n  @Input() loading = false;\n\n  @Input() disabled = false;\n\n  setButtonType(value: \"primary\" | \"secondary\" | \"danger\" | \"unstyled\") {\n    this.buttonType = value;\n  }\n}\n","<span class=\"tw-relative\">\n  <span [ngClass]=\"{ 'tw-invisible': loading }\">\n    <ng-content></ng-content>\n  </span>\n  <span\n    class=\"tw-absolute tw-inset-0 tw-flex tw-items-center tw-justify-center\"\n    [ngClass]=\"{ 'tw-invisible': !loading }\"\n  >\n    <i class=\"bwi bwi-spinner bwi-lg bwi-spin\" aria-hidden=\"true\"></i>\n  </span>\n</span>\n","<div\n  class=\"tw-mb-4 tw-box-border tw-rounded tw-border tw-border-l-8 tw-border-solid tw-border-secondary-300 tw-bg-background-alt tw-py-3 tw-px-5 tw-leading-5 tw-text-main\"\n  [ngClass]=\"calloutClass\"\n>\n  <h3\n    class=\"tw-mt-0 tw-mb-2 tw-text-base tw-font-bold tw-uppercase\"\n    [ngClass]=\"headerClass\"\n    *ngIf=\"title\"\n  >\n    <i class=\"bwi {{ icon }}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n    {{ title }}\n  </h3>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\ntype CalloutTypes = \"success\" | \"info\" | \"warning\" | \"danger\";\n\nconst defaultIcon: Record<CalloutTypes, string> = {\n  success: \"bwi-check\",\n  info: \"bwi-info-circle\",\n  warning: \"bwi-exclamation-triangle\",\n  danger: \"bwi-error\",\n};\n\nconst defaultI18n: Partial<Record<CalloutTypes, string>> = {\n  warning: \"warning\",\n  danger: \"error\",\n};\n\n@Component({\n  selector: \"bit-callout\",\n  templateUrl: \"callout.component.html\",\n})\nexport class CalloutComponent implements OnInit {\n  @Input() type: CalloutTypes = \"info\";\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() useAlertRole = false;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {\n    this.icon ??= defaultIcon[this.type];\n    if (this.title == null && defaultI18n[this.type] != null) {\n      this.title = this.i18nService.t(defaultI18n[this.type]);\n    }\n  }\n\n  get calloutClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"tw-border-l-danger-500\";\n      case \"info\":\n        return \"tw-border-l-info-500\";\n      case \"success\":\n        return \"tw-border-l-success-500\";\n      case \"warning\":\n        return \"tw-border-l-warning-500\";\n    }\n  }\n\n  get headerClass() {\n    switch (this.type) {\n      case \"danger\":\n        return \"!tw-text-danger\";\n      case \"info\":\n        return \"!tw-text-info\";\n      case \"success\":\n        return \"!tw-text-success\";\n      case \"warning\":\n        return \"!tw-text-warning\";\n    }\n  }\n}\n","import { Component, HostBinding, Input, Optional, Self } from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\nimport { BitFormControlAbstraction } from \"../form-control\";\n\n@Component({\n  selector: \"input[type=checkbox][bitCheckbox]\",\n  template: \"\",\n  providers: [{ provide: BitFormControlAbstraction, useExisting: CheckboxComponent }],\n})\nexport class CheckboxComponent implements BitFormControlAbstraction {\n  @HostBinding(\"class\")\n  protected inputClasses = [\n    \"tw-appearance-none\",\n    \"tw-outline-none\",\n    \"tw-relative\",\n    \"tw-transition\",\n    \"tw-cursor-pointer\",\n    \"tw-inline-block\",\n    \"tw-rounded\",\n    \"tw-border\",\n    \"tw-border-solid\",\n    \"tw-border-secondary-500\",\n    \"tw-h-3.5\",\n    \"tw-w-3.5\",\n    \"tw-mr-1.5\",\n    \"tw-bottom-[-1px]\", // Fix checkbox looking off-center\n\n    \"before:tw-content-['']\",\n    \"before:tw-block\",\n    \"before:tw-absolute\",\n    \"before:tw-inset-0\",\n\n    \"hover:tw-border-2\",\n    \"[&>label]:tw-border-2\",\n\n    \"focus-visible:tw-ring-2\",\n    \"focus-visible:tw-ring-offset-2\",\n    \"focus-visible:tw-ring-primary-700\",\n\n    \"disabled:tw-cursor-auto\",\n    \"disabled:tw-border\",\n    \"disabled:tw-bg-secondary-100\",\n\n    \"checked:tw-bg-primary-500\",\n    \"checked:tw-border-primary-500\",\n\n    \"checked:hover:tw-bg-primary-700\",\n    \"checked:hover:tw-border-primary-700\",\n    \"[&>label:hover]:checked:tw-bg-primary-700\",\n    \"[&>label:hover]:checked:tw-border-primary-700\",\n\n    \"checked:before:tw-bg-text-contrast\",\n    \"checked:before:tw-mask-image-[var(--mask-image)]\",\n    \"checked:before:tw-mask-position-[center]\",\n    \"checked:before:tw-mask-repeat-[no-repeat]\",\n\n    \"checked:disabled:tw-border-secondary-100\",\n    \"checked:disabled:tw-bg-secondary-100\",\n\n    \"checked:disabled:before:tw-bg-text-muted\",\n  ];\n\n  constructor(@Optional() @Self() private ngControl?: NgControl) {}\n\n  @HostBinding(\"style.--mask-image\")\n  protected maskImage = `url('data:image/svg+xml,%3Csvg class=\"svg\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"8\" height=\"8\" viewBox=\"0 0 10 10\"%3E%3Cpath d=\"M0.5 6.2L2.9 8.6L9.5 1.4\" fill=\"none\" stroke=\"white\" stroke-width=\"2\"%3E%3C/path%3E%3C/svg%3E')`;\n\n  @HostBinding()\n  @Input()\n  get disabled() {\n    return this._disabled ?? this.ngControl?.disabled ?? false;\n  }\n  set disabled(value: any) {\n    this._disabled = value != null && value !== false;\n  }\n  private _disabled: boolean;\n\n  @Input()\n  get required() {\n    return (\n      this._required ?? this.ngControl?.control?.hasValidator(Validators.requiredTrue) ?? false\n    );\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  get hasError() {\n    return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched;\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormControlModule } from \"../form-control\";\nimport { SharedModule } from \"../shared\";\n\nimport { CheckboxComponent } from \"./checkbox.component\";\n\n@NgModule({\n  imports: [SharedModule, CommonModule, FormControlModule],\n  declarations: [CheckboxComponent],\n  exports: [CheckboxComponent],\n})\nexport class CheckboxModule {}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nenum CharacterType {\n  Letter,\n  Emoji,\n  Special,\n  Number,\n}\n\n@Component({\n  selector: \"bit-color-password\",\n  template: `<span\n    *ngFor=\"let character of passwordArray; index as i\"\n    [class]=\"getCharacterClass(character)\"\n  >\n    <span>{{ character }}</span>\n    <span *ngIf=\"showCount\" class=\"tw-whitespace-nowrap tw-text-xs tw-leading-5 tw-text-main\">{{\n      i + 1\n    }}</span>\n  </span>`,\n  preserveWhitespaces: false,\n})\nexport class ColorPasswordComponent {\n  @Input() private password: string = null;\n  @Input() showCount = false;\n\n  characterStyles: Record<CharacterType, string[]> = {\n    [CharacterType.Emoji]: [],\n    [CharacterType.Letter]: [\"tw-text-main\"],\n    [CharacterType.Special]: [\"tw-text-danger\"],\n    [CharacterType.Number]: [\"tw-text-primary-500\"],\n  };\n\n  @HostBinding(\"class\")\n  get classList() {\n    return [\"tw-min-w-0\", \"tw-whitespace-pre-wrap\", \"tw-break-all\"];\n  }\n\n  get passwordArray() {\n    // Convert to an array to handle cases that strings have special characters, i.e.: emoji.\n    return Array.from(this.password);\n  }\n\n  getCharacterClass(character: string) {\n    const charType = this.getCharacterType(character);\n    const charClass = this.characterStyles[charType];\n\n    if (this.showCount) {\n      return charClass.concat([\n        \"tw-inline-flex\",\n        \"tw-flex-col\",\n        \"tw-items-center\",\n        \"tw-w-7\",\n        \"tw-py-1\",\n        \"odd:tw-bg-secondary-100\",\n        \"even:tw-bg-background\",\n      ]);\n    }\n\n    return charClass;\n  }\n\n  private getCharacterType(character: string): CharacterType {\n    if (character.match(Utils.regexpEmojiPresentation)) {\n      return CharacterType.Emoji;\n    }\n\n    if (character.match(/\\d/)) {\n      return CharacterType.Number;\n    }\n\n    const specials = [\"&\", \"<\", \">\", \" \"];\n    if (specials.includes(character) || character.match(/[^\\w ]/)) {\n      return CharacterType.Special;\n    }\n\n    return CharacterType.Letter;\n  }\n}\n","import { style, animate, trigger, transition, group } from \"@angular/animations\";\n\nexport const fadeIn = trigger(\"fadeIn\", [\n  transition(\":enter\", [\n    style({ opacity: 0, transform: \"translateY(-50px)\" }),\n    group([\n      animate(\"0.15s linear\", style({ opacity: 1 })),\n      animate(\"0.3s ease-out\", style({ transform: \"none\" })),\n    ]),\n  ]),\n]);\n","<bit-simple-dialog>\n  <i bitDialogIcon class=\"bwi tw-text-3xl\" [class]=\"iconClasses\" aria-hidden=\"true\"></i>\n\n  <span bitDialogTitle>{{ title }}</span>\n\n  <div bitDialogContent>{{ content }}</div>\n\n  <div bitDialogFooter class=\"tw-flex tw-flex-row tw-gap-2\">\n    <button\n      type=\"button\"\n      bitButton\n      buttonType=\"primary\"\n      (click)=\"dialogRef.close(SimpleDialogCloseType.ACCEPT)\"\n    >\n      {{ acceptButtonText }}\n    </button>\n\n    <button\n      *ngIf=\"showCancelButton\"\n      type=\"button\"\n      bitButton\n      buttonType=\"secondary\"\n      (click)=\"dialogRef.close(SimpleDialogCloseType.CANCEL)\"\n    >\n      {{ cancelButtonText }}\n    </button>\n  </div>\n</bit-simple-dialog>\n","import { DialogRef, DIALOG_DATA } from \"@angular/cdk/dialog\";\nimport { Component, Inject } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { SimpleDialogCloseType } from \"./models/simple-dialog-close-type.enum\";\nimport { SimpleDialogOptions } from \"./models/simple-dialog-options\";\nimport { SimpleDialogType } from \"./models/simple-dialog-type.enum\";\nimport { Translation } from \"./models/translation\";\n\nconst DEFAULT_ICON: Record<SimpleDialogType, string> = {\n  [SimpleDialogType.PRIMARY]: \"bwi-business\",\n  [SimpleDialogType.SUCCESS]: \"bwi-star\",\n  [SimpleDialogType.INFO]: \"bwi-info-circle\",\n  [SimpleDialogType.WARNING]: \"bwi-exclamation-triangle\",\n  [SimpleDialogType.DANGER]: \"bwi-error\",\n};\n\nconst DEFAULT_COLOR: Record<SimpleDialogType, string> = {\n  [SimpleDialogType.PRIMARY]: \"tw-text-primary-500\",\n  [SimpleDialogType.SUCCESS]: \"tw-text-success\",\n  [SimpleDialogType.INFO]: \"tw-text-info\",\n  [SimpleDialogType.WARNING]: \"tw-text-warning\",\n  [SimpleDialogType.DANGER]: \"tw-text-danger\",\n};\n\n@Component({\n  selector: \"bit-simple-configurable-dialog\",\n  templateUrl: \"./simple-configurable-dialog.component.html\",\n})\nexport class SimpleConfigurableDialogComponent {\n  SimpleDialogType = SimpleDialogType;\n  SimpleDialogCloseType = SimpleDialogCloseType;\n\n  get iconClasses() {\n    return [\n      this.simpleDialogOpts.icon ?? DEFAULT_ICON[this.simpleDialogOpts.type],\n      DEFAULT_COLOR[this.simpleDialogOpts.type],\n    ];\n  }\n\n  title: string;\n  content: string;\n  acceptButtonText: string;\n  cancelButtonText: string;\n\n  showCancelButton = this.simpleDialogOpts.cancelButtonText !== null;\n\n  constructor(\n    public dialogRef: DialogRef,\n    private i18nService: I18nService,\n    @Inject(DIALOG_DATA) public simpleDialogOpts?: SimpleDialogOptions\n  ) {\n    this.localizeText();\n  }\n\n  private localizeText() {\n    this.title = this.translate(this.simpleDialogOpts.title);\n    this.content = this.translate(this.simpleDialogOpts.content);\n    this.acceptButtonText = this.translate(this.simpleDialogOpts.acceptButtonText, \"yes\");\n\n    if (this.showCancelButton) {\n      // If accept text is overridden, use cancel, otherwise no\n      this.cancelButtonText = this.translate(\n        this.simpleDialogOpts.cancelButtonText,\n        this.simpleDialogOpts.acceptButtonText !== undefined ? \"cancel\" : \"no\"\n      );\n    }\n  }\n\n  private translate(translation: string | Translation, defaultKey?: string): string {\n    // Translation interface use implies we must localize.\n    if (typeof translation === \"object\") {\n      return this.i18nService.t(translation.key, ...translation.placeholders);\n    }\n\n    // Use string that is already translated or use default key post translate\n    return translation ?? this.i18nService.t(defaultKey);\n  }\n}\n","import {\n  DEFAULT_DIALOG_CONFIG,\n  Dialog,\n  DialogConfig,\n  DialogRef,\n  DIALOG_SCROLL_STRATEGY,\n} from \"@angular/cdk/dialog\";\nimport { ComponentType, Overlay, OverlayContainer } from \"@angular/cdk/overlay\";\nimport {\n  Inject,\n  Injectable,\n  Injector,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n} from \"@angular/core\";\nimport { NavigationEnd, Router } from \"@angular/router\";\nimport { filter, Subject, switchMap, takeUntil } from \"rxjs\";\n\nimport { AuthService } from \"@bitwarden/common/auth/abstractions/auth.service\";\nimport { AuthenticationStatus } from \"@bitwarden/common/auth/enums/authentication-status\";\n\nimport { SimpleDialogOptions } from \"./simple-configurable-dialog/models/simple-dialog-options\";\nimport { SimpleConfigurableDialogComponent } from \"./simple-configurable-dialog/simple-configurable-dialog.component\";\n\n@Injectable()\nexport class DialogService extends Dialog implements OnDestroy {\n  private _destroy$ = new Subject<void>();\n\n  private backDropClasses = [\n    \"tw-fixed\",\n    \"tw-bg-black\",\n    \"tw-bg-opacity-30\",\n    \"tw-inset-0\",\n    // CDK dialog panels have a default z-index of 1000. Matching this allows us to easily stack dialogs.\n    \"tw-z-[1000]\",\n  ];\n\n  constructor(\n    /** Parent class constructor */\n    _overlay: Overlay,\n    _injector: Injector,\n    @Optional() @Inject(DEFAULT_DIALOG_CONFIG) _defaultOptions: DialogConfig,\n    @Optional() @SkipSelf() _parentDialog: Dialog,\n    _overlayContainer: OverlayContainer,\n    @Inject(DIALOG_SCROLL_STRATEGY) scrollStrategy: any,\n\n    /** Not in parent class */\n    @Optional() router: Router,\n    @Optional() authService: AuthService\n  ) {\n    super(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy);\n\n    /** Close all open dialogs if the vault locks */\n    if (router && authService) {\n      router.events\n        .pipe(\n          filter((event) => event instanceof NavigationEnd),\n          switchMap(() => authService.getAuthStatus()),\n          filter((v) => v !== AuthenticationStatus.Unlocked),\n          takeUntil(this._destroy$)\n        )\n        .subscribe(() => this.closeAll());\n    }\n  }\n\n  override ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n    super.ngOnDestroy();\n  }\n\n  override open<R = unknown, D = unknown, C = unknown>(\n    componentOrTemplateRef: ComponentType<C> | TemplateRef<C>,\n    config?: DialogConfig<D, DialogRef<R, C>>\n  ): DialogRef<R, C> {\n    config = {\n      backdropClass: this.backDropClasses,\n      ...config,\n    };\n\n    return super.open(componentOrTemplateRef, config);\n  }\n\n  /**\n   * Opens a simple dialog.\n   *\n   * @param {SimpleDialogOptions} simpleDialogOptions - An object containing options for the dialog.\n   * @returns `DialogRef` - The reference to the opened dialog.\n   * Contains a closed observable which can be subscribed to for determining which button\n   * a user pressed (see `SimpleDialogCloseType`)\n   */\n  openSimpleDialog(simpleDialogOptions: SimpleDialogOptions): DialogRef {\n    // Method needs to return dialog reference so devs can sub to closed and get results.\n    return this.open(SimpleConfigurableDialogComponent, {\n      data: simpleDialogOptions,\n      disableClose: simpleDialogOptions.disableClose,\n    });\n  }\n}\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { fadeIn } from \"../animations\";\n\n@Component({\n  selector: \"bit-dialog\",\n  templateUrl: \"./dialog.component.html\",\n  animations: [fadeIn],\n})\nexport class DialogComponent {\n  @Input() dialogSize: \"small\" | \"default\" | \"large\" = \"default\";\n\n  private _disablePadding = false;\n  @Input() set disablePadding(value: boolean | \"\") {\n    this._disablePadding = coerceBooleanProperty(value);\n  }\n  get disablePadding() {\n    return this._disablePadding;\n  }\n\n  @HostBinding(\"class\") classes = [\"tw-flex\", \"tw-flex-col\", \"tw-py-4\", \"tw-max-h-screen\"];\n\n  get width() {\n    switch (this.dialogSize) {\n      case \"small\": {\n        return \"tw-w-96\";\n      }\n      case \"large\": {\n        return \"tw-w-75vw\";\n      }\n      default: {\n        return \"tw-w-50vw\";\n      }\n    }\n  }\n}\n","<div\n  [ngClass]=\"width\"\n  class=\"tw-flex tw-flex-col tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-text-contrast tw-text-main\"\n  @fadeIn\n>\n  <div\n    class=\"tw-flex tw-items-center tw-gap-4 tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300 tw-p-4\"\n  >\n    <h1 bitDialogTitleContainer class=\"tw-mb-0 tw-grow tw-truncate tw-text-lg tw-uppercase\">\n      <ng-content select=\"[bitDialogTitle]\"></ng-content>\n    </h1>\n    <button\n      type=\"button\"\n      bitIconButton=\"bwi-close\"\n      buttonType=\"main\"\n      size=\"default\"\n      bitDialogClose\n      [attr.title]=\"'close' | i18n\"\n      [attr.aria-label]=\"'close' | i18n\"\n    ></button>\n  </div>\n\n  <div class=\"tw-overflow-y-auto tw-pb-8\" [ngClass]=\"{ 'tw-p-4': !disablePadding }\">\n    <ng-content select=\"[bitDialogContent]\"></ng-content>\n  </div>\n\n  <div\n    class=\"tw-border-0 tw-border-t tw-border-solid tw-border-secondary-300 tw-bg-background-alt tw-p-4\"\n  >\n    <ng-content select=\"[bitDialogFooter]\"></ng-content>\n  </div>\n</div>\n","import { DialogRef } from \"@angular/cdk/dialog\";\nimport { Directive, HostListener, Input, Optional } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitDialogClose]\",\n})\nexport class DialogCloseDirective {\n  @Input(\"bit-dialog-close\") dialogResult: any;\n\n  constructor(@Optional() public dialogRef: DialogRef<any>) {}\n\n  @HostListener(\"click\") close(): void {\n    this.dialogRef.close(this.dialogResult);\n  }\n}\n","import { CdkDialogContainer, DialogRef } from \"@angular/cdk/dialog\";\nimport { Directive, HostBinding, Input, OnInit, Optional } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"[bitDialogTitleContainer]\",\n})\nexport class DialogTitleContainerDirective implements OnInit {\n  @HostBinding(\"id\") id = `bit-dialog-title-${nextId++}`;\n\n  @Input() simple = false;\n\n  constructor(@Optional() private dialogRef: DialogRef<any>) {}\n\n  ngOnInit(): void {\n    // Based on angular/components, licensed under MIT\n    // https://github.com/angular/components/blob/14.2.0/src/material/dialog/dialog-content-directives.ts#L121-L128\n    if (this.dialogRef) {\n      Promise.resolve().then(() => {\n        const container = this.dialogRef.containerInstance as CdkDialogContainer;\n\n        if (container && !container._ariaLabelledBy) {\n          container._ariaLabelledBy = this.id;\n        }\n      });\n    }\n  }\n}\n","export enum SimpleDialogCloseType {\n  ACCEPT = \"accept\",\n  CANCEL = \"cancel\",\n}\n","export enum SimpleDialogType {\n  PRIMARY = \"primary\",\n  SUCCESS = \"success\",\n  INFO = \"info\",\n  WARNING = \"warning\",\n  DANGER = \"danger\",\n}\n","<div\n  class=\"tw-my-4 tw-flex tw-max-h-screen tw-w-96 tw-max-w-90vw tw-flex-col tw-overflow-hidden tw-rounded tw-border tw-border-solid tw-border-secondary-300 tw-bg-text-contrast tw-text-main\"\n  @fadeIn\n>\n  <div class=\"tw-flex tw-flex-col tw-items-center tw-gap-2 tw-px-4 tw-pt-4 tw-text-center\">\n    <ng-container *ngIf=\"hasIcon; else elseBlock\">\n      <ng-content select=\"[bitDialogIcon]\"></ng-content>\n    </ng-container>\n    <ng-template #elseBlock>\n      <i class=\"bwi bwi-exclamation-triangle tw-text-3xl tw-text-warning\" aria-hidden=\"true\"></i>\n    </ng-template>\n    <h1 bitDialogTitleContainer class=\"tw-mb-0 tw-text-base tw-font-semibold\">\n      <ng-content select=\"[bitDialogTitle]\"></ng-content>\n    </h1>\n  </div>\n  <div class=\"tw-overflow-y-auto tw-px-4 tw-pt-2 tw-pb-4 tw-text-center tw-text-base\">\n    <ng-content select=\"[bitDialogContent]\"></ng-content>\n  </div>\n  <div class=\"tw-border-0 tw-border-t tw-border-solid tw-border-secondary-300 tw-p-4\">\n    <ng-content select=\"[bitDialogFooter]\"></ng-content>\n  </div>\n</div>\n","import { Component, ContentChild, Directive } from \"@angular/core\";\n\nimport { fadeIn } from \"../animations\";\n\n@Directive({ selector: \"[bitDialogIcon]\" })\nexport class IconDirective {}\n\n@Component({\n  selector: \"bit-simple-dialog\",\n  templateUrl: \"./simple-dialog.component.html\",\n  animations: [fadeIn],\n})\nexport class SimpleDialogComponent {\n  @ContentChild(IconDirective) icon!: IconDirective;\n\n  get hasIcon() {\n    return this.icon != null;\n  }\n}\n","export abstract class BitFormControlAbstraction {\n  disabled: boolean;\n  required: boolean;\n  hasError: boolean;\n  error: [string, any];\n}\n","<label [class]=\"labelClasses\">\n  <ng-content></ng-content>\n  <span [class]=\"labelContentClasses\">\n    <ng-content select=\"bit-label\"></ng-content>\n    <span *ngIf=\"required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n  </span>\n</label>\n<div>\n  <ng-content select=\"bit-hint\" *ngIf=\"!hasError\"></ng-content>\n</div>\n<div *ngIf=\"hasError\" class=\"tw-mt-1 tw-text-danger\">\n  <i class=\"bwi bwi-error\"></i> {{ displayError }}\n</div>\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { Component, ContentChild, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitFormControlAbstraction } from \"./form-control.abstraction\";\n\n@Component({\n  selector: \"bit-form-control\",\n  templateUrl: \"form-control.component.html\",\n})\nexport class FormControlComponent {\n  @Input() label: string;\n\n  private _inline = false;\n  @Input() get inline() {\n    return this._inline;\n  }\n  set inline(value: boolean | \"\") {\n    this._inline = coerceBooleanProperty(value);\n  }\n\n  @ContentChild(BitFormControlAbstraction) protected formControl: BitFormControlAbstraction;\n\n  @HostBinding(\"class\") get classes() {\n    return [\"tw-mb-6\"].concat(this.inline ? [\"tw-inline-block\", \"tw-mr-4\"] : [\"tw-block\"]);\n  }\n\n  constructor(private i18nService: I18nService) {}\n\n  protected get labelClasses() {\n    return [\"tw-transition\", \"tw-select-none\", \"tw-mb-0\"].concat(\n      this.formControl.disabled ? \"tw-cursor-auto\" : \"tw-cursor-pointer\"\n    );\n  }\n\n  protected get labelContentClasses() {\n    return [\"tw-font-semibold\"].concat(\n      this.formControl.disabled ? \"tw-text-muted\" : \"tw-text-main\"\n    );\n  }\n\n  get required() {\n    return this.formControl.required;\n  }\n\n  get hasError() {\n    return this.formControl.hasError;\n  }\n\n  get error() {\n    return this.formControl.error;\n  }\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\n\nimport { SharedModule } from \"../shared\";\n\nimport { FormControlComponent } from \"./form-control.component\";\nimport { BitHintComponent } from \"./hint.component\";\nimport { BitLabel } from \"./label.directive\";\n\n@NgModule({\n  imports: [SharedModule],\n  declarations: [FormControlComponent, BitLabel, BitHintComponent],\n  exports: [FormControlComponent, BitLabel, BitHintComponent],\n})\nexport class FormControlModule {}\n","import { Directive, HostBinding } from \"@angular/core\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"bit-hint\",\n  host: {\n    class: \"tw-text-muted tw-inline-block tw-mt-1\",\n  },\n})\nexport class BitHintComponent {\n  @HostBinding() id = `bit-hint-${nextId++}`;\n}\n","import { Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"bit-label\",\n})\nexport class BitLabel {}\n","export type InputTypes =\n  | \"text\"\n  | \"password\"\n  | \"number\"\n  | \"datetime-local\"\n  | \"email\"\n  | \"checkbox\"\n  | \"search\"\n  | \"file\";\n\nexport abstract class BitFormFieldControl {\n  ariaDescribedBy: string;\n  id: string;\n  labelForId: string;\n  required: boolean;\n  hasError: boolean;\n  error: [string, any];\n  type?: InputTypes;\n  spellcheck?: boolean;\n  focus?: () => void;\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-error\",\n  template: `<i class=\"bwi bwi-error\"></i> {{ displayError }}`,\n  host: {\n    class: \"tw-block tw-mt-1 tw-text-danger\",\n    \"aria-live\": \"assertive\",\n  },\n})\nexport class BitErrorComponent {\n  @HostBinding() id = `bit-error-${nextId++}`;\n\n  @Input() error: [string, any];\n\n  constructor(private i18nService: I18nService) {}\n\n  get displayError() {\n    switch (this.error[0]) {\n      case \"required\":\n        return this.i18nService.t(\"inputRequired\");\n      case \"email\":\n        return this.i18nService.t(\"inputEmail\");\n      case \"minlength\":\n        return this.i18nService.t(\"inputMinLength\", this.error[1]?.requiredLength);\n      case \"maxlength\":\n        return this.i18nService.t(\"inputMaxLength\", this.error[1]?.requiredLength);\n      case \"forbiddenCharacters\":\n        return this.i18nService.t(\"inputForbiddenCharacters\", this.error[1]?.characters.join(\", \"));\n      case \"multipleEmails\":\n        return this.i18nService.t(\"multipleInputEmails\");\n      default:\n        // Attempt to show a custom error message.\n        if (this.error[1]?.message) {\n          return this.error[1]?.message;\n        }\n\n        return this.error;\n    }\n  }\n}\n","<label class=\"tw-mb-1 tw-block tw-font-semibold tw-text-main\" [attr.for]=\"input.labelForId\">\n  <ng-content select=\"bit-label\"></ng-content>\n  <span *ngIf=\"input.required\" class=\"tw-text-xs tw-font-normal\"> ({{ \"required\" | i18n }})</span>\n</label>\n<div class=\"tw-flex\">\n  <div *ngIf=\"prefixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitPrefix]\"></ng-content>\n  </div>\n  <ng-content></ng-content>\n  <div *ngIf=\"suffixChildren.length\" class=\"tw-flex\">\n    <ng-content select=\"[bitSuffix]\"></ng-content>\n  </div>\n</div>\n<ng-container [ngSwitch]=\"input.hasError\">\n  <ng-content select=\"bit-hint\" *ngSwitchCase=\"false\"></ng-content>\n  <bit-error [error]=\"input.error\" *ngSwitchCase=\"true\"></bit-error>\n</ng-container>\n","import {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  ContentChildren,\n  QueryList,\n  ViewChild,\n} from \"@angular/core\";\n\nimport { BitHintComponent } from \"../form-control/hint.component\";\n\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldControl } from \"./form-field-control\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@Component({\n  selector: \"bit-form-field\",\n  templateUrl: \"./form-field.component.html\",\n  host: {\n    class: \"tw-mb-6 tw-block\",\n  },\n})\nexport class BitFormFieldComponent implements AfterContentChecked {\n  @ContentChild(BitFormFieldControl) input: BitFormFieldControl;\n  @ContentChild(BitHintComponent) hint: BitHintComponent;\n\n  @ViewChild(BitErrorComponent) error: BitErrorComponent;\n\n  @ContentChildren(BitPrefixDirective) prefixChildren: QueryList<BitPrefixDirective>;\n  @ContentChildren(BitSuffixDirective) suffixChildren: QueryList<BitSuffixDirective>;\n\n  ngAfterContentChecked(): void {\n    if (this.error) {\n      this.input.ariaDescribedBy = this.error.id;\n    } else if (this.hint) {\n      this.input.ariaDescribedBy = this.hint.id;\n    } else {\n      this.input.ariaDescribedBy = undefined;\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitInputDirective } from \"./input.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitInputDirective],\n  exports: [BitInputDirective],\n})\nexport class InputModule {}\n","import { NgModule } from \"@angular/core\";\n\nimport { FormControlModule } from \"../form-control\";\nimport { BitInputDirective } from \"../input/input.directive\";\nimport { InputModule } from \"../input/input.module\";\nimport { MultiSelectComponent } from \"../multi-select/multi-select.component\";\nimport { MultiSelectModule } from \"../multi-select/multi-select.module\";\nimport { SharedModule } from \"../shared\";\n\nimport { BitErrorSummary } from \"./error-summary.component\";\nimport { BitErrorComponent } from \"./error.component\";\nimport { BitFormFieldComponent } from \"./form-field.component\";\nimport { BitPasswordInputToggleDirective } from \"./password-input-toggle.directive\";\nimport { BitPrefixDirective } from \"./prefix.directive\";\nimport { BitSuffixDirective } from \"./suffix.directive\";\n\n@NgModule({\n  imports: [SharedModule, FormControlModule, InputModule, MultiSelectModule],\n  declarations: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitPasswordInputToggleDirective,\n    BitPrefixDirective,\n    BitSuffixDirective,\n  ],\n  exports: [\n    BitErrorComponent,\n    BitErrorSummary,\n    BitFormFieldComponent,\n    BitInputDirective,\n    BitPasswordInputToggleDirective,\n    BitPrefixDirective,\n    BitSuffixDirective,\n    MultiSelectComponent,\n    FormControlModule,\n  ],\n})\nexport class FormFieldModule {}\n","import {\n  AfterContentInit,\n  Directive,\n  EventEmitter,\n  Host,\n  HostBinding,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n} from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\nimport { BitIconButtonComponent } from \"../icon-button/icon-button.component\";\n\nimport { BitFormFieldComponent } from \"./form-field.component\";\n\n@Directive({\n  selector: \"[bitPasswordInputToggle]\",\n})\nexport class BitPasswordInputToggleDirective implements AfterContentInit, OnChanges {\n  /**\n   * Whether the input is toggled to show the password.\n   */\n  @HostBinding(\"attr.aria-pressed\") @Input() toggled = false;\n  @Output() toggledChange = new EventEmitter<boolean>();\n\n  @HostBinding(\"attr.title\") title = this.i18nService.t(\"toggleVisibility\");\n  @HostBinding(\"attr.aria-label\") label = this.i18nService.t(\"toggleVisibility\");\n\n  /**\n   * Click handler to toggle the state of the input type.\n   */\n  @HostListener(\"click\") onClick() {\n    this.toggled = !this.toggled;\n    this.toggledChange.emit(this.toggled);\n\n    this.update();\n\n    this.formField.input?.focus();\n  }\n\n  constructor(\n    @Host() private button: BitIconButtonComponent,\n    private formField: BitFormFieldComponent,\n    private i18nService: I18nService\n  ) {}\n\n  get icon() {\n    return this.toggled ? \"bwi-eye-slash\" : \"bwi-eye\";\n  }\n\n  ngOnChanges(): void {\n    this.update();\n  }\n\n  ngAfterContentInit(): void {\n    this.toggled = this.formField.input.type !== \"password\";\n    this.button.icon = this.icon;\n  }\n\n  private update() {\n    this.button.icon = this.icon;\n    if (this.formField.input?.type != null) {\n      this.formField.input.type = this.toggled ? \"text\" : \"password\";\n      this.formField.input.spellcheck = this.toggled ? false : undefined;\n    }\n  }\n}\n","import { Directive, HostBinding, Input, OnInit, Optional } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nexport const PrefixClasses = [\n  \"tw-bg-background-alt\",\n  \"tw-border\",\n  \"tw-border-solid\",\n  \"tw-border-secondary-500\",\n  \"tw-text-muted\",\n  \"tw-rounded-none\",\n];\n\nexport const PrefixButtonClasses = [\n  \"hover:tw-bg-text-muted\",\n  \"hover:tw-text-contrast\",\n  \"disabled:tw-opacity-100\",\n  \"disabled:tw-bg-secondary-100\",\n  \"disabled:hover:tw-bg-secondary-100\",\n  \"disabled:hover:tw-text-muted\",\n  \"focus-visible:tw-ring-primary-700\",\n\n  \"focus-visible:tw-border-primary-700\",\n  \"focus-visible:tw-ring-1\",\n  \"focus-visible:tw-ring-inset\",\n  \"focus-visible:tw-ring-primary-700\",\n  \"focus-visible:tw-z-10\",\n];\n\nexport const PrefixStaticContentClasses = [\"tw-block\", \"tw-px-3\", \"tw-py-1.5\"];\n\n@Directive({\n  selector: \"[bitPrefix]\",\n})\nexport class BitPrefixDirective implements OnInit {\n  constructor(@Optional() private buttonComponent: ButtonLikeAbstraction) {}\n\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\n      \"tw-border-r-0\",\n      \"first:tw-rounded-l\",\n\n      \"focus-visible:tw-border-r\",\n      \"focus-visible:tw-mr-[-1px]\",\n    ]).concat(this.buttonComponent != undefined ? PrefixButtonClasses : PrefixStaticContentClasses);\n  }\n\n  ngOnInit(): void {\n    this.buttonComponent?.setButtonType(\"unstyled\");\n  }\n}\n","import { Directive, HostBinding, Input, Optional } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction } from \"../shared/button-like.abstraction\";\n\nimport { PrefixButtonClasses, PrefixClasses, PrefixStaticContentClasses } from \"./prefix.directive\";\n\n@Directive({\n  selector: \"[bitSuffix]\",\n})\nexport class BitSuffixDirective {\n  constructor(@Optional() private buttonComponent: ButtonLikeAbstraction) {}\n\n  @HostBinding(\"class\") @Input() get classList() {\n    return PrefixClasses.concat([\n      \"tw-border-l-0\",\n      \"last:tw-rounded-r\",\n\n      \"focus-visible:tw-border-l\",\n      \"focus-visible:tw-ml-[-1px]\",\n    ]).concat(this.buttonComponent != undefined ? PrefixButtonClasses : PrefixStaticContentClasses);\n  }\n\n  ngOnInit(): void {\n    this.buttonComponent?.setButtonType(\"unstyled\");\n  }\n}\n","import { Component, HostBinding, Input } from \"@angular/core\";\n\nimport { ButtonLikeAbstraction, ButtonType } from \"../shared/button-like.abstraction\";\n\nexport type IconButtonType = ButtonType | \"contrast\" | \"main\" | \"muted\" | \"light\";\n\nconst focusRing = [\n  // Workaround for box-shadow with transparent offset issue:\n  // https://github.com/tailwindlabs/tailwindcss/issues/3595\n  // Remove `before:` and use regular `tw-ring` when browser no longer has bug, or better:\n  // switch to `outline` with `outline-offset` when Safari supports border radius on outline.\n  // Using `box-shadow` to create outlines is a hack and as such `outline` should be preferred.\n  \"tw-relative\",\n  \"before:tw-content-['']\",\n  \"before:tw-block\",\n  \"before:tw-absolute\",\n  \"before:-tw-inset-[3px]\",\n  \"before:tw-rounded-md\",\n  \"before:tw-transition\",\n  \"before:tw-ring\",\n  \"before:tw-ring-transparent\",\n  \"focus-visible:tw-z-10\",\n];\n\nconst styles: Record<IconButtonType, string[]> = {\n  contrast: [\n    \"tw-bg-transparent\",\n    \"!tw-text-contrast\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-contrast\",\n    \"focus-visible:before:tw-ring-text-contrast\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  main: [\n    \"tw-bg-transparent\",\n    \"!tw-text-main\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-main\",\n    \"focus-visible:before:tw-ring-text-main\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  muted: [\n    \"tw-bg-transparent\",\n    \"!tw-text-muted\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-primary-700\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  primary: [\n    \"tw-bg-primary-500\",\n    \"!tw-text-contrast\",\n    \"tw-border-primary-500\",\n    \"hover:tw-bg-primary-700\",\n    \"hover:tw-border-primary-700\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-primary-500\",\n    \"disabled:hover:tw-bg-primary-500\",\n    ...focusRing,\n  ],\n  secondary: [\n    \"tw-bg-transparent\",\n    \"!tw-text-muted\",\n    \"tw-border-text-muted\",\n    \"hover:!tw-text-contrast\",\n    \"hover:tw-bg-text-muted\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-text-muted\",\n    \"disabled:hover:tw-bg-transparent\",\n    \"disabled:hover:!tw-text-muted\",\n    \"disabled:hover:tw-border-text-muted\",\n    ...focusRing,\n  ],\n  danger: [\n    \"tw-bg-transparent\",\n    \"!tw-text-danger\",\n    \"tw-border-danger-500\",\n    \"hover:!tw-text-contrast\",\n    \"hover:tw-bg-danger-500\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:tw-opacity-60\",\n    \"disabled:hover:tw-border-danger-500\",\n    \"disabled:hover:tw-bg-transparent\",\n    \"disabled:hover:!tw-text-danger\",\n    \"disabled:hover:tw-border-danger-500\",\n    ...focusRing,\n  ],\n  light: [\n    \"tw-bg-transparent\",\n    \"!tw-text-alt2\",\n    \"tw-border-transparent\",\n    \"hover:tw-bg-transparent-hover\",\n    \"hover:tw-border-text-alt2\",\n    \"focus-visible:before:tw-ring-text-alt2\",\n    \"disabled:hover:tw-border-transparent\",\n    \"disabled:hover:tw-bg-transparent\",\n    ...focusRing,\n  ],\n  unstyled: [],\n};\n\nexport type IconButtonSize = \"default\" | \"small\";\n\nconst sizes: Record<IconButtonSize, string[]> = {\n  default: [\"tw-px-2.5\", \"tw-py-1.5\"],\n  small: [\"tw-leading-none\", \"tw-text-base\", \"tw-p-1\"],\n};\n\n@Component({\n  selector: \"button[bitIconButton]:not(button[bitButton])\",\n  templateUrl: \"icon-button.component.html\",\n  providers: [{ provide: ButtonLikeAbstraction, useExisting: BitIconButtonComponent }],\n})\nexport class BitIconButtonComponent implements ButtonLikeAbstraction {\n  @Input(\"bitIconButton\") icon: string;\n\n  @Input() buttonType: IconButtonType;\n\n  @Input() size: IconButtonSize = \"default\";\n\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-font-semibold\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      \"tw-rounded\",\n      \"tw-transition\",\n      \"hover:tw-no-underline\",\n      \"focus:tw-outline-none\",\n    ]\n      .concat(styles[this.buttonType ?? \"main\"])\n      .concat(sizes[this.size]);\n  }\n\n  get iconClass() {\n    return [this.icon, \"!tw-m-0\"];\n  }\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    const disabled = this.disabled != null && this.disabled !== false;\n    return disabled || this.loading ? true : null;\n  }\n\n  @Input() loading = false;\n  @Input() disabled = false;\n\n  setButtonType(value: \"primary\" | \"secondary\" | \"danger\" | \"unstyled\") {\n    this.buttonType = value;\n  }\n}\n","<span class=\"tw-relative\">\n  <span [ngClass]=\"{ 'tw-invisible': loading }\">\n    <i class=\"bwi\" [ngClass]=\"iconClass\" aria-hidden=\"true\"></i>\n  </span>\n  <span\n    class=\"tw-absolute tw-inset-0 tw-flex tw-items-center tw-justify-center\"\n    [ngClass]=\"{ 'tw-invisible': !loading }\"\n  >\n    <i\n      class=\"bwi bwi-spinner bwi-spin\"\n      aria-hidden=\"true\"\n      [ngClass]=\"{ 'bwi-lg': size === 'default' }\"\n    ></i>\n  </span>\n</span>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { BitIconButtonComponent } from \"./icon-button.component\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [BitIconButtonComponent],\n  exports: [BitIconButtonComponent],\n})\nexport class IconButtonModule {}\n","import { Component, HostBinding, Input } from \"@angular/core\";\nimport { DomSanitizer, SafeHtml } from \"@angular/platform-browser\";\n\nimport { Icon, isIcon } from \"./icon\";\n\n@Component({\n  selector: \"bit-icon\",\n  template: ``,\n})\nexport class BitIconComponent {\n  @Input() set icon(icon: Icon) {\n    if (!isIcon(icon)) {\n      this.innerHtml = \"\";\n      return;\n    }\n\n    const svg = icon.svg;\n    this.innerHtml = this.domSanitizer.bypassSecurityTrustHtml(svg);\n  }\n\n  @HostBinding() innerHtml: SafeHtml;\n\n  constructor(private domSanitizer: DomSanitizer) {}\n}\n","class Icon {\n  constructor(readonly svg: string) {}\n}\n\n// We only export the type to prohibit the creation of Icons without using\n// the `svgIcon` template literal tag.\nexport type { Icon };\n\nexport function isIcon(icon: unknown): icon is Icon {\n  return icon instanceof Icon;\n}\n\nexport class DynamicContentNotAllowedError extends Error {\n  constructor() {\n    super(\"Dynamic content in icons is not allowed due to risk of user-injected XSS.\");\n  }\n}\n\nexport function svgIcon(strings: TemplateStringsArray, ...values: unknown[]): Icon {\n  if (values.length > 0) {\n    throw new DynamicContentNotAllowedError();\n  }\n\n  return new Icon(strings[0]);\n}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  NgZone,\n  Optional,\n  Self,\n} from \"@angular/core\";\nimport { NgControl, Validators } from \"@angular/forms\";\n\nimport { BitFormFieldControl, InputTypes } from \"../form-field/form-field-control\";\n\n// Increments for each instance of this component\nlet nextId = 0;\n\n@Directive({\n  selector: \"input[bitInput], select[bitInput], textarea[bitInput]\",\n  providers: [{ provide: BitFormFieldControl, useExisting: BitInputDirective }],\n})\nexport class BitInputDirective implements BitFormFieldControl {\n  @HostBinding(\"class\") @Input() get classList() {\n    return [\n      \"tw-block\",\n      \"tw-w-full\",\n      \"tw-px-3\",\n      \"tw-py-1.5\",\n      \"tw-bg-background-alt\",\n      \"tw-border\",\n      \"tw-border-solid\",\n      this.hasError ? \"tw-border-danger-500\" : \"tw-border-secondary-500\",\n      \"tw-text-main\",\n      \"tw-placeholder-text-muted\",\n      // Rounded\n      \"tw-rounded-none\",\n      \"first:tw-rounded-l\",\n      \"last:tw-rounded-r\",\n      // Focus\n      \"focus:tw-outline-none\",\n      \"focus:tw-border-primary-700\",\n      \"focus:tw-ring-1\",\n      \"focus:tw-ring-inset\",\n      \"focus:tw-ring-primary-700\",\n      \"focus:tw-z-10\",\n      \"disabled:tw-bg-secondary-100\",\n    ].filter((s) => s != \"\");\n  }\n\n  @HostBinding() @Input() id = `bit-input-${nextId++}`;\n\n  @HostBinding(\"attr.aria-describedby\") ariaDescribedBy: string;\n\n  @HostBinding(\"attr.aria-invalid\") get ariaInvalid() {\n    return this.hasError ? true : undefined;\n  }\n\n  @HostBinding(\"attr.type\") @Input() type?: InputTypes;\n\n  @HostBinding(\"attr.spellcheck\") @Input() spellcheck?: boolean;\n\n  @HostBinding()\n  @Input()\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value: any) {\n    this._required = value != null && value !== false;\n  }\n  private _required: boolean;\n\n  @Input() hasPrefix = false;\n  @Input() hasSuffix = false;\n\n  @Input() showErrorsWhenDisabled? = false;\n\n  get labelForId(): string {\n    return this.id;\n  }\n\n  private isActive = true;\n  @HostListener(\"blur\")\n  onBlur() {\n    this.isActive = true;\n  }\n\n  @HostListener(\"input\")\n  onInput() {\n    this.isActive = false;\n  }\n\n  get hasError() {\n    if (this.showErrorsWhenDisabled) {\n      return (\n        (this.ngControl?.status === \"INVALID\" || this.ngControl?.status === \"DISABLED\") &&\n        this.ngControl?.touched &&\n        this.ngControl?.errors != null\n      );\n    } else {\n      return this.ngControl?.status === \"INVALID\" && this.ngControl?.touched && this.isActive;\n    }\n  }\n\n  get error(): [string, any] {\n    const key = Object.keys(this.ngControl.errors)[0];\n    return [key, this.ngControl.errors[key]];\n  }\n\n  constructor(\n    @Optional() @Self() private ngControl: NgControl,\n    private ngZone: NgZone,\n    private elementRef: ElementRef<HTMLInputElement>\n  ) {}\n\n  focus() {\n    this.ngZone.runOutsideAngular(() => {\n      const end = this.elementRef.nativeElement.value.length;\n      this.elementRef.nativeElement.setSelectionRange(end, end);\n      this.elementRef.nativeElement.focus();\n    });\n  }\n}\n","import { Input, HostBinding, Directive } from \"@angular/core\";\n\nexport type LinkType = \"primary\" | \"secondary\" | \"contrast\";\n\nconst linkStyles: Record<LinkType, string[]> = {\n  primary: [\n    \"!tw-text-primary-500\",\n    \"hover:!tw-text-primary-500\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:!tw-text-primary-500/60\",\n  ],\n  secondary: [\n    \"!tw-text-main\",\n    \"hover:!tw-text-main\",\n    \"focus-visible:before:tw-ring-primary-700\",\n    \"disabled:!tw-text-muted/60\",\n  ],\n  contrast: [\n    \"!tw-text-contrast\",\n    \"hover:!tw-text-contrast\",\n    \"focus-visible:before:tw-ring-text-contrast\",\n    \"disabled:!tw-text-contrast/60\",\n  ],\n};\n\nconst commonStyles = [\n  \"tw-text-unset\",\n  \"tw-leading-none\",\n  \"tw-p-0\",\n  \"tw-font-semibold\",\n  \"tw-bg-transparent\",\n  \"tw-border-0\",\n  \"tw-border-none\",\n  \"tw-rounded\",\n  \"tw-transition\",\n  \"hover:tw-underline\",\n  \"hover:tw-decoration-1\",\n  \"disabled:tw-no-underline\",\n  \"disabled:tw-cursor-not-allowed\",\n  \"focus-visible:tw-outline-none\",\n  \"focus-visible:tw-underline\",\n  \"focus-visible:tw-decoration-1\",\n\n  // Workaround for html button tag not being able to be set to `display: inline`\n  // and at the same time not being able to use `tw-ring-offset` because of box-shadow issue.\n  // https://github.com/w3c/csswg-drafts/issues/3226\n  // Add `tw-inline`, add `tw-py-0.5` and use regular `tw-ring` if issue is fixed.\n  //\n  // https://github.com/tailwindlabs/tailwindcss/issues/3595\n  // Remove `before:` and use regular `tw-ring` when browser no longer has bug, or better:\n  // switch to `outline` with `outline-offset` when Safari supports border radius on outline.\n  // Using `box-shadow` to create outlines is a hack and as such `outline` should be preferred.\n  \"tw-relative\",\n  \"before:tw-content-['']\",\n  \"before:tw-block\",\n  \"before:tw-absolute\",\n  \"before:-tw-inset-x-[0.1em]\",\n  \"before:tw-rounded-md\",\n  \"before:tw-transition\",\n  \"focus-visible:before:tw-ring-2\",\n  \"focus-visible:before:tw-ring-text-contrast\",\n  \"focus-visible:tw-z-10\",\n];\n\n@Directive()\nabstract class LinkDirective {\n  @Input()\n  linkType: LinkType = \"primary\";\n}\n\n@Directive({\n  selector: \"a[bitLink]\",\n})\nexport class AnchorLinkDirective extends LinkDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"before:-tw-inset-y-[0.125rem]\"]\n      .concat(commonStyles)\n      .concat(linkStyles[this.linkType] ?? []);\n  }\n}\n\n@Directive({\n  selector: \"button[bitLink]\",\n})\nexport class ButtonLinkDirective extends LinkDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"before:-tw-inset-y-[0.25rem]\"]\n      .concat(commonStyles)\n      .concat(linkStyles[this.linkType] ?? []);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AnchorLinkDirective, ButtonLinkDirective } from \"./link.directive\";\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [AnchorLinkDirective, ButtonLinkDirective],\n  declarations: [AnchorLinkDirective, ButtonLinkDirective],\n})\nexport class LinkModule {}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-menu-divider\",\n  templateUrl: \"./menu-divider.component.html\",\n})\nexport class MenuDividerComponent {}\n","<div\n  class=\"tw-my-2 tw-border-0 tw-border-t tw-border-solid tw-border-t-secondary-500\"\n  role=\"separator\"\n></div>\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding } from \"@angular/core\";\n\n@Directive({\n  selector: \"[bitMenuItem]\",\n})\nexport class MenuItemDirective implements FocusableOption {\n  @HostBinding(\"class\") classList = [\n    \"tw-block\",\n    \"tw-py-1\",\n    \"tw-px-4\",\n    \"!tw-text-main\",\n    \"!tw-no-underline\",\n    \"tw-cursor-pointer\",\n    \"tw-border-none\",\n    \"tw-bg-background\",\n    \"tw-text-left\",\n    \"hover:tw-bg-secondary-100\",\n    \"focus:tw-bg-secondary-100\",\n    \"focus:tw-z-50\",\n    \"focus:tw-outline-none\",\n    \"focus:tw-ring\",\n    \"focus:tw-ring-offset-2\",\n    \"focus:tw-ring-primary-700\",\n    \"active:!tw-ring-0\",\n    \"active:!tw-ring-offset-0\",\n  ];\n  @HostBinding(\"attr.role\") role = \"menuitem\";\n  @HostBinding(\"tabIndex\") tabIndex = \"-1\";\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from \"@angular/cdk/overlay\";\nimport { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  ViewContainerRef,\n} from \"@angular/core\";\nimport { Observable, Subscription } from \"rxjs\";\nimport { filter, mergeWith } from \"rxjs/operators\";\n\nimport { MenuComponent } from \"./menu.component\";\n\n@Directive({\n  selector: \"[bitMenuTriggerFor]\",\n})\nexport class MenuTriggerForDirective implements OnDestroy {\n  @HostBinding(\"attr.aria-expanded\") isOpen = false;\n  @HostBinding(\"attr.aria-haspopup\") get hasPopup(): \"menu\" | \"dialog\" {\n    return this.menu?.ariaRole || \"menu\";\n  }\n  @HostBinding(\"attr.role\") role = \"button\";\n\n  @Input(\"bitMenuTriggerFor\") menu: MenuComponent;\n\n  private overlayRef: OverlayRef;\n  private defaultMenuConfig: OverlayConfig = {\n    panelClass: \"bit-menu-panel\",\n    hasBackdrop: true,\n    backdropClass: \"cdk-overlay-transparent-backdrop\",\n    scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    positionStrategy: this.overlay\n      .position()\n      .flexibleConnectedTo(this.elementRef)\n      .withPositions([\n        {\n          originX: \"start\",\n          originY: \"bottom\",\n          overlayX: \"start\",\n          overlayY: \"top\",\n        },\n        {\n          originX: \"end\",\n          originY: \"bottom\",\n          overlayX: \"end\",\n          overlayY: \"top\",\n        },\n      ])\n      .withLockedPosition(true)\n      .withFlexibleDimensions(false)\n      .withPush(true),\n  };\n  private closedEventsSub: Subscription;\n  private keyDownEventsSub: Subscription;\n\n  constructor(\n    private elementRef: ElementRef<HTMLElement>,\n    private viewContainerRef: ViewContainerRef,\n    private overlay: Overlay\n  ) {}\n\n  @HostListener(\"click\") toggleMenu() {\n    this.isOpen ? this.destroyMenu() : this.openMenu();\n  }\n\n  ngOnDestroy() {\n    this.disposeAll();\n  }\n\n  private openMenu() {\n    if (this.menu == null) {\n      throw new Error(\"Cannot find bit-menu element\");\n    }\n\n    this.isOpen = true;\n    this.overlayRef = this.overlay.create(this.defaultMenuConfig);\n\n    const templatePortal = new TemplatePortal(this.menu.templateRef, this.viewContainerRef);\n    this.overlayRef.attach(templatePortal);\n\n    this.closedEventsSub = this.getClosedEvents().subscribe((event: KeyboardEvent | undefined) => {\n      if ([\"Tab\", \"Escape\"].includes(event?.key)) {\n        // Required to ensure tab order resumes correctly\n        this.elementRef.nativeElement.focus();\n      }\n      this.destroyMenu();\n    });\n    this.keyDownEventsSub =\n      this.menu.keyManager &&\n      this.overlayRef\n        .keydownEvents()\n        .subscribe((event: KeyboardEvent) => this.menu.keyManager.onKeydown(event));\n  }\n\n  private destroyMenu() {\n    if (this.overlayRef == null || !this.isOpen) {\n      return;\n    }\n\n    this.isOpen = false;\n    this.disposeAll();\n  }\n\n  private getClosedEvents(): Observable<any> {\n    const detachments = this.overlayRef.detachments();\n    const escKey = this.overlayRef.keydownEvents().pipe(\n      filter((event: KeyboardEvent) => {\n        const keys = this.menu.ariaRole === \"menu\" ? [\"Escape\", \"Tab\"] : [\"Escape\"];\n        return keys.includes(event.key);\n      })\n    );\n    const backdrop = this.overlayRef.backdropClick();\n    const menuClosed = this.menu.closed;\n\n    return detachments.pipe(mergeWith(escKey, backdrop, menuClosed));\n  }\n\n  private disposeAll() {\n    this.closedEventsSub?.unsubscribe();\n    this.overlayRef?.dispose();\n    this.keyDownEventsSub?.unsubscribe();\n  }\n}\n","<ng-template>\n  <div\n    (click)=\"closed.emit()\"\n    class=\"tw-flex tw-shrink-0 tw-flex-col tw-rounded tw-border tw-border-solid tw-border-secondary-500 tw-bg-background tw-bg-clip-padding tw-py-2 tw-overflow-x-auto\"\n    [attr.role]=\"ariaRole\"\n    [attr.aria-label]=\"ariaLabel\"\n    cdkTrapFocus\n    [cdkTrapFocusAutoCapture]=\"ariaRole === 'dialog'\"\n  >\n    <ng-content></ng-content>\n  </div>\n</ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport {\n  Component,\n  Output,\n  TemplateRef,\n  ViewChild,\n  EventEmitter,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  Input,\n} from \"@angular/core\";\n\nimport { MenuItemDirective } from \"./menu-item.directive\";\n\n@Component({\n  selector: \"bit-menu\",\n  templateUrl: \"./menu.component.html\",\n  exportAs: \"menuComponent\",\n})\nexport class MenuComponent implements AfterContentInit {\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n  @Output() closed = new EventEmitter<void>();\n  @ContentChildren(MenuItemDirective, { descendants: true })\n  menuItems: QueryList<MenuItemDirective>;\n  keyManager?: FocusKeyManager<MenuItemDirective>;\n\n  @Input() ariaRole: \"menu\" | \"dialog\" = \"menu\";\n\n  @Input() ariaLabel: string;\n\n  ngAfterContentInit() {\n    if (this.ariaRole === \"menu\") {\n      this.keyManager = new FocusKeyManager(this.menuItems).withWrap();\n    }\n  }\n}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { MenuDividerComponent } from \"./menu-divider.component\";\nimport { MenuItemDirective } from \"./menu-item.directive\";\nimport { MenuTriggerForDirective } from \"./menu-trigger-for.directive\";\nimport { MenuComponent } from \"./menu.component\";\n\n@NgModule({\n  imports: [A11yModule, CommonModule, OverlayModule],\n  declarations: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n  exports: [MenuComponent, MenuTriggerForDirective, MenuItemDirective, MenuDividerComponent],\n})\nexport class MenuModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\n\nimport { BadgeModule } from \"../badge\";\nimport { SharedModule } from \"../shared\";\n\nimport { MultiSelectComponent } from \"./multi-select.component\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule, NgSelectModule, BadgeModule, SharedModule],\n  exports: [MultiSelectComponent],\n  declarations: [MultiSelectComponent],\n})\nexport class MultiSelectModule {}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { FormControlModule } from \"../form-control\";\n\nimport { RadioButtonComponent } from \"./radio-button.component\";\nimport { RadioGroupComponent } from \"./radio-group.component\";\nimport { RadioInputComponent } from \"./radio-input.component\";\n\n@NgModule({\n  imports: [CommonModule, FormControlModule],\n  declarations: [RadioInputComponent, RadioButtonComponent, RadioGroupComponent],\n  exports: [FormControlModule, RadioInputComponent, RadioButtonComponent, RadioGroupComponent],\n})\nexport class RadioButtonModule {}\n","export type ButtonType = \"primary\" | \"secondary\" | \"danger\" | \"unstyled\";\n\nexport abstract class ButtonLikeAbstraction {\n  loading: boolean;\n  disabled: boolean;\n  setButtonType: (value: ButtonType) => void;\n}\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\nimport { I18nService } from \"@bitwarden/common/abstractions/i18n.service\";\n\n/**\n * Temporarily duplicate this pipe\n */\n@Pipe({\n  name: \"i18n\",\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private i18nService: I18nService) {}\n\n  transform(id: string, p1?: string, p2?: string, p3?: string): string {\n    return this.i18nService.t(id, p1, p2, p3);\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\n\nimport { I18nPipe } from \"./i18n.pipe\";\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [I18nPipe],\n  exports: [CommonModule, I18nPipe],\n})\nexport class SharedModule {}\n","import { HostBinding, Directive } from \"@angular/core\";\n\n@Directive({\n  selector: \"th[bitCell], td[bitCell]\",\n})\nexport class CellDirective {\n  @HostBinding(\"class\") get classList() {\n    return [\"tw-p-3\", \"tw-align-middle\"];\n  }\n}\n","import { Directive, HostBinding, Input } from \"@angular/core\";\n\n@Directive({\n  selector: \"tr[bitRow]\",\n})\nexport class RowDirective {\n  @Input() alignContent: \"top\" | \"middle\" | \"bottom\" | \"baseline\" = \"baseline\";\n\n  get alignmentClass(): string {\n    switch (this.alignContent) {\n      case \"top\":\n        return \"tw-align-top\";\n      case \"middle\":\n        return \"tw-align-middle\";\n      case \"bottom\":\n        return \"tw-align-bottom\";\n      default:\n        return \"tw-align-baseline\";\n    }\n  }\n\n  @HostBinding(\"class\") get classList() {\n    return [\n      \"tw-border-0\",\n      \"tw-border-b\",\n      \"tw-border-secondary-300\",\n      \"tw-border-solid\",\n      \"hover:tw-bg-background-alt\",\n      \"last:tw-border-0\",\n      this.alignmentClass,\n    ];\n  }\n}\n","<!-- Please remove this disable statement when editing this file! -->\n<!-- eslint-disable tailwindcss/no-custom-classname -->\n<table class=\"tw-w-full tw-table-auto tw-leading-normal tw-text-main\">\n  <thead\n    class=\"tw-text-bold tw-border-0 tw-border-b-2 tw-border-solid tw-border-secondary-300 tw-text-muted\"\n  >\n    <ng-content select=\"[header]\"></ng-content>\n  </thead>\n  <tbody>\n    <ng-container\n      *ngTemplateOutlet=\"templateVariable.template; context: { $implicit: rows }\"\n    ></ng-container>\n  </tbody>\n</table>\n","import { isDataSource } from \"@angular/cdk/collections\";\nimport {\n  AfterContentChecked,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnDestroy,\n  TemplateRef,\n} from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { TableDataSource } from \"./table-data-source\";\n\n@Directive({\n  selector: \"ng-template[body]\",\n})\nexport class TableBodyDirective {\n  // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n  constructor(public readonly template: TemplateRef<any>) {}\n}\n\n@Component({\n  selector: \"bit-table\",\n  templateUrl: \"./table.component.html\",\n})\nexport class TableComponent implements OnDestroy, AfterContentChecked {\n  @Input() dataSource: TableDataSource<any>;\n\n  @ContentChild(TableBodyDirective) templateVariable: TableBodyDirective;\n\n  protected rows: Observable<readonly any[]>;\n\n  private _initialized = false;\n\n  ngAfterContentChecked(): void {\n    if (!this._initialized && isDataSource(this.dataSource)) {\n      this._initialized = true;\n\n      const dataStream = this.dataSource.connect();\n      this.rows = dataStream;\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (isDataSource(this.dataSource)) {\n      this.dataSource.disconnect();\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\n/**\n * Component used for styling the tab header/background for both content and navigation tabs\n */\n@Component({\n  selector: \"bit-tab-header\",\n  host: {\n    class:\n      \"tw-h-16 tw-pl-4 tw-bg-background-alt tw-flex tw-items-end tw-border-0 tw-border-b tw-border-solid tw-border-secondary-300\",\n  },\n  template: `<ng-content></ng-content>`,\n})\nexport class TabHeaderComponent {}\n","import { Directive } from \"@angular/core\";\n\n/**\n * Directive used for styling the container for bit tab labels\n */\n@Directive({\n  selector: \"[bitTabListContainer]\",\n  host: {\n    class: \"tw-inline-flex tw-flex-wrap tw-leading-5\",\n  },\n})\nexport class TabListContainerDirective {}\n","import { FocusableOption } from \"@angular/cdk/a11y\";\nimport { Directive, ElementRef, HostBinding, Input } from \"@angular/core\";\n\n/**\n * Directive used for styling tab header items for both nav links (anchor tags)\n * and content tabs (button tags)\n */\n@Directive({ selector: \"[bitTabListItem]\" })\nexport class TabListItemDirective implements FocusableOption {\n  @Input() active: boolean;\n  @Input() disabled: boolean;\n\n  @HostBinding(\"attr.disabled\")\n  get disabledAttr() {\n    return this.disabled || null; // native disabled attr must be null when false\n  }\n\n  constructor(private elementRef: ElementRef) {}\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  click() {\n    this.elementRef.nativeElement.click();\n  }\n\n  @HostBinding(\"class\")\n  get classList(): string[] {\n    return this.baseClassList\n      .concat(this.active ? this.activeClassList : [])\n      .concat(this.disabled ? this.disabledClassList : [])\n      .concat(this.textColorClassList);\n  }\n\n  /**\n   * Classes used for styling tab item text color.\n   * Separate text color class list required to override bootstrap classes in Web.\n   */\n  get textColorClassList(): string[] {\n    if (this.disabled) {\n      return [\"!tw-text-muted\", \"hover:!tw-text-muted\"];\n    }\n    if (this.active) {\n      return [\"!tw-text-primary-500\", \"hover:!tw-text-primary-700\"];\n    }\n    return [\"!tw-text-main\", \"hover:!tw-text-main\"];\n  }\n\n  get baseClassList(): string[] {\n    return [\n      \"tw-block\",\n      \"tw-relative\",\n      \"tw-py-2\",\n      \"tw-px-4\",\n      \"tw-font-semibold\",\n      \"tw-transition\",\n      \"tw-rounded-t\",\n      \"tw-border-0\",\n      \"tw-border-x\",\n      \"tw-border-t-4\",\n      \"tw-border-transparent\",\n      \"tw-border-solid\",\n      \"tw-bg-transparent\",\n      \"hover:tw-underline\",\n      \"focus-visible:tw-z-10\",\n      \"focus-visible:tw-outline-none\",\n      \"focus-visible:tw-ring-2\",\n      \"focus-visible:tw-ring-primary-700\",\n    ];\n  }\n\n  get disabledClassList(): string[] {\n    return [\"!tw-bg-secondary-100\", \"!tw-no-underline\", \"tw-cursor-not-allowed\"];\n  }\n\n  get activeClassList(): string[] {\n    return [\n      \"tw--mb-px\",\n      \"tw-border-x-secondary-300\",\n      \"tw-border-t-primary-500\",\n      \"tw-border-b\",\n      \"tw-border-b-background\",\n      \"tw-bg-background\",\n      \"hover:tw-border-t-primary-700\",\n      \"focus-visible:tw-border-t-primary-700\",\n      \"focus-visible:!tw-text-primary-700\",\n    ];\n  }\n}\n","import { TemplatePortal } from \"@angular/cdk/portal\";\nimport { Component, HostBinding, Input } from \"@angular/core\";\n\n@Component({\n  selector: \"bit-tab-body\",\n  templateUrl: \"tab-body.component.html\",\n})\nexport class TabBodyComponent {\n  private _firstRender: boolean;\n\n  @Input() content: TemplatePortal;\n  @Input() preserveContent = false;\n\n  @HostBinding(\"attr.hidden\") get hidden() {\n    return !this.active || null;\n  }\n\n  @Input()\n  get active() {\n    return this._active;\n  }\n  set active(value: boolean) {\n    this._active = value;\n    if (this._active) {\n      this._firstRender = true;\n    }\n  }\n  private _active: boolean;\n\n  /**\n   * The tab content to render.\n   * Inactive tabs that have never been rendered/active do not have their\n   * content rendered by default for performance. If `preserveContent` is `true`\n   * then the content persists after the first time content is rendered.\n   */\n  get tabContent() {\n    if (this.active) {\n      return this.content;\n    }\n    if (this.preserveContent && this._firstRender) {\n      return this.content;\n    }\n    return null;\n  }\n}\n","<bit-tab-header>\n  <div\n    bitTabListContainer\n    role=\"tablist\"\n    [attr.aria-label]=\"label\"\n    (keydown)=\"keyManager.onKeydown($event)\"\n  >\n    <button\n      bitTabListItem\n      *ngFor=\"let tab of tabs; let i = index\"\n      type=\"button\"\n      role=\"tab\"\n      [id]=\"getTabLabelId(i)\"\n      [active]=\"tab.isActive\"\n      [disabled]=\"tab.disabled\"\n      [attr.aria-selected]=\"selectedIndex === i\"\n      [attr.tabindex]=\"selectedIndex === i ? 0 : -1\"\n      (click)=\"selectTab(i)\"\n    >\n      <ng-container [ngTemplateOutlet]=\"content\"></ng-container>\n\n      <ng-template #content>\n        <ng-template [ngIf]=\"tab.templateLabel\" [ngIfElse]=\"tabTextLabel\">\n          <ng-container [ngTemplateOutlet]=\"tab.templateLabel.templateRef\"></ng-container>\n        </ng-template>\n\n        <ng-template #tabTextLabel>{{ tab.textLabel }}</ng-template>\n      </ng-template>\n    </button>\n  </div>\n</bit-tab-header>\n<div class=\"tw-px-4 tw-pt-5\">\n  <bit-tab-body\n    role=\"tabpanel\"\n    *ngFor=\"let tab of tabs; let i = index\"\n    [id]=\"getTabContentId(i)\"\n    [attr.tabindex]=\"tab.contentTabIndex\"\n    [attr.labeledby]=\"getTabLabelId(i)\"\n    [active]=\"tab.isActive\"\n    [content]=\"tab.content\"\n    [preserveContent]=\"preserveContent\"\n  >\n  </bit-tab-body>\n</div>\n","<ng-template [cdkPortalOutlet]=\"tabContent\"></ng-template>\n","import { FocusKeyManager } from \"@angular/cdk/a11y\";\nimport { coerceNumberProperty } from \"@angular/cdk/coercion\";\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChildren,\n} from \"@angular/core\";\nimport { Subject, takeUntil } from \"rxjs\";\n\nimport { TabListItemDirective } from \"../shared/tab-list-item.directive\";\n\nimport { TabComponent } from \"./tab.component\";\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n@Component({\n  selector: \"bit-tab-group\",\n  templateUrl: \"./tab-group.component.html\",\n})\nexport class TabGroupComponent\n  implements AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy\n{\n  private readonly _groupId: number;\n  private readonly destroy$ = new Subject<void>();\n  private _indexToSelect: number | null = 0;\n\n  /**\n   * Aria label for the tab list menu\n   */\n  @Input() label = \"\";\n\n  /**\n   * Keep the content of off-screen tabs in the DOM.\n   * Useful for keeping <audio> or <video> elements from re-initializing\n   * after navigating between tabs.\n   */\n  @Input() preserveContent = false;\n\n  @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\n  @ViewChildren(TabListItemDirective) tabLabels: QueryList<TabListItemDirective>;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value: number) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<BitTabChangeEvent> =\n    new EventEmitter<BitTabChangeEvent>();\n\n  /**\n   * Focus key manager for keeping tab controls accessible.\n   * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tablist_role#keyboard_interactions\n   */\n  keyManager: FocusKeyManager<TabListItemDirective>;\n\n  constructor() {\n    this._groupId = nextId++;\n  }\n\n  protected getTabContentId(id: number): string {\n    return `bit-tab-content-${this._groupId}-${id}`;\n  }\n\n  protected getTabLabelId(id: number): string {\n    return `bit-tab-label-${this._groupId}-${id}`;\n  }\n\n  selectTab(index: number) {\n    this.selectedIndex = index;\n  }\n\n  /**\n   * After content is checked, the tab group knows what tabs are defined and which index\n   * should be currently selected.\n   */\n  ngAfterContentChecked(): void {\n    const indexToSelect = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));\n\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit({\n          index: indexToSelect,\n          tab: this.tabs.toArray()[indexToSelect],\n        });\n      }\n\n      // These values need to be updated after change detection as\n      // the checked content may have references to them.\n      Promise.resolve().then(() => {\n        this.tabs.forEach((tab, index) => (tab.isActive = index === indexToSelect));\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n\n      // Manually update the _selectedIndex and keyManager active item\n      this._selectedIndex = indexToSelect;\n      if (this.keyManager) {\n        this.keyManager.setActiveItem(indexToSelect);\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.keyManager = new FocusKeyManager(this.tabLabels)\n      .withHorizontalOrientation(\"ltr\")\n      .withWrap()\n      .withHomeAndEnd();\n  }\n\n  ngAfterContentInit() {\n    // Subscribe to any changes in the number of tabs, in order to be able\n    // to re-render content when new tabs are added or removed.\n    this.tabs.changes.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // If the selected tab didn't explicitly change, keep the previously\n      // selected tab selected/active\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this.tabs.toArray();\n        let selectedTab: TabComponent | undefined;\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Set both _indexToSelect and _selectedIndex to avoid firing a change\n            // event which could cause an infinite loop if adding a tab within the\n            // selectedIndexChange event\n            this._indexToSelect = this._selectedIndex = i;\n            selectedTab = tabs[i];\n            break;\n          }\n        }\n\n        // No active tab found and a tab does exist means the active tab\n        // was removed, so a new active tab must be set manually\n        if (!selectedTab && tabs[indexToSelect]) {\n          tabs[indexToSelect].isActive = true;\n          this.selectedTabChange.emit({\n            index: indexToSelect,\n            tab: tabs[indexToSelect],\n          });\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private _clampTabIndex(index: number): number {\n    return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n  }\n}\n\nexport class BitTabChangeEvent {\n  /**\n   * The currently selected tab index\n   */\n  index: number;\n  /**\n   * The currently selected tab\n   */\n  tab: TabComponent;\n}\n","import { Directive, TemplateRef } from \"@angular/core\";\n\n/**\n * Used to identify template based tab labels (allows complex labels instead of just plaintext)\n *\n * @example\n * ```\n * <bit-tab>\n *   <ng-template bitTabLabel>\n *     <i class=\"bwi bwi-search\"></i> Search\n *   </ng-template>\n *\n *   <p>Tab Content</p>\n * </bit-tab>\n * ```\n */\n@Directive({\n  selector: \"[bitTabLabel]\",\n})\nexport class TabLabelDirective {\n  constructor(public templateRef: TemplateRef<unknown>) {}\n}\n","<ng-template><ng-content></ng-content></ng-template>\n","import { TemplatePortal } from \"@angular/cdk/portal\";\nimport {\n  Component,\n  ContentChild,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n} from \"@angular/core\";\n\nimport { TabLabelDirective } from \"./tab-label.directive\";\n\n@Component({\n  selector: \"bit-tab\",\n  templateUrl: \"./tab.component.html\",\n  host: {\n    role: \"tabpanel\",\n  },\n})\nexport class TabComponent implements OnInit {\n  @Input() disabled = false;\n  @Input(\"label\") textLabel = \"\";\n\n  /**\n   * Optional tabIndex for the tabPanel that contains this tab's content.\n   *\n   * If the tabpanel does not contain any focusable elements or the first element with content is not focusable,\n   * this should be set to 0 to include it in the tab sequence of the page.\n   *\n   * @remarks See note 4 of https://www.w3.org/WAI/ARIA/apg/patterns/tabpanel/\n   */\n  @Input() contentTabIndex: number | undefined;\n\n  @ViewChild(TemplateRef, { static: true }) implicitContent: TemplateRef<unknown>;\n  @ContentChild(TabLabelDirective) templateLabel: TabLabelDirective;\n\n  private _contentPortal: TemplatePortal | null = null;\n\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  isActive: boolean;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {}\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(this.implicitContent, this._viewContainerRef);\n  }\n}\n","import { from, Observable, of, throwError } from \"rxjs\";\n\nimport { Utils } from \"@bitwarden/common/misc/utils\";\n\nexport type FunctionReturningAwaitable =\n  | (() => unknown)\n  | (() => Promise<unknown>)\n  | (() => Observable<unknown>);\n\nexport function functionToObservable(func: FunctionReturningAwaitable): Observable<unknown> {\n  let awaitable: unknown;\n  try {\n    awaitable = func();\n  } catch (error) {\n    return throwError(() => error);\n  }\n\n  if (Utils.isPromise(awaitable)) {\n    return from(awaitable);\n  }\n\n  if (awaitable instanceof Observable) {\n    return awaitable;\n  }\n\n  return of(awaitable);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + (chunkId === 768 ? \"encrypt-worker\" : chunkId) + \".\" + {\"182\":\"507b4288f084af7634d8\",\"197\":\"8914d23ea1267939fea2\",\"297\":\"eab0517393b948250535\",\"543\":\"af1f0bbf1b53c663388b\",\"584\":\"238f402a694e2a33f299\",\"754\":\"505a197fde4aaf7bc519\",\"768\":\"8dde43fe97482ae4b420\",\"812\":\"28761183ec134a09ed9d\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t148: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [734], () => (__webpack_require__(83348)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","leafPrototypes","getProto","inProgress","dataWebpackPrefix","constructor","keyConnectorService","userVerificationService","usesKeyConnector","disableRequestOTP","sentCode","secret","ngOnInit","this","getUsesKeyConnector","processChanges","value","valueChanges","subscribe","requestOTP","writeValue","obj","setValue","registerOnChange","fn","onChange","registerOnTouched","setDisabledState","isDisabled","disable","enable","type","UserVerificationComponent","provide","multi","useExisting","opacity","WINDOW","MEMORY_STORAGE","SECURE_STORAGE","STATE_FACTORY","STATE_SERVICE_USE_CACHE","LOGOUT_CALLBACK","LOCKED_CALLBACK","LOCALES_DIRECTORY","SYSTEM_LANGUAGE","LOG_MAC_FAILURES","ConfigApiServiceAbstraction","EncryptService","FileUploadService","OrgDomainServiceAbstraction","StateMigrationService","AbstractStorageService","AbstractMemoryStorageService","TYPE","UserVerificationApiServiceAbstraction","AccountService","InternalAccountService","PreloginRequest","email","TokenRequest","twoFactor","device","alterIdentityTokenHeaders","headers","setTwoFactor","setPasswordlessAccessCode","accessCode","passwordlessAuthRequest","toIdentityToken","clientId","scope","client_id","deviceType","deviceIdentifier","identifier","deviceName","name","authRequest","token","provider","twoFactorToken","twoFactorProvider","twoFactorRemember","remember","PasswordTokenRequest","masterPasswordHash","captchaResponse","super","grant_type","username","password","set","EnvironmentUrls","base","api","identity","icons","notifications","events","webVault","keyConnector","static","Object","assign","ServerConfigData","serverConfigResponse","version","gitHash","server","ThirdPartyServerConfigData","utcDate","Date","toISOString","environment","EnvironmentServerConfigData","fromJSON","response","url","vault","sso","EncryptionPair","toJSON","encrypted","decrypted","ArrayBuffer","decryptedFromJson","encryptedFromJson","pair","DataEncryptionPair","TemporaryDataEncryption","AccountData","ciphers","folders","sends","collections","policies","passwordGenerationHistory","AccountKeys","cryptoSymmetricKey","organizationKeys","providerKeys","privateKey","publicKey","cryptoMasterKey","initRecordEncryptionPairsFromJSON","decObj","buffer","record","id","AccountProfile","environmentUrls","pinProtected","vaultTimeoutAction","serverConfig","AccountTokens","init","data","keys","profile","settings","tokens","json","AuthResult","captchaSiteKey","resetMasterPassword","forcePasswordReset","twoFactorProviders","requiresCaptcha","requiresTwoFactor","DeviceRequest","appId","platformUtilsService","getDevice","getDeviceString","pushToken","IdentityCaptchaResponse","siteKey","getResponseProperty","IdentityTokenResponse","accessToken","access_token","expiresIn","expires_in","refreshToken","refresh_token","tokenType","token_type","key","kdf","kdfIterations","kdfMemory","kdfParallelism","apiUseKeyConnector","keyConnectorUrl","IdentityTwoFactorResponse","twoFactorProviders2","Map","captchaToken","prop","hasOwnProperty","parseInt","LogInStrategy","cryptoService","apiService","tokenService","appIdService","messagingService","logService","stateService","twoFactorService","captchaBypassToken","logInTwoFactor","tokenRequest","startLogIn","clearSelectedProvider","postIdentityToken","processTwoFactorResponse","processCaptchaResponse","processTokenResponse","Error","buildDeviceRequest","getAppId","buildTwoFactor","userProvidedTwoFactor","storedTwoFactorToken","getTwoFactorToken","saveAccountInformation","tokenResponse","accountInformation","decodeToken","addAccount","userId","sub","hasPremiumPersonally","premium","kdfType","result","setTwoFactorToken","setUserKey","setEncKey","setEncPrivateKey","createKeyPairForOldAccount","send","setProviders","makeKeyPair","postAccountKeys","encryptedString","e","error","PasswordLogInStrategy","authService","setKey","setKeyHash","localHashedPassword","logIn","credentials","masterPassword","makePreloginKey","hashPassword","hashedPassword","PasswordlessLogInStrategy","passwordlessCredentials","authRequestId","decKey","localPasswordHash","SsoTokenRequest","code","codeVerifier","redirectUri","code_verifier","redirect_uri","SsoLogInStrategy","newSsoUser","convertNewSsoUserToKeyConnector","orgId","getAndSetKey","redirectUrl","UserApiTokenRequest","clientSecret","startsWith","client_secret","UserApiLogInStrategy","environmentService","getKeyConnectorUrl","setApiKeyClientId","setApiKeyClientSecret","PasswordlessAuthRequest","requestApproved","KeyConnectorUserKeyRequest","SetKeyConnectorKeyRequest","kdfConfig","orgIdentifier","iterations","memory","parallelism","LoginService","getEmail","_email","getRememberEmail","_rememberEmail","setEmail","setRememberEmail","clearValues","saveEmailSettings","setRememberedEmail","TokenService","parts","split","length","decoded","JSON","parse","setTokens","clientIdClientSecret","setToken","setRefreshToken","setClientId","setClientSecret","getClientId","getApiKeyClientId","getClientSecret","getApiKeyClientSecret","setAccessToken","getToken","getAccessToken","getRefreshToken","clearTwoFactorToken","clearToken","getTokenExpirationDate","exp","d","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","valueOf","Math","round","tokenNeedsRefresh","minutes","getUserId","getEmailVerified","email_verified","getName","getIssuer","iss","getIsExternal","Array","isArray","amr","includes","VerifyOTPRequest","OTP","AccountFactory","accountConstructor","create","args","GlobalStateFactory","globalStateConstructor","StateFactory","globalStateFactory","accountFactory","createGlobal","createAccount","StateVersion","WindowState","theme","window","stateVersion","One","UpdateAvatarRequest","avatarColor","NotificationType","NotificationResponse","contextId","payload","SyncCipherCreate","SyncCipherDelete","SyncCipherUpdate","SyncLoginDelete","SyncCipherNotification","SyncFolderCreate","SyncFolderDelete","SyncFolderUpdate","SyncFolderNotification","SyncVault","SyncCiphers","SyncOrgKeys","SyncSettings","LogOut","UserNotification","SyncSendCreate","SyncSendUpdate","SyncSendDelete","SyncSendNotification","AuthRequest","AuthRequestResponse","AuthRequestPushNotification","organizationId","collectionIds","revisionDate","date","AnonymousHubService","createHubConnection","getNotificationsUrl","anonHubConnection","HubConnectionBuilder","withUrl","skipNegotiation","transport","withHubProtocol","MessagePackHubProtocol","build","start","catch","on","ProcessNotification","stopHubConnection","stop","notification","authResponsePushNotifiction","ApiKeyResponse","apiKey","requestDeviceType","requestIpAddress","creationDate","responseDate","requestDate","requestDateUTC","UTC","getUTCFullYear","getUTCMonth","getDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","dateNow","now","dateNowUTC","isExpired","isAnswered","DeviceVerificationResponse","isDeviceVerificationSectionEnabled","unknownDeviceVerificationEnabled","KeyConnectorUserKeyResponse","PreloginResponse","RegisterResponse","SsoPreValidateResponse","TwoFactorAuthenticatorResponse","enabled","TwoFactorDuoResponse","host","secretKey","integrationKey","TwoFactorEmailResponse","TwoFactorProviderResponse","TwoFactorRecoverResponse","TwoFactorWebAuthnResponse","map","k","KeyResponse","migrated","ChallengeResponse","attestation","authenticatorSelection","challenge","excludeCredentials","c","extensions","pubKeyCredParams","rp","timeout","user","TwoFactorYubiKeyResponse","key1","key2","key3","key4","key5","nfc","BillingResponse","invoices","transactions","balance","paymentSource","BillingSourceResponse","t","BillingTransactionResponse","i","BillingInvoiceResponse","hasNoHistory","cardBrand","description","needsVerification","pdfUrl","number","paid","amount","createdDate","refunded","partiallyRefunded","refundedAmount","paymentMethodType","details","BillingHistoryResponse","BillingPaymentResponse","BreachAccountResponse","addedDate","breachDate","dataClasses","domain","isActive","isVerified","logoPath","modifiedDate","pwnCount","title","CollectionResponse","externalId","CollectionDetailsResponse","readOnly","CollectionAccessDetailsResponse","groups","users","assigned","g","GlobalDomainResponse","domains","excluded","DomainsResponse","globalEquivalentDomains","equivalentDomains","EventResponse","providerId","cipherId","collectionId","groupId","policyId","organizationUserId","providerUserId","providerOrganizationId","actingUserId","ipAddress","installationId","systemUser","domainName","secretId","serviceAccountId","OrganizationConnectionResponse","configType","rawConfig","config","OrganizationExportResponse","OrganizationSponsorshipSyncStatusResponse","lastSyncDate","ProfileOrganizationResponse","usePolicies","useGroups","useDirectory","useEvents","useTotp","use2fa","useApi","useSso","useKeyConnector","useScim","useCustomPermissions","useResetPassword","useSecretsManager","useActivateAutofillPolicy","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","hasPublicAndPrivateKeys","status","ssoBound","permissions","resetPasswordEnrolled","providerName","familySponsorshipFriendlyName","familySponsorshipAvailable","planProductType","keyConnectorEnabled","familySponsorshipLastSyncDateString","familySponsorshipLastSyncDate","familySponsorshipValidUntilString","familySponsorshipValidUntil","familySponsorshipToDelete","accessSecretsManager","ProfileProviderOrganizationResponse","ProfileProviderResponse","ProfileResponse","organizations","providers","providerOrganizations","emailVerified","masterPasswordHint","premiumPersonally","premiumFromOrganization","culture","twoFactorEnabled","securityStamp","o","PaymentResponse","userProfile","paymentIntentClientSecret","success","PlanResponse","product","isAnnual","nameLocalizationKey","descriptionLocalizationKey","canBeUsedByBusiness","baseSeats","baseStorageGb","maxUsers","hasAdditionalSeatsOption","maxAdditionalSeats","hasAdditionalStorageOption","maxAdditionalStorage","hasPremiumAccessOption","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","hasResetPassword","upgradeSortOrder","displaySortOrder","legacyYear","disabled","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","basePrice","seatPrice","additionalStoragePricePerGb","premiumAccessOptionPrice","ProviderOrganizationResponse","userCount","plan","ProviderOrganizationOrganizationDetailsResponse","organizationName","OrganizationUserBulkPublicKeyResponse","ProviderUserBulkPublicKeyResponse","ProviderUserBulkResponse","ProviderUserResponse","ProviderUserUserDetailsResponse","ProviderResponse","businessName","billingEmail","SendAccessResponse","text","file","expirationDate","creatorIdentifier","SendFileDownloadDataResponse","SendResponse","accessId","notes","maxAccessCount","accessCount","deletionDate","hideEmail","SendFileUploadDataResponse","fileUploadType","sendResponse","SubscriptionResponse","storageName","storageGb","license","expiration","usingInAppPurchase","subscription","upcomingInvoice","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","items","trialEndDate","periodStartDate","periodEndDate","cancelledDate","cancelAtEndDate","cancelled","BillingSubscriptionItemResponse","quantity","interval","sponsoredSubscriptionItem","TaxInfoResponse","taxId","taxIdType","line1","line2","city","state","postalCode","country","TaxRateResponse","rate","UserKeyResponse","AttachmentUploadDataResponse","attachmentId","cipherResponse","cipherMiniResponse","FolderResponse","SyncResponse","f","p","s","HtmlStorageLocation","AuditService","cryptoFunctionService","passwordLeaked","hashBytes","hash","toUpperCase","hashStart","substr","hashEnding","nativeFetch","Request","match","find","v","breachedAccounts","getHibpBreach","statusCode","limit","throttleKey","target","propertyKey","descriptor","originalMethod","allThrottles","throttles","get","getThrottles","argsThrottleKey","queue","Promise","resolve","reject","exec","onFinally","splice","indexOf","delete","size","apply","then","val","err","push","ServerConfigResponse","ThirdPartyServerConfigResponse","EnvironmentServerConfigResponse","ServerConfig","serverConfigData","getAgeInMilliseconds","getTime","isValid","expiresSoon","sequentialize","cacheKey","caches","cache","getCache","argsCacheKey","BaseEncryptedOrganizationKey","EncryptedOrganizationKey","ProviderEncryptedOrganizationKey","decrypt","decValue","rsaDecrypt","toData","providerKey","getProviderKey","decryptToBytes","CryptoService","encryptService","platformUtilService","setCryptoMasterKey","storeKey","keyHash","encKey","setDecryptedCryptoSymmetricKey","setEncryptedCryptoSymmetricKey","encPrivateKey","setDecryptedPrivateKey","setEncryptedPrivateKey","setOrgKeys","orgs","providerOrgs","encOrgKeyData","forEach","org","setDecryptedOrganizationKeys","setEncryptedOrganizationKeys","setProviderKeys","setDecryptedProviderKeys","setEncryptedProviderKeys","getKey","keySuffix","inMemoryKey","getCryptoMasterKey","symmetricKey","getKeyFromStorage","retrieveKeyFromStorage","validateKey","warning","clearSecretKeyStore","getKeyHash","compareAndUpdateKeyHash","storedKeyHash","localKeyHash","serverKeyHash","getEncKey","getEncKeyHelper","getPublicKey","inMemoryPublicKey","getPrivateKey","rsaExtractPublicKey","setPublicKey","decryptedPrivateKey","getDecryptedPrivateKey","getEncryptedPrivateKey","getFingerprint","keyFingerprint","userFingerprint","hkdfExpand","hashPhrase","getOrgKeys","decryptedOrganizationKeys","getDecryptedOrganizationKeys","getEncryptedOrganizationKeys","has","encOrgKey","fromData","decOrgKey","getOrgKey","orgKeys","getProviderKeys","decryptedProviderKeys","getDecryptedProviderKeys","encProviderKeys","getEncryptedProviderKeys","hasKey","hasKeyInMemory","hasKeyStored","getCryptoMasterKeyAuto","hasCryptoMasterKeyBiometric","hasEncKey","getEncryptedCryptoSymmetricKey","clearKey","clearSecretStorage","clearStoredKey","setCryptoMasterKeyAuto","setCryptoMasterKeyBiometric","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","keysToClear","all","clearOrgKeys","clearProviderKeys","clearPinProtectedKey","setEncryptedPinProtected","clearKeys","toggleKey","makeKey","salt","pbkdf2","saltHash","argon2","makeKeyFromPin","pin","protectedKeyCs","pinProtectedKey","getEncryptedPinProtected","pinKey","makePinKey","makeShareKey","shareKey","randomBytes","rsaEncrypt","keyPair","rsaGenerateKeyPair","encrypt","stretchKey","makeSendKey","keyMaterial","sendKey","hkdf","hashPurpose","makeEncKey","theKey","getKeyForUserEncryption","buildEncKey","remakeEncKey","plainValue","encryptToBytes","encBytes","encValue","privateKeyValue","headerPieces","encPieces","encType","alg","encString","keyForEnc","decryptToUtf8","decryptFromBytes","encBuffer","randomNumber","min","max","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","Uint8Array","shouldStoreKey","keyB64","getVaultTimeout","getBiometricUnlock","supportsSecureStorage","getCryptoMasterKeyBiometric","newKey","macKey","minimumEntropy","entropyPerWord","log","numWords","hashArr","from","phrase","hashNumber","remainder","mod","divide","encKeyEnc","byteLength","getDecryptedCryptoSymmetricKey","decEncKey","encKeyCipher","encryptionType","symmetricCryptoKey","EncryptedObject","EncryptServiceImplementation","logMacFailures","plainBuf","encObj","aesEncrypt","iv","mac","macLen","resolveLegacyKey","fastParams","aesDecryptFastParameters","computedMac","hmacFast","macData","compareFast","logMacFailed","aesDecryptFast","encThing","macBytes","ivBytes","dataBytes","hmac","compare","aesDecrypt","decryptItems","item","msg","classInitializers","MultithreadEncryptServiceImplementation","clear$","Subject","info","worker","Worker","URL","restartTimeout","request","postMessage","stringify","firstValueFrom","fromEvent","pipe","filter","jsonItem","className","initializerKey","takeUntil","defaultIfEmpty","clear","next","terminate","clearTimeout","setTimeout","EventData","EventRequest","EventExport","event","message","humanReadableMessage","appIcon","appName","userName","userEmail","ip","FileUploadType","AzureFileUploadService","upload","renewalCallback","azureUploadBlob","azureUploadBlocks","urlObject","Headers","toUTCString","searchParams","toString","body","method","blobResponse","fetch","baseUrl","blockSize","getMaxBlockSize","blockIndex","numBlocks","blocksStaged","renewUrlIfNecessary","blockUrl","blockId","encodedBlockId","append","blockData","slice","blockHeaders","blockRequest","blockResponse","blockListUrl","blockListXml","expiry","isNaN","setTime","utfBlockId","blockIdList","xml","Version","year","month","day","Number","a","b","compareTo","BitwardenFileUploadService","encryptedFileName","encryptedFileData","apiCall","fd","FormData","blob","Blob","Buffer","filepath","contentType","OrganizationDomainSsoDetailsResponse","organizationIdentifier","ssoAvailable","ssoRequired","verifiedDate","OrganizationDomainResponse","txt","nextRunDate","jobRunCount","lastCheckedDate","OrganizationDomainSsoDetailsRequest","OrganizationUserResponse","accessAll","OrganizationUserUserDetailsResponse","OrganizationUserDetailsResponse","OrganizationUserResetPasswordDetailsReponse","resetPasswordKey","encryptedPrivateKey","OrganizationUserBulkResponse","OrganizationUserBulkRequest","ids","SsoType","OpenIdConnectRedirectBehavior","Saml2BindingType","Saml2NameIdFormat","Saml2SigningBehavior","SsoConfigApi","authority","metadataAddress","redirectBehavior","getClaimsFromUserInfoEndpoint","additionalScopes","additionalUserIdClaimTypes","additionalEmailClaimTypes","additionalNameClaimTypes","acrValues","expectedReturnAcrValue","spNameIdFormat","spOutboundSigningAlgorithm","spSigningBehavior","spMinIncomingSigningAlgorithm","spWantAssertionsSigned","spValidateCertificates","idpEntityId","idpBindingType","idpSingleSignOnServiceUrl","idpSingleLogoutServiceUrl","idpX509PublicCert","idpOutboundSigningAlgorithm","idpAllowUnsolicitedAuthnResponse","idpDisableOutboundLogoutRequests","idpWantAuthnRequestsSigned","view","OpenIdConnect","openId","Saml2","saml","idpAllowOutboundLogoutRequests","OrganizationSsoResponse","urls","SsoUrls","callbackPath","signedOutCallbackPath","spEntityId","spMetadataUrl","spAcsUrl","OrganizationApiKeyInformationResponse","keyType","OrganizationAutoEnrollStatusResponse","resetPasswordEnabled","KeysResponse","OrganizationKeysResponse","OrganizationResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","planType","maxAutoscaleSeats","OrganizationSubscriptionResponse","ResetPasswordPolicyOptions","autoEnrollEnabled","ProviderUserStatusType","ProviderUserType","Provider","canAccess","isProviderAdmin","Confirmed","canCreateOrganizations","canManageUsers","canAccessEventLogs","ProviderAdmin","SearchService","cipherService","i18nService","indexedEntityId","indexing","index","immediateSearchLocales","defaultSearchableMinLength","searchableMinLength","locale$","locale","registeredPipeline","lunr","Pipeline","registerFunction","normalizeAccentsPipelineFunction","clearIndex","isSearchable","query","normalizeSearchQuery","indexCiphers","builder","Builder","pipeline","add","ref","field","boost","extractor","subTitle","replace","login","uriExtractor","fieldExtractor","attachmentExtractor","getAllDecrypted","searchCiphers","results","trim","toLowerCase","every","r","getIndexForSearch","searchCiphersBasic","ciphersMap","searchResults","search","soWild","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","fields","deleted","isDeleted","hasUris","uris","some","loginUri","uri","searchSends","toLocaleLowerCase","sendsMatched","lowPriorityMatched","fileName","concat","joined","hasFields","join","hasAttachments","attachments","lastIndexOf","u","hostname","protocolIndex","queryIndex","substring","searchableFields","metadata","normalize","SendFileData","sizeName","SendTextData","hidden","SendData","Send","buildDomainModel","model","getCryptoService","cryptoKey","decryptObj","StorageLocation","ProviderData","State","globals","accounts","authenticatedAccounts","accountActivity","accountDeserializer","buildAccountMapFromJSON","jsonAccounts","FolderData","partialKeys","DDG_SHARED_KEY","storageService","secureStorageService","memoryStorageService","stateMigrationService","stateFactory","useAccountCache","accountsSubject","BehaviorSubject","accounts$","asObservable","activeAccountSubject","activeAccount$","activeAccountUnlockedSubject","activeAccountUnlocked$","hasBeenInited","isRecoveredSession","accountDiskCache","concatMap","getValue","needsMigration","migrate","setState","createGlobals","initAccountState","updateState","syncAccountFromDisk","storedActiveUser","activeUserId","pushAccounts","diskAccount","getAccountFromDisk","account","setAccountEnvironmentUrls","save","scaffoldNewAccountStorage","setLastActive","setActiveUser","clearDecryptedDataForActiveUser","clean","options","reconcileOptions","defaultInMemoryOptions","deAuthenticateAccount","dynamicallySetActiveUser","removeAccountFromDisk","removeAccountFromMemory","getTimeoutBasedStorageOptions","getAccount","saveAccount","getAddEditCipherInfo","addEditCipherInfo","setAddEditCipherInfo","getAlwaysShowDock","getGlobals","defaultOnDiskOptions","alwaysShowDock","setAlwaysShowDock","saveGlobals","apiKeyClientId","apiKeyClientSecret","getAutoConfirmFingerPrints","autoConfirmFingerPrints","setAutoConfirmFingerprints","getAutoFillOnPageLoadDefault","autoFillOnPageLoadDefault","setAutoFillOnPageLoadDefault","getBiometricAwaitingAcceptance","biometricAwaitingAcceptance","setBiometricAwaitingAcceptance","getBiometricFingerprintValidated","biometricFingerprintValidated","setBiometricFingerprintValidated","getBiometricText","biometricText","setBiometricText","biometricUnlock","setBiometricUnlock","getCanAccessPremium","getIsAuthenticated","getHasPremiumPersonally","getHasPremiumFromOrganization","setHasPremiumPersonally","hasPremiumFromOrganization","getOrganizations","isProviderUser","setHasPremiumFromOrganization","getClearClipboard","defaultOnDiskLocalOptions","clearClipboard","setClearClipboard","getCollapsedGroupings","collapsedGroupings","setCollapsedGroupings","getConvertAccountToKeyConnector","convertAccountToKeyConnector","setConvertAccountToKeyConnector","nextValue","defaultSecureStorageOptions","saveSecureStorageKey","getCryptoMasterKeyB64","setCryptoMasterKeyB64","getDecryptedCiphers","setDecryptedCiphers","getDecryptedCollections","setDecryptedCollections","getDecryptedPasswordGenerationHistory","setDecryptedPasswordGenerationHistory","getDecryptedPinProtected","setDecryptedPinProtected","getDecryptedPolicies","setDecryptedPolicies","getDecryptedSends","setDecryptedSends","getDefaultUriMatch","defaultUriMatch","setDefaultUriMatch","getDisableAddLoginNotification","disableAddLoginNotification","setDisableAddLoginNotification","getDisableAutoBiometricsPrompt","disableAutoBiometricsPrompt","setDisableAutoBiometricsPrompt","getDisableAutoTotpCopy","disableAutoTotpCopy","setDisableAutoTotpCopy","getDisableBadgeCounter","disableBadgeCounter","setDisableBadgeCounter","getDisableChangedPasswordNotification","disableChangedPasswordNotification","setDisableChangedPasswordNotification","getDisableContextMenuItem","disableContextMenuItem","setDisableContextMenuItem","getDisableFavicon","disableFavicon","setDisableFavicon","getDisableGa","disableGa","setDisableGa","getDismissedAutofillCallout","dismissedAutoFillOnPageLoadCallout","setDismissedAutofillCallout","getDontShowCardsCurrentTab","dontShowCardsCurrentTab","setDontShowCardsCurrentTab","getDontShowIdentitiesCurrentTab","dontShowIdentitiesCurrentTab","setDontShowIdentitiesCurrentTab","getDuckDuckGoSharedKey","setDuckDuckGoSharedKey","remove","setEmailVerified","getEnableAlwaysOnTop","accountPreference","enableAlwaysOnTop","globalPreference","setEnableAlwaysOnTop","getEnableAutoFillOnPageLoad","enableAutoFillOnPageLoad","setEnableAutoFillOnPageLoad","getEnableBiometric","enableBiometrics","setEnableBiometric","getEnableBrowserIntegration","enableBrowserIntegration","setEnableBrowserIntegration","getEnableBrowserIntegrationFingerprint","enableBrowserIntegrationFingerprint","setEnableBrowserIntegrationFingerprint","getEnableCloseToTray","enableCloseToTray","setEnableCloseToTray","getEnableDuckDuckGoBrowserIntegration","enableDuckDuckGoBrowserIntegration","setEnableDuckDuckGoBrowserIntegration","getEnableFullWidth","enableFullWidth","setEnableFullWidth","getEnableMinimizeToTray","enableMinimizeToTray","setEnableMinimizeToTray","getEnableStartToTray","enableStartToTray","setEnableStartToTray","getEnableTray","enableTray","setEnableTray","getEncryptedCiphers","defaultOnDiskMemoryOptions","setEncryptedCiphers","getEncryptedCollections","setEncryptedCollections","getEncryptedFolders","setEncryptedFolders","getEncryptedPasswordGenerationHistory","setEncryptedPasswordGenerationHistory","getEncryptedPolicies","setEncryptedPolicies","getEncryptedSends","setEncryptedSends","getEntityId","entityId","setEntityId","getEntityType","entityType","setEntityType","getEnvironmentUrls","getGlobalEnvironmentUrls","setEnvironmentUrls","getEquivalentDomains","setEquivalentDomains","getEventCollection","eventCollection","setEventCollection","getEverBeenUnlocked","everBeenUnlocked","setEverBeenUnlocked","getForcePasswordReset","setForcePasswordReset","getInstalledVersion","installedVersion","setInstalledVersion","getKdfConfig","setKdfConfig","getKdfType","setKdfType","getLastActive","getLastSync","lastSync","setLastSync","getLocalData","localData","setLocalData","getLocale","setLocale","getMainWindowSize","mainWindowSize","setMainWindowSize","getMinimizeOnCopyToClipboard","minimizeOnCopyToClipboard","setMinimizeOnCopyToClipboard","getNeverDomains","neverDomains","setNeverDomains","getNoAutoPromptBiometrics","noAutoPromptBiometrics","setNoAutoPromptBiometrics","getNoAutoPromptBiometricsText","noAutoPromptBiometricsText","setNoAutoPromptBiometricsText","getOpenAtLogin","openAtLogin","setOpenAtLogin","getOrganizationInvitation","organizationInvitation","setOrganizationInvitation","setOrganizations","getPasswordGenerationOptions","passwordGenerationOptions","setPasswordGenerationOptions","getUsernameGenerationOptions","usernameGenerationOptions","setUsernameGenerationOptions","getGeneratorOptions","generatorOptions","setGeneratorOptions","getProtectedPin","protectedPin","setProtectedPin","getProviders","getRememberedEmail","rememberedEmail","getSecurityStamp","setSecurityStamp","getSettings","setSettings","getSsoCodeVerifier","ssoCodeVerifier","setSsoCodeVerifier","getSsoOrgIdentifier","ssoOrganizationIdentifier","setSsoOrganizationIdentifier","getSsoState","ssoState","setSsoState","getTheme","setTheme","setUsesKeyConnector","vaultTimeout","setVaultTimeout","getVaultTimeoutAction","accountVaultTimeoutAction","globalVaultTimeoutAction","setVaultTimeoutAction","getApproveLoginRequests","approveLoginRequests","setApproveLoginRequests","getStateVersion","setStateVersion","getWindow","setWindow","setServerConfig","getServerConfig","getAvatarColor","setAvatarColor","getActivateAutoFillOnPageLoadFromPolicy","activateAutoFillOnPageLoadFromPolicy","setActivateAutoFillOnPageLoadFromPolicy","getSMOnboardingTasks","smOnboardingTasks","setSMOnboardingTasks","useMemory","storageLocation","getGlobalsFromMemory","useDisk","getGlobalsFromDisk","saveGlobalsToMemory","saveGlobalsToDisk","useSecureStorage","getAccountFromMemory","getUserIdFromMemory","cachedAccount","htmlStorageLocation","Local","setDiskCache","Memory","Both","Disk","saveAccountToMemory","saveAccountToDisk","deleteDiskCache","deepClone","scaffoldNewAccountLocalStorage","scaffoldNewAccountSessionStorage","scaffoldNewAccountMemoryStorage","storedAccount","pruneInMemoryAccounts","requestedOptions","defaultOptions","Session","getActiveUserIdFromStorage","removeAccountFromLocalStorage","resetAccount","removeAccountFromSessionStorage","removeAccountFromSecureStorage","persistentAccountInformation","timeoutAction","deserializer","stateUpdater","updatedState","withPrototypeForArrayMembers","memberConstructor","memberConverter","originalResult","String","prototype","getOwnPropertyDescriptors","withPrototypeForObjectValues","valuesConstructor","valuesConverter","entries","v1Keys","autoConfirmFingerprints","enableBiometric","encOrgKeys","encPrivate","history","lastActive","ssoIdentifier","stamp","usesConnector","v1KeyPrefixes","currentStateVersion","getCurrentStateVersion","Latest","migrateStateFrom1To2","Two","migrateStateFrom2To3","Three","migrateStateFrom3To4","Four","getAuthenticatedAccounts","migratedAccount","migrateAccountFrom4To5","setCurrentStateVersion","Five","migrateAccountFrom5To6","Six","clearV1Keys","clearingUserId","keyPrefix","defaultAccount","accountSettings","cryptoMasterKeyAuto","cryptoMasterKeyB64","cryptoMasterKeyBiometric","legacyEtmKey","authenticationStatus","decodedToken","authenticatedUserIds","encryptedOrgKeys","newVersion","B32Chars","SteamChars","DecryptParameters","SyncNotifierService","SortedCiphersCache","comparator","sortedCiphersByUrl","timeouts","isCached","addCiphers","sort","Ciphers","resetTimer","getLastUsed","getLastLaunched","getNext","updateLastUsedIndex","lastUsedIndex","cipher","lastLaunched","x","y","getNextIndex","CipherBulkMoveRequest","folderId","CipherBulkRestoreRequest","CipherBulkShareRequest","CipherPartialRequest","favorite","CipherShareRequest","CipherService","settingsService","fileUploadService","searchService","sortedCiphersCache","sortCiphersByLastUsed","getDecryptedCipherCache","setDecryptedCipherCache","clearCache","clearDecryptedCiphersState","originalCipher","existingCipher","passwordHistory","ph","lastUsedDate","passwordRevisionDate","existingHiddenFields","hiddenFields","ef","matchedField","reprompt","edit","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","promises","encAttachments","attachment","promise","fieldsModel","self","encFields","reduce","encField","encryptField","fieldModel","linkedId","phModels","encPhs","encPh","encryptPasswordHistory","phModel","getAll","reindexCiphers","userKey","grouped","agg","decCiphers","groupedCiphers","flat","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","folder","getAllDecryptedForUrl","includeOtherTypes","defaultMatch","eqDomainsPromise","settings$","matches","eqDomain","matchingDomains","deletedDate","domainUrlHost","urlHost","RegExp","test","getAllFromApiForOrganization","getCiphersOrganization","cr","getLastUsedForUrl","autofillOnPageLoad","getCipherForUrl","getLastLaunchedForUrl","getNextCipherForUrl","updateLastUsedIndexForUrl","updateLastUsedDate","ciphersLocalData","decryptedCipherCache","cached","updateLastLaunchedDate","saveNeverDomain","createWithServer","postCipherCreate","postCipher","upsert","updateWithServer","putCipher","putPartialCipher","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","putShareCipher","shareManyWithServer","encCiphers","putShareCiphers","toCipherData","saveAttachmentWithServer","unencryptedFile","admin","reader","FileReader","readAsArrayBuffer","onload","evt","cData","saveAttachmentRawWithServer","onerror","filename","encFileName","dataEncKey","encData","fileSize","adminRequest","uploadDataResponse","postCipherAttachment","uploadCipherAttachment","getSingleMessage","legacyServerAttachmentFileUpload","postCipherAttachmentAdminLegacy","postCipherAttachmentLegacy","saveCollectionsWithServer","putCipherCollections","clearEncryptedCiphersState","moveManyWithServer","putMoveCiphers","deleteWithServer","deleteCipher","deleteManyWithServer","deleteManyCiphers","deleteAttachment","deleteAttachmentWithServer","deleteCipherAttachment","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","collator","localeCompare","softDelete","setDeletedDate","softDeleteWithServer","putDeleteCipher","softDeleteManyWithServer","putDeleteManyCiphers","restore","clearDeletedDate","restoreWithServer","putRestoreCipher","restoreManyWithServer","putRestoreManyCiphers","restores","attachmentView","attachmentResponse","encBuf","decBuf","postShareCipherAttachment","theProp","theObj","modelProp","totp","secureNote","card","cardholderName","brand","expMonth","expYear","firstName","middleName","lastName","address1","address2","address3","company","phone","ssn","passportNumber","licenseNumber","lastUsed","autofillOnPageLoadDefault","clearSortedCiphers","OrganizationData","SyncService","folderService","collectionService","policyService","sendService","providerService","folderApiService","organizationService","logoutCallback","syncInProgress","fullSync","forceSync","allowThrowOnError","syncStarted","syncCompleted","needsSync","needsSyncing","refreshIdentityToken","getSync","syncProfile","syncFolders","syncCollections","syncCiphers","syncSends","syncSettings","syncPolicies","syncUpsertFolder","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","getFullCipherDetails","syncDeleteCipher","syncUpsertSend","localSend","remoteSend","getSend","sendId","syncDeleteSend","successfully","getAccountRevisionDate","userNeedsMigration","setConvertAccountRequired","removeConvertAccountRequired","eqDomains","global","modalRef","showPassword","togglePassword","submit","close","showToast","modalService","component","protectedFields","showPasswordPrompt","open","allowMultipleModals","onClosedPromise","BroadcasterService","subscribers","messageCallback","unsubscribe","ThemeBuilder","configuredTheme","systemTheme","effectiveTheme","updateSystemTheme","updateConfiguredTheme","ThemingService","document","_theme","theme$","monitorThemeChanges","getSystemTheme","monitorConfiguredThemeChanges","monitorSystemThemeChanges","documentElement","classList","matchMedia","JslibServicesModule","useValue","useFactory","translationLocale","deps","navigator","language","expired","useClass","makeAndGetAppId","getAnonymousAppId","existingId","guid","pushNotificationSubject","logInStrategy","strategy","clearState","saveState","logOut","callback","authingWithUserApiKey","authingWithSso","authingWithPassword","authingWithPasswordless","getAuthStatus","preloginResponse","postPrelogin","getPushNotifcationObs$","passwordlessLogin","pubKey","encryptedKey","encryptedMasterPassword","putAuthRequest","startSessionTimeout","clearSessionTimeout","sessionTimeout","P","injector","_folders","_folderViews","folders$","folderViews$","unlocked","updateObservables","getAllFromState","getFromState","getAllDecryptedFromState","values","decryptFolders","updates","cId","foldersMap","decryptFolderPromises","decryptedFolders","noneFolder","postFolder","putFolder","deleteFolder","accountService","deleteAccount","verification","verificationRequest","buildRequest","_avatarUpdate$","avatarUpdate$","loadColorFromState","color","pushUpdate","putAvatar","collection","decryptMany","decCollections","decryptedCollections","getAllNested","nodes","collectionCopy","getNested","urlsSubject","scimUrl","setUrlsFromStorage","hasBaseUrl","notificationsUrl","getWebVaultUrl","webVaultUrl","getSendUrl","getIconsUrl","iconsUrl","getApiUrl","apiUrl","getIdentityUrl","identityUrl","getEventsUrl","eventsUrl","getScimUrl","envUrls","setUrls","formatUrl","scim","getUrls","isCloud","isSelfHosted","getCode","period","digits","keyB32","isOtpAuth","isSteamAuth","params","digitParams","periodParam","algParam","epoch","timeHex","leftPad","decToHex","floor","timeBytes","keyBytes","b32ToBytes","sign","offset","binary","otp","fullCode","trunc","getTimeInterval","l","b32ToHex","cleanedInput","bits","hex","byteIndex","charAt","chunk","signature","customUserAgent","isWebClient","isDesktopClient","Accept","identityToken","getClientType","qsStringify","getCredentials","responseJson","isJsonResponse","TwoFactorProviders2","HCaptcha_SiteKey","doAuthRefresh","postAuthRequest","getAuthResponse","path","getAuthRequest","getAuthRequests","L","getLastAuthRequest","activeRequests","m","getProfile","getUserSubscription","getTaxInfo","putProfile","putTaxInfo","postEmailToken","postEmail","postPassword","setPassword","postSetKeyConnectorKey","postSecurityStamp","postPasswordHint","postRegister","postPremium","postIapCheck","postReinstatePremium","postCancelPremium","postAccountStorage","postAccountPayment","postAccountLicense","postAccountKey","postAccountVerifyEmail","postAccountVerifyEmailToken","postAccountVerifyPassword","postAccountRecoverDelete","postAccountRecoverDeleteToken","postAccountKdf","deleteSsoUser","getSsoUserIdentifier","postUserApiKey","postUserRotateApiKey","putUpdateTempPassword","postConvertToKeyConnector","getUserBillingHistory","getUserBillingPayment","postSendAccess","getSendFileDownloadData","getSends","postSend","postFileTypeSend","renewSendFileUploadUrl","fileId","postSendFile","postSendFileLegacy","putSend","putSendRemovePassword","deleteSend","getCipher","getCipherAdmin","postCipherAdmin","putCipherAdmin","deleteCipherAdmin","deleteManyCiphersAdmin","putCipherCollectionsAdmin","postPurgeCiphers","putDeleteCipherAdmin","putDeleteManyCiphersAdmin","putRestoreCipherAdmin","getAttachmentData","emergencyAccessId","deleteCipherAttachmentAdmin","renewAttachmentUploadUrl","postAttachmentFile","getCollectionAccessDetails","getUserCollections","getCollections","getManyCollectionsWithAccessDetails","getCollectionUsers","dr","postCollection","putCollection","putCollectionUsers","deleteCollection","deleteManyCollections","deleteCollectionUser","getGroupUsers","putGroupUsers","deleteGroupUser","getPlans","postPublicImportDirectory","getTaxRates","getSettingsDomains","putSettingsDomains","getTwoFactorProviders","getTwoFactorOrganizationProviders","getTwoFactorAuthenticator","getTwoFactorEmail","getTwoFactorDuo","getTwoFactorOrganizationDuo","getTwoFactorYubiKey","getTwoFactorWebAuthn","getTwoFactorWebAuthnChallenge","getTwoFactorRecover","putTwoFactorAuthenticator","putTwoFactorEmail","putTwoFactorDuo","putTwoFactorOrganizationDuo","putTwoFactorYubiKey","putTwoFactorWebAuthn","deviceResponse","rawId","btoa","getClientExtensionResults","AttestationObject","attestationObject","clientDataJson","clientDataJSON","deleteTwoFactorWebAuthn","putTwoFactorDisable","putTwoFactorOrganizationDisable","postTwoFactorRecover","postTwoFactorEmailSetup","postTwoFactorEmail","getDeviceVerificationSettings","putDeviceVerificationSettings","getKnownDevice","getEmergencyAccessTrusted","getEmergencyAccessGranted","getEmergencyAccess","getEmergencyGrantorPolicies","putEmergencyAccess","deleteEmergencyAccess","postEmergencyAccessInvite","postEmergencyAccessReinvite","postEmergencyAccessAccept","postEmergencyAccessConfirm","postEmergencyAccessInitiate","postEmergencyAccessApprove","postEmergencyAccessReject","postEmergencyAccessTakeover","postEmergencyAccessPassword","postEmergencyAccessView","getCloudCommunicationsEnabled","getOrganizationConnection","createOrganizationConnection","updateOrganizationConnection","organizationConnectionId","deleteOrganizationConnection","postProviderSetup","getProvider","putProvider","getProviderUsers","getProviderUser","postProviderUserInvite","postProviderUserReinvite","postManyProviderUserReinvite","postProviderUserBulkConfirm","deleteManyProviderUsers","postProviderUserAccept","postProviderUserConfirm","postProviderUsersPublicKey","putProviderUser","deleteProviderUser","getProviderClients","postProviderAddOrganization","postProviderCreateOrganization","deleteProviderOrganization","getEvents","end","addEventParameters","getEventsCipher","getEventsOrganization","getEventsOrganizationUser","getEventsProvider","getEventsProviderUser","postEventsCollect","authHeader","getActiveBearerToken","Authorization","getUserPublicKey","postBitPayInvoice","postSetupPayment","getUserKeyFromKeyConnector","handleError","postUserKeyToKeyConnector","getKeyConnectorAlive","getOrganizationExport","getApplicationVersionNumber","preValidateSso","encodeURIComponent","postCreateSponsorship","sponsoredOrgId","isSelfHost","getSponsorshipSyncStatus","deleteRevokeSponsorship","sponsoringOrganizationId","deleteRemoveSponsorship","sponsoringOrgId","postPreValidateSponsorshipToken","sponsorshipToken","postRedeemSponsorship","postResendSponsorshipOffer","doRefreshToken","doApiTokenRefresh","deviceRequest","authed","hasResponse","alterHeaders","pathParts","requestUrl","requestInit","responseType","responseIsJson","tokenError","isTextResponse","Message","typeHeader","azureFileUploadService","bitwardenFileUploadService","uploadSendFile","uploadData","Direct","Azure","_settings","ed","setVaultTimeoutOptions","action","currentAction","isPinLockSet","isBiometricLockSet","policyAppliesToUser","policy","vaultTimeoutSettingsService","lockedCallback","loggedOutCallback","inited","checkOnInterval","startCheck","checkVaultTimeout","setInterval","isViewOpen","shouldLock","executeTimeoutAction","lock","pinSet","authStatus","vaultTimeoutSeconds","getExport","format","getEncryptedExport","getDecryptedExport","getPasswordProtectedExport","clearText","encKeyValidation","encText","jsonDoc","passwordProtected","encKeyValidation_DO_NOT_EDIT","getOrganizationEncryptedExport","getOrganizationDecryptedExport","getEventExport","getFileName","prefix","extension","getFullYear","padNumber","getMonth","getHours","getMinutes","getSeconds","decFolders","exportCiphers","buildCommonCipher","exportData","exportPromises","decCol","decCipher","collectionsMap","orgKey","num","width","padCharacter","numString","login_uri","login_username","login_password","login_totp","syncService","connected","inactive","reconnectTimer","signalrConnection","off","accessTokenFactory","processNotification","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","isAuthenticated","payloadUserId","UserId","myUserId","notificationId","random","win","crypto","subtle","wasmSupported","checkIfWasmSupported","algorithm","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","passwordArr","saltArr","pass","time","mem","hashLen","ArgonType","Argon2id","ikm","outputByteSize","hkdfParams","prk","infoBuf","infoArr","runningOkmLength","previousT","n","okm","md","valueBytes","toByteString","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","bytes","getBytes","rand","Uint32Array","putInt32","meta","encKeyByteString","macKeyByteString","encKeyB64","macKeyB64","parameters","dataBuffer","decipher","finish","output","rsaParams","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","arr","getRandomValues","buf","WebAssembly","instantiate","module","Module","of","Instance","cryptoFunctionservice","uploadEvents","req","clearEvents","eventUploadService","collect","eventType","uploadImmediately","orgIds","Set","_policies","policies$","decryptedPolicies","diskPolicies","call","masterPasswordPolicyOptions$","obsPolicies","enforcedOptions","filteredPolicies","currentPolicy","minComplexity","minLength","requireUpper","requireLower","requireNumbers","requireSpecial","policyAppliesToActiveUser$","policyType","policyFilter","checkPoliciesThatApplyToUser","evaluateMasterPassword","passwordStrength","newPassword","enforcedPolicyOptions","toLocaleUpperCase","getResetPasswordPolicyOptions","resetPasswordPolicyOptions","mapPoliciesFromToken","policiesResponse","isExcemptFromPolicies","organization","isExemptFromPolicies","policiesMap","policySet","getPolicy","getPolicies","getPoliciesByToken","getPoliciesByInvitedUser","getMasterPasswordPoliciesForInvitedUsers","putPolicy","fileData","passwordHash","encryptFileData","parseFile","decSends","saveWithServer","sendData","legacyServerSendFileUpload","removePasswordWithServer","loggedInUsingSso","requiredByOrganization","getManagingOrganization","userIsNotUsingKeyConnector","migrateUser","keyConnectorRequest","handleKeyConnectorError","userKeyResponse","keyArr","privKey","setPasswordRequest","getConvertAccountRequired","userVerificationApiService","requestClass","alreadyHashed","validateInput","verifyUser","postAccountVerifyOTP","postAccountRequestOTP","_organizations","organizations$","get$","organizationsMap","canManageSponsorships","hasOrganizations","getByIdentifier","getOrganizationUser","URLSearchParams","includeGroups","getOrganizationUserGroups","getAllUsers","includeCollections","getOrganizationUserResetPasswordDetails","postOrganizationUserInvite","postOrganizationUserReinvite","postManyOrganizationUserReinvite","postOrganizationUserAccept","postOrganizationUserConfirm","postOrganizationUsersPublicKey","postOrganizationUserBulkConfirm","putOrganizationUser","putOrganizationUserGroups","putOrganizationUserResetPasswordEnrollment","putOrganizationUserResetPassword","deleteOrganizationUser","deleteManyOrganizationUsers","revokeOrganizationUser","revokeManyOrganizationUsers","restoreOrganizationUser","restoreManyOrganizationUsers","getFormValidationErrors","controls","errors","control","controlErrors","keyError","controlName","errorName","getBilling","getSubscription","getLicense","getAutoEnrollStatus","createLicense","updatePayment","upgrade","updateSubscription","updateSeats","updateStorage","verifyBank","cancel","reinstate","leave","updateLicense","importDirectory","getOrCreateApiKey","getApiKeyInformation","organizationApiKeyType","rotateApiKey","updateTaxInfo","getKeys","updateKeys","getSso","updateSso","selfHostedSyncLicense","updateEnrollSecretsManager","_sync","sync$","configApiService","_serverConfig","serverConfig$","switchMap","timer","E","buildServerConfig","fetchServerConfig","showError","defaultErrorMessage","validationErrors","getAllMessages","_orgDomains$","orgDomains$","orgDomainId","orgDomain","copyDnsTxt","dnsTxt","copyToClipboard","orgDomains","existingOrgDomains","findIndex","existingOrgDomain","orgDomainIds","orgDomainService","getAllByOrgId","resultOrgDomain","getByOrgIdAndOrgDomainId","post","orgDomainReq","verify","getClaimedOrgDomainByEmail","MemoryStorageService","store","getBypassCache","PasswordRepromptComponent","PasswordRepromptService","BroadcasterMessagingService","broadcasterService","subscriber","arg","command","EventService","getDefaultDateFilters","setDate","toDateTimeLocalString","formatDateFilters","filterStart","filterEnd","getEventInfo","ev","EventOptions","appInfo","getAppInfo","getEventMessage","humanReadableMsg","formatCipherId","getShortId","formatCollectionId","formatGroupId","formatOrgUserId","formatPolicyId","p1","formatProviderUserId","formatProviderOrganizationId","formatSecretId","shortId","cipherInfo","makeAnchor","setAttribute","outerHTML","createElement","innerHTML","pad","norm","abs","HtmlStorageService","localStorage","getItem","sessionStorage","setItem","removeItem","SupportedTranslationLocales","ContainerService","attachToGlobal","bitwardenContainerService","getEncryptService","InitService","notificationsService","vaultTimeoutService","themingService","getBaseUrl","location","href","ModalService","componentFactoryResolver","applicationRef","el","modalOpen","setupHandlers","onCreated","first","modals","querySelectorAll","modal","show","shown","focus","closed","onClose","PolicyListService","addPolicies","AccountSettings","Account","StateService","FileDownloadBuilder","_request","blobOptions","fileType","blobData","downloadMethod","fileNameLower","endsWith","WebFileDownloadService","download","isSafari","createObjectURL","style","position","appendChild","click","removeChild","CoreModule","parentModule","initService","rememberEmail","systemLanguage","localesDirectory","getLocalesJson","supportedTranslationLocales","defaultLocale","localeNames","defaultMessages","localeMessages","Intl","Collator","numeric","sensitivity","loadMessages","p2","p3","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","content","replaceToken","replaceContent","_locale","ReplaySubject","_translationLocale","filePath","localesResult","migrationStateFrom1To2","RouterService","router","activatedRoute","titleService","previousUrl","undefined","currentUrl","child","firstChild","titleId","snapshot","rawTitle","updateUrl","doNotSaveUrl","newTitle","setTitle","setPreviousUrl","getPreviousUrl","ClientType","WebPlatformUtilsService","browserCache","userAgent","chrome","Web","isFirefox","isChrome","isEdge","isOpera","isVivaldi","isMacAppStore","launchUri","sameWindow","rel","getApplicationVersion","supportsWebAuthn","PublicKeyCredential","supportsDuo","showDialog","confirmText","cancelText","bodyIsHtml","iconClasses","bootstrapModal","querySelector","removeAttribute","iconHtmlStr","confirmed","heightAuto","buttonsStyling","icon","iconHtml","html","titleText","showCancelButton","cancelButtonText","showConfirmButton","confirmButtonText","onOpen","isDev","doc","clipboardData","setData","queryCommandSupported","textarea","textContent","copyEl","contains","select","execCommand","debug","console","warn","readFromClipboard","supportsBiometric","authenticateBiometric","getAutofillKeyboardShortcut","CoreOrganizationModule","OrganizationUserUpdateRequest","OrganizationUserInviteRequest","emails","OrganizationUserAdminView","UserAdminService","organizationUserService","userResponse","invite","hidePasswords","CollectionAdminService","collectionResponse","anyResponse","isCollectionAccessDetailsResponse","group","GroupRequest","OrganizationGroupBulkRequest","GroupService","deleteMany","groupIds","listResponse","gr","members","postGroup","putGroup","GroupResponse","GroupDetailsResponse","CollectionAccessSelectionView","CollectionAdminView","GroupView","OrganizationCreateModule","changedBusinessOwned","OrganizationInformationComponent","nameOnly","createOrganization","isProvider","acceptingSponsorship","OrganizationPermissionsGuard","canActivate","route","createUrlTree","isOwner","permissionsCallback","organizationPermissions","root","queryParamMap","queryParams","itemId","OrganizationRedirectGuard","customRedirect","autoRedirectCallback","redirectPath","loadEvents","EntityEventsComponent","eventService","userNamePipe","showUser","loading","loaded","orgUsersUserIdMap","orgUsersIdMap","defaultDates","load","transform","clearExisting","refreshPromise","morePromise","dates","entity","continuationToken","eventInfo","PoliciesModule","PolicyRequest","BasePolicy","display","BasePolicyComponent","policyResponse","loadData","patchValue","buildRequestData","policiesEnabledMap","DisableSendPolicy","DisableSendPolicyComponent","MasterPasswordPolicy","MasterPasswordPolicyComponent","formBuilder","showKeyConnectorInfo","passwordScores","PasswordGeneratorPolicy","PasswordGeneratorPolicyComponent","defaultType","useUpper","useLower","useNumbers","useSpecial","minNumbers","minSpecial","minNumberWords","capitalize","includeNumber","defaultTypes","PersonalOwnershipPolicy","PersonalOwnershipPolicyComponent","RequireSsoPolicy","RequireSsoPolicyComponent","singleOrgEnabled","ResetPasswordPolicy","ResetPasswordPolicyComponent","SendOptionsPolicy","SendOptionsPolicyComponent","disableHideEmail","SingleOrgPolicy","SingleOrgPolicyComponent","TwoFactorAuthenticationPolicy","TwoFactorAuthenticationPolicyComponent","PolicyEditComponent","policyApiService","cdr","onSavedPolicy","ngAfterViewInit","factory","resolveComponentFactory","policyComponent","policyFormRef","createComponent","instance","detectChanges","Enabled","formPromise","emit","PoliciesComponent","policyListService","parent","qParams","policyIdFromEvents","orgPolicy","orgPolicies","op","openViewRef","editModalRef","comp","OrganizationUpdateRequest","CountBasedLocalizationKey","singular","plural","count","OrganizationContentSummaryItem","localizationKeyOptions","localizationKey","OrganizationContentSummary","totalItemCount","itemCountByType","DeleteOrganizationComponent","organizationApiService","deleteOrganizationRequestType","organizationContentSummary","onSuccess","buildOrganizationContentSummary","organizationItems","cipherType","getOrganizationItemCountByType","getOrganizationItemLocalizationKeysByType","viewApiKey","AccountComponent","selfHosted","canManageBilling","canUseApi","orgShareKey","deleteOrganization","deleteModalRef","navigate","purgeVault","purgeModalRef","apiKeyModalRef","postKey","bind","grantType","apiKeyTitle","apiKeyWarning","apiKeyDescription","rotateApiKeyModalRef","isRotation","SettingsComponent","organization$","recoveryCode","manage","TwoFactorSetupComponent","tabbedHeader","duoComp","openModal","duoModalRef","onUpdated","updateStatus","filterProvider","routes","children","pathMatch","canManagePolicies","canAccessImportExport","canManageSso","canManageScim","loadChildren","OrganizationImportExportModule","OrganizationSettingsRoutingModule","OrganizationSettingsModule","findSortedIndex","sortedArray","compareFn","low","high","mid","FormSelectionList","controlFactory","allItems","selectedItems","deselectedItems","formArray","selectItems","initialValue","selectItem","deselectItems","deselectItem","deselectAll","selectedOption","sortedInsertIndex","newControl","insert","deselectedOption","removeAt","populateItems","selectedItem","nextId","MultiSelectComponent","ngControl","removeSelectedItems","searchInputId","onItemsConfirmed","keyDown","isOpen","preventDefault","stopPropagation","valueAccessor","placeholder","loadingText","isSelected","selected","onDropdownClosed","updatedBaseItems","baseItems","notifyOnChange","notifyOnTouched","onBlur","ariaDescribedBy","_ariaDescribedBy","searchInput","nativeElement","labelForId","required","_required","hasValidator","hasError","touched","UserTypePipe","unknownText","handleBlur","selectionList","PermissionMode","AccessSelectorComponent","destroy$","permissionControl","initialPermission","fg","permission","readonly","accessAllItems","permissionMode","Edit","_itemComparator","formGroup","itemType","permissionList","perm","labelId","_permissionMode","Hidden","getRawValue","itemIcon","notifyOnTouch","pauseChangeNotification","ngOnDestroy","complete","permissionLabelId","accessAllLabelId","canEditItemPermission","listName","labelName","CollectionPermission","AccessItemType","convertToPermission","ViewExceptPass","View","EditExceptPass","convertToSelectionView","hidePassword","AccessSelectorModule","OptionComponent","_disabled","SelectComponent","classes","toArray","findSelectedOption","selectedValue","option","CollectionDialogTabType","CollectionDialogResult","CollectionDialogComponent","dialogRef","groupService","characters","nestOptions","accessItems","char","forbiddenCharacters","access","markAllAsTouched","invalid","tabIndex","Access","collectionView","editMode","Saved","Deleted","initialTab","Info","shareReplay","refCount","bufferSize","groups$","combineLatest","collectionDetails","mapGroupToAccessItemView","mapUserToAccessItemView","nameParts","parseName","deletedParentName","accessSelections","selection","mapToAccessSelections","parentCollectionId","Canceled","role","openCollectionDialog","dialogService","SelectModule","CollectionDialogModule","SharedOrganizationModule","HasPremiumGuard","routerState","userHasPremium","BreachReportComponent","auditService","checkedUsername","ReportBreach","ReportExposedPasswords","ReportInactiveTwoFactor","ReportReusedPasswords","ReportUnsecuredWebsites","ReportWeakPasswords","ReportType","reports","ExposedPasswords","ReusedPasswords","WeakPasswords","UnsecuredWebsites","Inactive2fa","DataBreach","ReportsSharedModule","ReportsHomeComponent","reportRequiresPremium","variant","ReportsLayoutComponent","homepage","ReportsRoutingModule","ReportsModule","CipherReportComponent","requiresPaid","passwordRepromptService","hasLoaded","setCiphers","selectCipher","repromptCipher","childComponent","cipherAddEditModalRef","onSavedCipher","onDeletedCipher","onRestoredCipher","checkAccess","ExposedPasswordsReportComponent","exposedPasswordMap","allCiphers","getAllCiphers","exposedPasswordCiphers","exposedCount","canManageCipher","InactiveTwoFactorReportComponent","services","cipherDocs","load2fa","inactive2faCiphers","docs","service","serviceData","documentation","additionalDomain","ReusedPasswordsReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","UnsecuredWebsitesReportComponent","unsecuredCiphers","WeakPasswordsReportComponent","passwordGenerationService","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","isUserNameNotEmpty","getCacheKey","hasUserName","userInput","atPosition","score","scoreKey","ReportVariant","ReportCardComponent","requiresPremium","ReportListComponent","StorageRequest","AdjustStorageComponent","storageGbPrice","onAdjusted","onCanceled","storageAdjustment","storageGbAdjustment","paymentFailed","paymentComponent","handleStripeCardPayment","relativeTo","adjustedStorageTotal","ApiKeyComponent","TransactionType","BillingHistoryComponent","transactionType","billing","paymentMethodClasses","OrganizationCreateRequest","OrganizationUpgradeRequest","ProviderOrganizationCreateRequest","clientOwnerEmail","organizationCreateRequest","changedProduct","changedCountry","changedOwnedBusiness","OrganizationPlansComponent","showFree","showCancel","_product","_plan","onTrialBillingSuccess","productTypes","singleOrgPolicyAppliesToActiveUser","isInTrialFlow","discount","businessOwned","premiumAccessAddon","additionalStorage","additionalSeats","plans","addValidators","policyAppliesToActiveUser","singleOrgPolicyBlock","selectedPlan","selectedPlanInterval","selectableProducts","validPlans","Free","familyPlan","selectablePlans","additionalStoragePriceMonthly","seatPriceMonthly","additionalStorageTotal","seatTotal","subtotal","subTotal","freeTrial","taxCharges","taxComponent","taxRate","total","paymentDesc","hideBank","taxInfo","changeMethod","doSubmit","collectionCt","createSelfHosted","createCloudHosted","updateOrganization","subLabelText","billingSubLabelText","additionalStorageGb","billingAddressCountry","billingAddressPostalCode","collectionName","tokenResult","createPaymentToken","paymentToken","includeTaxId","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","providerRequest","files","getElementById","price","VerifyBankRequest","BitPayInvoiceRequest","AddCreditComponent","showOptions","onAdded","ppLoading","payPalConfig","ppButtonFormAction","ppButtonBusinessId","creditAmount","ppButtonCustomField","subject","returnUrl","ppButtonFormRef","credit","creditAmountNumber","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","PaymentRequest","AdjustPaymentComponent","taxInfoComponent","changeCountry","addCredit","closeAddCredit","changePayment","closePayment","submitTaxInfo","PaymentMethodComponent","firstLoaded","showAdjustPayment","showAddCredit","verifyBankForm","amount1","amount2","forOrganization","billingPromise","orgPromise","paymentSourceInApp","verifyBankPromise","taxFormPromise","isCreditBalance","creditOrBalance","headerClass","paymentSourceClasses","bank","PaymentComponent","showMethods","hidePaypal","hideCredit","trialFlow","routing_number","account_number","account_holder_name","account_holder_type","currency","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","src","async","Stripe","elements","setStripeElement","btScript","StripeElementStyle","fontFamily","fontSize","fontSmoothing","StripeElementClasses","empty","subscribeToTheme","head","btStylesheet","braintree","dropin","authorization","container","paymentOptionPriority","paypal","flow","buttonStyle","label","shape","tagline","createErr","requestPaymentMethod","nonce","handleCardSetup","setupIntent","payment_method","createToken","successCallback","handleCardPayment","paymentIntent","mount","getComputedStyle","getPropertyValue","borderColor","PurgeVaultComponent","TaxInfoComponent","onCountryChanged","pristine","taxRates","localTaxRate","getTaxInfoRequest","hasChanged","UpdateLicenseComponent","updatePromise","ProductSwitcherModule","ChangeKdfModule","LooseComponentsModule","BitwardenToast","toastrService","toastPackage","BitwardenToastGlobalConfig","toastComponent","BitwardenToastModule","ngModule","default","numberFormats","Visa","cardLength","blocks","Mastercard","Maestro","Discover","JCB","UnionPay","Amex","Other","CreditCardNumberPipe","creditCardNumber","rules","matchingRule","chunks","JslibModule","forRoot","maxOpened","autoDismiss","closeButton","AsyncActionsModule","AvatarModule","BadgeListModule","ButtonModule","CalloutModule","ColorPasswordModule","DialogModule","IconModule","TableModule","TabsModule","ToggleGroupModule","TypographyModule","SharedModule","NotPremiumDirective","templateRef","viewContainer","createEmbeddedView","premiumRequired","PremiumBadgeComponent","eventCollectionService","addFieldType","linkedFieldOptions","fieldType","addFieldTypeOptions","addFieldLinkedTypeOption","ngOnChanges","changes","thisCipherType","setLinkedFieldOptions","firstChange","resetCipherLinkedFields","addField","newField","removeField","toggleFieldValue","showValue","trackByFunction","drop","previousIndex","currentIndex","linkedFieldOption","i18nKey","TrueFalseValueDirective","elementRef","renderer","trueValue","falseValue","propagateChange","_","onHostChange","checked","setProperty","copy","AddEditCustomFieldsComponent","cloneMode","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","onGenerateUsername","showCardNumber","showCardCode","ownershipOptions","currentDate","allowPersonal","canUseReprompt","componentName","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","uriMatchOptions","autofillOnPageLoadOptions","writeableCollections","loadCollections","personalOwnershipPolicyAppliesToActiveUser","myEmail","defaultOwnerId","loadedAddEditCipherInfo","loadAddEditCipherInfo","loadCipher","organizationChanged","previousCipherId","encryptCipher","saveCipher","addUri","removeUri","getCardExpMonthDisplay","share","editCollections","deletePromise","restorePromise","restoreCipher","generateUsername","generatePassword","toggleCardNumber","toggleCardCode","toggleUriOptions","loginUriMatchChanged","organizationUseTotp","checkPassword","checkPasswordPromise","repromptChanged","loadedSavedInfo","togglePasswordCount","upgradeOrganization","launch","viewHistory","toggleFavorite","AddEditComponent","totpService","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","viewOnly","showPasswordCount","passwordRevisionDisplayDate","cleanUp","canAccessPremium","showTotp","totpUpdateCode","totpTick","totpInterval","canLaunch","typeI18nKey","aType","getOptions","showGetPremium","clearInterval","totpCode","half","totpCodeFormatted","allowOwnershipAssignment","intervalSeconds","totpSec","totpDash","totpLow","canEditAnyCollection","RegisterFormModule","TwoFactorProviderRequest","TwoFactorBaseComponent","twoFactorProviderType","auth","authResponse","hashedSecret","verificationType","enableFunction","buildRequestModel","UpdateTwoFactorDuoRequest","TwoFactorDuoComponent","processResponse","ikey","skey","UpdateTwoFactorAuthenticatorRequest","TwoFactorAuthenticatorComponent","qrScript","QRious","element","UpdateTwoFactorEmailRequest","sendEmail","TwoFactorEmailComponent","emailPromise","sentEmail","print","TwoFactorRecoveryComponent","w","write","onafterprint","formatString","UpdateTwoFactorWebAuthnDeleteRequest","UpdateTwoFactorWebAuthnRequest","readKey","TwoFactorWebAuthnComponent","ngZone","keyIdAvailable","keysConfiguredCount","webAuthnResponse","removePromise","challengePromise","readDevice","webAuthnChallenge","resetWebAuthn","run","webAuthnListening","webAuthnError","listening","configured","UpdateTwoFactorYubioOtpRequest","TwoFactorYubiKeyComponent","disablePromise","existingKey","padRight","str","character","showPolicyWarning","twoFactorAuthPolicyAppliesToActiveUser","evaluatePolicies","authenticatorModalRef","yubikeyModalRef","emailModalRef","webAuthnModalRef","recoveryModalRef","TwoFactorVerifyComponent","onAuthed","BroadcasterSubscriptionId","AppComponent","sanitizer","routerService","lastActivity","idleTimer","isIdle","lang","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","redirect","setFullWidth","idleStateChanged","sanitize","enableHtml","trustedHtml","timeOut","EmergencyAccessAcceptRequest","BaseAcceptComponent","requiredParameters","failedShortMessage","failedMessage","errorMessage","authedHandler","unauthedHandler","AcceptEmergencyComponent","actionPromise","OrganizationUserAcceptRequest","AcceptOrganizationComponent","prepareOrganizationInvitation","prepareAcceptRequest","performResetPasswordAutoEnroll","policyList","orgName","PasswordHintRequest","loginService","successRoute","onSuccessfulSubmit","HintComponent","pinLock","webVaultHostname","invalidPinAttempts","handlePinRequiredUnlock","handleMasterPasswordRequiredUnlock","unlockBiometric","biometricLock","doContinue","input","isStable","onStable","take","doUnlockWithPin","failed","setKeyAndContinue","doUnlockWithMasterPassword","passwordValid","decPin","hideInput","vaultUrl","LockComponent","navigateByUrl","AuthRequestType","PasswordLogInCredentials","SsoLogInCredentials","PasswordlessLogInCredentials","PasswordlessCreateAuthRequest","fingerprintPhrase","CaptchaIFrame","iframeId","errorCallback","infoCallback","parseFunction","parseMessage","connectorLink","sendMessage","iframe","contentWindow","base64Encode","fromCharCode","cleanup","removeEventListener","createParams","initComponent","addEventListener","validMessage","origin","parsedMessage","height","CaptchaProtectedComponent","setupCaptcha","captcha","showCaptcha","handleCaptchaRequired","anonymousHubService","validationService","showResendNotification","twoFactorRoute","forcePasswordResetRoute","resendTimeout","getCurrentNavigation","confirmResponse","startPasswordlessLogin","buildAuthRequest","reqResponse","passwordlessRequest","requestId","buildLoginCredntials","loginResponse","onSuccessfulLoginTwoFactorNavigate","onSuccessfulLoginForceResetNavigate","setRememberEmailValues","onSuccessfulLogin","onSuccessfulLoginNavigate","authRequestKeyPair","fingerprint","AuthenticateAndUnlock","decMasterPasswordHash","LoginWithDeviceComponent","formValidationErrorService","validatedEmail","paramEmailSet","loggedEmail","selfHostedDomain","queryParamsEmail","errorText","getErrorToastMessage","setFormValues","clearValidators","updateValueAndValidity","valid","launchSsoBrowser","ssoRedirectUri","passwordOptions","uppercase","lowercase","numbers","special","codeVerifierHash","codeChallenge","webUrl","validateEmail","markAsTouched","toggleValidateEmail","getLoginWithDevice","reset","shift","errorTag","res","showLoginWithDevice","goToRegister","LoginComponent","showResetPasswordAutoEnrollWarning","showPasswordless","goAfterLogIn","resetPasswordPolicy","enforcedPasswordPolicyOptions","strengthResult","getPasswordStrengthUserInput","masterPasswordScore","policiesData","goToHint","DeleteRecoverRequest","RecoverDeleteComponent","TwoFactorRecoveryRequest","RecoverTwoFactorComponent","continuing","leaving","convert","RemovePasswordComponent","OrganizationUserResetPasswordEnrollmentRequest","SetPasswordRequest","minimumLength","strongPassword","setupSubmitActions","performSubmitActions","masterPasswordRetype","passwordStrengthResult","weakPassword","leakedPassword","getStrengthResult","getPasswordScoreText","syncLoading","hint","resetPasswordAutoEnroll","onSetPasswordSuccess","userEncKey","resetRequest","onSuccessfulChangePassword","confirmField","SetPasswordComponent","fileDownloadService","onUploadedAttachment","onDeletedAttachment","onReuploadedAttachment","deletePromises","reuploadPromises","hasUpdatedKey","fileEl","saveCipherAttachment","cipherDomain","downloading","canAccessAttachments","reuploadCipherAttachment","foundAttachment","a2","reupload","Window","EmergencyAccessAttachmentsComponent","showFixOldAttachments","EmergencyAddEditComponent","viewAttachments","EmergencyAccessViewComponent","attachmentsModalRef","oldKeyBuffer","keyEncrypted","oldEncKey","cipherData","EmergencyAccessStatusType","EmergencyAccessType","EmergencyAccessConfirmRequest","EmergencyAccessInviteRequest","EmergencyAccessUpdateRequest","EmergencyAccessAddEditComponent","onSaved","onDeleted","emergencyAccessType","waitTimes","emergencyAccess","waitTime","waitTimeDays","EmergencyAccessConfirmComponent","onConfirmed","dontAskAgain","publicKeyResponse","EmergencyAccessPasswordRequest","EmergencyAccessTakeoverComponent","onDone","takeoverResponse","newMasterPasswordHash","reinvite","confirm","approve","requestAccess","takeover","EmergencyAccessComponent","emergencyAccessStatusType","isOrganizationOwner","trustedContacts","grantedContacts","addEditModalRef","contact","updateUser","autoConfirm","doConfirmation","confirmModalRef","granteeId","removeGrantee","removeGrantor","RecoveryInitiated","RecoveryApproved","takeoverModalRef","HttpStatusCode","loggingIn","changePasswordRoute","checkState","getOrgIdentifierFromState","returnUri","includeUserIdentifier","initiateSsoFormPromise","authorizeUrl","buildAuthorizeUrl","userIdentifier","orgIdFromState","onSuccessfulLoginChangePasswordNavigate","stateSplit","checkStateSplit","SsoComponent","orgDomainApiService","handleGetClaimedDomainByEmailError","storedIdentifier","errorResponse","NotFound","cookie","WebAuthnIFrame","webAuthnNewTab","btnText","allow","webAuthnReady","providerType","selectedProviderType","webAuthnSupported","webAuthn","twoFactorEmail","loginRoute","webAuthnAllow","authing","needsLock","getDefaultProvider","cleanupWebAuthn","providerData","authWebAuthn","Host","sig_request","Signature","submit_callback","sig","Email","doToast","authRequestAccessCode","onProviderSelected","onRecoverSelected","getSupportedProviders","choose","recover","TwoFactorOptionsComponent","TwoFactorComponent","anotherMethod","twoFactorOptionsModal","PasswordRequest","currentMasterPassword","UpdatePasswordComponent","UpdateTempPasswordRequest","newPasswordHash","newEncKey","UpdateTempPasswordComponent","VerifyEmailRequest","VerifyEmailTokenComponent","VerifyDeleteRecoverRequest","VerifyRecoverDeleteComponent","ReferenceEventRequest","VerticalStep","subLabel","applyBorder","VerticalStepContentComponent","onSelectStep","selectStep","selectStepByIndex","VerticalStepperComponent","activeClass","isNextButtonHidden","steps","selectedIndex","isStepDisabled","completed","RegisterRequest","referenceData","InputsFieldMatch","matchTo","inputsMatchError","inputsDoesntMatchError","fieldMatchTo","fieldCtrl","fieldMatchToCtrl","setErrors","RegisterComponent","createdAccount","showTerms","showErrorSummary","confirmMasterPassword","validateInputsDoesntMatch","checkForBreaches","acceptPolicies","acceptPoliciesValidation","validator","validateFormInputsMatch","accountCreated","characterMinimumMessage","registerResponse","registerAccount","buildRegisterRequest","successful","captchaRequired","validateRegistration","passwordWeak","passwordLeak","orgInvite","BitErrorSummary","errorCount","getErrorCount","errorString","form","acc","dirty","untouched","RegisterFormComponent","referenceDataValue","queryParamEmail","LogoForbesComponent","LogoUSNewsComponent","EnterpriseContentComponent","TeamsContentComponent","ConfirmationDetailsComponent","BillingComponent","previousStep","orgInfoForm","stepBack","DefaultContentComponent","Enterprise1ContentComponent","Enterprise2ContentComponent","Teams1ContentComponent","Teams2ContentComponent","LogoCnetComponent","CnetEnterpriseContentComponent","CnetIndividualContentComponent","CnetTeamsContentComponent","AbmEnterpriseContentComponent","AbmTeamsContentComponent","billingSuccess","stepSelectionChange","navigateToOrgVault","navigateToOrgInvite","ValidOrgParams","ValidLayoutParams","TrialInitiationComponent","titleCasePipe","orgInfoSubLabel","orgLabel","billingSubLabel","layout","accountCreateOnly","useTrialStepper","trialFlowOrgs","teams","enterprise","families","routeFlowOrgs","free","individual","layouts","orgInfoFormGroup","validators","updateOn","referenceDataId","referenceId","pop","reference","setupFamilySponsorship","previouslySelectedIndex","verticalStepper","previous","HomeGuard","FrontendLayoutComponent","FooterComponent","ProductSwitcherContentComponent","products$","paramMap","routeOrg","smOrg","canAccessSecretsManager","products","pm","appRoute","marketingRoute","sm","bento","other","ProductSwitcherComponent","changeDetector","isEnabled","buttonType","DynamicAvatarComponent","accountUpdateService","border","color$","NavbarComponent","UserLayoutComponent","BreadcrumbsModule","OrganizationBadgeModule","PipesModule","CollectionBadgeModule","GroupBadgeModule","VaultFilterService","VaultFilterSharedModule","NestingDelimiter","_collapsedFilterNodes","collapsedFilterNodes$","getCollapsedFilterNodes","organizationTree$","buildOrganizationTree","_organizationFilter","filteredFolders$","combineLatestWith","filterFolders","folderTree$","buildFolderTree","collectionViews$","filteredCollections$","filterCollections","collectionTree$","buildCollectionTree","cipherTypeTree$","buildCipherTypeTree","reloadCollections","getCollectionNodeFromTree","setCollapsedFilterNodes","collapsedFilterNodes","setOrganizationFilter","expandOrgFilter","headNode","getOrganizationFilterHead","myVaultNode","getOrganizationFilterMyVault","orgCopy","node","myVault","hideOptions","buildTypeTree","array","storedCollections","getCollectionFilterHead","storedFolders","orgCiphers","oc","getFolderFilterHead","folderCopy","allTypeFilters","collectionAdminService","_collections","loadSubscriptions","noneCollection","VaultFilterModule","allowSelectNone","onSavedCollections","loadCipherCollections","selectedCollectionIds","saveCollections","selectAll","check","CollectionsComponent","canViewAllCollections","VaultFilter","collectionBreadcrumbs","isCollectionSelected","selectedCollectionNode","reverse","isUnassignedCollectionSelected","isMyVaultSelected","selectedOrganizationNode","isFavorites","selectedCipherTypeNode","cipherStatus","cipherTypeId","selectedFolderNode","resetFilter","resetOrganization","buildFilter","cipherPassesFilter","Unassigned","All","itemTypes","isRoutedVaultFilterItemType","RoutedVaultFilterBridge","routedFilter","legacyFilter","bridgeService","organizationIdParamType","RoutedVaultFilterService","onDestroy","filter$","unsafeType","createRoute","queryParamsHandling","RoutedVaultFilterBridgeService","routedVaultFilterService","legacyVaultFilterService","activeFilter$","collectionTree","folderTree","organizationTree","cipherTypeTree","isAdminConsole","createLegacyFilterForAdminConsole","createLegacyFilterForEndUser","commands","extras","AttachmentsComponent","EnrollMasterPasswordReset","toastStringRef","keyString","onFilterSelect","onAdd","toggleCollapse","onEdit","VaultFilterSectionComponent","vaultFilterService","injectors","section","data$","headerNode","headerInfo","header","filters","isOrganizationFilter","isAllVaultsSelected","activeFilter","isNodeSelected","filterNode","editInfo","addInfo","showAddButton","showAddLink","optionsInfo","divider","isCollapsed","createInjector","inject","OptionsInput","LinkSsoComponent","ngAfterContentInit","toggleResetPasswordEnrollment","unlinkSso","OrganizationOptionsComponent","allowEnrollmentChanges","showEnrolledStatus","searchTextChanged","onSearchTextChanged","onAddFolder","onEditFolder","isLoaded","searchText","applyOrganizationFilter","orgNode","applyTypeFilter","applyFolderFilter","folderNode","applyCollectionFilter","collectionNode","addFolder","editFolder","filtersList","searchPlaceholder","buildAllFilters","getDefaultFilter","typeFilter","builderFilter","organizationFilter","addOrganizationFilter","addTypeFilter","folderFilter","addFolderFilter","collectionFilter","addCollectionFilter","trashFilter","addTrashFilter","singleOrgPolicy","personalVaultPolicy","addAction","showHeader","isSelectable","excludeTypes","VaultFilterComponent","_organization","CollectionBulkDeleteRequest","BulkDeleteDialogResult","openBulkDeleteDialog","BulkDeleteDialogComponent","permanent","cipherIds","deleteCiphersAdmin","deleteCiphers","deleteCollections","deleteRequest","canDeleteAssignedCollections","canDeleteAnyCollection","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","accessEvents","searchPending","searchTimeout","_searchText","deletedFilter","applyFilter","reload","refresh","indexedCiphers","doSearch","rightClickCipher","addCipher","addCipherOptions","isSearching","Search","BulkMoveDialogResult","BulkMoveDialogComponent","Moved","BulkRestoreDialogResult","BulkRestoreDialogComponent","Restored","isChecked","BulkShareDialogResult","BulkShareDialogComponent","nonShareableCount","shareableCiphers","checkedCollectionIds","Shared","hasOldAttachments","allCollections","canSave","EllipsisPipe","completeWords","ellipsis","OrganizationNameBadgeComponent","avatarService","onOrganizationClicked","isMe","textColor","emitOnOrganizationClicked","GroupNameBadgeComponent","groupNames","selectedGroups","allGroups","GetCollectionNameFromIdPipe","CollectionNameBadgeComponent","shownCollections","showXMore","xMoreCount","GetOrgNameFromIdPipe","bulkMove","bulkShare","bulkRestore","editCollection","navigateCollection","checkRow","profileName","clone","editCipherCollections","loadMore","checkAll","bulkDelete","searchPipe","activeFilterChanged","onAttachmentsClicked","onShareClicked","onEditCipherCollectionsClicked","onCloneClicked","onOrganzationBadgeClicked","userHasPremiumAccess","noItemIcon","pageSizeLimit","isAllChecked","didScroll","currentPagedCiphersCount","currentPagedCollectionsCount","refreshing","pagedCiphers","pagedCollections","searchedCollections","_activeFilter","showAddNew","filteredCollections","isPaging","filteredCiphers","updateSearchedCollections","pageSpaceLeft","collectionsToAdd","searching","resetPaging","totalRows","deleteCipherWithServer","selectedIds","selectedCipherIds","dialog","lastValueFrom","selectedCiphers","displayTotpCopyButton","viewPassword","selectCount","canDeleteCollection","canEditCollection","tab","showMissingCollectionPermissionMessage","isProcessingAction","VaultItemsComponent","onEventsClicked","initOrganization","changeOrganization","loadCiphers","refreshCollections","selectedCollections","canEditAssignedCollections","tabType","isAdmin","BreadcrumbComponent","onClick","BreadcrumbsComponent","breadcrumbs","breadcrumbList","beforeOverflow","hasOverflow","overflow","afterOverflow","addCollection","VaultHeaderComponent","onCollectionChanged","activeOrganizationId","showFreeOrgUpgradeDialog","orgUpgradeSimpleDialogOpts","acceptButtonText","simpleDialog","openSimpleDialog","VaultComponent","routedVaultFilterBridgeService","changeDetectorRef","trashCleanupWarning","vaultItemsComponent","vaultFilterComponent","getCipherIdFromParams","canUseAdminCollections","editCipherId","refreshItems","filterSearchText","editCipherAttachments","madeAttachmentChanges","onClosed","currCollections","collectionsModalRef","editCipher","navigateToCipher","go","additionalComponentParameters","defaultComponentParameters","cloneCipher","viewEvents","eventsModalRef","replaceUrl","VaultRoutingModule","VaultModule","TabLinkComponent","_tabNavBar","routerLinkMatchOptions","matrixParams","paths","fragment","onKeyDown","tabItem","active","routerLinkActive","isActiveChange","updateActiveLink","TabNavBarComponent","keyManager","tabLabels","withHorizontalOrientation","withWrap","withHomeAndEnd","updateActiveItem","OrganizationSwitcherComponent","activeOrganization","OrganizationLayoutComponent","_destroy","mergeMap","canShowVaultTab","canShowSettingsTab","canShowMembersTab","canShowGroupsTab","canShowReportsTab","canShowBillingTab","getReportTabLabel","selectedChanged","filterSelected","EntityUsersComponent","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","allUsers","loadUsers","searchedUsers","scrollViewportStyle","selections","canCreate","pageSize","pagedCollectionsCount","canCreateNewCollections","decryptCollections","canViewAssignedCollections","assignedCollections","pagedLength","pagedSize","canEdit","canDelete","removeCollection","usersModalRef","entityName","GroupAddEditTabType","GroupAddEditDialogResultType","GroupAddEditComponent","ResultType","groupForm","groupView","formValue","orgCollections$","orgMembers$","groupDetails$","catchError","gc","toggleAllVisible","deleteAllSelected","GroupsComponent","ModalTabType","pagedGroupsCount","refreshGroups$","updateSearchedGroups","visibleGroups","pagedGroups","searchedGroups","tap","toCollectionMap","collectionMap","collectionNames","startingTabIndex","removeGroup","groupRow","groupsToDelete","deleteMessage","ManageComponent","MembersModule","OrganizationReportingModule","OrganizationBillingModule","OrganizationsRoutingModule","OrganizationModule","PlanSponsorshipType","AcceptFamilySponsorshipComponent","register","OrganizationSponsorshipRedeemRequest","FamiliesForEnterpriseSetupComponent","badToken","showNewOrganization","_selectedFamilyOrganizationId","organizationPlansComponent","onOrganizationCreateSuccess","existingFamilyOrganizations$","selectedFamilyOrganizationId","planSponsorshipType","FamiliesForEnterprise","sponsoredOrganizationId","SendAccessView","SendAccess","SendAccessRequest","toggleText","copyText","AccessComponent","sendType","passwordRequired","showText","unavailable","sendText","maskedText","downloadData","accessRequest","keyArray","sendAccess","disableSend","filteredSends","hasSearched","onSuccessfulLoad","applyTextSearch","removePassword","onSuccessfulRemovePassword","onSuccessfulDelete","link","urlB64Key","clearSelections","selectedAll","selectType","selectedType","BrowserPath","DateField","DatePreset","datePipe","onSavedSend","onDeletedSend","copyLink","alertShown","sendLinkBaseUrl","isDateTimeLocalSupported","setDates","loadSend","hasPassword","encryptSend","encSend","uploadPromise","handleCopyLinkToClipboard","copyLinkToClipboard","typeChanged","toggleOptions","togglePasswordVisible","copySuccess","datesChanged","datesForm","selectedDeletionDatePreset","selectedExpirationDatePreset","defaultDeletionDateTime","defaultExpirationDateTime","fallbackDeletionDate","fallbackDeletionTime","fallbackExpirationDate","fallbackExpirationTime","deletionDatePresets","OneHour","OneDay","TwoDays","ThreeDays","SevenDays","ThirtyDays","Custom","expirationDatePresets","Never","browserPath","Firefox","Safari","Default","formattedDeletionDate","miliseconds","formattedExpirationDate","safariDeletionTimePresetOptions","safariTimePresetOptions","DeletionDate","safariExpirationTimePresetOptions","ExpriationDate","nextWeek","setInitialFormValues","emitDates","onDeletionDatePresetSelect","clearExpiration","initialDeletionDate","toTimeString","initialExpirationDate","twentyFourHour","noon","midnight","ams","pms","h","hour","midnightOption","twelveHour","noonOption","amOption","pmOption","validTimes","EffluxDatesComponent","editSend","addSend","SendComponent","sendAddEditModalRef","DeauthorizeSessionsComponent","DeleteAccountComponent","accountApiService","deleteForm","EmailTokenRequest","EmailRequest","ChangeEmailComponent","tokenSent","showTwoFactorEmailWarning","newEmail","UpdateProfileRequest","SelectableAvatarComponent","onFire","setSelection","ChangeAvatarComponent","changeColor","defaultColorPalette","customColorSelected","customColor$","customTextColor$","debounceTime","currentSelection","showCustomPicker","colorPickerElement","generateAvatarColor","selectedColorIndex","openChangeAvatar","ProfileComponent","modalOpened","avatarModalRef","showChangeEmail","deauthorizeSessions","deauthModalRef","CreateOrganizationComponent","orgPlansComponent","UpdateDomainsRequest","toggleExcluded","customize","DomainRulesComponent","custom","globalDomain","excludedGlobalEquivalentDomains","d2","indexTrackBy","hours","showCustom","CUSTOM_VALUE","exceedsMinimumTimout","customTimeInMinutes","MIN_CUSTOM_MINUTES","vaultTimeoutPolicy","applyVaultTimeoutPolicy","current","vaultTimeouts","onTouched","validate","policyError","minTimeoutError","registerOnValidatorChange","validatorChange","vaultTimeoutPolicyHours","vaultTimeoutPolicyMinutes","VaultTimeoutInputComponent","PreferencesComponent","localeOptions","themeOptions","enableFavicons","startingLocale","startingTheme","vaultTimeoutActionChanged","newValue","SendWithIdRequest","UpdateKeyRequest","FolderWithIdRequest","ChangePasswordComponent","rotateEncKey","rotateEncKeyClicked","updateKey","updateEmergencyAccesses","updateAllResetPasswordKeys","allowedStatuses","filteredAccesses","updateRequest","KdfRequest","ChangeKdfConfirmationComponent","makeKeyAndSaveAsync","ChangeKdfComponent","kdfOptions","recommendedPbkdf2Iterations","onChangeKdf","openConfirmationModal","SecurityKeysComponent","showChangeKdf","viewUserApiKey","viewUserApiKeyModalRef","rotateUserApiKey","rotateUserApiKeyModalRef","SecurityComponent","showChangePassword","redirectTo","SecurityRoutingModule","hasFamilySponsorshipAvailable","hideSubscription","notAllowedValueAsync","valueGetter","caseInsensitive","notAllowedValue","controlValue","resendEmail","SponsoringOrgRowComponent","sponsoringOrg","sponsorshipRemoved","statusMessage","statusClass","setStatus","revokeSponsorship","revokeSponsorshipPromise","doRevokeSponsorship","resendEmailPromise","isSentAwaitingSync","toDelete","validUntil","forceReload","SponsoredFamiliesComponent","sponsorshipForm","selectedSponsorshipOrgId","sponsorshipEmail","asyncValidators","availableSponsorshipOrgs$","anyOrgsAvailable$","activeSponsorshipOrgs$","anyActiveSponsorships$","sponsoredEmail","friendlyName","resetForm","sponsorshipEmailControl","BillingHistoryViewComponent","PremiumComponent","premiumPrice","familyPlanMaxUserCount","finalizePremium","paymentResponse","SubscriptionComponent","hasPremium","subscriptionRoute","closeUpdateLicense","downloadLicense","adjustStorage","closeStorage","UserSubscriptionComponent","adjustStorageAdd","showAdjustStorage","showUpdateLicense","reinstatePromise","cancelPromise","licenseString","subscriptionMarkedForCancel","nextInvoice","storagePercentage","storageProgressWidth","SubscriptionRoutingModule","usernameGenerationService","comingFromAddEdit","onSelected","usernameOptions","avoidAmbiguous","usernameWebsite","passTypeOptions","usernameTypeOptions","desc","subaddressOptions","catchallOptions","initForwardOptions","passwordOptionsResponse","ambiguous","subaddressEmail","subaddressType","catchallType","website","websiteOption","regenerateWithoutButtonPress","regenerate","regeneratePassword","regenerateUsername","sliderChanged","savePasswordOptions","addHistory","sliderInput","normalizePasswordOptions","saveOptions","saveUsernameOptions","usernameGeneratingPromise","copyOptions","normalizeOptions","forwardOptions","validForSelfHosted","forwardedService","getHistory","SelectCopyDirective","onCopy","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","PasswordGeneratorHistoryComponent","lengthChanged","minNumberChanged","minSpecialChanged","GeneratorComponent","forwarder","historyModalRef","ToolsComponent","BulkDialogsModule","UpdateKeyComponent","makeRequest","onSavedFolder","onDeletedFolder","FolderAddEditComponent","onSharedCipher","cipherView","ShareComponent","VerifyEmailComponent","onVerified","verifyEmail","LowKdfComponent","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","showLowKdf","folderAddEditModalRef","isShowingCards","verified","filterComponent","shareCipher","shareModalRef","selectedColId","updateKeyModalRef","isLowKdfIteration","favorites","ImportExportModule","OssRoutingModule","useHash","paramsInheritanceStrategy","LoginModule","VerticalStepperModule","TrialInitiationModule","OrganizationManageModule","OrganizationUserModule","OssModule","WildcardRoutingModule","AppModule","bootstrapModule","preserveWhitespaces","flagEnabled","flag","AuthGuard","promptBiometric","LockGuard","loginpage","UnauthGuard","CalloutComponent","useAlertRole","calloutStyle","enforcedPolicyMessage","getPasswordScoreAlertDisplay","ModalRef","_onCreated","_onClose","_onClosed","_onShow","_onShown","onShow","onShown","lastResult","created","toPromise","A11yTitleDirective","appA11yTitle","hasAttribute","ApiActionDirective","appApiAction","AutofocusDirective","appAutofocus","condition","autofocus","InputVerbatimDirective","appInputVerbatim","disableComplete","StopClickDirective","$event","StopPropDirective","I18nPipe","SearchPipe","prop1","prop2","prop3","propValue","UserNamePipe","DynamicModalComponent","cd","focusTrapFactory","loadChildComponent","childComponentType","setComponentParameters","componentRef","focusTrap","focusFirstTabbableElementWhenReady","componentType","componentFactory","modalContentRef","destroy","getFocus","autoFocusEl","ModalInjector","_parentInjector","_additionalTokens","notFoundValue","flags","ModalConfig","modalList","factoryResolvers","modalCount","topModal","viewContainerRef","modalComponentRef","openInternal","hostView","replaceTopModal","registerComponentFactoryResolver","closeAll","attachToDom","createModalComponent","attachView","domElem","rootNodes","detachView","backdrop","modalEl","dialogEl","zIndex","prepend","closeElement","WeakMap","AbstractThemingService","PasswordStrengthComponent","passwordScoreColor","scoreWidth","updatePasswordStrength","masterPasswordScoreColor","masterPasswordScoreText","masterPasswordStrengthTimeout","setPasswordScoreText","FallbackSrcDirective","onError","appFallbackSrc","cardIcons","RuPay","IconComponent","image","fallbackImage","imageEnabled","setLoginIcon","setCardIcon","hostnameUri","isWebsite","AvatarUpdateService","ApiService","AppIdService","CollectionService","CryptoFunctionService","EnvironmentService","EventCollectionService","EventUploadService","ExportService","FileDownloadService","FormValidationErrorsService","I18nService","LogService","MessagingService","NotificationsService","OrgDomainApiServiceAbstraction","OrganizationUserService","OrganizationUserResetPasswordRequest","OrganizationApiServiceAbstraction","canAccessVaultTab","canManageGroups","canAccessSettingsTab","canAccessMembersTab","canManageUsersPassword","canAccessGroupsTab","canAccessReportingTab","canAccessReports","canAccessBillingTab","canAccessOrgAdmin","getOrganizationById","canAccessAdmin","isNotProviderUser","OrganizationService","InternalOrganizationService","PlatformUtilsService","PolicyApiServiceAbstraction","PolicyService","InternalPolicyService","ProviderService","SendService","SettingsService","TotpService","UserVerificationService","ValidationService","VaultTimeoutService","VaultTimeoutSettingsService","AccountApiService","AuthService","KeyConnectorService","TwoFactorService","AuthenticationStatus","AuthenticationType","TwoFactorProviderType","VerificationType","KdfConfig","TokenTwoFactorRequest","SecretVerificationRequest","TwoFactorEmailRequest","EmergencyAccessGranteeDetailsResponse","EmergencyAccessGrantorDetailsResponse","grantorId","EmergencyAccessTakeoverResponse","EmergencyAccessViewResponse","TwoFactorProviders","priority","selectedTwoFactorProviderType","twoFactorProvidersData","providerPriority","_value","setSelectedProvider","clearProviders","DeviceType","EncryptionType","EventType","FieldType","HashPurpose","KdfType","DEFAULT_ARGON2_MEMORY","DEFAULT_ARGON2_PARALLELISM","DEFAULT_ARGON2_ITERATIONS","DEFAULT_KDF_TYPE","PBKDF2_SHA256","DEFAULT_PBKDF2_ITERATIONS","DEFAULT_KDF_CONFIG","SEND_KDF_ITERATIONS","KeySuffixOptions","LoginLinkedId","CardLinkedId","IdentityLinkedId","LogLevelType","OrganizationUserStatusType","OrganizationUserType","PaymentMethodType","PlanType","PolicyType","ProductType","SecureNoteType","SendType","ThemeType","UriMatchType","getFlags","envFlags","LinkedMetadata","_i18nKey","ServiceUtils","nodeTree","partIndex","delimiter","partName","nestedTraverse","newPartName","getTreeNodeObject","getTreeNodeObjectFromList","nodeURL","Utils","isNode","process","release","isBrowser","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","binaryString","atob","charCodeAt","fromB64ToArray","fromUrlB64ToB64","strUtf8","unescape","fromB64toUrlB64","fromBufferToB64","b64Str","encodedString","decodeURIComponent","escape","urlB64Str","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","uriString","isNullOrWhitespace","validHosts","getUrl","parseResult","isIp","source","getUrlObject","bgColor","threshold","svgTextFill","bgColorHexNums","fromEntries","destination","denormalizedPath","mobile","vendor","opera","ms","hasProtocol","anchor","regexpEmojiPresentation","minimumPasswordLength","DomainMatchBlacklist","EFFLongWordList","CardApi","FieldApi","IdentityApi","LoginUriApi","LoginApi","PermissionsApi","accessEventLogs","accessImportExport","accessReports","createNewCollections","editAnyCollection","deleteAnyCollection","editAssignedCollections","deleteAssignedCollections","manageCiphers","manageGroups","manageSso","managePolicies","manageUsers","manageResetPassword","manageScim","SecureNoteApi","SendFileApi","SendTextApi","CollectionData","PolicyData","Collection","Domain","dataObj","notEncList","objProp","buildDataModel","notEncStringList","viewModel","mapProp","EncArrayBuffer","ENC_TYPE_LENGTH","throwDecryptionError","arrayBuffer","b64","EncString","encryptedStringOrType","initFromData","initFromEncryptedString","parseEncryptedString","decryptedValue","getKeyForDecryption","MasterPasswordPolicyOptions","Organization","isManager","canManageDomainVerification","hasProvider","Policy","SendFile","SendText","SymmetricCryptoKey","TreeNode","CardExport","FieldExport","IdentityExport","LoginUriExport","LoginExport","toView","toDomain","SecureNoteExport","CipherExport","CipherWithIdExport","CollectionExport","CollectionWithIdExport","FolderExport","FolderWithIdExport","CollectionRequest","KeysRequest","OrganizationKeysRequest","OrganizationTaxInfoUpdateRequest","SelectionReadOnlyRequest","SendRequest","fileLength","TaxInfoUpdateRequest","BaseResponse","propertyName","exactName","otherCasePropertyName","ErrorResponse","identityResponse","errorModel","responseErrorModel","messages","lastSep","ListResponse","PolicyResponse","SelectionReadOnlyResponse","CollectionView","SendFileView","SendTextView","SendView","maxAccessCountReached","pendingDelete","ConsoleLogService","timersMap","level","InitializerKey","PasswordGenerationServiceAbstraction","PasswordGeneratorPolicyOptions","useUppercase","useLowercase","numberCount","specialCount","inEffect","GeneratedPasswordHistory","DefaultOptions","minNumber","minUppercase","minLowercase","wordSeparator","PasswordGenerationService","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","enforcePasswordGeneratorPoliciesOnOptions","getPasswordGeneratorPolicyOptions","decryptHistory","currentHistory","matchesPrevious","unshift","newHistory","encryptHistory","userInputs","globalUserInputs","finalUserInputs","j","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","UsernameGenerationServiceAbstraction","AnonAddyForwarder","generate","anonaddy","DuckDuckGoForwarder","address","FastmailForwarder","accountId","getAccountId","using","methodCalls","emailPrefix","fastmail","methodResponses","notCreated","primaryAccounts","FirefoxRelayForwarder","generated_for","full_address","ForwarderOptions","FastmailForwarderOptions","AnonAddyForwarderOptions","SimpleLoginForwarder","Authentication","note","alias","wordCapitalize","wordIncludeNumber","forwardedAnonAddyDomain","UsernameGenerationService","generateCatchall","generateSubaddress","generateForwarded","generateWord","word","zeroPad","atIndex","emailBeginning","emailEnding","subaddressString","randomString","catchallDomain","startString","forwarderOptions","forwardedSimpleLoginApiKey","forwardedAnonAddyApiToken","forwardedFirefoxApiToken","forwardedFastmailApiToken","forwardedDuckDuckGoToken","charSet","FolderApiServiceAbstraction","FolderService","InternalFolderService","CipherRepromptType","CipherType","AttachmentData","CardData","CipherData","FieldData","IdentityData","LoginUriData","LoginData","PasswordHistoryData","SecureNoteData","Attachment","decryptAttachmentKey","toAttachmentData","Card","toCardData","Cipher","decAttachment","decField","decPh","toLoginData","toSecureNoteData","toIdentityData","toFieldData","toPasswordHistoryData","Field","Folder","Identity","LoginUri","toLoginUriData","Login","Password","SecureNote","CipherBulkDeleteRequest","CipherCollectionsRequest","CipherCreateRequest","CipherWithIdRequest","AttachmentRequest","CipherRequest","lastKnownRevisionDate","attachments2","attachmentRequest","FolderRequest","AttachmentResponse","PasswordHistoryResponse","CipherResponse","AttachmentView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","formatYear","CipherView","linkedFieldValue","linkedFieldI18nKey","FieldView","showCount","maskedValue","FolderView","IdentityView","_firstName","_lastName","fullName","fullAddress","fullAddressPart2","addressPart2","ItemView","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","hostnameOrUri","hostOrUri","LoginView","maskedPassword","PasswordHistoryView","SecureNoteView","BitActionDirective","buttonComponent","_loading$","loading$","handler","BitSubmitDirective","formGroupDirective","_disabled$","allowDisabledFormSubmit","disabled$","ngSubmit","awaitable","statusChanges","BitFormButtonDirective","submitDirective","actionDirective","SizeClasses","xlarge","large","small","xsmall","AvatarComponent","svgCharCount","svgFontSize","svgFontWeight","svgSize","chars","upperCaseText","svg","getFirstLetters","unicodeSafeSubstring","hexColor","createSvgElement","charObj","createTextElement","svgHtml","bypassSecurityTrustResourceUrl","svgTag","backgroundColor","textTag","fontWeight","BadgeListComponent","filteredItems","isFiltered","badgeType","maxItems","_maxItems","styles","primary","secondary","danger","hoverStyles","BadgeDirective","hasHoverEffects","nodeName","BadgeModule","focusRing","buttonStyles","unstyled","ButtonComponent","_block","block","disabledAttr","setButtonType","defaultIcon","defaultI18n","calloutClass","CheckboxComponent","inputClasses","maskImage","CheckboxModule","CharacterType","ColorPasswordComponent","characterStyles","Emoji","Letter","Special","passwordArray","getCharacterClass","charType","getCharacterType","charClass","fadeIn","DEFAULT_ICON","DEFAULT_COLOR","SimpleConfigurableDialogComponent","simpleDialogOpts","SimpleDialogType","SimpleDialogCloseType","localizeText","translation","defaultKey","DialogService","_overlay","_injector","_defaultOptions","_parentDialog","_overlayContainer","scrollStrategy","_destroy$","backDropClasses","componentOrTemplateRef","backdropClass","simpleDialogOptions","disableClose","DialogComponent","dialogSize","_disablePadding","disablePadding","DialogCloseDirective","dialogResult","DialogTitleContainerDirective","simple","containerInstance","_ariaLabelledBy","IconDirective","SimpleDialogComponent","hasIcon","BitFormControlAbstraction","FormControlComponent","_inline","inline","labelClasses","formControl","labelContentClasses","displayError","FormControlModule","BitHintComponent","BitLabel","BitFormFieldControl","BitErrorComponent","requiredLength","BitFormFieldComponent","ngAfterContentChecked","InputModule","FormFieldModule","BitPasswordInputToggleDirective","button","formField","toggled","toggledChange","spellcheck","PrefixClasses","PrefixButtonClasses","PrefixStaticContentClasses","BitPrefixDirective","BitSuffixDirective","contrast","main","muted","light","sizes","BitIconButtonComponent","iconClass","IconButtonModule","BitIconComponent","domSanitizer","innerHtml","bypassSecurityTrustHtml","Icon","isIcon","DynamicContentNotAllowedError","svgIcon","strings","BitInputDirective","hasPrefix","hasSuffix","showErrorsWhenDisabled","ariaInvalid","onInput","setSelectionRange","linkStyles","commonStyles","LinkDirective","linkType","AnchorLinkDirective","ButtonLinkDirective","LinkModule","MenuDividerComponent","MenuItemDirective","MenuTriggerForDirective","overlay","defaultMenuConfig","panelClass","hasBackdrop","scrollStrategies","reposition","positionStrategy","flexibleConnectedTo","withPositions","originX","originY","overlayX","overlayY","withLockedPosition","withFlexibleDimensions","withPush","hasPopup","menu","ariaRole","toggleMenu","destroyMenu","openMenu","disposeAll","overlayRef","templatePortal","attach","closedEventsSub","getClosedEvents","keyDownEventsSub","keydownEvents","onKeydown","detachments","escKey","backdropClick","menuClosed","dispose","MenuComponent","menuItems","MenuModule","MultiSelectModule","RadioButtonModule","ButtonLikeAbstraction","CellDirective","RowDirective","alignContent","alignmentClass","TableBodyDirective","template","TableComponent","_initialized","dataSource","dataStream","connect","rows","disconnect","TabHeaderComponent","TabListContainerDirective","TabListItemDirective","baseClassList","activeClassList","disabledClassList","textColorClassList","TabBodyComponent","preserveContent","_active","_firstRender","tabContent","selectTab","TabGroupComponent","_indexToSelect","_selectedIndex","selectedIndexChange","selectedTabChange","_groupId","getTabContentId","getTabLabelId","indexToSelect","_clampTabIndex","isFirstRun","tabs","setActiveItem","selectedTab","TabLabelDirective","TabComponent","_viewContainerRef","textLabel","_contentPortal","implicitContent","functionToObservable","func","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","__webpack_modules__","O","chunkIds","notFulfilled","Infinity","fulfilled","getter","__esModule","getPrototypeOf","mode","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","done","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","nc","onScriptComplete","prev","doneFns","parentNode","Symbol","toStringTag","nmd","scriptUrl","importScripts","currentScript","baseURI","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}