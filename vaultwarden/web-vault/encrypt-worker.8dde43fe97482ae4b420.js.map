{"version":3,"file":"encrypt-worker.8dde43fe97482ae4b420.js","mappings":"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","sources":["webpack://@bitwarden/web-vault/webpack/runtime/chunk loaded","webpack://@bitwarden/web-vault/webpack/runtime/create fake namespace object","webpack://@bitwarden/web-vault/webpack/runtime/startup chunk dependencies","webpack://@bitwarden/web-vault/../../libs/common/src/enums/encryptionType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/utils.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/symmetric-crypto-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/logLevelType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/consoleLog.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/container.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/decrypt-parameters.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/webCryptoFunction.service.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/enc-array-buffer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/enc-string.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/encrypted-object.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/encrypt.service.implementation.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/initializer-key.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/enums/cipher-type.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/enums/cipher-reprompt-type.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/linkedIdType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/models/domain/domain-base.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/attachment.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/card.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/field.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/identity.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/login-uri.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/login.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/password-history.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/secure-note.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/data/cipher.data.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/attachment.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/misc/linkedFieldOption.decorator.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/item.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/card.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/field.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/enums/uriMatchType.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/identity.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/login-uri.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/login.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/password-history.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/secure-note.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/view/cipher.view.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/attachment.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/card.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/field.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/identity.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/login-uri.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/login.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/password.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/secure-note.ts","webpack://@bitwarden/web-vault/../../libs/common/src/vault/models/domain/cipher.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/get-class-initializer.ts","webpack://@bitwarden/web-vault/../../libs/common/src/services/cryptography/encrypt.worker.ts","webpack://@bitwarden/web-vault/webpack/bootstrap","webpack://@bitwarden/web-vault/webpack/runtime/define property getters","webpack://@bitwarden/web-vault/webpack/runtime/ensure chunk","webpack://@bitwarden/web-vault/webpack/runtime/get javascript chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/get mini-css chunk filename","webpack://@bitwarden/web-vault/webpack/runtime/global","webpack://@bitwarden/web-vault/webpack/runtime/hasOwnProperty shorthand","webpack://@bitwarden/web-vault/webpack/runtime/make namespace object","webpack://@bitwarden/web-vault/webpack/runtime/node module decorator","webpack://@bitwarden/web-vault/webpack/runtime/publicPath","webpack://@bitwarden/web-vault/webpack/runtime/importScripts chunk loading","webpack://@bitwarden/web-vault/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(210).then(next);\n};","export enum EncryptionType {\n  AesCbc256_B64 = 0,\n  AesCbc128_HmacSha256_B64 = 1,\n  AesCbc256_HmacSha256_B64 = 2,\n  Rsa2048_OaepSha256_B64 = 3,\n  Rsa2048_OaepSha1_B64 = 4,\n  Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n  Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","/* eslint-disable no-useless-escape */\nimport * as path from \"path\";\n\nimport { getHostname, parse } from \"tldts\";\nimport { Merge } from \"type-fest\";\n\nimport { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\nimport { I18nService } from \"../abstractions/i18n.service\";\n\nconst nodeURL = typeof window === \"undefined\" ? require(\"url\") : null;\n\ndeclare global {\n  /* eslint-disable-next-line no-var */\n  var bitwardenContainerService: BitwardenContainerService;\n}\n\ninterface BitwardenContainerService {\n  getCryptoService: () => CryptoService;\n  getEncryptService: () => EncryptService;\n}\n\nexport class Utils {\n  static inited = false;\n  static isNode = false;\n  static isBrowser = true;\n  static isMobileBrowser = false;\n  static isAppleMobileBrowser = false;\n  static global: typeof global = null;\n  // Transpiled version of /\\p{Emoji_Presentation}/gu using https://mothereff.in/regexpu. Used for compatability in older browsers.\n  static regexpEmojiPresentation =\n    /(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])/g;\n  static readonly validHosts: string[] = [\"localhost\"];\n  static readonly minimumPasswordLength = 12;\n  static readonly DomainMatchBlacklist = new Map<string, Set<string>>([\n    [\"google.com\", new Set([\"script.google.com\"])],\n  ]);\n\n  static init() {\n    if (Utils.inited) {\n      return;\n    }\n\n    Utils.inited = true;\n    Utils.isNode =\n      typeof process !== \"undefined\" &&\n      (process as any).release != null &&\n      (process as any).release.name === \"node\";\n    Utils.isBrowser = typeof window !== \"undefined\";\n\n    Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n    Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n\n    if (Utils.isNode) {\n      Utils.global = global;\n    } else if (Utils.isBrowser) {\n      Utils.global = window;\n    } else {\n      // If it's not browser or node then it must be a service worker\n      Utils.global = self;\n    }\n  }\n\n  static fromB64ToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"base64\"));\n    } else {\n      const binaryString = Utils.global.atob(str);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUrlB64ToArray(str: string): Uint8Array {\n    return Utils.fromB64ToArray(Utils.fromUrlB64ToB64(str));\n  }\n\n  static fromHexToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"hex\"));\n    } else {\n      const bytes = new Uint8Array(str.length / 2);\n      for (let i = 0; i < str.length; i += 2) {\n        bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n      }\n      return bytes;\n    }\n  }\n\n  static fromUtf8ToArray(str: string): Uint8Array {\n    if (Utils.isNode) {\n      return new Uint8Array(Buffer.from(str, \"utf8\"));\n    } else {\n      const strUtf8 = unescape(encodeURIComponent(str));\n      const arr = new Uint8Array(strUtf8.length);\n      for (let i = 0; i < strUtf8.length; i++) {\n        arr[i] = strUtf8.charCodeAt(i);\n      }\n      return arr;\n    }\n  }\n\n  static fromByteStringToArray(str: string): Uint8Array {\n    if (str == null) {\n      return null;\n    }\n    const arr = new Uint8Array(str.length);\n    for (let i = 0; i < str.length; i++) {\n      arr[i] = str.charCodeAt(i);\n    }\n    return arr;\n  }\n\n  static fromBufferToB64(buffer: ArrayBuffer): string {\n    if (buffer == null) {\n      return null;\n    }\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"base64\");\n    } else {\n      let binary = \"\";\n      const bytes = new Uint8Array(buffer);\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return Utils.global.btoa(binary);\n    }\n  }\n\n  static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n    return Utils.fromB64toUrlB64(Utils.fromBufferToB64(buffer));\n  }\n\n  static fromB64toUrlB64(b64Str: string) {\n    return b64Str.replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n  }\n\n  static fromBufferToUtf8(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"utf8\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      const encodedString = String.fromCharCode.apply(null, bytes);\n      return decodeURIComponent(escape(encodedString));\n    }\n  }\n\n  static fromBufferToByteString(buffer: ArrayBuffer): string {\n    return String.fromCharCode.apply(null, new Uint8Array(buffer));\n  }\n\n  // ref: https://stackoverflow.com/a/40031979/1090359\n  static fromBufferToHex(buffer: ArrayBuffer): string {\n    if (Utils.isNode) {\n      return Buffer.from(buffer).toString(\"hex\");\n    } else {\n      const bytes = new Uint8Array(buffer);\n      return Array.prototype.map\n        .call(bytes, (x: number) => (\"00\" + x.toString(16)).slice(-2))\n        .join(\"\");\n    }\n  }\n\n  static fromUrlB64ToB64(urlB64Str: string): string {\n    let output = urlB64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n      case 0:\n        break;\n      case 2:\n        output += \"==\";\n        break;\n      case 3:\n        output += \"=\";\n        break;\n      default:\n        throw new Error(\"Illegal base64url string!\");\n    }\n\n    return output;\n  }\n\n  static fromUrlB64ToUtf8(urlB64Str: string): string {\n    return Utils.fromB64ToUtf8(Utils.fromUrlB64ToB64(urlB64Str));\n  }\n\n  static fromUtf8ToB64(utfStr: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(utfStr, \"utf8\").toString(\"base64\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.btoa(utfStr)));\n    }\n  }\n\n  static fromUtf8ToUrlB64(utfStr: string): string {\n    return Utils.fromBufferToUrlB64(Utils.fromUtf8ToArray(utfStr));\n  }\n\n  static fromB64ToUtf8(b64Str: string): string {\n    if (Utils.isNode) {\n      return Buffer.from(b64Str, \"base64\").toString(\"utf8\");\n    } else {\n      return decodeURIComponent(escape(Utils.global.atob(b64Str)));\n    }\n  }\n\n  // ref: http://stackoverflow.com/a/2117523/1090359\n  static newGuid(): string {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) => {\n      const r = (Math.random() * 16) | 0;\n      const v = c === \"x\" ? r : (r & 0x3) | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  static isGuid(id: string) {\n    return RegExp(\n      /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/,\n      \"i\"\n    ).test(id);\n  }\n\n  static getHostname(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"file:\")) {\n      return null;\n    }\n\n    // Does uriString contain invalid characters\n    // TODO Needs to possibly be extended, although '!' is a reserved character\n    if (uriString.indexOf(\"!\") > 0) {\n      return null;\n    }\n\n    try {\n      const hostname = getHostname(uriString, { validHosts: this.validHosts });\n      if (hostname != null) {\n        return hostname;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getHost(uriString: string): string {\n    const url = Utils.getUrl(uriString);\n    try {\n      return url != null && url.host !== \"\" ? url.host : null;\n    } catch {\n      return null;\n    }\n  }\n\n  static getDomain(uriString: string): string {\n    if (Utils.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    if (uriString.startsWith(\"data:\")) {\n      return null;\n    }\n\n    if (uriString.startsWith(\"about:\")) {\n      return null;\n    }\n\n    try {\n      const parseResult = parse(uriString, { validHosts: this.validHosts });\n      if (parseResult != null && parseResult.hostname != null) {\n        if (parseResult.hostname === \"localhost\" || parseResult.isIp) {\n          return parseResult.hostname;\n        }\n\n        if (parseResult.domain != null) {\n          return parseResult.domain;\n        }\n        return null;\n      }\n    } catch {\n      return null;\n    }\n    return null;\n  }\n\n  static getQueryParams(uriString: string): Map<string, string> {\n    const url = Utils.getUrl(uriString);\n    if (url == null || url.search == null || url.search === \"\") {\n      return null;\n    }\n    const map = new Map<string, string>();\n    const pairs = (url.search[0] === \"?\" ? url.search.substr(1) : url.search).split(\"&\");\n    pairs.forEach((pair) => {\n      const parts = pair.split(\"=\");\n      if (parts.length < 1) {\n        return;\n      }\n      map.set(\n        decodeURIComponent(parts[0]).toLowerCase(),\n        parts[1] == null ? \"\" : decodeURIComponent(parts[1])\n      );\n    });\n    return map;\n  }\n\n  static getSortFunction<T>(\n    i18nService: I18nService,\n    prop: { [K in keyof T]: T[K] extends string ? K : never }[keyof T]\n  ): (a: T, b: T) => number {\n    return (a, b) => {\n      if (a[prop] == null && b[prop] != null) {\n        return -1;\n      }\n      if (a[prop] != null && b[prop] == null) {\n        return 1;\n      }\n      if (a[prop] == null && b[prop] == null) {\n        return 0;\n      }\n\n      // The `as unknown as string` here is unfortunate because typescript doesn't property understand that the return of T[prop] will be a string\n      return i18nService.collator\n        ? i18nService.collator.compare(a[prop] as unknown as string, b[prop] as unknown as string)\n        : (a[prop] as unknown as string).localeCompare(b[prop] as unknown as string);\n    };\n  }\n\n  static isNullOrWhitespace(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str.trim() === \"\";\n  }\n\n  static isNullOrEmpty(str: string): boolean {\n    return str == null || typeof str !== \"string\" || str == \"\";\n  }\n\n  static isPromise(obj: any): obj is Promise<unknown> {\n    return (\n      obj != undefined && typeof obj[\"then\"] === \"function\" && typeof obj[\"catch\"] === \"function\"\n    );\n  }\n\n  static nameOf<T>(name: string & keyof T) {\n    return name;\n  }\n\n  static assign<T>(target: T, source: Partial<T>): T {\n    return Object.assign(target, source);\n  }\n\n  static iterateEnum<O extends object, K extends keyof O = keyof O>(obj: O) {\n    return (Object.keys(obj).filter((k) => Number.isNaN(+k)) as K[]).map((k) => obj[k]);\n  }\n\n  static getUrl(uriString: string): URL {\n    if (this.isNullOrWhitespace(uriString)) {\n      return null;\n    }\n\n    uriString = uriString.trim();\n\n    let url = Utils.getUrlObject(uriString);\n    if (url == null) {\n      const hasHttpProtocol =\n        uriString.indexOf(\"http://\") === 0 || uriString.indexOf(\"https://\") === 0;\n      if (!hasHttpProtocol && uriString.indexOf(\".\") > -1) {\n        url = Utils.getUrlObject(\"http://\" + uriString);\n      }\n    }\n    return url;\n  }\n\n  static camelToPascalCase(s: string) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }\n\n  /**\n   * There are a few ways to calculate text color for contrast, this one seems to fit accessibility guidelines best.\n   * https://stackoverflow.com/a/3943023/6869691\n   *\n   * @param {string} bgColor\n   * @param {number} [threshold] see stackoverflow link above\n   * @param {boolean} [svgTextFill]\n   * Indicates if this method is performed on an SVG <text> 'fill' attribute (e.g. <text fill=\"black\"></text>).\n   * This check is necessary because the '!important' tag cannot be used in a 'fill' attribute.\n   */\n  static pickTextColorBasedOnBgColor(bgColor: string, threshold = 186, svgTextFill = false) {\n    const bgColorHexNums = bgColor.charAt(0) === \"#\" ? bgColor.substring(1, 7) : bgColor;\n    const r = parseInt(bgColorHexNums.substring(0, 2), 16); // hexToR\n    const g = parseInt(bgColorHexNums.substring(2, 4), 16); // hexToG\n    const b = parseInt(bgColorHexNums.substring(4, 6), 16); // hexToB\n    const blackColor = svgTextFill ? \"black\" : \"black !important\";\n    const whiteColor = svgTextFill ? \"white\" : \"white !important\";\n    return r * 0.299 + g * 0.587 + b * 0.114 > threshold ? blackColor : whiteColor;\n  }\n\n  static stringToColor(str: string): string {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = \"#\";\n    for (let i = 0; i < 3; i++) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += (\"00\" + value.toString(16)).substr(-2);\n    }\n    return color;\n  }\n\n  /**\n   * @throws Will throw an error if the ContainerService has not been attached to the window object\n   */\n  static getContainerService(): BitwardenContainerService {\n    if (this.global.bitwardenContainerService == null) {\n      throw new Error(\"global bitwardenContainerService not initialized.\");\n    }\n    return this.global.bitwardenContainerService;\n  }\n\n  static validateHexColor(color: string) {\n    return /^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/.test(color);\n  }\n\n  /**\n   * Converts map to a Record<string, V> with the same data. Inverse of recordToMap\n   * Useful in toJSON methods, since Maps are not serializable\n   * @param map\n   * @returns\n   */\n  static mapToRecord<K extends string | number, V>(map: Map<K, V>): Record<string, V> {\n    if (map == null) {\n      return null;\n    }\n    if (!(map instanceof Map)) {\n      return map;\n    }\n    return Object.fromEntries(map);\n  }\n\n  /**\n   * Converts record to a Map<string, V> with the same data. Inverse of mapToRecord\n   * Useful in fromJSON methods, since Maps are not serializable\n   *\n   * Warning: If the record has string keys that are numbers, they will be converted to numbers in the map\n   * @param record\n   * @returns\n   */\n  static recordToMap<K extends string | number, V>(record: Record<K, V>): Map<K, V> {\n    if (record == null) {\n      return null;\n    } else if (record instanceof Map) {\n      return record;\n    }\n\n    const entries = Object.entries(record);\n    if (entries.length === 0) {\n      return new Map();\n    }\n\n    if (isNaN(Number(entries[0][0]))) {\n      return new Map(entries) as Map<K, V>;\n    } else {\n      return new Map(entries.map((e) => [Number(e[0]), e[1]])) as Map<K, V>;\n    }\n  }\n\n  /** Applies Object.assign, but converts the type nicely using Type-Fest Merge<Destination, Source> */\n  static merge<Destination, Source>(\n    destination: Destination,\n    source: Source\n  ): Merge<Destination, Source> {\n    return Object.assign(destination, source) as unknown as Merge<Destination, Source>;\n  }\n\n  /**\n   * encodeURIComponent escapes all characters except the following:\n   * alphabetic, decimal digits, - _ . ! ~ * ' ( )\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent#encoding_for_rfc3986\n   */\n  static encodeRFC3986URIComponent(str: string): string {\n    return encodeURIComponent(str).replace(\n      /[!'()*]/g,\n      (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n    );\n  }\n\n  /**\n   * Normalizes a path for defense against attacks like traversals\n   * @param denormalizedPath\n   * @returns\n   */\n  static normalizePath(denormalizedPath: string): string {\n    return path.normalize(decodeURIComponent(denormalizedPath)).replace(/^(\\.\\.(\\/|\\\\|$))+/, \"\");\n  }\n\n  private static isMobile(win: Window) {\n    let mobile = false;\n    ((a) => {\n      if (\n        /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n          a\n        ) ||\n        /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n          a.substr(0, 4)\n        )\n      ) {\n        mobile = true;\n      }\n    })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n    return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n  }\n\n  static delay(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  private static isAppleMobile(win: Window) {\n    return (\n      win.navigator.userAgent.match(/iPhone/i) != null ||\n      win.navigator.userAgent.match(/iPad/i) != null\n    );\n  }\n\n  private static getUrlObject(uriString: string): URL {\n    try {\n      if (nodeURL != null) {\n        return new nodeURL.URL(uriString);\n      } else if (typeof URL === \"function\") {\n        return new URL(uriString);\n      } else if (typeof window !== \"undefined\") {\n        const hasProtocol = uriString.indexOf(\"://\") > -1;\n        if (!hasProtocol && uriString.indexOf(\".\") > -1) {\n          uriString = \"http://\" + uriString;\n        } else if (!hasProtocol) {\n          return null;\n        }\n        const anchor = window.document.createElement(\"a\");\n        anchor.href = uriString;\n        return anchor as any;\n      }\n    } catch (e) {\n      // Ignore error\n    }\n\n    return null;\n  }\n}\n\nUtils.init();\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { Utils } from \"../../misc/utils\";\n\nexport class SymmetricCryptoKey {\n  key: ArrayBuffer;\n  encKey?: ArrayBuffer;\n  macKey?: ArrayBuffer;\n  encType: EncryptionType;\n\n  keyB64: string;\n  encKeyB64: string;\n  macKeyB64: string;\n\n  meta: any;\n\n  constructor(key: ArrayBuffer, encType?: EncryptionType) {\n    if (key == null) {\n      throw new Error(\"Must provide key\");\n    }\n\n    if (encType == null) {\n      if (key.byteLength === 32) {\n        encType = EncryptionType.AesCbc256_B64;\n      } else if (key.byteLength === 64) {\n        encType = EncryptionType.AesCbc256_HmacSha256_B64;\n      } else {\n        throw new Error(\"Unable to determine encType.\");\n      }\n    }\n\n    this.key = key;\n    this.encType = encType;\n\n    if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n      this.encKey = key;\n      this.macKey = null;\n    } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n      this.encKey = key.slice(0, 16);\n      this.macKey = key.slice(16, 32);\n    } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n      this.encKey = key.slice(0, 32);\n      this.macKey = key.slice(32, 64);\n    } else {\n      throw new Error(\"Unsupported encType/key length.\");\n    }\n\n    if (this.key != null) {\n      this.keyB64 = Utils.fromBufferToB64(this.key);\n    }\n    if (this.encKey != null) {\n      this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n    }\n    if (this.macKey != null) {\n      this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n    }\n  }\n\n  toJSON() {\n    // The whole object is constructed from the initial key, so just store the B64 key\n    return { keyB64: this.keyB64 };\n  }\n\n  static fromJSON(obj: Jsonify<SymmetricCryptoKey>): SymmetricCryptoKey {\n    if (obj == null) {\n      return null;\n    }\n\n    const arrayBuffer = Utils.fromB64ToArray(obj.keyB64).buffer;\n    return new SymmetricCryptoKey(arrayBuffer);\n  }\n}\n","export enum LogLevelType {\n  Debug,\n  Info,\n  Warning,\n  Error,\n}\n","import { LogService as LogServiceAbstraction } from \"../abstractions/log.service\";\nimport { LogLevelType } from \"../enums/logLevelType\";\n\nexport class ConsoleLogService implements LogServiceAbstraction {\n  protected timersMap: Map<string, [number, number]> = new Map();\n\n  constructor(\n    protected isDev: boolean,\n    protected filter: (level: LogLevelType) => boolean = null\n  ) {}\n\n  debug(message: string) {\n    if (!this.isDev) {\n      return;\n    }\n    this.write(LogLevelType.Debug, message);\n  }\n\n  info(message: string) {\n    this.write(LogLevelType.Info, message);\n  }\n\n  warning(message: string) {\n    this.write(LogLevelType.Warning, message);\n  }\n\n  error(message: string) {\n    this.write(LogLevelType.Error, message);\n  }\n\n  write(level: LogLevelType, message: string) {\n    if (this.filter != null && this.filter(level)) {\n      return;\n    }\n\n    switch (level) {\n      case LogLevelType.Debug:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Info:\n        // eslint-disable-next-line\n        console.log(message);\n        break;\n      case LogLevelType.Warning:\n        // eslint-disable-next-line\n        console.warn(message);\n        break;\n      case LogLevelType.Error:\n        // eslint-disable-next-line\n        console.error(message);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { CryptoService } from \"../abstractions/crypto.service\";\nimport { EncryptService } from \"../abstractions/encrypt.service\";\n\nexport class ContainerService {\n  constructor(private cryptoService: CryptoService, private encryptService: EncryptService) {}\n\n  attachToGlobal(global: any) {\n    if (!global.bitwardenContainerService) {\n      global.bitwardenContainerService = this;\n    }\n  }\n\n  /**\n   * @throws Will throw if CryptoService was not instantiated and provided to the ContainerService constructor\n   */\n  getCryptoService(): CryptoService {\n    if (this.cryptoService == null) {\n      throw new Error(\"ContainerService.cryptoService not initialized.\");\n    }\n    return this.cryptoService;\n  }\n\n  /**\n   * @throws Will throw if EncryptService was not instantiated and provided to the ContainerService constructor\n   */\n  getEncryptService(): EncryptService {\n    if (this.encryptService == null) {\n      throw new Error(\"ContainerService.encryptService not initialized.\");\n    }\n    return this.encryptService;\n  }\n}\n","export class DecryptParameters<T> {\n  encKey: T;\n  data: T;\n  iv: T;\n  macKey: T;\n  mac: T;\n  macData: T;\n}\n","import * as argon2 from \"argon2-browser\";\nimport * as forge from \"node-forge\";\n\nimport { CryptoFunctionService } from \"../abstractions/cryptoFunction.service\";\nimport { Utils } from \"../misc/utils\";\nimport { DecryptParameters } from \"../models/domain/decrypt-parameters\";\nimport { SymmetricCryptoKey } from \"../models/domain/symmetric-crypto-key\";\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n  private crypto: Crypto;\n  private subtle: SubtleCrypto;\n  private wasmSupported: boolean;\n\n  constructor(win: Window | typeof global) {\n    this.crypto = typeof win.crypto !== \"undefined\" ? win.crypto : null;\n    this.subtle =\n      !!this.crypto && typeof win.crypto.subtle !== \"undefined\" ? win.crypto.subtle : null;\n    this.wasmSupported = this.checkIfWasmSupported();\n  }\n\n  async pbkdf2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    algorithm: \"sha256\" | \"sha512\",\n    iterations: number\n  ): Promise<ArrayBuffer> {\n    const wcLen = algorithm === \"sha256\" ? 256 : 512;\n    const passwordBuf = this.toBuf(password);\n    const saltBuf = this.toBuf(salt);\n\n    const pbkdf2Params: Pbkdf2Params = {\n      name: \"PBKDF2\",\n      salt: saltBuf,\n      iterations: iterations,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\n      \"raw\",\n      passwordBuf,\n      { name: \"PBKDF2\" } as any,\n      false,\n      [\"deriveBits\"]\n    );\n    return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n  }\n\n  async argon2(\n    password: string | ArrayBuffer,\n    salt: string | ArrayBuffer,\n    iterations: number,\n    memory: number,\n    parallelism: number\n  ): Promise<ArrayBuffer> {\n    if (!this.wasmSupported) {\n      throw \"Webassembly support is required for the Argon2 KDF feature.\";\n    }\n\n    const passwordArr = new Uint8Array(this.toBuf(password));\n    const saltArr = new Uint8Array(this.toBuf(salt));\n\n    const result = await argon2.hash({\n      pass: passwordArr,\n      salt: saltArr,\n      time: iterations,\n      mem: memory,\n      parallelism: parallelism,\n      hashLen: 32,\n      type: argon2.ArgonType.Argon2id,\n    });\n    return result.hash;\n  }\n\n  async hkdf(\n    ikm: ArrayBuffer,\n    salt: string | ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const saltBuf = this.toBuf(salt);\n    const infoBuf = this.toBuf(info);\n\n    const hkdfParams: HkdfParams = {\n      name: \"HKDF\",\n      salt: saltBuf,\n      info: infoBuf,\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", ikm, { name: \"HKDF\" } as any, false, [\n      \"deriveBits\",\n    ]);\n    return await this.subtle.deriveBits(hkdfParams as any, impKey, outputByteSize * 8);\n  }\n\n  // ref: https://tools.ietf.org/html/rfc5869\n  async hkdfExpand(\n    prk: ArrayBuffer,\n    info: string | ArrayBuffer,\n    outputByteSize: number,\n    algorithm: \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const hashLen = algorithm === \"sha256\" ? 32 : 64;\n    if (outputByteSize > 255 * hashLen) {\n      throw new Error(\"outputByteSize is too large.\");\n    }\n    const prkArr = new Uint8Array(prk);\n    if (prkArr.length < hashLen) {\n      throw new Error(\"prk is too small.\");\n    }\n    const infoBuf = this.toBuf(info);\n    const infoArr = new Uint8Array(infoBuf);\n    let runningOkmLength = 0;\n    let previousT = new Uint8Array(0);\n    const n = Math.ceil(outputByteSize / hashLen);\n    const okm = new Uint8Array(n * hashLen);\n    for (let i = 0; i < n; i++) {\n      const t = new Uint8Array(previousT.length + infoArr.length + 1);\n      t.set(previousT);\n      t.set(infoArr, previousT.length);\n      t.set([i + 1], t.length - 1);\n      previousT = new Uint8Array(await this.hmac(t.buffer, prk, algorithm));\n      okm.set(previousT, runningOkmLength);\n      runningOkmLength += previousT.length;\n      if (runningOkmLength >= outputByteSize) {\n        break;\n      }\n    }\n    return okm.slice(0, outputByteSize).buffer;\n  }\n\n  async hash(\n    value: string | ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"\n  ): Promise<ArrayBuffer> {\n    if (algorithm === \"md5\") {\n      const md = algorithm === \"md5\" ? forge.md.md5.create() : forge.md.sha1.create();\n      const valueBytes = this.toByteString(value);\n      md.update(valueBytes, \"raw\");\n      return Utils.fromByteStringToArray(md.digest().data).buffer;\n    }\n\n    const valueBuf = this.toBuf(value);\n    return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n  }\n\n  async hmac(\n    value: ArrayBuffer,\n    key: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\" | \"sha512\"\n  ): Promise<ArrayBuffer> {\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n\n    const impKey = await this.subtle.importKey(\"raw\", key, signingAlgorithm, false, [\"sign\"]);\n    return await this.subtle.sign(signingAlgorithm, impKey, value);\n  }\n\n  // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n  // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n  // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n  async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n    const macKey = await this.randomBytes(32);\n    const signingAlgorithm = {\n      name: \"HMAC\",\n      hash: { name: \"SHA-256\" },\n    };\n    const impKey = await this.subtle.importKey(\"raw\", macKey, signingAlgorithm, false, [\"sign\"]);\n    const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n    const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n    if (mac1.byteLength !== mac2.byteLength) {\n      return false;\n    }\n\n    const arr1 = new Uint8Array(mac1);\n    const arr2 = new Uint8Array(mac2);\n    for (let i = 0; i < arr2.length; i++) {\n      if (arr1[i] !== arr2[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  hmacFast(value: string, key: string, algorithm: \"sha1\" | \"sha256\" | \"sha512\"): Promise<string> {\n    const hmac = forge.hmac.create();\n    hmac.start(algorithm, key);\n    hmac.update(value);\n    const bytes = hmac.digest().getBytes();\n    return Promise.resolve(bytes);\n  }\n\n  async compareFast(a: string, b: string): Promise<boolean> {\n    const rand = await this.randomBytes(32);\n    const bytes = new Uint32Array(rand);\n    const buffer = forge.util.createBuffer();\n    for (let i = 0; i < bytes.length; i++) {\n      buffer.putInt32(bytes[i]);\n    }\n    const macKey = buffer.getBytes();\n\n    const hmac = forge.hmac.create();\n    hmac.start(\"sha256\", macKey);\n    hmac.update(a);\n    const mac1 = hmac.digest().getBytes();\n\n    hmac.start(null, null);\n    hmac.update(b);\n    const mac2 = hmac.digest().getBytes();\n\n    const equals = mac1 === mac2;\n    return equals;\n  }\n\n  async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.encrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  aesDecryptFastParameters(\n    data: string,\n    iv: string,\n    mac: string,\n    key: SymmetricCryptoKey\n  ): DecryptParameters<string> {\n    const p = new DecryptParameters<string>();\n    if (key.meta != null) {\n      p.encKey = key.meta.encKeyByteString;\n      p.macKey = key.meta.macKeyByteString;\n    }\n\n    if (p.encKey == null) {\n      p.encKey = forge.util.decode64(key.encKeyB64);\n    }\n    p.data = forge.util.decode64(data);\n    p.iv = forge.util.decode64(iv);\n    p.macData = p.iv + p.data;\n    if (p.macKey == null && key.macKeyB64 != null) {\n      p.macKey = forge.util.decode64(key.macKeyB64);\n    }\n    if (mac != null) {\n      p.mac = forge.util.decode64(mac);\n    }\n\n    // cache byte string keys for later\n    if (key.meta == null) {\n      key.meta = {};\n    }\n    if (key.meta.encKeyByteString == null) {\n      key.meta.encKeyByteString = p.encKey;\n    }\n    if (p.macKey != null && key.meta.macKeyByteString == null) {\n      key.meta.macKeyByteString = p.macKey;\n    }\n\n    return p;\n  }\n\n  aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n    const dataBuffer = forge.util.createBuffer(parameters.data);\n    const decipher = forge.cipher.createDecipher(\"AES-CBC\", parameters.encKey);\n    decipher.start({ iv: parameters.iv });\n    decipher.update(dataBuffer);\n    decipher.finish();\n    const val = decipher.output.toString();\n    return Promise.resolve(val);\n  }\n\n  async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n    const impKey = await this.subtle.importKey(\"raw\", key, { name: \"AES-CBC\" } as any, false, [\n      \"decrypt\",\n    ]);\n    return await this.subtle.decrypt({ name: \"AES-CBC\", iv: iv }, impKey, data);\n  }\n\n  async rsaEncrypt(\n    data: ArrayBuffer,\n    publicKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"spki\", publicKey, rsaParams, false, [\"encrypt\"]);\n    return await this.subtle.encrypt(rsaParams, impKey, data);\n  }\n\n  async rsaDecrypt(\n    data: ArrayBuffer,\n    privateKey: ArrayBuffer,\n    algorithm: \"sha1\" | \"sha256\"\n  ): Promise<ArrayBuffer> {\n    // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n    // We cannot use the proper types here.\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n    };\n    const impKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, false, [\"decrypt\"]);\n    return await this.subtle.decrypt(rsaParams, impKey, data);\n  }\n\n  async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const impPrivateKey = await this.subtle.importKey(\"pkcs8\", privateKey, rsaParams, true, [\n      \"decrypt\",\n    ]);\n    const jwkPrivateKey = await this.subtle.exportKey(\"jwk\", impPrivateKey);\n    const jwkPublicKeyParams = {\n      kty: \"RSA\",\n      e: jwkPrivateKey.e,\n      n: jwkPrivateKey.n,\n      alg: \"RSA-OAEP\",\n      ext: true,\n    };\n    const impPublicKey = await this.subtle.importKey(\"jwk\", jwkPublicKeyParams, rsaParams, true, [\n      \"encrypt\",\n    ]);\n    return await this.subtle.exportKey(\"spki\", impPublicKey);\n  }\n\n  async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n    const rsaParams = {\n      name: \"RSA-OAEP\",\n      modulusLength: length,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n      // Have to specify some algorithm\n      hash: { name: this.toWebCryptoAlgorithm(\"sha1\") },\n    };\n    const keyPair = (await this.subtle.generateKey(rsaParams, true, [\n      \"encrypt\",\n      \"decrypt\",\n    ])) as CryptoKeyPair;\n    const publicKey = await this.subtle.exportKey(\"spki\", keyPair.publicKey);\n    const privateKey = await this.subtle.exportKey(\"pkcs8\", keyPair.privateKey);\n    return [publicKey, privateKey];\n  }\n\n  randomBytes(length: number): Promise<ArrayBuffer> {\n    const arr = new Uint8Array(length);\n    this.crypto.getRandomValues(arr);\n    return Promise.resolve(arr.buffer);\n  }\n\n  private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n    let buf: ArrayBuffer;\n    if (typeof value === \"string\") {\n      buf = Utils.fromUtf8ToArray(value).buffer;\n    } else {\n      buf = value;\n    }\n    return buf;\n  }\n\n  private toByteString(value: string | ArrayBuffer): string {\n    let bytes: string;\n    if (typeof value === \"string\") {\n      bytes = forge.util.encodeUtf8(value);\n    } else {\n      bytes = Utils.fromBufferToByteString(value);\n    }\n    return bytes;\n  }\n\n  private toWebCryptoAlgorithm(algorithm: \"sha1\" | \"sha256\" | \"sha512\" | \"md5\"): string {\n    if (algorithm === \"md5\") {\n      throw new Error(\"MD5 is not supported in WebCrypto.\");\n    }\n    return algorithm === \"sha1\" ? \"SHA-1\" : algorithm === \"sha256\" ? \"SHA-256\" : \"SHA-512\";\n  }\n\n  // ref: https://stackoverflow.com/a/47880734/1090359\n  private checkIfWasmSupported(): boolean {\n    try {\n      if (typeof WebAssembly === \"object\" && typeof WebAssembly.instantiate === \"function\") {\n        const module = new WebAssembly.Module(\n          Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00)\n        );\n        if (module instanceof WebAssembly.Module) {\n          return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\n        }\n      }\n    } catch {\n      return false;\n    }\n    return false;\n  }\n}\n","import { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nconst ENC_TYPE_LENGTH = 1;\nconst IV_LENGTH = 16;\nconst MAC_LENGTH = 32;\nconst MIN_DATA_LENGTH = 1;\n\nexport class EncArrayBuffer implements IEncrypted {\n  readonly encryptionType: EncryptionType = null;\n  readonly dataBytes: ArrayBuffer = null;\n  readonly ivBytes: ArrayBuffer = null;\n  readonly macBytes: ArrayBuffer = null;\n\n  constructor(readonly buffer: ArrayBuffer) {\n    const encBytes = new Uint8Array(buffer);\n    const encType = encBytes[0];\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.macBytes = encBytes.slice(\n          ENC_TYPE_LENGTH + IV_LENGTH,\n          ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH\n        ).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH + MAC_LENGTH).buffer;\n        break;\n      }\n      case EncryptionType.AesCbc256_B64: {\n        const minimumLength = ENC_TYPE_LENGTH + IV_LENGTH + MIN_DATA_LENGTH;\n        if (encBytes.length < minimumLength) {\n          this.throwDecryptionError();\n        }\n\n        this.ivBytes = encBytes.slice(ENC_TYPE_LENGTH, ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        this.dataBytes = encBytes.slice(ENC_TYPE_LENGTH + IV_LENGTH).buffer;\n        break;\n      }\n      default:\n        this.throwDecryptionError();\n    }\n\n    this.encryptionType = encType;\n  }\n\n  private throwDecryptionError() {\n    throw new Error(\n      \"Error parsing encrypted ArrayBuffer: data is corrupted or has an invalid format.\"\n    );\n  }\n\n  static async fromResponse(response: {\n    arrayBuffer: () => Promise<ArrayBuffer>;\n  }): Promise<EncArrayBuffer> {\n    const buffer = await response.arrayBuffer();\n    if (buffer == null) {\n      throw new Error(\"Cannot create EncArrayBuffer from Response - Response is empty\");\n    }\n    return new EncArrayBuffer(buffer);\n  }\n\n  static fromB64(b64: string) {\n    const buffer = Utils.fromB64ToArray(b64).buffer;\n    return new EncArrayBuffer(buffer);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Utils } from \"../../misc/utils\";\n\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncString implements IEncrypted {\n  encryptedString?: string;\n  encryptionType?: EncryptionType;\n  decryptedValue?: string;\n  data?: string;\n  iv?: string;\n  mac?: string;\n\n  constructor(\n    encryptedStringOrType: string | EncryptionType,\n    data?: string,\n    iv?: string,\n    mac?: string\n  ) {\n    if (data != null) {\n      this.initFromData(encryptedStringOrType as EncryptionType, data, iv, mac);\n    } else {\n      this.initFromEncryptedString(encryptedStringOrType as string);\n    }\n  }\n\n  get ivBytes(): ArrayBuffer {\n    return this.iv == null ? null : Utils.fromB64ToArray(this.iv).buffer;\n  }\n\n  get macBytes(): ArrayBuffer {\n    return this.mac == null ? null : Utils.fromB64ToArray(this.mac).buffer;\n  }\n\n  get dataBytes(): ArrayBuffer {\n    return this.data == null ? null : Utils.fromB64ToArray(this.data).buffer;\n  }\n\n  toJSON() {\n    return this.encryptedString;\n  }\n\n  static fromJSON(obj: Jsonify<EncString>): EncString {\n    if (obj == null) {\n      return null;\n    }\n\n    return new EncString(obj);\n  }\n\n  private initFromData(encType: EncryptionType, data: string, iv: string, mac: string) {\n    if (iv != null) {\n      this.encryptedString = encType + \".\" + iv + \"|\" + data;\n    } else {\n      this.encryptedString = encType + \".\" + data;\n    }\n\n    // mac\n    if (mac != null) {\n      this.encryptedString += \"|\" + mac;\n    }\n\n    this.encryptionType = encType;\n    this.data = data;\n    this.iv = iv;\n    this.mac = mac;\n  }\n\n  private initFromEncryptedString(encryptedString: string) {\n    this.encryptedString = encryptedString as string;\n    if (!this.encryptedString) {\n      return;\n    }\n\n    const { encType, encPieces } = this.parseEncryptedString(this.encryptedString);\n    this.encryptionType = encType;\n\n    switch (encType) {\n      case EncryptionType.AesCbc128_HmacSha256_B64:\n      case EncryptionType.AesCbc256_HmacSha256_B64:\n        if (encPieces.length !== 3) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        this.mac = encPieces[2];\n        break;\n      case EncryptionType.AesCbc256_B64:\n        if (encPieces.length !== 2) {\n          return;\n        }\n\n        this.iv = encPieces[0];\n        this.data = encPieces[1];\n        break;\n      case EncryptionType.Rsa2048_OaepSha256_B64:\n      case EncryptionType.Rsa2048_OaepSha1_B64:\n        if (encPieces.length !== 1) {\n          return;\n        }\n\n        this.data = encPieces[0];\n        break;\n      default:\n        return;\n    }\n  }\n\n  private parseEncryptedString(encryptedString: string): {\n    encType: EncryptionType;\n    encPieces: string[];\n  } {\n    const headerPieces = encryptedString.split(\".\");\n    let encType: EncryptionType;\n    let encPieces: string[] = null;\n\n    if (headerPieces.length === 2) {\n      try {\n        encType = parseInt(headerPieces[0], null);\n        encPieces = headerPieces[1].split(\"|\");\n      } catch (e) {\n        return;\n      }\n    } else {\n      encPieces = encryptedString.split(\"|\");\n      encType =\n        encPieces.length === 3\n          ? EncryptionType.AesCbc128_HmacSha256_B64\n          : EncryptionType.AesCbc256_B64;\n    }\n\n    return {\n      encType,\n      encPieces,\n    };\n  }\n\n  async decrypt(orgId: string, key: SymmetricCryptoKey = null): Promise<string> {\n    if (this.decryptedValue != null) {\n      return this.decryptedValue;\n    }\n\n    try {\n      if (key == null) {\n        key = await this.getKeyForDecryption(orgId);\n      }\n      if (key == null) {\n        throw new Error(\"No key to decrypt EncString with orgId \" + orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      this.decryptedValue = await encryptService.decryptToUtf8(this, key);\n    } catch (e) {\n      this.decryptedValue = \"[error: cannot decrypt]\";\n    }\n    return this.decryptedValue;\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n}\n","import { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\nexport class EncryptedObject {\n  iv: ArrayBuffer;\n  data: ArrayBuffer;\n  mac: ArrayBuffer;\n  key: SymmetricCryptoKey;\n}\n","import { CryptoFunctionService } from \"../../abstractions/cryptoFunction.service\";\nimport { EncryptService } from \"../../abstractions/encrypt.service\";\nimport { LogService } from \"../../abstractions/log.service\";\nimport { EncryptionType } from \"../../enums/encryptionType\";\nimport { IEncrypted } from \"../../interfaces/IEncrypted\";\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Utils } from \"../../misc/utils\";\nimport { EncArrayBuffer } from \"../../models/domain/enc-array-buffer\";\nimport { EncString } from \"../../models/domain/enc-string\";\nimport { EncryptedObject } from \"../../models/domain/encrypted-object\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\n\nexport class EncryptServiceImplementation implements EncryptService {\n  constructor(\n    protected cryptoFunctionService: CryptoFunctionService,\n    protected logService: LogService,\n    protected logMacFailures: boolean\n  ) {}\n\n  async encrypt(plainValue: string | ArrayBuffer, key: SymmetricCryptoKey): Promise<EncString> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (plainValue == null) {\n      return Promise.resolve(null);\n    }\n\n    let plainBuf: ArrayBuffer;\n    if (typeof plainValue === \"string\") {\n      plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n    } else {\n      plainBuf = plainValue;\n    }\n\n    const encObj = await this.aesEncrypt(plainBuf, key);\n    const iv = Utils.fromBufferToB64(encObj.iv);\n    const data = Utils.fromBufferToB64(encObj.data);\n    const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n    return new EncString(encObj.key.encType, data, iv, mac);\n  }\n\n  async encryptToBytes(plainValue: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    const encValue = await this.aesEncrypt(plainValue, key);\n    let macLen = 0;\n    if (encValue.mac != null) {\n      macLen = encValue.mac.byteLength;\n    }\n\n    const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n    encBytes.set([encValue.key.encType]);\n    encBytes.set(new Uint8Array(encValue.iv), 1);\n    if (encValue.mac != null) {\n      encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n    }\n\n    encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n    return new EncArrayBuffer(encBytes.buffer);\n  }\n\n  async decryptToUtf8(encString: EncString, key: SymmetricCryptoKey): Promise<string> {\n    if (key == null) {\n      throw new Error(\"No key provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encString);\n\n    if (key.macKey != null && encString?.mac == null) {\n      this.logService.error(\"mac required.\");\n      return null;\n    }\n\n    if (key.encType !== encString.encryptionType) {\n      this.logService.error(\"encType unavailable.\");\n      return null;\n    }\n\n    const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(\n      encString.data,\n      encString.iv,\n      encString.mac,\n      key\n    );\n    if (fastParams.macKey != null && fastParams.mac != null) {\n      const computedMac = await this.cryptoFunctionService.hmacFast(\n        fastParams.macData,\n        fastParams.macKey,\n        \"sha256\"\n      );\n      const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n      if (!macsEqual) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    return await this.cryptoFunctionService.aesDecryptFast(fastParams);\n  }\n\n  async decryptToBytes(encThing: IEncrypted, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n    if (key == null) {\n      throw new Error(\"No encryption key provided.\");\n    }\n\n    if (encThing == null) {\n      throw new Error(\"Nothing provided for decryption.\");\n    }\n\n    key = this.resolveLegacyKey(key, encThing);\n\n    if (key.macKey != null && encThing.macBytes == null) {\n      return null;\n    }\n\n    if (key.encType !== encThing.encryptionType) {\n      return null;\n    }\n\n    if (key.macKey != null && encThing.macBytes != null) {\n      const macData = new Uint8Array(encThing.ivBytes.byteLength + encThing.dataBytes.byteLength);\n      macData.set(new Uint8Array(encThing.ivBytes), 0);\n      macData.set(new Uint8Array(encThing.dataBytes), encThing.ivBytes.byteLength);\n      const computedMac = await this.cryptoFunctionService.hmac(\n        macData.buffer,\n        key.macKey,\n        \"sha256\"\n      );\n      if (computedMac === null) {\n        return null;\n      }\n\n      const macsMatch = await this.cryptoFunctionService.compare(encThing.macBytes, computedMac);\n      if (!macsMatch) {\n        this.logMacFailed(\"mac failed.\");\n        return null;\n      }\n    }\n\n    const result = await this.cryptoFunctionService.aesDecrypt(\n      encThing.dataBytes,\n      encThing.ivBytes,\n      key.encKey\n    );\n\n    return result ?? null;\n  }\n\n  async decryptItems<T extends InitializerMetadata>(\n    items: Decryptable<T>[],\n    key: SymmetricCryptoKey\n  ): Promise<T[]> {\n    if (items == null || items.length < 1) {\n      return [];\n    }\n\n    return await Promise.all(items.map((item) => item.decrypt(key)));\n  }\n\n  private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n    const obj = new EncryptedObject();\n    obj.key = key;\n    obj.iv = await this.cryptoFunctionService.randomBytes(16);\n    obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n    if (obj.key.macKey != null) {\n      const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n      macData.set(new Uint8Array(obj.iv), 0);\n      macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n      obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, \"sha256\");\n    }\n\n    return obj;\n  }\n\n  private logMacFailed(msg: string) {\n    if (this.logMacFailures) {\n      this.logService.error(msg);\n    }\n  }\n\n  /**\n   * Transform into new key for the old encrypt-then-mac scheme if required, otherwise return the current key unchanged\n   * @param encThing The encrypted object (e.g. encString or encArrayBuffer) that you want to decrypt\n   */\n  resolveLegacyKey(key: SymmetricCryptoKey, encThing: IEncrypted): SymmetricCryptoKey {\n    if (\n      encThing.encryptionType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n      key.encType === EncryptionType.AesCbc256_B64\n    ) {\n      return new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n    }\n\n    return key;\n  }\n}\n","export enum InitializerKey {\n  Cipher = 0,\n  CipherView = 1,\n}\n","export enum CipherType {\n  Login = 1,\n  SecureNote = 2,\n  Card = 3,\n  Identity = 4,\n}\n","export enum CipherRepromptType {\n  None = 0,\n  Password = 1,\n}\n","export type LinkedIdType = LoginLinkedId | CardLinkedId | IdentityLinkedId;\n\n// LoginView\nexport enum LoginLinkedId {\n  Username = 100,\n  Password = 101,\n}\n\n// CardView\nexport enum CardLinkedId {\n  CardholderName = 300,\n  ExpMonth = 301,\n  ExpYear = 302,\n  Code = 303,\n  Brand = 304,\n  Number = 305,\n}\n\n// IdentityView\nexport enum IdentityLinkedId {\n  Title = 400,\n  MiddleName = 401,\n  Address1 = 402,\n  Address2 = 403,\n  Address3 = 404,\n  City = 405,\n  State = 406,\n  PostalCode = 407,\n  Country = 408,\n  Company = 409,\n  Email = 410,\n  Phone = 411,\n  Ssn = 412,\n  Username = 413,\n  PassportNumber = 414,\n  LicenseNumber = 415,\n  FirstName = 416,\n  LastName = 417,\n  FullName = 418,\n}\n","import { View } from \"../view/view\";\n\nimport { EncString } from \"./enc-string\";\nimport { SymmetricCryptoKey } from \"./symmetric-crypto-key\";\n\n// https://contributing.bitwarden.com/architecture/clients/data-model#domain\nexport default class Domain {\n  protected buildDomainModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = dataObj[map[prop] || prop];\n      if (notEncList.indexOf(prop) > -1) {\n        (domain as any)[prop] = objProp ? objProp : null;\n      } else {\n        (domain as any)[prop] = objProp ? new EncString(objProp) : null;\n      }\n    }\n  }\n  protected buildDataModel<D extends Domain>(\n    domain: D,\n    dataObj: any,\n    map: any,\n    notEncStringList: any[] = []\n  ) {\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      const objProp = (domain as any)[map[prop] || prop];\n      if (notEncStringList.indexOf(prop) > -1) {\n        (dataObj as any)[prop] = objProp != null ? objProp : null;\n      } else {\n        (dataObj as any)[prop] = objProp != null ? (objProp as EncString).encryptedString : null;\n      }\n    }\n  }\n\n  protected async decryptObj<T extends View>(\n    viewModel: T,\n    map: any,\n    orgId: string,\n    key: SymmetricCryptoKey = null\n  ): Promise<T> {\n    const promises = [];\n    const self: any = this;\n\n    for (const prop in map) {\n      // eslint-disable-next-line\n      if (!map.hasOwnProperty(prop)) {\n        continue;\n      }\n\n      (function (theProp) {\n        const p = Promise.resolve()\n          .then(() => {\n            const mapProp = map[theProp] || theProp;\n            if (self[mapProp]) {\n              return self[mapProp].decrypt(orgId, key);\n            }\n            return null;\n          })\n          .then((val: any) => {\n            (viewModel as any)[theProp] = val;\n          });\n        promises.push(p);\n      })(prop);\n    }\n\n    await Promise.all(promises);\n    return viewModel;\n  }\n}\n","import { AttachmentResponse } from \"../response/attachment.response\";\n\nexport class AttachmentData {\n  id: string;\n  url: string;\n  fileName: string;\n  key: string;\n  size: string;\n  sizeName: string;\n\n  constructor(response?: AttachmentResponse) {\n    if (response == null) {\n      return;\n    }\n    this.id = response.id;\n    this.url = response.url;\n    this.fileName = response.fileName;\n    this.key = response.key;\n    this.size = response.size;\n    this.sizeName = response.sizeName;\n  }\n}\n","import { CardApi } from \"../../../models/api/card.api\";\n\nexport class CardData {\n  cardholderName: string;\n  brand: string;\n  number: string;\n  expMonth: string;\n  expYear: string;\n  code: string;\n\n  constructor(data?: CardApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.cardholderName = data.cardholderName;\n    this.brand = data.brand;\n    this.number = data.number;\n    this.expMonth = data.expMonth;\n    this.expYear = data.expYear;\n    this.code = data.code;\n  }\n}\n","import { FieldType } from \"../../../enums/fieldType\";\nimport { LinkedIdType } from \"../../../enums/linkedIdType\";\nimport { FieldApi } from \"../../../models/api/field.api\";\n\nexport class FieldData {\n  type: FieldType;\n  name: string;\n  value: string;\n  linkedId: LinkedIdType;\n\n  constructor(response?: FieldApi) {\n    if (response == null) {\n      return;\n    }\n    this.type = response.type;\n    this.name = response.name;\n    this.value = response.value;\n    this.linkedId = response.linkedId;\n  }\n}\n","import { IdentityApi } from \"../../../models/api/identity.api\";\n\nexport class IdentityData {\n  title: string;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n  address1: string;\n  address2: string;\n  address3: string;\n  city: string;\n  state: string;\n  postalCode: string;\n  country: string;\n  company: string;\n  email: string;\n  phone: string;\n  ssn: string;\n  username: string;\n  passportNumber: string;\n  licenseNumber: string;\n\n  constructor(data?: IdentityApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.title = data.title;\n    this.firstName = data.firstName;\n    this.middleName = data.middleName;\n    this.lastName = data.lastName;\n    this.address1 = data.address1;\n    this.address2 = data.address2;\n    this.address3 = data.address3;\n    this.city = data.city;\n    this.state = data.state;\n    this.postalCode = data.postalCode;\n    this.country = data.country;\n    this.company = data.company;\n    this.email = data.email;\n    this.phone = data.phone;\n    this.ssn = data.ssn;\n    this.username = data.username;\n    this.passportNumber = data.passportNumber;\n    this.licenseNumber = data.licenseNumber;\n  }\n}\n","import { UriMatchType } from \"../../../enums/uriMatchType\";\nimport { LoginUriApi } from \"../../../models/api/login-uri.api\";\n\nexport class LoginUriData {\n  uri: string;\n  match: UriMatchType = null;\n\n  constructor(data?: LoginUriApi) {\n    if (data == null) {\n      return;\n    }\n    this.uri = data.uri;\n    this.match = data.match;\n  }\n}\n","import { LoginApi } from \"../../../models/api/login.api\";\n\nimport { LoginUriData } from \"./login-uri.data\";\n\nexport class LoginData {\n  uris: LoginUriData[];\n  username: string;\n  password: string;\n  passwordRevisionDate: string;\n  totp: string;\n  autofillOnPageLoad: boolean;\n\n  constructor(data?: LoginApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.username = data.username;\n    this.password = data.password;\n    this.passwordRevisionDate = data.passwordRevisionDate;\n    this.totp = data.totp;\n    this.autofillOnPageLoad = data.autofillOnPageLoad;\n\n    if (data.uris) {\n      this.uris = data.uris.map((u) => new LoginUriData(u));\n    }\n  }\n}\n","import { PasswordHistoryResponse } from \"../response/password-history.response\";\n\nexport class PasswordHistoryData {\n  password: string;\n  lastUsedDate: string;\n\n  constructor(response?: PasswordHistoryResponse) {\n    if (response == null) {\n      return;\n    }\n\n    this.password = response.password;\n    this.lastUsedDate = response.lastUsedDate;\n  }\n}\n","import { SecureNoteType } from \"../../../enums/secureNoteType\";\nimport { SecureNoteApi } from \"../../../models/api/secure-note.api\";\n\nexport class SecureNoteData {\n  type: SecureNoteType;\n\n  constructor(data?: SecureNoteApi) {\n    if (data == null) {\n      return;\n    }\n\n    this.type = data.type;\n  }\n}\n","import { CipherRepromptType } from \"../../enums/cipher-reprompt-type\";\nimport { CipherType } from \"../../enums/cipher-type\";\nimport { CipherResponse } from \"../response/cipher.response\";\n\nimport { AttachmentData } from \"./attachment.data\";\nimport { CardData } from \"./card.data\";\nimport { FieldData } from \"./field.data\";\nimport { IdentityData } from \"./identity.data\";\nimport { LoginData } from \"./login.data\";\nimport { PasswordHistoryData } from \"./password-history.data\";\nimport { SecureNoteData } from \"./secure-note.data\";\n\nexport class CipherData {\n  id: string;\n  organizationId: string;\n  folderId: string;\n  edit: boolean;\n  viewPassword: boolean;\n  organizationUseTotp: boolean;\n  favorite: boolean;\n  revisionDate: string;\n  type: CipherType;\n  name: string;\n  notes: string;\n  login?: LoginData;\n  secureNote?: SecureNoteData;\n  card?: CardData;\n  identity?: IdentityData;\n  fields?: FieldData[];\n  attachments?: AttachmentData[];\n  passwordHistory?: PasswordHistoryData[];\n  collectionIds?: string[];\n  creationDate: string;\n  deletedDate: string;\n  reprompt: CipherRepromptType;\n\n  constructor(response?: CipherResponse, collectionIds?: string[]) {\n    if (response == null) {\n      return;\n    }\n\n    this.id = response.id;\n    this.organizationId = response.organizationId;\n    this.folderId = response.folderId;\n    this.edit = response.edit;\n    this.viewPassword = response.viewPassword;\n    this.organizationUseTotp = response.organizationUseTotp;\n    this.favorite = response.favorite;\n    this.revisionDate = response.revisionDate;\n    this.type = response.type;\n    this.name = response.name;\n    this.notes = response.notes;\n    this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n    this.creationDate = response.creationDate;\n    this.deletedDate = response.deletedDate;\n    this.reprompt = response.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new LoginData(response.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNoteData(response.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new CardData(response.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new IdentityData(response.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (response.fields != null) {\n      this.fields = response.fields.map((f) => new FieldData(f));\n    }\n    if (response.attachments != null) {\n      this.attachments = response.attachments.map((a) => new AttachmentData(a));\n    }\n    if (response.passwordHistory != null) {\n      this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n    }\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { View } from \"../../../models/view/view\";\nimport { Attachment } from \"../domain/attachment\";\n\nexport class AttachmentView implements View {\n  id: string = null;\n  url: string = null;\n  size: string = null;\n  sizeName: string = null;\n  fileName: string = null;\n  key: SymmetricCryptoKey = null;\n\n  constructor(a?: Attachment) {\n    if (!a) {\n      return;\n    }\n\n    this.id = a.id;\n    this.url = a.url;\n    this.size = a.size;\n    this.sizeName = a.sizeName;\n  }\n\n  get fileSize(): number {\n    try {\n      if (this.size != null) {\n        return parseInt(this.size, null);\n      }\n    } catch {\n      // Invalid file size.\n    }\n    return 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<AttachmentView>>): AttachmentView {\n    const key = obj.key == null ? null : SymmetricCryptoKey.fromJSON(obj.key);\n    return Object.assign(new AttachmentView(), obj, { key: key });\n  }\n}\n","import { LinkedIdType } from \"../enums/linkedIdType\";\nimport { ItemView } from \"../vault/models/view/item.view\";\n\nexport class LinkedMetadata {\n  constructor(readonly propertyKey: string, private readonly _i18nKey?: string) {}\n\n  get i18nKey() {\n    return this._i18nKey ?? this.propertyKey;\n  }\n}\n\n/**\n * A decorator used to set metadata used by Linked custom fields. Apply it to a class property or getter to make it\n *    available as a Linked custom field option.\n * @param id - A unique value that is saved in the Field model. It is used to look up the decorated class property.\n * @param i18nKey - The i18n key used to describe the decorated class property in the UI. If it is null, then the name\n *    of the class property will be used as the i18n key.\n */\nexport function linkedFieldOption(id: LinkedIdType, i18nKey?: string) {\n  return (prototype: ItemView, propertyKey: string) => {\n    if (prototype.linkedFieldOptions == null) {\n      prototype.linkedFieldOptions = new Map<LinkedIdType, LinkedMetadata>();\n    }\n\n    prototype.linkedFieldOptions.set(id, new LinkedMetadata(propertyKey, i18nKey));\n  };\n}\n","import { LinkedMetadata } from \"../../../misc/linkedFieldOption.decorator\";\nimport { View } from \"../../../models/view/view\";\n\nexport abstract class ItemView implements View {\n  linkedFieldOptions: Map<number, LinkedMetadata>;\n  abstract get subTitle(): string;\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { CardLinkedId as LinkedId } from \"../../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../../misc/linkedFieldOption.decorator\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class CardView extends ItemView {\n  @linkedFieldOption(LinkedId.CardholderName)\n  cardholderName: string = null;\n  @linkedFieldOption(LinkedId.ExpMonth, \"expirationMonth\")\n  expMonth: string = null;\n  @linkedFieldOption(LinkedId.ExpYear, \"expirationYear\")\n  expYear: string = null;\n  @linkedFieldOption(LinkedId.Code, \"securityCode\")\n  code: string = null;\n\n  private _brand: string = null;\n  private _number: string = null;\n  private _subTitle: string = null;\n\n  get maskedCode(): string {\n    return this.code != null ? \"•\".repeat(this.code.length) : null;\n  }\n\n  get maskedNumber(): string {\n    return this.number != null ? \"•\".repeat(this.number.length) : null;\n  }\n\n  @linkedFieldOption(LinkedId.Brand)\n  get brand(): string {\n    return this._brand;\n  }\n  set brand(value: string) {\n    this._brand = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.Number)\n  get number(): string {\n    return this._number;\n  }\n  set number(value: string) {\n    this._number = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null) {\n      this._subTitle = this.brand;\n      if (this.number != null && this.number.length >= 4) {\n        if (this._subTitle != null && this._subTitle !== \"\") {\n          this._subTitle += \", \";\n        } else {\n          this._subTitle = \"\";\n        }\n\n        // Show last 5 on amex, last 4 for all others\n        const count =\n          this.number.length >= 5 && this.number.match(new RegExp(\"^3[47]\")) != null ? 5 : 4;\n        this._subTitle += \"*\" + this.number.substr(this.number.length - count);\n      }\n    }\n    return this._subTitle;\n  }\n\n  get expiration(): string {\n    if (!this.expMonth && !this.expYear) {\n      return null;\n    }\n\n    let exp = this.expMonth != null ? (\"0\" + this.expMonth).slice(-2) : \"__\";\n    exp += \" / \" + (this.expYear != null ? this.formatYear(this.expYear) : \"____\");\n    return exp;\n  }\n\n  private formatYear(year: string): string {\n    return year.length === 2 ? \"20\" + year : year;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CardView>>): CardView {\n    return Object.assign(new CardView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../../enums/fieldType\";\nimport { LinkedIdType } from \"../../../enums/linkedIdType\";\nimport { View } from \"../../../models/view/view\";\nimport { Field } from \"../domain/field\";\n\nexport class FieldView implements View {\n  name: string = null;\n  value: string = null;\n  type: FieldType = null;\n  newField = false; // Marks if the field is new and hasn't been saved\n  showValue = false;\n  showCount = false;\n  linkedId: LinkedIdType = null;\n\n  constructor(f?: Field) {\n    if (!f) {\n      return;\n    }\n\n    this.type = f.type;\n    this.linkedId = f.linkedId;\n  }\n\n  get maskedValue(): string {\n    return this.value != null ? \"••••••••\" : null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<FieldView>>): FieldView {\n    return Object.assign(new FieldView(), obj);\n  }\n}\n","export enum UriMatchType {\n  Domain = 0,\n  Host = 1,\n  StartsWith = 2,\n  Exact = 3,\n  RegularExpression = 4,\n  Never = 5,\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { IdentityLinkedId as LinkedId } from \"../../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../../misc/utils\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class IdentityView extends ItemView {\n  @linkedFieldOption(LinkedId.Title)\n  title: string = null;\n  @linkedFieldOption(LinkedId.MiddleName)\n  middleName: string = null;\n  @linkedFieldOption(LinkedId.Address1)\n  address1: string = null;\n  @linkedFieldOption(LinkedId.Address2)\n  address2: string = null;\n  @linkedFieldOption(LinkedId.Address3)\n  address3: string = null;\n  @linkedFieldOption(LinkedId.City, \"cityTown\")\n  city: string = null;\n  @linkedFieldOption(LinkedId.State, \"stateProvince\")\n  state: string = null;\n  @linkedFieldOption(LinkedId.PostalCode, \"zipPostalCode\")\n  postalCode: string = null;\n  @linkedFieldOption(LinkedId.Country)\n  country: string = null;\n  @linkedFieldOption(LinkedId.Company)\n  company: string = null;\n  @linkedFieldOption(LinkedId.Email)\n  email: string = null;\n  @linkedFieldOption(LinkedId.Phone)\n  phone: string = null;\n  @linkedFieldOption(LinkedId.Ssn)\n  ssn: string = null;\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.PassportNumber)\n  passportNumber: string = null;\n  @linkedFieldOption(LinkedId.LicenseNumber)\n  licenseNumber: string = null;\n\n  private _firstName: string = null;\n  private _lastName: string = null;\n  private _subTitle: string = null;\n\n  constructor() {\n    super();\n  }\n\n  @linkedFieldOption(LinkedId.FirstName)\n  get firstName(): string {\n    return this._firstName;\n  }\n  set firstName(value: string) {\n    this._firstName = value;\n    this._subTitle = null;\n  }\n\n  @linkedFieldOption(LinkedId.LastName)\n  get lastName(): string {\n    return this._lastName;\n  }\n  set lastName(value: string) {\n    this._lastName = value;\n    this._subTitle = null;\n  }\n\n  get subTitle(): string {\n    if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n      this._subTitle = \"\";\n      if (this.firstName != null) {\n        this._subTitle = this.firstName;\n      }\n      if (this.lastName != null) {\n        if (this._subTitle !== \"\") {\n          this._subTitle += \" \";\n        }\n        this._subTitle += this.lastName;\n      }\n    }\n\n    return this._subTitle;\n  }\n\n  @linkedFieldOption(LinkedId.FullName)\n  get fullName(): string {\n    if (\n      this.title != null ||\n      this.firstName != null ||\n      this.middleName != null ||\n      this.lastName != null\n    ) {\n      let name = \"\";\n      if (this.title != null) {\n        name += this.title + \" \";\n      }\n      if (this.firstName != null) {\n        name += this.firstName + \" \";\n      }\n      if (this.middleName != null) {\n        name += this.middleName + \" \";\n      }\n      if (this.lastName != null) {\n        name += this.lastName;\n      }\n      return name.trim();\n    }\n\n    return null;\n  }\n\n  get fullAddress(): string {\n    let address = this.address1;\n    if (!Utils.isNullOrWhitespace(this.address2)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address2;\n    }\n    if (!Utils.isNullOrWhitespace(this.address3)) {\n      if (!Utils.isNullOrWhitespace(address)) {\n        address += \", \";\n      }\n      address += this.address3;\n    }\n    return address;\n  }\n\n  get fullAddressPart2(): string {\n    if (this.city == null && this.state == null && this.postalCode == null) {\n      return null;\n    }\n    const city = this.city || \"-\";\n    const state = this.state;\n    const postalCode = this.postalCode || \"-\";\n    let addressPart2 = city;\n    if (!Utils.isNullOrWhitespace(state)) {\n      addressPart2 += \", \" + state;\n    }\n    addressPart2 += \", \" + postalCode;\n    return addressPart2;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<IdentityView>>): IdentityView {\n    return Object.assign(new IdentityView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../../enums/uriMatchType\";\nimport { Utils } from \"../../../misc/utils\";\nimport { View } from \"../../../models/view/view\";\nimport { LoginUri } from \"../domain/login-uri\";\n\nconst CanLaunchWhitelist = [\n  \"https://\",\n  \"http://\",\n  \"ssh://\",\n  \"ftp://\",\n  \"sftp://\",\n  \"irc://\",\n  \"vnc://\",\n  // https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-uri\n  \"rdp://\", // Legacy RDP URI scheme\n  \"ms-rd:\", // Preferred RDP URI scheme\n  \"chrome://\",\n  \"iosapp://\",\n  \"androidapp://\",\n];\n\nexport class LoginUriView implements View {\n  match: UriMatchType = null;\n\n  private _uri: string = null;\n  private _domain: string = null;\n  private _hostname: string = null;\n  private _host: string = null;\n  private _canLaunch: boolean = null;\n\n  constructor(u?: LoginUri) {\n    if (!u) {\n      return;\n    }\n\n    this.match = u.match;\n  }\n\n  get uri(): string {\n    return this._uri;\n  }\n  set uri(value: string) {\n    this._uri = value;\n    this._domain = null;\n    this._canLaunch = null;\n  }\n\n  get domain(): string {\n    if (this._domain == null && this.uri != null) {\n      this._domain = Utils.getDomain(this.uri);\n      if (this._domain === \"\") {\n        this._domain = null;\n      }\n    }\n\n    return this._domain;\n  }\n\n  get hostname(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._hostname == null && this.uri != null) {\n      this._hostname = Utils.getHostname(this.uri);\n      if (this._hostname === \"\") {\n        this._hostname = null;\n      }\n    }\n\n    return this._hostname;\n  }\n\n  get host(): string {\n    if (this.match === UriMatchType.RegularExpression) {\n      return null;\n    }\n    if (this._host == null && this.uri != null) {\n      this._host = Utils.getHost(this.uri);\n      if (this._host === \"\") {\n        this._host = null;\n      }\n    }\n\n    return this._host;\n  }\n\n  get hostnameOrUri(): string {\n    return this.hostname != null ? this.hostname : this.uri;\n  }\n\n  get hostOrUri(): string {\n    return this.host != null ? this.host : this.uri;\n  }\n\n  get isWebsite(): boolean {\n    return (\n      this.uri != null &&\n      (this.uri.indexOf(\"http://\") === 0 ||\n        this.uri.indexOf(\"https://\") === 0 ||\n        (this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))))\n    );\n  }\n\n  get canLaunch(): boolean {\n    if (this._canLaunch != null) {\n      return this._canLaunch;\n    }\n    if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n      const uri = this.launchUri;\n      for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n        if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n          this._canLaunch = true;\n          return this._canLaunch;\n        }\n      }\n    }\n    this._canLaunch = false;\n    return this._canLaunch;\n  }\n\n  get launchUri(): string {\n    return this.uri.indexOf(\"://\") < 0 && !Utils.isNullOrWhitespace(Utils.getDomain(this.uri))\n      ? \"http://\" + this.uri\n      : this.uri;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginUriView>>): LoginUriView {\n    return Object.assign(new LoginUriView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LoginLinkedId as LinkedId } from \"../../../enums/linkedIdType\";\nimport { linkedFieldOption } from \"../../../misc/linkedFieldOption.decorator\";\nimport { Utils } from \"../../../misc/utils\";\nimport { Login } from \"../domain/login\";\n\nimport { ItemView } from \"./item.view\";\nimport { LoginUriView } from \"./login-uri.view\";\n\nexport class LoginView extends ItemView {\n  @linkedFieldOption(LinkedId.Username)\n  username: string = null;\n  @linkedFieldOption(LinkedId.Password)\n  password: string = null;\n\n  passwordRevisionDate?: Date = null;\n  totp: string = null;\n  uris: LoginUriView[] = null;\n  autofillOnPageLoad: boolean = null;\n\n  constructor(l?: Login) {\n    super();\n    if (!l) {\n      return;\n    }\n\n    this.passwordRevisionDate = l.passwordRevisionDate;\n    this.autofillOnPageLoad = l.autofillOnPageLoad;\n  }\n\n  get uri(): string {\n    return this.hasUris ? this.uris[0].uri : null;\n  }\n\n  get maskedPassword(): string {\n    return this.password != null ? \"••••••••\" : null;\n  }\n\n  get subTitle(): string {\n    return this.username;\n  }\n\n  get canLaunch(): boolean {\n    return this.hasUris && this.uris.some((u) => u.canLaunch);\n  }\n\n  get hasTotp(): boolean {\n    return !Utils.isNullOrWhitespace(this.totp);\n  }\n\n  get launchUri(): string {\n    if (this.hasUris) {\n      const uri = this.uris.find((u) => u.canLaunch);\n      if (uri != null) {\n        return uri.launchUri;\n      }\n    }\n    return null;\n  }\n\n  get hasUris(): boolean {\n    return this.uris != null && this.uris.length > 0;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<LoginView>>): LoginView {\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUriView.fromJSON(uri));\n\n    return Object.assign(new LoginView(), obj, {\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { View } from \"../../../models/view/view\";\nimport { Password } from \"../domain/password\";\n\nexport class PasswordHistoryView implements View {\n  password: string = null;\n  lastUsedDate: Date = null;\n\n  constructor(ph?: Password) {\n    if (!ph) {\n      return;\n    }\n\n    this.lastUsedDate = ph.lastUsedDate;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<PasswordHistoryView>>): PasswordHistoryView {\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new PasswordHistoryView(), obj, {\n      lastUsedDate: lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../../enums/secureNoteType\";\nimport { SecureNote } from \"../domain/secure-note\";\n\nimport { ItemView } from \"./item.view\";\n\nexport class SecureNoteView extends ItemView {\n  type: SecureNoteType = null;\n\n  constructor(n?: SecureNote) {\n    super();\n    if (!n) {\n      return;\n    }\n\n    this.type = n.type;\n  }\n\n  get subTitle(): string {\n    return null;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<SecureNoteView>>): SecureNoteView {\n    return Object.assign(new SecureNoteView(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { LinkedIdType } from \"../../../enums/linkedIdType\";\nimport { InitializerMetadata } from \"../../../interfaces/initializer-metadata.interface\";\nimport { View } from \"../../../models/view/view\";\nimport { InitializerKey } from \"../../../services/cryptography/initializer-key\";\nimport { CipherRepromptType } from \"../../enums/cipher-reprompt-type\";\nimport { CipherType } from \"../../enums/cipher-type\";\nimport { LocalData } from \"../data/local.data\";\nimport { Cipher } from \"../domain/cipher\";\n\nimport { AttachmentView } from \"./attachment.view\";\nimport { CardView } from \"./card.view\";\nimport { FieldView } from \"./field.view\";\nimport { IdentityView } from \"./identity.view\";\nimport { LoginView } from \"./login.view\";\nimport { PasswordHistoryView } from \"./password-history.view\";\nimport { SecureNoteView } from \"./secure-note.view\";\n\nexport class CipherView implements View, InitializerMetadata {\n  readonly initializerKey = InitializerKey.CipherView;\n\n  id: string = null;\n  organizationId: string = null;\n  folderId: string = null;\n  name: string = null;\n  notes: string = null;\n  type: CipherType = null;\n  favorite = false;\n  organizationUseTotp = false;\n  edit = false;\n  viewPassword = true;\n  localData: LocalData;\n  login = new LoginView();\n  identity = new IdentityView();\n  card = new CardView();\n  secureNote = new SecureNoteView();\n  attachments: AttachmentView[] = null;\n  fields: FieldView[] = null;\n  passwordHistory: PasswordHistoryView[] = null;\n  collectionIds: string[] = null;\n  revisionDate: Date = null;\n  creationDate: Date = null;\n  deletedDate: Date = null;\n  reprompt: CipherRepromptType = CipherRepromptType.None;\n\n  constructor(c?: Cipher) {\n    if (!c) {\n      return;\n    }\n\n    this.id = c.id;\n    this.organizationId = c.organizationId;\n    this.folderId = c.folderId;\n    this.favorite = c.favorite;\n    this.organizationUseTotp = c.organizationUseTotp;\n    this.edit = c.edit;\n    this.viewPassword = c.viewPassword;\n    this.type = c.type;\n    this.localData = c.localData;\n    this.collectionIds = c.collectionIds;\n    this.revisionDate = c.revisionDate;\n    this.creationDate = c.creationDate;\n    this.deletedDate = c.deletedDate;\n    // Old locally stored ciphers might have reprompt == null. If so set it to None.\n    this.reprompt = c.reprompt ?? CipherRepromptType.None;\n  }\n\n  private get item() {\n    switch (this.type) {\n      case CipherType.Login:\n        return this.login;\n      case CipherType.SecureNote:\n        return this.secureNote;\n      case CipherType.Card:\n        return this.card;\n      case CipherType.Identity:\n        return this.identity;\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  get subTitle(): string {\n    return this.item.subTitle;\n  }\n\n  get hasPasswordHistory(): boolean {\n    return this.passwordHistory && this.passwordHistory.length > 0;\n  }\n\n  get hasAttachments(): boolean {\n    return this.attachments && this.attachments.length > 0;\n  }\n\n  get hasOldAttachments(): boolean {\n    if (this.hasAttachments) {\n      for (let i = 0; i < this.attachments.length; i++) {\n        if (this.attachments[i].key == null) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  get hasFields(): boolean {\n    return this.fields && this.fields.length > 0;\n  }\n\n  get passwordRevisionDisplayDate(): Date {\n    if (this.type !== CipherType.Login || this.login == null) {\n      return null;\n    } else if (this.login.password == null || this.login.password === \"\") {\n      return null;\n    }\n    return this.login.passwordRevisionDate;\n  }\n\n  get isDeleted(): boolean {\n    return this.deletedDate != null;\n  }\n\n  get linkedFieldOptions() {\n    return this.item.linkedFieldOptions;\n  }\n\n  linkedFieldValue(id: LinkedIdType) {\n    const linkedFieldOption = this.linkedFieldOptions?.get(id);\n    if (linkedFieldOption == null) {\n      return null;\n    }\n\n    const item = this.item;\n    return this.item[linkedFieldOption.propertyKey as keyof typeof item];\n  }\n\n  linkedFieldI18nKey(id: LinkedIdType): string {\n    return this.linkedFieldOptions.get(id)?.i18nKey;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<CipherView>>): CipherView {\n    const view = new CipherView();\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => AttachmentView.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => FieldView.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => PasswordHistoryView.fromJSON(ph));\n\n    Object.assign(view, obj, {\n      revisionDate: revisionDate,\n      deletedDate: deletedDate,\n      attachments: attachments,\n      fields: fields,\n      passwordHistory: passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        view.card = CardView.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        view.identity = IdentityView.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        view.login = LoginView.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        view.secureNote = SecureNoteView.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return view;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Utils } from \"../../../misc/utils\";\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { AttachmentData } from \"../data/attachment.data\";\nimport { AttachmentView } from \"../view/attachment.view\";\n\nexport class Attachment extends Domain {\n  id: string;\n  url: string;\n  size: string;\n  sizeName: string; // Readable size, ex: \"4.2 KB\" or \"1.43 GB\"\n  key: EncString;\n  fileName: EncString;\n\n  constructor(obj?: AttachmentData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.size = obj.size;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<AttachmentView> {\n    const view = await this.decryptObj(\n      new AttachmentView(this),\n      {\n        fileName: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.key != null) {\n      view.key = await this.decryptAttachmentKey(orgId, encKey);\n    }\n\n    return view;\n  }\n\n  private async decryptAttachmentKey(orgId: string, encKey?: SymmetricCryptoKey) {\n    try {\n      if (encKey == null) {\n        encKey = await this.getKeyForDecryption(orgId);\n      }\n\n      const encryptService = Utils.getContainerService().getEncryptService();\n      const decValue = await encryptService.decryptToBytes(this.key, encKey);\n      return new SymmetricCryptoKey(decValue);\n    } catch (e) {\n      // TODO: error?\n    }\n  }\n\n  private async getKeyForDecryption(orgId: string) {\n    const cryptoService = Utils.getContainerService().getCryptoService();\n    return orgId != null\n      ? await cryptoService.getOrgKey(orgId)\n      : await cryptoService.getKeyForUserEncryption();\n  }\n\n  toAttachmentData(): AttachmentData {\n    const a = new AttachmentData();\n    a.size = this.size;\n    this.buildDataModel(\n      this,\n      a,\n      {\n        id: null,\n        url: null,\n        sizeName: null,\n        fileName: null,\n        key: null,\n      },\n      [\"id\", \"url\", \"sizeName\"]\n    );\n    return a;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Attachment>>): Attachment {\n    if (obj == null) {\n      return null;\n    }\n\n    const key = EncString.fromJSON(obj.key);\n    const fileName = EncString.fromJSON(obj.fileName);\n\n    return Object.assign(new Attachment(), obj, {\n      key,\n      fileName,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { CardData } from \"../data/card.data\";\nimport { CardView } from \"../view/card.view\";\n\nexport class Card extends Domain {\n  cardholderName: EncString;\n  brand: EncString;\n  number: EncString;\n  expMonth: EncString;\n  expYear: EncString;\n  code: EncString;\n\n  constructor(obj?: CardData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<CardView> {\n    return this.decryptObj(\n      new CardView(),\n      {\n        cardholderName: null,\n        brand: null,\n        number: null,\n        expMonth: null,\n        expYear: null,\n        code: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toCardData(): CardData {\n    const c = new CardData();\n    this.buildDataModel(this, c, {\n      cardholderName: null,\n      brand: null,\n      number: null,\n      expMonth: null,\n      expYear: null,\n      code: null,\n    });\n    return c;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Card>>): Card {\n    if (obj == null) {\n      return null;\n    }\n\n    const cardholderName = EncString.fromJSON(obj.cardholderName);\n    const brand = EncString.fromJSON(obj.brand);\n    const number = EncString.fromJSON(obj.number);\n    const expMonth = EncString.fromJSON(obj.expMonth);\n    const expYear = EncString.fromJSON(obj.expYear);\n    const code = EncString.fromJSON(obj.code);\n    return Object.assign(new Card(), obj, {\n      cardholderName,\n      brand,\n      number,\n      expMonth,\n      expYear,\n      code,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { FieldType } from \"../../../enums/fieldType\";\nimport { LinkedIdType } from \"../../../enums/linkedIdType\";\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { FieldData } from \"../data/field.data\";\nimport { FieldView } from \"../view/field.view\";\n\nexport class Field extends Domain {\n  name: EncString;\n  value: EncString;\n  type: FieldType;\n  linkedId: LinkedIdType;\n\n  constructor(obj?: FieldData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n    this.linkedId = obj.linkedId;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        name: null,\n        value: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<FieldView> {\n    return this.decryptObj(\n      new FieldView(this),\n      {\n        name: null,\n        value: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toFieldData(): FieldData {\n    const f = new FieldData();\n    this.buildDataModel(\n      this,\n      f,\n      {\n        name: null,\n        value: null,\n        type: null,\n        linkedId: null,\n      },\n      [\"type\", \"linkedId\"]\n    );\n    return f;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Field>>): Field {\n    if (obj == null) {\n      return null;\n    }\n\n    const name = EncString.fromJSON(obj.name);\n    const value = EncString.fromJSON(obj.value);\n\n    return Object.assign(new Field(), obj, {\n      name,\n      value,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { IdentityData } from \"../data/identity.data\";\nimport { IdentityView } from \"../view/identity.view\";\n\nexport class Identity extends Domain {\n  title: EncString;\n  firstName: EncString;\n  middleName: EncString;\n  lastName: EncString;\n  address1: EncString;\n  address2: EncString;\n  address3: EncString;\n  city: EncString;\n  state: EncString;\n  postalCode: EncString;\n  country: EncString;\n  company: EncString;\n  email: EncString;\n  phone: EncString;\n  ssn: EncString;\n  username: EncString;\n  passportNumber: EncString;\n  licenseNumber: EncString;\n\n  constructor(obj?: IdentityData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<IdentityView> {\n    return this.decryptObj(\n      new IdentityView(),\n      {\n        title: null,\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        address1: null,\n        address2: null,\n        address3: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: null,\n        company: null,\n        email: null,\n        phone: null,\n        ssn: null,\n        username: null,\n        passportNumber: null,\n        licenseNumber: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toIdentityData(): IdentityData {\n    const i = new IdentityData();\n    this.buildDataModel(this, i, {\n      title: null,\n      firstName: null,\n      middleName: null,\n      lastName: null,\n      address1: null,\n      address2: null,\n      address3: null,\n      city: null,\n      state: null,\n      postalCode: null,\n      country: null,\n      company: null,\n      email: null,\n      phone: null,\n      ssn: null,\n      username: null,\n      passportNumber: null,\n      licenseNumber: null,\n    });\n    return i;\n  }\n\n  static fromJSON(obj: Jsonify<Identity>): Identity {\n    if (obj == null) {\n      return null;\n    }\n\n    const title = EncString.fromJSON(obj.title);\n    const firstName = EncString.fromJSON(obj.firstName);\n    const middleName = EncString.fromJSON(obj.middleName);\n    const lastName = EncString.fromJSON(obj.lastName);\n    const address1 = EncString.fromJSON(obj.address1);\n    const address2 = EncString.fromJSON(obj.address2);\n    const address3 = EncString.fromJSON(obj.address3);\n    const city = EncString.fromJSON(obj.city);\n    const state = EncString.fromJSON(obj.state);\n    const postalCode = EncString.fromJSON(obj.postalCode);\n    const country = EncString.fromJSON(obj.country);\n    const company = EncString.fromJSON(obj.company);\n    const email = EncString.fromJSON(obj.email);\n    const phone = EncString.fromJSON(obj.phone);\n    const ssn = EncString.fromJSON(obj.ssn);\n    const username = EncString.fromJSON(obj.username);\n    const passportNumber = EncString.fromJSON(obj.passportNumber);\n    const licenseNumber = EncString.fromJSON(obj.licenseNumber);\n\n    return Object.assign(new Identity(), obj, {\n      title,\n      firstName,\n      middleName,\n      lastName,\n      address1,\n      address2,\n      address3,\n      city,\n      state,\n      postalCode,\n      country,\n      company,\n      email,\n      phone,\n      ssn,\n      username,\n      passportNumber,\n      licenseNumber,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { UriMatchType } from \"../../../enums/uriMatchType\";\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { LoginUriData } from \"../data/login-uri.data\";\nimport { LoginUriView } from \"../view/login-uri.view\";\n\nexport class LoginUri extends Domain {\n  uri: EncString;\n  match: UriMatchType;\n\n  constructor(obj?: LoginUriData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.match = obj.match;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        uri: null,\n      },\n      []\n    );\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginUriView> {\n    return this.decryptObj(\n      new LoginUriView(this),\n      {\n        uri: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toLoginUriData(): LoginUriData {\n    const u = new LoginUriData();\n    this.buildDataModel(\n      this,\n      u,\n      {\n        uri: null,\n        match: null,\n      },\n      [\"match\"]\n    );\n    return u;\n  }\n\n  static fromJSON(obj: Jsonify<LoginUri>): LoginUri {\n    if (obj == null) {\n      return null;\n    }\n\n    const uri = EncString.fromJSON(obj.uri);\n    return Object.assign(new LoginUri(), obj, {\n      uri,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { LoginData } from \"../data/login.data\";\nimport { LoginView } from \"../view/login.view\";\n\nimport { LoginUri } from \"./login-uri\";\n\nexport class Login extends Domain {\n  uris: LoginUri[];\n  username: EncString;\n  password: EncString;\n  passwordRevisionDate?: Date;\n  totp: EncString;\n  autofillOnPageLoad: boolean;\n\n  constructor(obj?: LoginData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.passwordRevisionDate =\n      obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n    this.autofillOnPageLoad = obj.autofillOnPageLoad;\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      []\n    );\n\n    if (obj.uris) {\n      this.uris = [];\n      obj.uris.forEach((u) => {\n        this.uris.push(new LoginUri(u));\n      });\n    }\n  }\n\n  async decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<LoginView> {\n    const view = await this.decryptObj(\n      new LoginView(this),\n      {\n        username: null,\n        password: null,\n        totp: null,\n      },\n      orgId,\n      encKey\n    );\n\n    if (this.uris != null) {\n      view.uris = [];\n      for (let i = 0; i < this.uris.length; i++) {\n        const uri = await this.uris[i].decrypt(orgId, encKey);\n        view.uris.push(uri);\n      }\n    }\n\n    return view;\n  }\n\n  toLoginData(): LoginData {\n    const l = new LoginData();\n    l.passwordRevisionDate =\n      this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n    l.autofillOnPageLoad = this.autofillOnPageLoad;\n    this.buildDataModel(this, l, {\n      username: null,\n      password: null,\n      totp: null,\n    });\n\n    if (this.uris != null && this.uris.length > 0) {\n      l.uris = [];\n      this.uris.forEach((u) => {\n        l.uris.push(u.toLoginUriData());\n      });\n    }\n\n    return l;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Login>>): Login {\n    if (obj == null) {\n      return null;\n    }\n\n    const username = EncString.fromJSON(obj.username);\n    const password = EncString.fromJSON(obj.password);\n    const totp = EncString.fromJSON(obj.totp);\n    const passwordRevisionDate =\n      obj.passwordRevisionDate == null ? null : new Date(obj.passwordRevisionDate);\n    const uris = obj.uris?.map((uri: any) => LoginUri.fromJSON(uri));\n\n    return Object.assign(new Login(), obj, {\n      username,\n      password,\n      totp,\n      passwordRevisionDate: passwordRevisionDate,\n      uris: uris,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { PasswordHistoryData } from \"../data/password-history.data\";\nimport { PasswordHistoryView } from \"../view/password-history.view\";\n\nexport class Password extends Domain {\n  password: EncString;\n  lastUsedDate: Date;\n\n  constructor(obj?: PasswordHistoryData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(this, obj, {\n      password: null,\n    });\n    this.lastUsedDate = new Date(obj.lastUsedDate);\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<PasswordHistoryView> {\n    return this.decryptObj(\n      new PasswordHistoryView(this),\n      {\n        password: null,\n      },\n      orgId,\n      encKey\n    );\n  }\n\n  toPasswordHistoryData(): PasswordHistoryData {\n    const ph = new PasswordHistoryData();\n    ph.lastUsedDate = this.lastUsedDate.toISOString();\n    this.buildDataModel(this, ph, {\n      password: null,\n    });\n    return ph;\n  }\n\n  static fromJSON(obj: Partial<Jsonify<Password>>): Password {\n    if (obj == null) {\n      return null;\n    }\n\n    const password = EncString.fromJSON(obj.password);\n    const lastUsedDate = obj.lastUsedDate == null ? null : new Date(obj.lastUsedDate);\n\n    return Object.assign(new Password(), obj, {\n      password,\n      lastUsedDate,\n    });\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { SecureNoteType } from \"../../../enums/secureNoteType\";\nimport Domain from \"../../../models/domain/domain-base\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { SecureNoteData } from \"../data/secure-note.data\";\nimport { SecureNoteView } from \"../view/secure-note.view\";\n\nexport class SecureNote extends Domain {\n  type: SecureNoteType;\n\n  constructor(obj?: SecureNoteData) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.type = obj.type;\n  }\n\n  decrypt(orgId: string, encKey?: SymmetricCryptoKey): Promise<SecureNoteView> {\n    return Promise.resolve(new SecureNoteView(this));\n  }\n\n  toSecureNoteData(): SecureNoteData {\n    const n = new SecureNoteData();\n    n.type = this.type;\n    return n;\n  }\n\n  static fromJSON(obj: Jsonify<SecureNote>): SecureNote {\n    if (obj == null) {\n      return null;\n    }\n\n    return Object.assign(new SecureNote(), obj);\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../../interfaces/decryptable.interface\";\nimport Domain from \"../../../models/domain/domain-base\";\nimport { EncString } from \"../../../models/domain/enc-string\";\nimport { SymmetricCryptoKey } from \"../../../models/domain/symmetric-crypto-key\";\nimport { InitializerKey } from \"../../../services/cryptography/initializer-key\";\nimport { CipherRepromptType } from \"../../enums/cipher-reprompt-type\";\nimport { CipherType } from \"../../enums/cipher-type\";\nimport { CipherData } from \"../data/cipher.data\";\nimport { LocalData } from \"../data/local.data\";\nimport { CipherView } from \"../view/cipher.view\";\n\nimport { Attachment } from \"./attachment\";\nimport { Card } from \"./card\";\nimport { Field } from \"./field\";\nimport { Identity } from \"./identity\";\nimport { Login } from \"./login\";\nimport { Password } from \"./password\";\nimport { SecureNote } from \"./secure-note\";\n\nexport class Cipher extends Domain implements Decryptable<CipherView> {\n  readonly initializerKey = InitializerKey.Cipher;\n\n  id: string;\n  organizationId: string;\n  folderId: string;\n  name: EncString;\n  notes: EncString;\n  type: CipherType;\n  favorite: boolean;\n  organizationUseTotp: boolean;\n  edit: boolean;\n  viewPassword: boolean;\n  revisionDate: Date;\n  localData: LocalData;\n  login: Login;\n  identity: Identity;\n  card: Card;\n  secureNote: SecureNote;\n  attachments: Attachment[];\n  fields: Field[];\n  passwordHistory: Password[];\n  collectionIds: string[];\n  creationDate: Date;\n  deletedDate: Date;\n  reprompt: CipherRepromptType;\n\n  constructor(obj?: CipherData, localData: LocalData = null) {\n    super();\n    if (obj == null) {\n      return;\n    }\n\n    this.buildDomainModel(\n      this,\n      obj,\n      {\n        id: null,\n        organizationId: null,\n        folderId: null,\n        name: null,\n        notes: null,\n      },\n      [\"id\", \"organizationId\", \"folderId\"]\n    );\n\n    this.type = obj.type;\n    this.favorite = obj.favorite;\n    this.organizationUseTotp = obj.organizationUseTotp;\n    this.edit = obj.edit;\n    if (obj.viewPassword != null) {\n      this.viewPassword = obj.viewPassword;\n    } else {\n      this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n    }\n    this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    this.collectionIds = obj.collectionIds;\n    this.localData = localData;\n    this.creationDate = obj.creationDate != null ? new Date(obj.creationDate) : null;\n    this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n    this.reprompt = obj.reprompt;\n\n    switch (this.type) {\n      case CipherType.Login:\n        this.login = new Login(obj.login);\n        break;\n      case CipherType.SecureNote:\n        this.secureNote = new SecureNote(obj.secureNote);\n        break;\n      case CipherType.Card:\n        this.card = new Card(obj.card);\n        break;\n      case CipherType.Identity:\n        this.identity = new Identity(obj.identity);\n        break;\n      default:\n        break;\n    }\n\n    if (obj.attachments != null) {\n      this.attachments = obj.attachments.map((a) => new Attachment(a));\n    } else {\n      this.attachments = null;\n    }\n\n    if (obj.fields != null) {\n      this.fields = obj.fields.map((f) => new Field(f));\n    } else {\n      this.fields = null;\n    }\n\n    if (obj.passwordHistory != null) {\n      this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph));\n    } else {\n      this.passwordHistory = null;\n    }\n  }\n\n  async decrypt(encKey?: SymmetricCryptoKey): Promise<CipherView> {\n    const model = new CipherView(this);\n\n    await this.decryptObj(\n      model,\n      {\n        name: null,\n        notes: null,\n      },\n      this.organizationId,\n      encKey\n    );\n\n    switch (this.type) {\n      case CipherType.Login:\n        model.login = await this.login.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.SecureNote:\n        model.secureNote = await this.secureNote.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Card:\n        model.card = await this.card.decrypt(this.organizationId, encKey);\n        break;\n      case CipherType.Identity:\n        model.identity = await this.identity.decrypt(this.organizationId, encKey);\n        break;\n      default:\n        break;\n    }\n\n    const orgId = this.organizationId;\n\n    if (this.attachments != null && this.attachments.length > 0) {\n      const attachments: any[] = [];\n      await this.attachments.reduce((promise, attachment) => {\n        return promise\n          .then(() => {\n            return attachment.decrypt(orgId, encKey);\n          })\n          .then((decAttachment) => {\n            attachments.push(decAttachment);\n          });\n      }, Promise.resolve());\n      model.attachments = attachments;\n    }\n\n    if (this.fields != null && this.fields.length > 0) {\n      const fields: any[] = [];\n      await this.fields.reduce((promise, field) => {\n        return promise\n          .then(() => {\n            return field.decrypt(orgId, encKey);\n          })\n          .then((decField) => {\n            fields.push(decField);\n          });\n      }, Promise.resolve());\n      model.fields = fields;\n    }\n\n    if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n      const passwordHistory: any[] = [];\n      await this.passwordHistory.reduce((promise, ph) => {\n        return promise\n          .then(() => {\n            return ph.decrypt(orgId, encKey);\n          })\n          .then((decPh) => {\n            passwordHistory.push(decPh);\n          });\n      }, Promise.resolve());\n      model.passwordHistory = passwordHistory;\n    }\n\n    return model;\n  }\n\n  toCipherData(): CipherData {\n    const c = new CipherData();\n    c.id = this.id;\n    c.organizationId = this.organizationId;\n    c.folderId = this.folderId;\n    c.edit = this.edit;\n    c.viewPassword = this.viewPassword;\n    c.organizationUseTotp = this.organizationUseTotp;\n    c.favorite = this.favorite;\n    c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n    c.type = this.type;\n    c.collectionIds = this.collectionIds;\n    c.creationDate = this.creationDate != null ? this.creationDate.toISOString() : null;\n    c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n    c.reprompt = this.reprompt;\n\n    this.buildDataModel(this, c, {\n      name: null,\n      notes: null,\n    });\n\n    switch (c.type) {\n      case CipherType.Login:\n        c.login = this.login.toLoginData();\n        break;\n      case CipherType.SecureNote:\n        c.secureNote = this.secureNote.toSecureNoteData();\n        break;\n      case CipherType.Card:\n        c.card = this.card.toCardData();\n        break;\n      case CipherType.Identity:\n        c.identity = this.identity.toIdentityData();\n        break;\n      default:\n        break;\n    }\n\n    if (this.fields != null) {\n      c.fields = this.fields.map((f) => f.toFieldData());\n    }\n    if (this.attachments != null) {\n      c.attachments = this.attachments.map((a) => a.toAttachmentData());\n    }\n    if (this.passwordHistory != null) {\n      c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n    }\n    return c;\n  }\n\n  static fromJSON(obj: Jsonify<Cipher>) {\n    if (obj == null) {\n      return null;\n    }\n\n    const domain = new Cipher();\n    const name = EncString.fromJSON(obj.name);\n    const notes = EncString.fromJSON(obj.notes);\n    const revisionDate = obj.revisionDate == null ? null : new Date(obj.revisionDate);\n    const deletedDate = obj.deletedDate == null ? null : new Date(obj.deletedDate);\n    const attachments = obj.attachments?.map((a: any) => Attachment.fromJSON(a));\n    const fields = obj.fields?.map((f: any) => Field.fromJSON(f));\n    const passwordHistory = obj.passwordHistory?.map((ph: any) => Password.fromJSON(ph));\n\n    Object.assign(domain, obj, {\n      name,\n      notes,\n      revisionDate,\n      deletedDate,\n      attachments,\n      fields,\n      passwordHistory,\n    });\n\n    switch (obj.type) {\n      case CipherType.Card:\n        domain.card = Card.fromJSON(obj.card);\n        break;\n      case CipherType.Identity:\n        domain.identity = Identity.fromJSON(obj.identity);\n        break;\n      case CipherType.Login:\n        domain.login = Login.fromJSON(obj.login);\n        break;\n      case CipherType.SecureNote:\n        domain.secureNote = SecureNote.fromJSON(obj.secureNote);\n        break;\n      default:\n        break;\n    }\n\n    return domain;\n  }\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { InitializerMetadata } from \"../../interfaces/initializer-metadata.interface\";\nimport { Cipher } from \"../../vault/models/domain/cipher\";\nimport { CipherView } from \"../../vault/models/view/cipher.view\";\n\nimport { InitializerKey } from \"./initializer-key\";\n\n/**\n * Internal reference of classes so we can reconstruct objects properly.\n * Each entry should be keyed using the Decryptable.initializerKey property\n */\nconst classInitializers: Record<InitializerKey, (obj: any) => any> = {\n  [InitializerKey.Cipher]: Cipher.fromJSON,\n  [InitializerKey.CipherView]: CipherView.fromJSON,\n};\n\nexport function getClassInitializer<T extends InitializerMetadata>(\n  className: InitializerKey\n): (obj: Jsonify<T>) => T {\n  return classInitializers[className];\n}\n","import { Jsonify } from \"type-fest\";\n\nimport { Decryptable } from \"../../interfaces/decryptable.interface\";\nimport { SymmetricCryptoKey } from \"../../models/domain/symmetric-crypto-key\";\nimport { ConsoleLogService } from \"../../services/consoleLog.service\";\nimport { ContainerService } from \"../../services/container.service\";\nimport { WebCryptoFunctionService } from \"../../services/webCryptoFunction.service\";\n\nimport { EncryptServiceImplementation } from \"./encrypt.service.implementation\";\nimport { getClassInitializer } from \"./get-class-initializer\";\n\nconst workerApi: Worker = self as any;\n\nlet inited = false;\nlet encryptService: EncryptServiceImplementation;\n\n/**\n * Bootstrap the worker environment with services required for decryption\n */\nexport function init() {\n  const cryptoFunctionService = new WebCryptoFunctionService(self);\n  const logService = new ConsoleLogService(false);\n  encryptService = new EncryptServiceImplementation(cryptoFunctionService, logService, true);\n\n  const bitwardenContainerService = new ContainerService(null, encryptService);\n  bitwardenContainerService.attachToGlobal(self);\n\n  inited = true;\n}\n\n/**\n * Listen for messages and decrypt their contents\n */\nworkerApi.addEventListener(\"message\", async (event: { data: string }) => {\n  if (!inited) {\n    init();\n  }\n\n  const request: {\n    id: string;\n    items: Jsonify<Decryptable<any>>[];\n    key: Jsonify<SymmetricCryptoKey>;\n  } = JSON.parse(event.data);\n\n  const key = SymmetricCryptoKey.fromJSON(request.key);\n  const items = request.items.map((jsonItem) => {\n    const initializer = getClassInitializer<Decryptable<any>>(jsonItem.initializerKey);\n    return initializer(jsonItem);\n  });\n  const result = await encryptService.decryptItems(items, key);\n\n  workerApi.postMessage({\n    id: request.id,\n    items: JSON.stringify(result),\n  });\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [210], () => (__webpack_require__(92246)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + \"4fa9eac94649892afe39\" + \".js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t768: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunk_bitwarden_web_vault\"] = self[\"webpackChunk_bitwarden_web_vault\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","leafPrototypes","getProto","next","EncryptionType","nodeURL","window","Utils","static","inited","isNode","process","release","name","isBrowser","isMobileBrowser","this","isMobile","isAppleMobileBrowser","isAppleMobile","global","g","self","str","Uint8Array","Buffer","from","binaryString","atob","bytes","length","i","charCodeAt","fromB64ToArray","fromUrlB64ToB64","parseInt","substr","strUtf8","unescape","encodeURIComponent","arr","buffer","toString","binary","byteLength","String","fromCharCode","btoa","fromB64toUrlB64","fromBufferToB64","b64Str","replace","encodedString","apply","decodeURIComponent","escape","Array","prototype","map","call","x","slice","join","urlB64Str","output","Error","fromB64ToUtf8","utfStr","fromBufferToUrlB64","fromUtf8ToArray","c","r","Math","random","id","RegExp","test","uriString","isNullOrWhitespace","trim","startsWith","indexOf","hostname","validHosts","url","getUrl","host","parseResult","isIp","domain","search","Map","split","forEach","pair","parts","set","toLowerCase","i18nService","prop","a","b","collator","compare","localeCompare","obj","undefined","target","source","Object","assign","keys","filter","k","Number","isNaN","getUrlObject","s","charAt","toUpperCase","bgColor","threshold","svgTextFill","bgColorHexNums","substring","hash","color","bitwardenContainerService","fromEntries","record","entries","e","destination","denormalizedPath","win","mobile","navigator","userAgent","vendor","opera","match","ms","Promise","resolve","setTimeout","URL","hasProtocol","anchor","document","createElement","href","regexpEmojiPresentation","minimumPasswordLength","DomainMatchBlacklist","Set","init","SymmetricCryptoKey","constructor","key","encType","AesCbc256_B64","AesCbc256_HmacSha256_B64","encKey","macKey","AesCbc128_HmacSha256_B64","keyB64","encKeyB64","macKeyB64","toJSON","arrayBuffer","LogLevelType","ConsoleLogService","isDev","timersMap","debug","message","write","Debug","info","Info","warning","Warning","error","level","console","log","warn","ContainerService","cryptoService","encryptService","attachToGlobal","getCryptoService","getEncryptService","DecryptParameters","WebCryptoFunctionService","crypto","subtle","wasmSupported","checkIfWasmSupported","pbkdf2","password","salt","algorithm","iterations","wcLen","passwordBuf","toBuf","pbkdf2Params","toWebCryptoAlgorithm","impKey","importKey","deriveBits","argon2","memory","parallelism","passwordArr","saltArr","pass","time","mem","hashLen","type","ArgonType","Argon2id","hkdf","ikm","outputByteSize","hkdfParams","hkdfExpand","prk","infoBuf","infoArr","runningOkmLength","previousT","n","ceil","okm","t","hmac","value","md","valueBytes","toByteString","update","fromByteStringToArray","digest","data","valueBuf","signingAlgorithm","sign","randomBytes","mac1","mac2","arr1","arr2","hmacFast","start","getBytes","compareFast","rand","Uint32Array","putInt32","aesEncrypt","iv","encrypt","aesDecryptFastParameters","mac","p","meta","encKeyByteString","macKeyByteString","macData","aesDecryptFast","parameters","dataBuffer","decipher","finish","val","aesDecrypt","decrypt","rsaEncrypt","publicKey","rsaParams","rsaDecrypt","privateKey","rsaExtractPublicKey","impPrivateKey","jwkPrivateKey","exportKey","jwkPublicKeyParams","kty","alg","ext","impPublicKey","rsaGenerateKeyPair","modulusLength","publicExponent","keyPair","generateKey","getRandomValues","buf","fromBufferToByteString","WebAssembly","instantiate","module","Module","of","Instance","EncArrayBuffer","encryptionType","dataBytes","ivBytes","macBytes","encBytes","minimumLength","ENC_TYPE_LENGTH","throwDecryptionError","response","b64","EncString","encryptedStringOrType","initFromData","initFromEncryptedString","encryptedString","encPieces","parseEncryptedString","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","headerPieces","orgId","decryptedValue","getKeyForDecryption","getContainerService","decryptToUtf8","getOrgKey","getKeyForUserEncryption","EncryptedObject","EncryptServiceImplementation","cryptoFunctionService","logService","logMacFailures","plainValue","plainBuf","encObj","encryptToBytes","encValue","macLen","encString","resolveLegacyKey","fastParams","computedMac","logMacFailed","decryptToBytes","encThing","result","decryptItems","items","all","item","msg","InitializerKey","CipherType","CipherRepromptType","LoginLinkedId","CardLinkedId","IdentityLinkedId","Domain","buildDomainModel","dataObj","notEncList","hasOwnProperty","objProp","buildDataModel","notEncStringList","decryptObj","viewModel","promises","theProp","then","mapProp","push","AttachmentData","fileName","size","sizeName","CardData","cardholderName","brand","number","expMonth","expYear","code","FieldData","linkedId","IdentityData","title","firstName","middleName","lastName","address1","address2","address3","city","state","postalCode","country","company","email","phone","ssn","username","passportNumber","licenseNumber","LoginUriData","uri","LoginData","passwordRevisionDate","totp","autofillOnPageLoad","uris","u","PasswordHistoryData","lastUsedDate","SecureNoteData","CipherData","collectionIds","organizationId","folderId","edit","viewPassword","organizationUseTotp","favorite","revisionDate","notes","creationDate","deletedDate","reprompt","Login","login","SecureNote","secureNote","Card","card","Identity","identity","fields","f","attachments","passwordHistory","ph","AttachmentView","fileSize","fromJSON","LinkedMetadata","propertyKey","_i18nKey","i18nKey","linkedFieldOption","linkedFieldOptions","ItemView","CardView","_brand","_number","_subTitle","maskedCode","repeat","maskedNumber","subTitle","count","expiration","exp","formatYear","year","FieldView","newField","showValue","showCount","maskedValue","UriMatchType","IdentityView","super","_firstName","_lastName","fullName","fullAddress","address","fullAddressPart2","addressPart2","CanLaunchWhitelist","LoginUriView","_uri","_domain","_hostname","_host","_canLaunch","getDomain","RegularExpression","getHostname","getHost","hostnameOrUri","hostOrUri","isWebsite","canLaunch","launchUri","LoginView","l","hasUris","maskedPassword","some","hasTotp","find","Date","PasswordHistoryView","SecureNoteView","CipherView","initializerKey","None","localData","hasPasswordHistory","hasAttachments","hasOldAttachments","hasFields","passwordRevisionDisplayDate","isDeleted","linkedFieldValue","get","linkedFieldI18nKey","view","Attachment","decryptAttachmentKey","decValue","toAttachmentData","toCardData","Field","toFieldData","toIdentityData","LoginUri","toLoginUriData","toLoginData","toISOString","Password","toPasswordHistoryData","toSecureNoteData","Cipher","model","reduce","promise","attachment","decAttachment","field","decField","decPh","toCipherData","classInitializers","workerApi","addEventListener","event","request","JSON","parse","jsonItem","className","postMessage","stringify","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","loaded","__webpack_modules__","m","__webpack_exports__","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getPrototypeOf","mode","__esModule","ns","create","def","current","getOwnPropertyNames","d","definition","o","defineProperty","enumerable","chunkId","miniCssF","globalThis","Function","Symbol","toStringTag","nmd","paths","children","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop"],"sourceRoot":""}